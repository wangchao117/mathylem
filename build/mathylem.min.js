(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.MathYlem = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
(function(e){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=e()}else if(typeof define==="function"&&define.amd){define([],e)}else{var t;if(typeof window!=="undefined"){t=window}else if(typeof global!=="undefined"){t=global}else if(typeof self!=="undefined"){t=self}else{t=this}t.katex=e()}})(function(){var e,t,r;return function e(t,r,a){function i(o,s){if(!r[o]){if(!t[o]){var l=typeof require=="function"&&require;if(!s&&l)return l(o,!0);if(n)return n(o,!0);var u=new Error("Cannot find module '"+o+"'");throw u.code="MODULE_NOT_FOUND",u}var h=r[o]={exports:{}};t[o][0].call(h.exports,function(e){var r=t[o][1][e];return i(r?r:e)},h,h.exports,e,t,r,a)}return r[o].exports}var n=typeof require=="function"&&require;for(var o=0;o<a.length;o++)i(a[o]);return i}({1:[function(e,t,r){"use strict";var a=e("./src/ParseError");var i=e("./src/Settings");var n=e("./src/buildTree");var o=e("./src/parseTree");var s=e("./src/utils");var l=function e(t,r,a){s.clearNode(r);var l=new i(a);var u=o(t,l);var h=n(u,t,l).toNode();r.appendChild(h)};if(typeof document!=="undefined"){if(document.compatMode!=="CSS1Compat"){typeof console!=="undefined"&&console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your "+"website has a suitable doctype.");l=function e(){throw new a("KaTeX doesn't work in quirks mode.")}}}var u=function e(t,r){var a=new i(r);var s=o(t,a);return n(s,t,a).toMarkup()};var h=function e(t,r){var a=new i(r);return o(t,a)};t.exports={render:l,renderToString:u,__parse:h,ParseError:a}},{"./src/ParseError":10,"./src/Settings":12,"./src/buildTree":17,"./src/parseTree":27,"./src/utils":31}],2:[function(e,t,r){t.exports={default:e("core-js/library/fn/json/stringify"),__esModule:true}},{"core-js/library/fn/json/stringify":3}],3:[function(e,t,r){var a=e("../../modules/_core"),i=a.JSON||(a.JSON={stringify:JSON.stringify});t.exports=function e(t){return i.stringify.apply(i,arguments)}},{"../../modules/_core":4}],4:[function(e,t,r){var a=t.exports={version:"2.4.0"};if(typeof __e=="number")__e=a},{}],5:[function(e,t,r){"use strict";function a(e){if(!e.__matchAtRelocatable){var t=e.source+"|()";var r="g"+(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"");e.__matchAtRelocatable=new RegExp(t,r)}return e.__matchAtRelocatable}function i(e,t,r){if(e.global||e.sticky){throw new Error("matchAt(...): Only non-global regexes are supported")}var i=a(e);i.lastIndex=r;var n=i.exec(t);if(n[n.length-1]==null){n.length=n.length-1;return n}else{return null}}t.exports=i},{}],6:[function(e,t,r){"use strict";var a=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty;var n=Object.prototype.propertyIsEnumerable;function o(e){if(e===null||e===undefined){throw new TypeError("Object.assign cannot be called with null or undefined")}return Object(e)}function s(){try{if(!Object.assign){return false}var e=new String("abc");e[5]="de";if(Object.getOwnPropertyNames(e)[0]==="5"){return false}var t={};for(var r=0;r<10;r++){t["_"+String.fromCharCode(r)]=r}var a=Object.getOwnPropertyNames(t).map(function(e){return t[e]});if(a.join("")!=="0123456789"){return false}var i={};"abcdefghijklmnopqrst".split("").forEach(function(e){i[e]=e});if(Object.keys(Object.assign({},i)).join("")!=="abcdefghijklmnopqrst"){return false}return true}catch(e){return false}}t.exports=s()?Object.assign:function(e,t){var r;var s=o(e);var l;for(var u=1;u<arguments.length;u++){r=Object(arguments[u]);for(var h in r){if(i.call(r,h)){s[h]=r[h]}}if(a){l=a(r);for(var p=0;p<l.length;p++){if(n.call(r,l[p])){s[l[p]]=r[l[p]]}}}}return s}},{}],7:[function(e,t,r){"use strict";var a=e("match-at");var i=e("./ParseError");function n(e){this.input=e;this.pos=0}function o(e,t,r,a){this.text=e;this.start=t;this.end=r;this.lexer=a}o.prototype.range=function(e,t){if(e.lexer!==this.lexer){return new o(t)}return new o(t,this.start,e.end,this.lexer)};var s=new RegExp("([ \r\n\t]+)|"+"([!-\\[\\]-\u2027\u202a-\ud7ff\uf900-\uffff]"+"|[\ud800-\udbff][\udc00-\udfff]"+"|\\\\(?:[a-zA-Z]+|[^\ud800-\udfff])"+")");n.prototype.lex=function(){var e=this.input;var t=this.pos;if(t===e.length){return new o("EOF",t,t,this)}var r=a(s,e,t);if(r===null){throw new i("Unexpected character: '"+e[t]+"'",new o(e[t],t,t+1,this))}var n=r[2]||" ";var l=this.pos;this.pos+=r[0].length;var u=this.pos;return new o(n,l,u,this)};t.exports=n},{"./ParseError":10,"match-at":5}],8:[function(e,t,r){"use strict";var a=e("./Lexer");var i=e("./macros");var n=e("./ParseError");var o=e("object-assign");function s(e,t){this.lexer=new a(e);this.macros=o({},i,t);this.stack=[];this.discardedWhiteSpace=[]}s.prototype.nextToken=function(){for(;;){if(this.stack.length===0){this.stack.push(this.lexer.lex())}var e=this.stack.pop();var t=e.text;if(!(t.charAt(0)==="\\"&&this.macros.hasOwnProperty(t))){return e}var r=void 0;var i=this.macros[t];if(typeof i==="string"){var o=0;if(i.indexOf("#")!==-1){var s=i.replace(/##/g,"");while(s.indexOf("#"+(o+1))!==-1){++o}}var l=new a(i);i=[];r=l.lex();while(r.text!=="EOF"){i.push(r);r=l.lex()}i.reverse();i.numArgs=o;this.macros[t]=i}if(i.numArgs){var u=[];var h=void 0;for(h=0;h<i.numArgs;++h){var p=this.get(true);if(p.text==="{"){var c=[];var v=1;while(v!==0){r=this.get(false);c.push(r);if(r.text==="{"){++v}else if(r.text==="}"){--v}else if(r.text==="EOF"){throw new n("End of input in macro argument",p)}}c.pop();c.reverse();u[h]=c}else if(p.text==="EOF"){throw new n("End of input expecting macro argument",e)}else{u[h]=[p]}}i=i.slice();for(h=i.length-1;h>=0;--h){r=i[h];if(r.text==="#"){if(h===0){throw new n("Incomplete placeholder at end of macro body",r)}r=i[--h];if(r.text==="#"){i.splice(h+1,1)}else if(/^[1-9]$/.test(r.text)){i.splice.apply(i,[h,2].concat(u[r.text-1]))}else{throw new n("Not a valid argument number",r)}}}}this.stack=this.stack.concat(i)}};s.prototype.get=function(e){this.discardedWhiteSpace=[];var t=this.nextToken();if(e){while(t.text===" "){this.discardedWhiteSpace.push(t);t=this.nextToken()}}return t};s.prototype.unget=function(e){this.stack.push(e);while(this.discardedWhiteSpace.length!==0){this.stack.push(this.discardedWhiteSpace.pop())}};t.exports=s},{"./Lexer":7,"./ParseError":10,"./macros":24,"object-assign":6}],9:[function(e,t,r){"use strict";var a=e("./fontMetrics");var i=6;var n=[[1,1,1],[2,1,1],[3,1,1],[4,2,1],[5,2,1],[6,3,1],[7,4,2],[8,6,3],[9,7,6],[10,8,7],[11,10,9]];var o=[.5,.6,.7,.8,.9,1,1.2,1.44,1.728,2.074,2.488];function s(e){this.style=e.style;this.color=e.color;this.size=e.size||i;this.textSize=e.textSize||this.size;this.phantom=e.phantom;this.font=e.font;this.sizeMultiplier=o[this.size-1];this._fontMetrics=null}s.prototype.extend=function(e){var t={style:this.style,size:this.size,textSize:this.textSize,color:this.color,phantom:this.phantom,font:this.font};for(var r in e){if(e.hasOwnProperty(r)){t[r]=e[r]}}return new s(t)};function l(e,t){return t.size<2?e:n[e-1][t.size-1]}s.prototype.havingStyle=function(e){if(this.style===e){return this}else{return this.extend({style:e,size:l(this.textSize,e)})}};s.prototype.havingCrampedStyle=function(){return this.havingStyle(this.style.cramp())};s.prototype.havingSize=function(e){if(this.size===e&&this.textSize===e){return this}else{return this.extend({style:this.style.text(),size:e,textSize:e})}};s.prototype.havingBaseStyle=function(e){e=e||this.style.text();var t=l(i,e);if(this.size===t&&this.textSize===i&&this.style===e){return this}else{return this.extend({style:e,size:t,baseSize:i})}};s.prototype.withColor=function(e){return this.extend({color:e})};s.prototype.withPhantom=function(){return this.extend({phantom:true})};s.prototype.withFont=function(e){return this.extend({font:e||this.font})};s.prototype.sizingClasses=function(e){if(e.size!==this.size){return["sizing","reset-size"+e.size,"size"+this.size]}else{return[]}};s.prototype.baseSizingClasses=function(){if(this.size!==i){return["sizing","reset-size"+this.size,"size"+i]}else{return[]}};s.prototype.fontMetrics=function(){if(!this._fontMetrics){this._fontMetrics=a.getFontMetrics(this.size)}return this._fontMetrics};var u={"katex-blue":"#6495ed","katex-orange":"#ffa500","katex-pink":"#ff00af","katex-red":"#df0030","katex-green":"#28ae7b","katex-gray":"gray","katex-purple":"#9d38bd","katex-blueA":"#ccfaff","katex-blueB":"#80f6ff","katex-blueC":"#63d9ea","katex-blueD":"#11accd","katex-blueE":"#0c7f99","katex-tealA":"#94fff5","katex-tealB":"#26edd5","katex-tealC":"#01d1c1","katex-tealD":"#01a995","katex-tealE":"#208170","katex-greenA":"#b6ffb0","katex-greenB":"#8af281","katex-greenC":"#74cf70","katex-greenD":"#1fab54","katex-greenE":"#0d923f","katex-goldA":"#ffd0a9","katex-goldB":"#ffbb71","katex-goldC":"#ff9c39","katex-goldD":"#e07d10","katex-goldE":"#a75a05","katex-redA":"#fca9a9","katex-redB":"#ff8482","katex-redC":"#f9685d","katex-redD":"#e84d39","katex-redE":"#bc2612","katex-maroonA":"#ffbde0","katex-maroonB":"#ff92c6","katex-maroonC":"#ed5fa6","katex-maroonD":"#ca337c","katex-maroonE":"#9e034e","katex-purpleA":"#ddd7ff","katex-purpleB":"#c6b9fc","katex-purpleC":"#aa87ff","katex-purpleD":"#7854ab","katex-purpleE":"#543b78","katex-mintA":"#f5f9e8","katex-mintB":"#edf2df","katex-mintC":"#e0e5cc","katex-grayA":"#f6f7f7","katex-grayB":"#f0f1f2","katex-grayC":"#e3e5e6","katex-grayD":"#d6d8da","katex-grayE":"#babec2","katex-grayF":"#888d93","katex-grayG":"#626569","katex-grayH":"#3b3e40","katex-grayI":"#21242c","katex-kaBlue":"#314453","katex-kaGreen":"#71B307"};s.prototype.getColor=function(){if(this.phantom){return"transparent"}else{return u[this.color]||this.color}};s.BASESIZE=i;t.exports=s},{"./fontMetrics":21}],10:[function(e,t,r){"use strict";function a(e,t){var r="KaTeX parse error: "+e;var i=void 0;var n=void 0;if(t&&t.lexer&&t.start<=t.end){var o=t.lexer.input;i=t.start;n=t.end;if(i===o.length){r+=" at end of input: "}else{r+=" at position "+(i+1)+": "}var s=o.slice(i,n).replace(/[^]/g,"$&\u0332");var l=void 0;if(i>15){l="\u2026"+o.slice(i-15,i)}else{l=o.slice(0,i)}var u=void 0;if(n+15<o.length){u=o.slice(n,n+15)+"\u2026"}else{u=o.slice(n)}r+=l+s+u}var h=new Error(r);h.name="ParseError";h.__proto__=a.prototype;h.position=i;return h}a.prototype.__proto__=Error.prototype;t.exports=a},{}],11:[function(e,t,r){"use strict";var a=e("./functions");var i=e("./environments");var n=e("./MacroExpander");var o=e("./symbols");var s=e("./utils");var l=e("./unicodeRegexes").cjkRegex;var u=e("./parseData");var h=e("./ParseError");function p(e,t){this.gullet=new n(e,t.macros);if(t.colorIsTextColor){this.gullet.macros["\\color"]="\\textcolor"}this.settings=t;this.leftrightDepth=0}var c=u.ParseNode;function v(e,t,r){this.result=e;this.isFunction=t;this.token=r}p.prototype.expect=function(e,t){if(this.nextToken.text!==e){throw new h("Expected '"+e+"', got '"+this.nextToken.text+"'",this.nextToken)}if(t!==false){this.consume()}};p.prototype.consume=function(){this.nextToken=this.gullet.get(this.mode==="math")};p.prototype.switchMode=function(e){this.gullet.unget(this.nextToken);this.mode=e;this.consume()};p.prototype.parse=function(){this.mode="math";this.consume();var e=this.parseInput();return e};p.prototype.parseInput=function(){var e=this.parseExpression(false);this.expect("EOF",false);return e};var f=["}","\\end","\\right","&","\\\\","\\cr"];p.prototype.parseExpression=function(e,t){var r=[];while(true){var i=this.nextToken;if(f.indexOf(i.text)!==-1){break}if(t&&i.text===t){break}if(e&&a[i.text]&&a[i.text].infix){break}var n=this.parseAtom();if(!n){if(!this.settings.throwOnError&&i.text[0]==="\\"){var o=this.handleUnsupportedCmd();r.push(o);continue}break}r.push(n)}return this.handleInfixNodes(r)};p.prototype.handleInfixNodes=function(e){var t=-1;var r=void 0;for(var a=0;a<e.length;a++){var i=e[a];if(i.type==="infix"){if(t!==-1){throw new h("only one infix operator per group",i.value.token)}t=a;r=i.value.replaceWith}}if(t!==-1){var n=void 0;var o=void 0;var s=e.slice(0,t);var l=e.slice(t+1);if(s.length===1&&s[0].type==="ordgroup"){n=s[0]}else{n=new c("ordgroup",s,this.mode)}if(l.length===1&&l[0].type==="ordgroup"){o=l[0]}else{o=new c("ordgroup",l,this.mode)}var u=this.callFunction(r,[n,o],null);return[new c(u.type,u,this.mode)]}else{return e}};var m=1;p.prototype.handleSupSubscript=function(e){var t=this.nextToken;var r=t.text;this.consume();var i=this.parseGroup();if(!i){if(!this.settings.throwOnError&&this.nextToken.text[0]==="\\"){return this.handleUnsupportedCmd()}else{throw new h("Expected group after '"+r+"'",t)}}else if(i.isFunction){var n=a[i.result].greediness;if(n>m){return this.parseFunction(i)}else{throw new h("Got function '"+i.result+"' with no arguments "+"as "+e,t)}}else{return i.result}};p.prototype.handleUnsupportedCmd=function(){var e=this.nextToken.text;var t=[];for(var r=0;r<e.length;r++){t.push(new c("textord",e[r],"text"))}var a=new c("text",{body:t,type:"text"},this.mode);var i=new c("color",{color:this.settings.errorColor,value:[a],type:"color"},this.mode);this.consume();return i};p.prototype.parseAtom=function(){var e=this.parseImplicitGroup();if(this.mode==="text"){return e}var t=void 0;var r=void 0;while(true){var a=this.nextToken;if(a.text==="\\limits"||a.text==="\\nolimits"){if(!e||e.type!=="op"){throw new h("Limit controls must follow a math operator",a)}else{var i=a.text==="\\limits";e.value.limits=i;e.value.alwaysHandleSupSub=true}this.consume()}else if(a.text==="^"){if(t){throw new h("Double superscript",a)}t=this.handleSupSubscript("superscript")}else if(a.text==="_"){if(r){throw new h("Double subscript",a)}r=this.handleSupSubscript("subscript")}else if(a.text==="'"){if(t){throw new h("Double superscript",a)}var n=new c("textord","\\prime",this.mode);var o=[n];this.consume();while(this.nextToken.text==="'"){o.push(n);this.consume()}if(this.nextToken.text==="^"){o.push(this.handleSupSubscript("superscript"))}t=new c("ordgroup",o,this.mode)}else{break}}if(t||r){return new c("supsub",{base:e,sup:t,sub:r},this.mode)}else{return e}};var d=["\\tiny","\\sixptsize","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"];var g=["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"];var y={"\\rm":"mathrm","\\sf":"mathsf","\\tt":"mathtt","\\bf":"mathbf","\\it":"mathit"};p.prototype.parseImplicitGroup=function(){var e=this.parseSymbol();if(e==null){return this.parseFunction()}var t=e.result;if(t==="\\left"){var r=this.parseFunction(e);++this.leftrightDepth;var a=this.parseExpression(false);--this.leftrightDepth;this.expect("\\right",false);var n=this.parseFunction();return new c("leftright",{body:a,left:r.value.value,right:n.value.value},this.mode)}else if(t==="\\begin"){var o=this.parseFunction(e);var l=o.value.name;if(!i.hasOwnProperty(l)){throw new h("No such environment: "+l,o.value.nameGroup)}var u=i[l];var p=this.parseArguments("\\begin{"+l+"}",u);var v={mode:this.mode,envName:l,parser:this,positions:p.pop()};var f=u.handler(v,p);this.expect("\\end",false);var m=this.nextToken;var x=this.parseFunction();if(x.value.name!==l){throw new h("Mismatch: \\begin{"+l+"} matched "+"by \\end{"+x.value.name+"}",m)}f.position=x.position;return f}else if(s.contains(d,t)){this.consumeSpaces();var b=this.parseExpression(false);return new c("sizing",{size:s.indexOf(d,t)+1,value:b},this.mode)}else if(s.contains(g,t)){this.consumeSpaces();var w=this.parseExpression(true);return new c("styling",{style:t.slice(1,t.length-5),value:w},this.mode)}else if(t in y){var k=y[t];this.consumeSpaces();var z=this.parseExpression(true);if(k.slice(0,4)==="text"){return new c("text",{style:k,body:new c("ordgroup",z,this.mode)},this.mode)}else{return new c("font",{font:k,body:new c("ordgroup",z,this.mode)},this.mode)}}else if(t==="\\color"){var M=this.parseColorGroup(false);if(!M){throw new h("\\color not followed by color")}var S=this.parseExpression(true);return new c("color",{type:"color",color:M.result.value,value:S},this.mode)}else if(t==="$"){if(this.mode==="math"){throw new h("$ within math mode")}this.consume();var A=this.mode;this.switchMode("math");var N=this.parseExpression(false,"$");this.expect("$",true);this.switchMode(A);return new c("styling",{style:"text",value:N},"math")}else{return this.parseFunction(e)}};p.prototype.parseFunction=function(e){if(!e){e=this.parseGroup()}if(e){if(e.isFunction){var t=e.result;var r=a[t];if(this.mode==="text"&&!r.allowedInText){throw new h("Can't use function '"+t+"' in text mode",e.token)}var i=this.parseArguments(t,r);var n=e.token;var o=this.callFunction(t,i,i.pop(),n);return new c(o.type,o,this.mode)}else{return e.result}}else{return null}};p.prototype.callFunction=function(e,t,r,i){var n={funcName:e,parser:this,positions:r,token:i};return a[e].handler(n,t)};p.prototype.parseArguments=function(e,t){var r=t.numArgs+t.numOptionalArgs;if(r===0){return[[this.pos]]}var i=t.greediness;var n=[this.pos];var o=[];for(var s=0;s<r;s++){var l=this.nextToken;var u=t.argTypes&&t.argTypes[s];var p=void 0;if(s<t.numOptionalArgs){if(u){p=this.parseGroupOfType(u,true)}else{p=this.parseGroup(true)}if(!p){o.push(null);n.push(this.pos);continue}}else{if(u){p=this.parseGroupOfType(u)}else{p=this.parseGroup()}if(!p){if(!this.settings.throwOnError&&this.nextToken.text[0]==="\\"){p=new v(this.handleUnsupportedCmd(this.nextToken.text),false)}else{throw new h("Expected group after '"+e+"'",l)}}}var c=void 0;if(p.isFunction){var f=a[p.result].greediness;if(f>i){c=this.parseFunction(p)}else{throw new h("Got function '"+p.result+"' as "+"argument to '"+e+"'",l)}}else{c=p.result}o.push(c);n.push(this.pos)}o.push(n);return o};p.prototype.parseGroupOfType=function(e,t){var r=this.mode;if(e==="original"){e=r}if(e==="color"){return this.parseColorGroup(t)}if(e==="size"){return this.parseSizeGroup(t)}if(e==="string"){var a=this.parseStringGroup("string",t);return new v(a.text,false)}this.switchMode(e);if(e==="text"){this.consumeSpaces()}var i=this.parseGroup(t);this.switchMode(r);return i};p.prototype.consumeSpaces=function(){while(this.nextToken.text===" "){this.consume()}};p.prototype.parseStringGroup=function(e,t){if(t&&this.nextToken.text!=="["){return null}var r=this.mode;this.mode="text";this.expect(t?"[":"{");var a="";var i=this.nextToken;var n=i;while(this.nextToken.text!==(t?"]":"}")){if(this.nextToken.text==="EOF"){throw new h("Unexpected end of input in "+e,i.range(this.nextToken,a))}n=this.nextToken;a+=n.text;this.consume()}this.mode=r;this.expect(t?"]":"}");return i.range(n,a)};p.prototype.parseRegexGroup=function(e,t){var r=this.mode;this.mode="text";var a=this.nextToken;var i=a;var n="";while(this.nextToken.text!=="EOF"&&e.test(n+this.nextToken.text)){i=this.nextToken;n+=i.text;this.consume()}if(n===""){throw new h("Invalid "+t+": '"+a.text+"'",a)}this.mode=r;return a.range(i,n)};p.prototype.parseColorGroup=function(e){var t=this.parseStringGroup("color",e);if(!t){return null}var r=/^(#[a-z0-9]+|[a-z]+)$/i.exec(t.text);if(!r){throw new h("Invalid color: '"+t.text+"'",t)}return new v(new c("color",r[0],this.mode),false)};p.prototype.parseSizeGroup=function(e){var t=void 0;if(!e&&this.nextToken.text!=="{"){t=this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/,"size")}else{t=this.parseStringGroup("size",e)}if(!t){return null}var r=/([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(t.text);if(!r){throw new h("Invalid size: '"+t.text+"'",t)}var a={number:+(r[1]+r[2]),unit:r[3]};if(a.unit!=="em"&&a.unit!=="ex"&&a.unit!=="mu"){throw new h("Invalid unit: '"+a.unit+"'",t)}return new v(new c("color",a,this.mode),false)};p.prototype.parseGroup=function(e){var t=this.nextToken;if(this.nextToken.text===(e?"[":"{")){this.consume();var r=this.parseExpression(false,e?"]":null);var a=this.nextToken;this.expect(e?"]":"}");if(this.mode==="text"){this.formLigatures(r)}return new v(new c("ordgroup",r,this.mode,t,a),false)}else{return e?null:this.parseSymbol()}};p.prototype.formLigatures=function(e){var t=e.length-1;for(var r=0;r<t;++r){var a=e[r];var i=a.value;if(i==="-"&&e[r+1].value==="-"){if(r+1<t&&e[r+2].value==="-"){e.splice(r,3,new c("textord","---","text",a,e[r+2]));t-=2}else{e.splice(r,2,new c("textord","--","text",a,e[r+1]));t-=1}}if((i==="'"||i==="`")&&e[r+1].value===i){e.splice(r,2,new c("textord",i+i,"text",a,e[r+1]));t-=1}}};p.prototype.parseSymbol=function(){var e=this.nextToken;if(a[e.text]){this.consume();return new v(e.text,true,e)}else if(o[this.mode][e.text]){this.consume();return new v(new c(o[this.mode][e.text].group,e.text,this.mode,e),false,e)}else if(this.mode==="text"&&l.test(e.text)){this.consume();return new v(new c("textord",e.text,this.mode,e),false,e)}else if(e.text==="$"){return new v(e.text,false,e)}else{return null}};p.prototype.ParseNode=c;t.exports=p},{"./MacroExpander":8,"./ParseError":10,"./environments":20,"./functions":23,"./parseData":26,"./symbols":29,"./unicodeRegexes":30,"./utils":31}],12:[function(e,t,r){"use strict";var a=e("./utils");function i(e){e=e||{};this.displayMode=a.deflt(e.displayMode,false);this.throwOnError=a.deflt(e.throwOnError,true);this.errorColor=a.deflt(e.errorColor,"#cc0000");this.macros=e.macros||{};this.colorIsTextColor=a.deflt(e.colorIsTextColor,false)}t.exports=i},{"./utils":31}],13:[function(e,t,r){"use strict";function a(e,t,r){this.id=e;this.size=t;this.cramped=r}a.prototype.sup=function(){return c[v[this.id]]};a.prototype.sub=function(){return c[f[this.id]]};a.prototype.fracNum=function(){return c[m[this.id]]};a.prototype.fracDen=function(){return c[d[this.id]]};a.prototype.cramp=function(){return c[g[this.id]]};a.prototype.text=function(){return c[y[this.id]]};a.prototype.isTight=function(){return this.size>=2};var i=0;var n=1;var o=2;var s=3;var l=4;var u=5;var h=6;var p=7;var c=[new a(i,0,false),new a(n,0,true),new a(o,1,false),new a(s,1,true),new a(l,2,false),new a(u,2,true),new a(h,3,false),new a(p,3,true)];var v=[l,u,l,u,h,p,h,p];var f=[u,u,u,u,p,p,p,p];var m=[o,s,l,u,h,p,h,p];var d=[s,s,u,u,p,p,p,p];var g=[n,n,s,s,u,u,p,p];var y=[i,n,o,s,o,s,o,s];t.exports={DISPLAY:c[i],TEXT:c[o],SCRIPT:c[l],SCRIPTSCRIPT:c[h]}},{}],14:[function(e,t,r){"use strict";var a=e("./domTree");var i=e("./fontMetrics");var n=e("./symbols");var o=e("./utils");var s=["\\imath","\\jmath","\\pounds"];var l=function e(t,r,a){if(n[a][t]&&n[a][t].replace){t=n[a][t].replace}return{value:t,metrics:i.getCharacterMetrics(t,r)}};var u=function e(t,r,i,n,o){var s=l(t,r,i);var u=s.metrics;t=s.value;var h=void 0;if(u){var p=u.italic;if(i==="text"){p=0}h=new a.symbolNode(t,u.height,u.depth,p,u.skew,o)}else{typeof console!=="undefined"&&console.warn("No character metrics for '"+t+"' in style '"+r+"'");h=new a.symbolNode(t,0,0,0,0,o)}if(n){h.maxFontSize=n.sizeMultiplier;if(n.style.isTight()){h.classes.push("mtight")}if(n.getColor()){h.style.color=n.getColor()}}return h};var h=function e(t,r,a,i){if(t==="\\"||n[r][t].font==="main"){return u(t,"Main-Regular",r,a,i)}else{return u(t,"AMS-Regular",r,a,i.concat(["amsrm"]))}};var p=function e(t,r,a,i,o){if(o==="mathord"){var s=c(t,r,a,i);return u(t,s.fontName,r,a,i.concat([s.fontClass]))}else if(o==="textord"){var l=n[r][t]&&n[r][t].font;if(l==="ams"){return u(t,"AMS-Regular",r,a,i.concat(["amsrm"]))}else{return u(t,"Main-Regular",r,a,i.concat(["mathrm"]))}}else{throw new Error("unexpected type: "+o+" in mathDefault")}};var c=function e(t,r,a,i){if(/[0-9]/.test(t.charAt(0))||o.contains(s,t)){return{fontName:"Main-Italic",fontClass:"mainit"}}else{return{fontName:"Math-Italic",fontClass:"mathit"}}};var v=function e(t,r,a){var i=t.mode;var n=t.value;var h=["mord"];var v=r.font;if(v){var f=void 0;if(v==="mathit"||o.contains(s,n)){f=c(n,i,r,h)}else{f=w[v]}if(l(n,f.fontName,i).metrics){return u(n,f.fontName,i,r,h.concat([f.fontClass||v]))}else{return p(n,i,r,h,a)}}else{return p(n,i,r,h,a)}};var f=function e(t){var r=0;var a=0;var i=0;if(t.children){for(var n=0;n<t.children.length;n++){if(t.children[n].height>r){r=t.children[n].height}if(t.children[n].depth>a){a=t.children[n].depth}if(t.children[n].maxFontSize>i){i=t.children[n].maxFontSize}}}t.height=r;t.depth=a;t.maxFontSize=i};var m=function e(t,r,i){var n=new a.span(t,r,i);f(n);return n};var d=function e(t,r){t.children=r.concat(t.children);f(t)};var g=function e(t,r){var i=new a.documentFragment(t,r);f(i);return i};var y=function e(t,r){var i=m([],[new a.symbolNode("\u200b")]);i.style.fontSize=r+"em";var n=m(["fontsize-ensurer"].concat(t.baseSizingClasses()),[i]);return n};var x=function e(t,r,i,n){var o=void 0;var s=void 0;var l=void 0;if(r==="individualShift"){var u=t;t=[u[0]];o=-u[0].shift-u[0].elem.depth;s=o;for(l=1;l<u.length;l++){var h=-u[l].shift-s-u[l].elem.depth;var p=h-(u[l-1].elem.height+u[l-1].elem.depth);s=s+h;t.push({type:"kern",size:p});t.push(u[l])}}else if(r==="top"){var c=i;for(l=0;l<t.length;l++){if(t[l].type==="kern"){c-=t[l].size}else{c-=t[l].elem.height+t[l].elem.depth}}o=c}else if(r==="bottom"){o=-i}else if(r==="shift"){o=-t[0].elem.depth-i}else if(r==="firstBaseline"){o=-t[0].elem.depth}else{o=0}var v=0;for(l=0;l<t.length;l++){if(t[l].type==="elem"){v=Math.max(v,t[l].elem.maxFontSize)}}var f=y(n,v);var d=[];s=o;for(l=0;l<t.length;l++){if(t[l].type==="kern"){s+=t[l].size}else{var g=t[l].elem;var x=-g.depth-s;s+=g.height+g.depth;var b=m([],[f,g]);b.height-=x;b.depth+=x;b.style.top=x+"em";d.push(b)}}var w=m(["baseline-fix"],[f,new a.symbolNode("\u200b")]);d.push(w);var k=m(["vlist"],d);k.height=Math.max(s,k.height);k.depth=Math.max(-o,k.depth);return k};var b={"\\qquad":{size:"2em",className:"qquad"},"\\quad":{size:"1em",className:"quad"},"\\enspace":{size:"0.5em",className:"enspace"},"\\;":{size:"0.277778em",className:"thickspace"},"\\:":{size:"0.22222em",className:"mediumspace"},"\\,":{size:"0.16667em",className:"thinspace"},"\\!":{size:"-0.16667em",className:"negativethinspace"}};var w={mathbf:{variant:"bold",fontName:"Main-Bold"},mathrm:{variant:"normal",fontName:"Main-Regular"},textit:{variant:"italic",fontName:"Main-Italic"},mathbb:{variant:"double-struck",fontName:"AMS-Regular"},mathcal:{variant:"script",fontName:"Caligraphic-Regular"},mathfrak:{variant:"fraktur",fontName:"Fraktur-Regular"},mathscr:{variant:"script",fontName:"Script-Regular"},mathsf:{variant:"sans-serif",fontName:"SansSerif-Regular"},mathtt:{variant:"monospace",fontName:"Typewriter-Regular"}};t.exports={fontMap:w,makeSymbol:u,mathsym:h,makeSpan:m,makeFragment:g,makeVList:x,makeOrd:v,prependChildren:d,spacingFunctions:b}},{"./domTree":19,"./fontMetrics":21,"./symbols":29,"./utils":31}],15:[function(e,t,r){"use strict";var a=e("babel-runtime/core-js/json/stringify");var i=n(a);function n(e){return e&&e.__esModule?e:{default:e}}var o=e("./ParseError");var s=e("./Style");var l=e("./buildCommon");var u=e("./delimiter");var h=e("./domTree");var p=e("./utils");var c=e("./stretchy");var v=l.makeSpan;var f=function e(t){return t instanceof h.span&&t.classes[0]==="mspace"};var m=function e(t){return t&&t.classes[0]==="mbin"};var d=function e(t,r){if(t){return p.contains(["mbin","mopen","mrel","mop","mpunct"],t.classes[0])}else{return r}};var g=function e(t,r){if(t){return p.contains(["mrel","mclose","mpunct"],t.classes[0])}else{return r}};var y=function e(t,r){var a=r;while(a<t.length&&f(t[a])){a++}if(a===r){return null}else{return t.splice(r,a-r)}};var x=function e(t,r,a){var i=[];for(var n=0;n<t.length;n++){var o=t[n];var s=q(o,r);if(s instanceof h.documentFragment){Array.prototype.push.apply(i,s.children)}else{i.push(s)}}for(var u=0;u<i.length;u++){var p=y(i,u);if(p){if(u<i.length){if(i[u]instanceof h.symbolNode){i[u]=v([].concat(i[u].classes),[i[u]])}l.prependChildren(i[u],p)}else{Array.prototype.push.apply(i,p);break}}}for(var c=0;c<i.length;c++){var f=1;var x=1;while(i[c-f]&&i[c-f].classes[0]==="cursor"){f++}while(i[c+x]&&i[c+x].classes[0]==="cursor"){x++}if(m(i[c])&&(d(i[c-f],a)||g(i[c+x],a))){i[c].classes[0]="mord"}}return i};var b=function e(t){if(t instanceof h.documentFragment){if(t.children.length){return e(t.children[t.children.length-1])}}else{if(p.contains(["mord","mop","mbin","mrel","mopen","mclose","mpunct","minner"],t.classes[0])){return t.classes[0]}}return null};var w=function e(t,r){if(!t.value.base){return false}else{var a=t.value.base;if(a.type==="op"){return a.value.limits&&(r.style.size===s.DISPLAY.size||a.value.alwaysHandleSupSub)}else if(a.type==="accent"){return z(a.value.base)}else if(a.type==="horizBrace"){var i=t.value.sub?false:true;return i===a.value.isOver}else{return null}}};var k=function e(t){if(!t){return false}else if(t.type==="ordgroup"){if(t.value.length===1){return e(t.value[0])}else{return t}}else if(t.type==="color"){if(t.value.value.length===1){return e(t.value.value[0])}else{return t}}else if(t.type==="font"){return e(t.value.body)}else{return t}};var z=function e(t){var r=k(t);return r.type==="mathord"||r.type==="textord"||r.type==="bin"||r.type==="rel"||r.type==="inner"||r.type==="open"||r.type==="close"||r.type==="punct"};var M=function e(t,r){var a=["nulldelimiter"].concat(t.baseSizingClasses());return v(r.concat(a))};var S={};S.mathord=function(e,t){return l.makeOrd(e,t,"mathord")};S.textord=function(e,t){return l.makeOrd(e,t,"textord")};S.bin=function(e,t){return l.mathsym(e.value,e.mode,t,["mbin"])};S.rel=function(e,t){return l.mathsym(e.value,e.mode,t,["mrel"])};S.open=function(e,t){return l.mathsym(e.value,e.mode,t,["mopen"])};S.close=function(e,t){return l.mathsym(e.value,e.mode,t,["mclose"])};S.inner=function(e,t){return l.mathsym(e.value,e.mode,t,["minner"])};S.punct=function(e,t){return l.mathsym(e.value,e.mode,t,["mpunct"])};S.ordgroup=function(e,t){return v(["mord"],x(e.value,t,true),t)};S.text=function(e,t){var r=t.withFont(e.value.style);var a=x(e.value.body,r,true);for(var i=0;i<a.length-1;i++){if(a[i].tryCombine(a[i+1])){a.splice(i+1,1);i--}}return v(["mord","text"],a,r)};S.xmlClass=function(e,t,r){var a=x(e.value.value,t,r);return new l.makeFragment(a,[e.value.cl])};S.color=function(e,t){var r=x(e.value.value,t.withColor(e.value.color),false);return new l.makeFragment(r)};S.supsub=function(e,t){if(w(e,t)){return S[e.value.base.type](e,t)}var r=q(e.value.base,t);var a=void 0;var i=void 0;var n=t.fontMetrics();var o=void 0;var u=0;var p=0;if(e.value.sup){o=t.havingStyle(t.style.sup());a=q(e.value.sup,o,t);if(!z(e.value.base)){u=r.height-o.fontMetrics().supDrop*o.sizeMultiplier/t.sizeMultiplier}}if(e.value.sub){o=t.havingStyle(t.style.sub());i=q(e.value.sub,o,t);if(!z(e.value.base)){p=r.depth+o.fontMetrics().subDrop*o.sizeMultiplier/t.sizeMultiplier}}var c=void 0;if(t.style===s.DISPLAY){c=n.sup1}else if(t.style.cramped){c=n.sup3}else{c=n.sup2}var f=t.sizeMultiplier;var m=.5/n.ptPerEm/f+"em";var d=void 0;if(!e.value.sup){p=Math.max(p,n.sub1,i.height-.8*n.xHeight);d=l.makeVList([{type:"elem",elem:i}],"shift",p,t);d.children[0].style.marginRight=m;if(r instanceof h.symbolNode){d.children[0].style.marginLeft=-r.italic+"em"}}else if(!e.value.sub){u=Math.max(u,c,a.depth+.25*n.xHeight);d=l.makeVList([{type:"elem",elem:a}],"shift",-u,t);d.children[0].style.marginRight=m}else{u=Math.max(u,c,a.depth+.25*n.xHeight);p=Math.max(p,n.sub2);var g=n.defaultRuleThickness;if(u-a.depth-(i.height-p)<4*g){p=4*g-(u-a.depth)+i.height;var y=.8*n.xHeight-(u-a.depth);if(y>0){u+=y;p-=y}}d=l.makeVList([{type:"elem",elem:i,shift:p},{type:"elem",elem:a,shift:-u}],"individualShift",null,t);if(r instanceof h.symbolNode){d.children[0].style.marginLeft=-r.italic+"em"}d.children[0].style.marginRight=m;d.children[1].style.marginRight=m}var x=b(r)||"mord";return v([x],[r,v(["msupsub"],[d])],t)};S.genfrac=function(e,t){var r=t.style;if(e.value.size==="display"){r=s.DISPLAY}else if(e.value.size==="text"){r=s.TEXT}var a=r.fracNum();var i=r.fracDen();var n=void 0;n=t.havingStyle(a);var o=q(e.value.numer,n,t);n=t.havingStyle(i);var h=q(e.value.denom,n,t);var p=void 0;if(e.value.hasBarLine){p=N("frac-line",t)}else{p=null}var c=p?p.height:0;var f=void 0;var m=void 0;var d=void 0;if(r.size===s.DISPLAY.size){f=t.fontMetrics().num1;if(c>0){m=3*c}else{m=7*t.fontMetrics().defaultRuleThickness}d=t.fontMetrics().denom1}else{if(c>0){f=t.fontMetrics().num2;m=c}else{f=t.fontMetrics().num3;m=3*t.fontMetrics().defaultRuleThickness;
}d=t.fontMetrics().denom2}var g=void 0;if(c===0){var y=f-o.depth-(h.height-d);if(y<m){f+=.5*(m-y);d+=.5*(m-y)}g=l.makeVList([{type:"elem",elem:h,shift:d},{type:"elem",elem:o,shift:-f}],"individualShift",null,t)}else{var x=t.fontMetrics().axisHeight;if(f-o.depth-(x+.5*c)<m){f+=m-(f-o.depth-(x+.5*c))}if(x-.5*c-(h.height-d)<m){d+=m-(x-.5*c-(h.height-d))}var b=-(x-.5*c);g=l.makeVList([{type:"elem",elem:h,shift:d},{type:"elem",elem:p,shift:b},{type:"elem",elem:o,shift:-f}],"individualShift",null,t)}n=t.havingStyle(r);g.height*=n.sizeMultiplier/t.sizeMultiplier;g.depth*=n.sizeMultiplier/t.sizeMultiplier;var w=void 0;if(r.size===s.DISPLAY.size){w=t.fontMetrics().delim1}else{w=t.fontMetrics().delim2}var k=void 0;var z=void 0;if(e.value.leftDelim==null){k=M(t,["mopen"])}else{k=u.customSizedDelim(e.value.leftDelim,w,true,t.havingStyle(r),e.mode,["mopen"])}if(e.value.rightDelim==null){z=M(t,["mclose"])}else{z=u.customSizedDelim(e.value.rightDelim,w,true,t.havingStyle(r),e.mode,["mclose"])}return v(["mord"].concat(n.sizingClasses(t)),[k,v(["mfrac"],[g]),z],t)};var A=function e(t,r){var a=t.number;if(t.unit==="ex"){a*=r.fontMetrics().emPerEx}else if(t.unit==="mu"){a/=18}return a};S.array=function(e,t){var r=void 0;var a=void 0;var i=e.value.body.length;var n=0;var s=new Array(i);var u=1/t.fontMetrics().ptPerEm;var h=5*u;var c=12*u;var f=3*u;var m=p.deflt(e.value.arraystretch,1);var d=m*c;var g=.7*d;var y=.3*d;var x=0;for(r=0;r<e.value.body.length;++r){var b=e.value.body[r];var w=g;var k=y;if(n<b.length){n=b.length}var z=new Array(b.length);for(a=0;a<b.length;++a){var M=q(b[a],t);if(k<M.depth){k=M.depth}if(w<M.height){w=M.height}z[a]=M}var S=0;if(e.value.rowGaps[r]){S=A(e.value.rowGaps[r].value,t);if(S>0){S+=y;if(k<S){k=S}S=0}}if(e.value.addJot){k+=f}z.height=w;z.depth=k;x+=w;z.pos=x;x+=k+S;s[r]=z}var N=x/2+t.fontMetrics().axisHeight;var T=e.value.cols||[];var C=[];var E=void 0;var O=void 0;for(a=0,O=0;a<n||O<T.length;++a,++O){var R=T[O]||{};var L=true;while(R.type==="separator"){if(!L){E=v(["arraycolsep"],[]);E.style.width=t.fontMetrics().doubleRuleSep+"em";C.push(E)}if(R.separator==="|"){var D=v(["vertical-separator"],[]);D.style.height=x+"em";D.style.verticalAlign=-(x-N)+"em";C.push(D)}else{throw new o("Invalid separator type: "+R.separator)}O++;R=T[O]||{};L=false}if(a>=n){continue}var P=void 0;if(a>0||e.value.hskipBeforeAndAfter){P=p.deflt(R.pregap,h);if(P!==0){E=v(["arraycolsep"],[]);E.style.width=P+"em";C.push(E)}}var B=[];for(r=0;r<i;++r){var F=s[r];var I=F[a];if(!I){continue}var V=F.pos-N;I.depth=F.depth;I.height=F.height;B.push({type:"elem",elem:I,shift:V})}B=l.makeVList(B,"individualShift",null,t);B=v(["col-align-"+(R.align||"c")],[B]);C.push(B);if(a<n-1||e.value.hskipBeforeAndAfter){P=p.deflt(R.postgap,h);if(P!==0){E=v(["arraycolsep"],[]);E.style.width=P+"em";C.push(E)}}}s=v(["mtable"],C);return v(["mord"],[s],t)};S.spacing=function(e,t){if(e.value==="\\ "||e.value==="\\space"||e.value===" "||e.value==="~"){if(e.mode==="text"){return l.makeOrd(e,t,"textord")}else{return v(["mspace"],[l.mathsym(e.value,e.mode,t)],t)}}else{return v(["mspace",l.spacingFunctions[e.value].className],[],t)}};S.llap=function(e,t){var r=v(["inner"],[q(e.value.body,t)]);var a=v(["fix"],[]);return v(["mord","llap"],[r,a],t)};S.rlap=function(e,t){var r=v(["inner"],[q(e.value.body,t)]);var a=v(["fix"],[]);return v(["mord","rlap"],[r,a],t)};S.op=function(e,t){var r=void 0;var a=void 0;var i=false;if(e.type==="supsub"){r=e.value.sup;a=e.value.sub;e=e.value.base;i=true}var n=t.style;var o=["\\smallint"];var u=false;if(n.size===s.DISPLAY.size&&e.value.symbol&&!p.contains(o,e.value.body)){u=true}var c=void 0;if(e.value.symbol){var f=u?"Size2-Regular":"Size1-Regular";c=l.makeSymbol(e.value.body,f,"math",t,["mop","op-symbol",u?"large-op":"small-op"])}else if(e.value.value){var m=x(e.value.value,t,true);if(m.length===1&&m[0]instanceof h.symbolNode){c=m[0];c.classes[0]="mop"}else{c=v(["mop"],m,t)}}else{var d=[];for(var g=1;g<e.value.body.length;g++){d.push(l.mathsym(e.value.body[g],e.mode))}c=v(["mop"],d,t)}var y=0;var b=0;if(c instanceof h.symbolNode){y=(c.height-c.depth)/2-t.fontMetrics().axisHeight;b=c.italic}if(i){c=v([],[c]);var w=void 0;var k=void 0;var z=void 0;var M=void 0;var S=void 0;if(r){S=t.havingStyle(n.sup());w=q(r,S,t);k=Math.max(t.fontMetrics().bigOpSpacing1,t.fontMetrics().bigOpSpacing3-w.depth)}if(a){S=t.havingStyle(n.sub());z=q(a,S,t);M=Math.max(t.fontMetrics().bigOpSpacing2,t.fontMetrics().bigOpSpacing4-z.height)}var A=void 0;var N=void 0;var T=void 0;if(!r){N=c.height-y;A=l.makeVList([{type:"kern",size:t.fontMetrics().bigOpSpacing5},{type:"elem",elem:z},{type:"kern",size:M},{type:"elem",elem:c}],"top",N,t);A.children[0].style.marginLeft=-b+"em"}else if(!a){T=c.depth+y;A=l.makeVList([{type:"elem",elem:c},{type:"kern",size:k},{type:"elem",elem:w},{type:"kern",size:t.fontMetrics().bigOpSpacing5}],"bottom",T,t);A.children[1].style.marginLeft=b+"em"}else if(!r&&!a){return c}else{T=t.fontMetrics().bigOpSpacing5+z.height+z.depth+M+c.depth+y;A=l.makeVList([{type:"kern",size:t.fontMetrics().bigOpSpacing5},{type:"elem",elem:z},{type:"kern",size:M},{type:"elem",elem:c},{type:"kern",size:k},{type:"elem",elem:w},{type:"kern",size:t.fontMetrics().bigOpSpacing5}],"bottom",T,t);A.children[0].style.marginLeft=-b+"em";A.children[2].style.marginLeft=b+"em"}return v(["mop","op-limits"],[A],t)}else{if(y){c.style.position="relative";c.style.top=y+"em"}return c}};S.mod=function(e,t){var r=[];if(e.value.modType==="bmod"){if(!t.style.isTight()){r.push(v(["mspace","negativemediumspace"],[],t))}r.push(v(["mspace","thickspace"],[],t))}else if(t.style.size===s.DISPLAY.size){r.push(v(["mspace","quad"],[],t))}else if(e.value.modType==="mod"){r.push(v(["mspace","twelvemuspace"],[],t))}else{r.push(v(["mspace","eightmuspace"],[],t))}if(e.value.modType==="pod"||e.value.modType==="pmod"){r.push(l.mathsym("(",e.mode))}if(e.value.modType!=="pod"){var a=[l.mathsym("m",e.mode),l.mathsym("o",e.mode),l.mathsym("d",e.mode)];if(e.value.modType==="bmod"){r.push(v(["mbin"],a,t));r.push(v(["mspace","thickspace"],[],t));if(!t.style.isTight()){r.push(v(["mspace","negativemediumspace"],[],t))}}else{Array.prototype.push.apply(r,a);r.push(v(["mspace","sixmuspace"],[],t))}}if(e.value.value){Array.prototype.push.apply(r,x(e.value.value,t,false))}if(e.value.modType==="pod"||e.value.modType==="pmod"){r.push(l.mathsym(")",e.mode))}return l.makeFragment(r)};S.katex=function(e,t){var r=v(["k"],[l.mathsym("K",e.mode)],t);var a=v(["a"],[l.mathsym("A",e.mode)],t);a.height=(a.height+.2)*.75;a.depth=(a.height-.2)*.75;var i=v(["t"],[l.mathsym("T",e.mode)],t);var n=v(["e"],[l.mathsym("E",e.mode)],t);n.height=n.height-.2155;n.depth=n.depth+.2155;var o=v(["x"],[l.mathsym("X",e.mode)],t);return v(["mord","katex-logo"],[r,a,i,n,o],t)};var N=function e(t,r){var a=r.havingBaseStyle();var i=v([t].concat(a.sizingClasses(r)),[],r);i.height=r.fontMetrics().defaultRuleThickness/r.sizeMultiplier;i.maxFontSize=1;return i};S.overline=function(e,t){var r=q(e.value.body,t.havingCrampedStyle());var a=N("overline-line",t);var i=l.makeVList([{type:"elem",elem:r},{type:"kern",size:3*a.height},{type:"elem",elem:a},{type:"kern",size:a.height}],"firstBaseline",null,t);return v(["mord","overline"],[i],t)};S.underline=function(e,t){var r=q(e.value.body,t);var a=N("underline-line",t);var i=l.makeVList([{type:"kern",size:a.height},{type:"elem",elem:a},{type:"kern",size:3*a.height},{type:"elem",elem:r}],"top",r.height,t);return v(["mord","underline"],[i],t)};S.sqrt=function(e,t){var r=q(e.value.body,t.havingCrampedStyle());var a=N("sqrt-line",t);var i=a.height;var n=i;if(t.style.id<s.TEXT.id){n=t.fontMetrics().xHeight*t.sizeMultiplier}var o=i+n/4;var h=(r.height+r.depth+o+i)*t.sizeMultiplier;var p=v(["sqrt-sign"],[u.customSizedDelim("\\surd",h,false,t,e.mode)],t);var c=p.height+p.depth-i;if(c>r.height+r.depth+o){o=(o+c-r.height-r.depth)/2}var f=-(r.height+o+i)+p.height;p.style.top=f+"em";p.height-=f;p.depth+=f;var m=void 0;if(r.height===0&&r.depth===0){m=v()}else{m=l.makeVList([{type:"elem",elem:r},{type:"kern",size:o},{type:"elem",elem:a},{type:"kern",size:i}],"firstBaseline",null,t)}if(!e.value.index){return v(["mord","sqrt"],[p,m],t)}else{var d=t.havingStyle(s.SCRIPTSCRIPT);var g=q(e.value.index,d,t);var y=Math.max(p.height,m.height);var x=Math.max(p.depth,m.depth);var b=.6*(y-x);var w=l.makeVList([{type:"elem",elem:g}],"shift",-b,t);var k=v(["root"],[w]);return v(["mord","sqrt"],[k,p,m],t)}};function T(e,t,r){var a=x(e,t,false);var i=t.sizeMultiplier/r.sizeMultiplier;for(var n=0;n<a.length;n++){var o=p.indexOf(a[n].classes,"sizing");if(o<0){Array.prototype.push.apply(a[n].classes,t.sizingClasses(r))}else if(a[n].classes[o+1]==="reset-size"+t.size){a[n].classes[o+1]="reset-size"+r.size}a[n].height*=i;a[n].depth*=i}return l.makeFragment(a)}S.sizing=function(e,t){var r=t.havingSize(e.value.size);return T(e.value.value,r,t)};S.styling=function(e,t){var r={display:s.DISPLAY,text:s.TEXT,script:s.SCRIPT,scriptscript:s.SCRIPTSCRIPT};var a=r[e.value.style];var i=t.havingStyle(a);return T(e.value.value,i,t)};S.font=function(e,t){var r=e.value.font;return q(e.value.body,t.withFont(r))};S.delimsizing=function(e,t){var r=e.value.value;if(r==="."){return v([e.value.mclass])}return u.sizedDelim(r,e.value.size,t,e.mode,[e.value.mclass])};S.leftright=function(e,t){var r=x(e.value.body,t,true);var a=0;var i=0;var n=false;for(var o=0;o<r.length;o++){if(r[o].isMiddle){n=true}else{a=Math.max(r[o].height,a);i=Math.max(r[o].depth,i)}}a*=t.sizeMultiplier;i*=t.sizeMultiplier;var s=void 0;if(e.value.left==="."){s=M(t,["mopen"])}else{s=u.leftRightDelim(e.value.left,a,i,t,e.mode,["mopen"])}r.unshift(s);if(n){for(var h=1;h<r.length;h++){var p=r[h];if(p.isMiddle){r[h]=u.leftRightDelim(p.isMiddle.value,a,i,p.isMiddle.options,e.mode,[]);var c=y(p.children,0);if(c){l.prependChildren(r[h],c)}}}}var f=void 0;if(e.value.right==="."){f=M(t,["mclose"])}else{f=u.leftRightDelim(e.value.right,a,i,t,e.mode,["mclose"])}r.push(f);return v(["minner"],r,t)};S.cursor=function(e,t,r){var a=v(["cursor"],[],t);var i=0;var n=A(e.value.height,t);if(e.value.shift){i=A(e.value.shift,t)}i/=t.sizeMultiplier;n/=t.sizeMultiplier;a.style.marginRight="-1px";a.style.borderRight="1px solid";a.style.marginBottom=i+"em";a.style.height=n+"em";a.width=1;a.height=n+i;a.depth=-i;e.value.previous=r;return a};S.middle=function(e,t){var r=void 0;if(e.value.value==="."){r=M(t,[])}else{r=u.sizedDelim(e.value.value,1,t,e.mode,[]);r.isMiddle={value:e.value.value,options:t}}return r};S.rule=function(e,t,r){var a=v(["mord","rule"],[],t);var i=0;if(e.value.shift){i=A(e.value.shift,t)}var n=A(e.value.width,t);var o=A(e.value.height,t);i/=t.sizeMultiplier;n/=t.sizeMultiplier;o/=t.sizeMultiplier;a.style.borderRightWidth=n+"em";a.style.borderTopWidth=o+"em";a.style.bottom=i+"em";a.width=n;a.height=o+i;a.depth=-i;return a};S.kern=function(e,t){var r=v(["mord","rule"],[],t);var a=0;if(e.value.dimension){a=A(e.value.dimension,t)}a/=t.sizeMultiplier;r.style.marginLeft=a+"em";return r};S.accent=function(e,t){var r=e.value.base;var a=void 0;if(e.type==="supsub"){var i=e;e=i.value.base;r=e.value.base;i.value.base=r;a=q(i,t)}var n=q(r,t.havingCrampedStyle());var o=e.value.isShifty&&z(r);var s=0;if(o){var u=k(r);var h=q(u,t.havingCrampedStyle());s=h.skew}var p=Math.min(n.height,t.fontMetrics().xHeight);var f=void 0;if(!e.value.isStretchy){var m=l.makeSymbol(e.value.label,"Main-Regular","math",t);m.italic=0;var d=e.value.label==="\\vec"?"accent-vec":null;f=v(["accent-body",d],[v([],[m])]);f.style.marginLeft=2*s+"em";f=l.makeVList([{type:"elem",elem:n},{type:"kern",size:-p},{type:"elem",elem:f}],"firstBaseline",null,t)}else{f=c.svgSpan(e,t);if(s>0){var g="calc(100% - "+2*s+"em) 100%";f.style.backgroundSize=g}f=l.makeVList([{type:"elem",elem:n},{type:"elem",elem:f}],"firstBaseline",null,t)}var y=v(["mord","accent"],[f],t);if(a){a.children[0]=y;a.height=Math.max(y.height,a.height);a.classes[0]="mord";return a}else{return y}};S.horizBrace=function(e,t){var r=t.style;var a=e.type==="supsub";var i=void 0;var n=void 0;if(a){if(e.value.sup){n=t.havingStyle(r.sup());i=q(e.value.sup,n,t)}else{n=t.havingStyle(r.sub());i=q(e.value.sub,n,t)}e=e.value.base}var o=q(e.value.base,t.havingStyle(r.cramp()));var s=c.svgSpan(e,t);var u=void 0;if(e.value.isOver){u=l.makeVList([{type:"elem",elem:o},{type:"kern",size:.1},{type:"elem",elem:s}],"firstBaseline",null,t)}else{u=l.makeVList([{type:"elem",elem:s},{type:"kern",size:.1},{type:"elem",elem:o}],"bottom",o.depth+.1+s.height,t)}if(a){var h=v(["mord",e.value.isOver?"mover":"munder"],[u],t);if(e.value.isOver){u=l.makeVList([{type:"elem",elem:h},{type:"kern",size:.2},{type:"elem",elem:i}],"firstBaseline",null,t)}else{u=l.makeVList([{type:"elem",elem:i},{type:"kern",size:.2},{type:"elem",elem:h}],"bottom",h.depth+.2+i.height,t)}}return v(["mord",e.value.isOver?"mover":"munder"],[u],t)};S.accentUnder=function(e,t){var r=q(e.value.body,t);var a=c.svgSpan(e,t);var i=/tilde/.test(e.value.label)?.12:0;var n=l.makeVList([{type:"elem",elem:a},{type:"kern",size:i},{type:"elem",elem:r}],"bottom",a.height+i,t);return v(["mord","accentunder"],[n],t)};S.enclose=function(e,t){var r=q(e.value.body,t);var a=e.value.label.substr(1);var i=t.sizeMultiplier;var n=void 0;var o=0;var s=0;if(a==="sout"){n=v(["stretchy","sout"]);n.height=t.fontMetrics().defaultRuleThickness/i;n.maxFontSize=1;s=-.5*t.fontMetrics().xHeight}else{r.classes.push(a==="fbox"?"boxpad":"cancel-pad");var u=z(e.value.body);o=a==="fbox"?.34:u?.2:0;s=r.depth+o;n=c.encloseSpan(r,u,a,o,t)}var h=l.makeVList([{type:"elem",elem:r,shift:0},{type:"elem",elem:n,shift:s}],"individualShift",null,t);if(n.height>h.maxFontSize){h.children[1].style.top=-(r.height+o-.9/i)+"em"}if(/cancel/.test(a)){return v(["mord","cancel-lap"],[h],t)}else{return v(["mord"],[h],t)}};S.xArrow=function(e,t){var r=t.style;var a=t.havingStyle(r.sup());var i=q(e.value.body,a,t);var n=void 0;if(e.value.below){a=t.havingStyle(r.sub());n=q(e.value.below,a,t)}var o=c.svgSpan(e,t);var s=-t.fontMetrics().axisHeight+o.depth;var u=-t.fontMetrics().axisHeight-o.height-.111;var h=void 0;if(e.value.below){var p=-t.fontMetrics().axisHeight+n.height+o.height+.111;h=l.makeVList([{type:"elem",elem:i,shift:u},{type:"elem",elem:o,shift:s},{type:"elem",elem:n,shift:p}],"individualShift",null,t)}else{h=l.makeVList([{type:"elem",elem:i,shift:u},{type:"elem",elem:o,shift:s}],"individualShift",null,t)}var f=v(["mrel","x-arrow"],[h],t);f.depth=f.depth;f.height=f.height;return f};S.phantom=function(e,t){var r=x(e.value.value,t.withPhantom(),false);return new l.makeFragment(r)};S.mclass=function(e,t){var r=x(e.value.value,t,true);return v([e.value.mclass],r,t)};var q=function e(t,r,a){if(!t){return v()}if(S[t.type]){var i=S[t.type](t,r);if(a&&r.size!==a.size){i=v(r.sizingClasses(a),[i],r);var n=r.sizeMultiplier/a.sizeMultiplier;i.height*=n;i.depth*=n}return i}else{throw new o("Got group of unknown type: '"+t.type+"'")}};var C=function e(t,r){t=JSON.parse((0,i.default)(t));var a=x(t,r,true);var n=v(["base"],a,r);var o=v(["strut"]);var s=v(["strut","bottom"]);o.style.height=n.height+"em";s.style.height=n.height+n.depth+"em";s.style.verticalAlign=-n.depth+"em";var l=v(["katex-html"],[o,s,n]);l.setAttribute("aria-hidden","true");return l};t.exports=C},{"./ParseError":10,"./Style":13,"./buildCommon":14,"./delimiter":18,"./domTree":19,"./stretchy":28,"./utils":31,"babel-runtime/core-js/json/stringify":2}],16:[function(e,t,r){"use strict";var a=e("./buildCommon");var i=e("./fontMetrics");var n=e("./mathMLTree");var o=e("./ParseError");var s=e("./symbols");var l=e("./utils");var u=e("./stretchy");var h=a.makeSpan;var p=a.fontMap;var c=function e(t,r){if(s[r][t]&&s[r][t].replace){t=s[r][t].replace}return new n.TextNode(t)};var v=function e(t,r){var a=r.font;if(!a){return null}var n=t.mode;if(a==="mathit"){return"italic"}var o=t.value;if(l.contains(["\\imath","\\jmath"],o)){return null}if(s[n][o]&&s[n][o].replace){o=s[n][o].replace}var u=p[a].fontName;if(i.getCharacterMetrics(o,u)){return p[r.font].variant}return null};var f={};var m={mi:"italic",mn:"normal",mtext:"normal"};f.mathord=function(e,t){var r=new n.MathNode("mi",[c(e.value,e.mode)]);var a=v(e,t)||"italic";if(a!==m[r.type]){r.setAttribute("mathvariant",a)}return r};f.textord=function(e,t){var r=c(e.value,e.mode);var a=v(e,t)||"normal";var i=void 0;if(e.mode==="text"){i=new n.MathNode("mtext",[r])}else if(/[0-9]/.test(e.value)){i=new n.MathNode("mn",[r])}else{i=new n.MathNode("mi",[r])}if(a!==m[i.type]){i.setAttribute("mathvariant",a)}return i};f.bin=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);return t};f.rel=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);return t};f.open=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);return t};f.close=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);return t};f.inner=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);return t};f.punct=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);t.setAttribute("separator","true");return t};f.ordgroup=function(e,t){var r=d(e.value,t);var a=new n.MathNode("mrow",r);return a};f.text=function(e,t){var r=e.value.body;var a=[];var i=null;for(var o=0;o<r.length;o++){var s=g(r[o],t);if(s.type==="mtext"&&i!=null){Array.prototype.push.apply(i.children,s.children)}else{a.push(s);if(s.type==="mtext"){i=s}}}if(a.length===1){return a[0]}else{return new n.MathNode("mrow",a)}};f.color=function(e,t){var r=d(e.value.value,t);var a=new n.MathNode("mstyle",r);a.setAttribute("mathcolor",e.value.color);return a};f.xmlClass=function(e,t){var r=d(e.value.value,t);var a=new n.MathNode("mstyle",r);a.setAttribute("class",e.value.cl);return a};f.supsub=function(e,t){var r=false;var a=void 0;var i=void 0;if(e.value.base){if(e.value.base.value.type==="horizBrace"){i=e.value.sup?true:false;if(i===e.value.base.value.isOver){r=true;a=e.value.base.value.isOver}}}var o=[g(e.value.base,t)];if(e.value.sub){o.push(g(e.value.sub,t))}if(e.value.sup){o.push(g(e.value.sup,t))}var s=void 0;if(r){s=a?"mover":"munder"}else if(!e.value.sub){s="msup"}else if(!e.value.sup){s="msub"}else{s="msubsup"}var l=new n.MathNode(s,o);return l};f.genfrac=function(e,t){var r=new n.MathNode("mfrac",[g(e.value.numer,t),g(e.value.denom,t)]);if(!e.value.hasBarLine){r.setAttribute("linethickness","0px")}if(e.value.leftDelim!=null||e.value.rightDelim!=null){var a=[];if(e.value.leftDelim!=null){var i=new n.MathNode("mo",[new n.TextNode(e.value.leftDelim)]);i.setAttribute("fence","true");a.push(i)}a.push(r);if(e.value.rightDelim!=null){var o=new n.MathNode("mo",[new n.TextNode(e.value.rightDelim)]);o.setAttribute("fence","true");a.push(o)}var s=new n.MathNode("mrow",a);return s}return r};f.array=function(e,t){return new n.MathNode("mtable",e.value.body.map(function(e){return new n.MathNode("mtr",e.map(function(e){return new n.MathNode("mtd",[g(e,t)])}))}))};f.sqrt=function(e,t){var r=void 0;if(e.value.index){r=new n.MathNode("mroot",[g(e.value.body,t),g(e.value.index,t)])}else{r=new n.MathNode("msqrt",[g(e.value.body,t)])}return r};f.leftright=function(e,t){var r=d(e.value.body,t);if(e.value.left!=="."){var a=new n.MathNode("mo",[c(e.value.left,e.mode)]);a.setAttribute("fence","true");r.unshift(a)}if(e.value.right!=="."){var i=new n.MathNode("mo",[c(e.value.right,e.mode)]);i.setAttribute("fence","true");r.push(i)}var o=new n.MathNode("mrow",r);return o};f.middle=function(e,t){var r=new n.MathNode("mo",[c(e.value.middle,e.mode)]);r.setAttribute("fence","true");return r};f.accent=function(e,t){var r=void 0;if(e.value.isStretchy){r=u.mathMLnode(e.value.label)}else{r=new n.MathNode("mo",[c(e.value.label,e.mode)])}var a=new n.MathNode("mover",[g(e.value.base,t),r]);a.setAttribute("accent","true");return a};f.spacing=function(e){var t=void 0;if(e.value==="\\ "||e.value==="\\space"||e.value===" "||e.value==="~"){t=new n.MathNode("mtext",[new n.TextNode("\xa0")])}else{t=new n.MathNode("mspace");t.setAttribute("width",a.spacingFunctions[e.value].size)}return t};f.op=function(e,t){var r=void 0;if(e.value.symbol){r=new n.MathNode("mo",[c(e.value.body,e.mode)])}else if(e.value.value){r=new n.MathNode("mo",d(e.value.value,t))}else{r=new n.MathNode("mi",[new n.TextNode(e.value.body.slice(1))])}return r};f.cursor=function(e){var t=new n.MathNode("mtext",[new n.TextNode("|")]);return t};f.mod=function(e,t){var r=[];if(e.value.modType==="pod"||e.value.modType==="pmod"){r.push(new n.MathNode("mo",[c("(",e.mode)]))}if(e.value.modType!=="pod"){r.push(new n.MathNode("mo",[c("mod",e.mode)]))}if(e.value.value){var a=new n.MathNode("mspace");a.setAttribute("width","0.333333em");r.push(a);r=r.concat(d(e.value.value,t))}if(e.value.modType==="pod"||e.value.modType==="pmod"){r.push(new n.MathNode("mo",[c(")",e.mode)]))}return new n.MathNode("mo",r)};f.katex=function(e){var t=new n.MathNode("mtext",[new n.TextNode("KaTeX")]);return t};f.font=function(e,t){var r=e.value.font;return g(e.value.body,t.withFont(r))};f.delimsizing=function(e){var t=[];if(e.value.value!=="."){t.push(c(e.value.value,e.mode))}var r=new n.MathNode("mo",t);if(e.value.mclass==="mopen"||e.value.mclass==="mclose"){r.setAttribute("fence","true")}else{r.setAttribute("fence","false")}return r};f.styling=function(e,t){var r=d(e.value.value,t);var a=new n.MathNode("mstyle",r);var i={display:["0","true"],text:["0","false"],script:["1","false"],scriptscript:["2","false"]};var o=i[e.value.style];a.setAttribute("scriptlevel",o[0]);a.setAttribute("displaystyle",o[1]);return a};f.sizing=function(e,t){var r=t.havingSize(e.value.size);var a=d(e.value.value,r);var i=new n.MathNode("mstyle",a);i.setAttribute("mathsize",r.sizeMultiplier+"em");return i};f.overline=function(e,t){var r=new n.MathNode("mo",[new n.TextNode("\u203e")]);r.setAttribute("stretchy","true");var a=new n.MathNode("mover",[g(e.value.body,t),r]);a.setAttribute("accent","true");return a};f.underline=function(e,t){var r=new n.MathNode("mo",[new n.TextNode("\u203e")]);r.setAttribute("stretchy","true");var a=new n.MathNode("munder",[g(e.value.body,t),r]);a.setAttribute("accentunder","true");return a};f.accentUnder=function(e,t){var r=u.mathMLnode(e.value.label);var a=new n.MathNode("munder",[g(e.value.body,t),r]);a.setAttribute("accentunder","true");return a};f.enclose=function(e,t){var r=new n.MathNode("menclose",[g(e.value.body,t)]);var a="";switch(e.value.label){case"\\bcancel":a="downdiagonalstrike";break;case"\\sout":a="horizontalstrike";break;case"\\fbox":a="box";break;default:a="updiagonalstrike"}r.setAttribute("notation",a);return r};f.horizBrace=function(e,t){var r=u.mathMLnode(e.value.label);return new n.MathNode(e.value.isOver?"mover":"munder",[g(e.value.base,t),r])};f.xArrow=function(e,t){var r=u.mathMLnode(e.value.label);var a=void 0;var i=void 0;if(e.value.body){var o=g(e.value.body,t);if(e.value.below){i=g(e.value.below,t);a=new n.MathNode("munderover",[r,i,o])}else{a=new n.MathNode("mover",[r,o])}}else if(e.value.below){i=g(e.value.below,t);a=new n.MathNode("munder",[r,i])}else{a=new n.MathNode("mover",[r])}return a};f.rule=function(e){var t=new n.MathNode("mrow");return t};f.kern=function(e){var t=new n.MathNode("mrow");return t};f.llap=function(e,t){var r=new n.MathNode("mpadded",[g(e.value.body,t)]);r.setAttribute("lspace","-1width");r.setAttribute("width","0px");return r};f.rlap=function(e,t){var r=new n.MathNode("mpadded",[g(e.value.body,t)]);r.setAttribute("width","0px");return r};f.phantom=function(e,t){var r=d(e.value.value,t);return new n.MathNode("mphantom",r)};f.mclass=function(e,t){var r=d(e.value.value,t);return new n.MathNode("mstyle",r)};var d=function e(t,r){var a=[];for(var i=0;i<t.length;i++){var n=t[i];a.push(g(n,r))}return a};var g=function e(t,r){if(!t){return new n.MathNode("mrow")}if(f[t.type]){return f[t.type](t,r)}else{throw new o("Got group of unknown type: '"+t.type+"'")}};var y=function e(t,r,a){var i=d(t,a);var o=new n.MathNode("mrow",i);var s=new n.MathNode("annotation",[new n.TextNode(r)]);s.setAttribute("encoding","application/x-tex");var l=new n.MathNode("semantics",[o,s]);var u=new n.MathNode("math",[l]);return h(["katex-mathml"],[u])};t.exports=y},{"./ParseError":10,"./buildCommon":14,"./fontMetrics":21,"./mathMLTree":25,"./stretchy":28,"./symbols":29,"./utils":31}],17:[function(e,t,r){"use strict";var a=e("./buildHTML");var i=e("./buildMathML");var n=e("./buildCommon");var o=e("./Options");var s=e("./Settings");var l=e("./Style");var u=n.makeSpan;var h=function e(t,r,n){n=n||new s({});var h=l.TEXT;if(n.displayMode){h=l.DISPLAY}var p=new o({style:h});var c=i(t,r,p);var v=a(t,p);var f=u(["katex"],[c,v]);if(n.displayMode){return u(["katex-display"],[f])}else{return f}};t.exports=h},{"./Options":9,"./Settings":12,"./Style":13,"./buildCommon":14,"./buildHTML":15,"./buildMathML":16}],18:[function(e,t,r){"use strict";var a=e("./ParseError");var i=e("./Style");var n=e("./buildCommon");var o=e("./fontMetrics");var s=e("./symbols");var l=e("./utils");var u=n.makeSpan;var h=function e(t,r){if(s.math[t]&&s.math[t].replace){return o.getCharacterMetrics(s.math[t].replace,r)}else{return o.getCharacterMetrics(t,r)}};var p=function e(t,r,a,i){var n=a.havingBaseStyle(r);var o=u((i||[]).concat(n.sizingClasses(a)),[t],a);o.height*=n.sizeMultiplier/a.sizeMultiplier;o.depth*=n.sizeMultiplier/a.sizeMultiplier;o.maxFontSize=n.sizeMultiplier;return o};var c=function e(t,r,a){var i=r.havingBaseStyle(a);var n=(1-r.sizeMultiplier/i.sizeMultiplier)*r.fontMetrics().axisHeight;t.classes.push("delimcenter");t.style.top=n+"em";t.height-=n;t.depth+=n};var v=function e(t,r,a,i,o,s){var l=n.makeSymbol(t,"Main-Regular",o,i);var u=p(l,r,i,s);if(a){c(u,i,r)}return u};var f=function e(t,r,a,i){return n.makeSymbol(t,"Size"+r+"-Regular",a,i)};var m=function e(t,r,a,n,o,s){var l=f(t,r,o,n);var h=p(u(["delimsizing","size"+r],[l],n),i.TEXT,n,s);if(a){c(h,n,i.TEXT)}return h};var d=function e(t,r,a){var i=void 0;if(r==="Size1-Regular"){i="delim-size1"}else if(r==="Size4-Regular"){i="delim-size4"}var o=u(["delimsizinginner",i],[u([],[n.makeSymbol(t,r,a)])]);return{type:"elem",elem:o}};var g=function e(t,r,a,o,s,l){var c=void 0;var v=void 0;var f=void 0;var m=void 0;c=f=m=t;v=null;var g="Size1-Regular";if(t==="\\uparrow"){f=m="\u23d0"}else if(t==="\\Uparrow"){f=m="\u2016"}else if(t==="\\downarrow"){c=f="\u23d0"}else if(t==="\\Downarrow"){c=f="\u2016"}else if(t==="\\updownarrow"){c="\\uparrow";f="\u23d0";m="\\downarrow"}else if(t==="\\Updownarrow"){c="\\Uparrow";f="\u2016";m="\\Downarrow"}else if(t==="["||t==="\\lbrack"){c="\u23a1";f="\u23a2";m="\u23a3";g="Size4-Regular"}else if(t==="]"||t==="\\rbrack"){c="\u23a4";f="\u23a5";m="\u23a6";g="Size4-Regular"}else if(t==="\\lfloor"){f=c="\u23a2";m="\u23a3";g="Size4-Regular"}else if(t==="\\lceil"){c="\u23a1";f=m="\u23a2";g="Size4-Regular"}else if(t==="\\rfloor"){f=c="\u23a5";m="\u23a6";g="Size4-Regular"}else if(t==="\\rceil"){c="\u23a4";f=m="\u23a5";g="Size4-Regular"}else if(t==="("){c="\u239b";f="\u239c";m="\u239d";g="Size4-Regular"}else if(t===")"){c="\u239e";f="\u239f";m="\u23a0";g="Size4-Regular"}else if(t==="\\{"||t==="\\lbrace"){c="\u23a7";v="\u23a8";m="\u23a9";f="\u23aa";g="Size4-Regular"}else if(t==="\\}"||t==="\\rbrace"){c="\u23ab";v="\u23ac";m="\u23ad";f="\u23aa";g="Size4-Regular"}else if(t==="\\lgroup"){c="\u23a7";m="\u23a9";f="\u23aa";g="Size4-Regular"}else if(t==="\\rgroup"){c="\u23ab";m="\u23ad";f="\u23aa";g="Size4-Regular"}else if(t==="\\lmoustache"){c="\u23a7";m="\u23ad";f="\u23aa";g="Size4-Regular"}else if(t==="\\rmoustache"){c="\u23ab";m="\u23a9";f="\u23aa";g="Size4-Regular"}else if(t==="\\surd"){c="\ue001";m="\u23b7";f="\ue000";g="Size4-Regular"}var y=h(c,g);var x=y.height+y.depth;var b=h(f,g);var w=b.height+b.depth;var k=h(m,g);var z=k.height+k.depth;var M=0;var S=1;if(v!==null){var A=h(v,g);M=A.height+A.depth;S=2}var N=x+z+M;var T=Math.ceil((r-N)/(S*w));var q=N+T*S*w;var C=o.fontMetrics().axisHeight;if(a){C*=o.sizeMultiplier}var E=q/2-C;var O=[];O.push(d(m,g,s));if(v===null){for(var R=0;R<T;R++){O.push(d(f,g,s))}}else{for(var L=0;L<T;L++){O.push(d(f,g,s))}O.push(d(v,g,s));for(var D=0;D<T;D++){O.push(d(f,g,s))}}O.push(d(c,g,s));var P=o.havingBaseStyle(i.TEXT);var B=n.makeVList(O,"bottom",E,P);return p(u(["delimsizing","mult"],[B],P),i.TEXT,o,l)};var y=["(",")","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\\lceil","\\rceil","\\surd"];var x=["\\uparrow","\\downarrow","\\updownarrow","\\Uparrow","\\Downarrow","\\Updownarrow","|","\\|","\\vert","\\Vert","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","\\lmoustache","\\rmoustache"];var b=["<",">","\\langle","\\rangle","/","\\backslash","\\lt","\\gt"];var w=[0,1.2,1.8,2.4,3];var k=function e(t,r,i,n,o){if(t==="<"||t==="\\lt"){t="\\langle"}else if(t===">"||t==="\\gt"){t="\\rangle"}if(l.contains(y,t)||l.contains(b,t)){return m(t,r,false,i,n,o)}else if(l.contains(x,t)){return g(t,w[r],false,i,n,o)}else{throw new a("Illegal delimiter: '"+t+"'")}};var z=[{type:"small",style:i.SCRIPTSCRIPT},{type:"small",style:i.SCRIPT},{type:"small",style:i.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4}];var M=[{type:"small",style:i.SCRIPTSCRIPT},{type:"small",style:i.SCRIPT},{type:"small",style:i.TEXT},{type:"stack"}];var S=[{type:"small",style:i.SCRIPTSCRIPT},{type:"small",style:i.SCRIPT},{type:"small",style:i.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4},{type:"stack"}];var A=function e(t){if(t.type==="small"){return"Main-Regular"}else if(t.type==="large"){return"Size"+t.size+"-Regular"}else if(t.type==="stack"){return"Size4-Regular"}};var N=function e(t,r,a,i){var n=Math.min(2,3-i.style.size);for(var o=n;o<a.length;o++){if(a[o].type==="stack"){break}var s=h(t,A(a[o]));var l=s.height+s.depth;if(a[o].type==="small"){var u=i.havingBaseStyle(a[o].style);l*=u.sizeMultiplier}if(l>r){return a[o]}}return a[a.length-1]};var T=function e(t,r,a,i,n,o){if(t==="<"||t==="\\lt"){t="\\langle"}else if(t===">"||t==="\\gt"){t="\\rangle"}var s=void 0;if(l.contains(b,t)){s=z}else if(l.contains(y,t)){s=S}else{s=M}var u=N(t,r,s,i);if(u.type==="small"){return v(t,u.style,a,i,n,o)}else if(u.type==="large"){return m(t,u.size,a,i,n,o)}else if(u.type==="stack"){return g(t,r,a,i,n,o)}};var q=function e(t,r,a,i,n,o){var s=i.fontMetrics().axisHeight*i.sizeMultiplier;var l=901;var u=5/i.fontMetrics().ptPerEm;var h=Math.max(r-s,a+s);var p=Math.max(h/500*l,2*h-u);return T(t,p,true,i,n,o)};t.exports={sizedDelim:k,customSizedDelim:T,leftRightDelim:q}},{"./ParseError":10,"./Style":13,"./buildCommon":14,"./fontMetrics":21,"./symbols":29,"./utils":31}],19:[function(e,t,r){"use strict";var a=e("./unicodeRegexes");var i=e("./utils");var n=function e(t){t=t.slice();for(var r=t.length-1;r>=0;r--){if(!t[r]){t.splice(r,1)}}return t.join(" ")};function o(e,t,r){this.classes=e||[];this.children=t||[];this.height=0;this.depth=0;this.maxFontSize=0;this.style={};this.attributes={};if(r){if(r.style.isTight()){this.classes.push("mtight")}if(r.getColor()){this.style.color=r.getColor()}}}o.prototype.setAttribute=function(e,t){this.attributes[e]=t};o.prototype.tryCombine=function(e){return false};o.prototype.toNode=function(){var e=document.createElement("span");e.className=n(this.classes);for(var t in this.style){if(Object.prototype.hasOwnProperty.call(this.style,t)){e.style[t]=this.style[t]}}for(var r in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,r)){e.setAttribute(r,this.attributes[r])}}for(var a=0;a<this.children.length;a++){e.appendChild(this.children[a].toNode())}return e};o.prototype.toMarkup=function(){var e="<span";if(this.classes.length){e+=' class="';e+=i.escape(n(this.classes));e+='"'}var t="";for(var r in this.style){if(this.style.hasOwnProperty(r)){t+=i.hyphenate(r)+":"+this.style[r]+";"}}if(t){e+=' style="'+i.escape(t)+'"'}for(var a in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,a)){e+=" "+a+'="';e+=i.escape(this.attributes[a]);e+='"'}}e+=">";for(var o=0;o<this.children.length;o++){e+=this.children[o].toMarkup();
}e+="</span>";return e};function s(e,t){this.children=e||[];this.height=0;this.depth=0;this.maxFontSize=0;if(t){for(var r=0;r<this.children.length;r++){for(var a=0;a<t.length;a++){this.children[r].classes.push(t[a])}}}this.classes=t||[]}s.prototype.toNode=function(){var e=document.createDocumentFragment();for(var t=0;t<this.children.length;t++){e.appendChild(this.children[t].toNode())}return e};s.prototype.toMarkup=function(){var e="";for(var t=0;t<this.children.length;t++){e+=this.children[t].toMarkup()}return e};var l={"\xee":"\u0131\u0302","\xef":"\u0131\u0308","\xed":"\u0131\u0301","\xec":"\u0131\u0300"};function u(e,t,r,i,n,o,s){this.value=e||"";this.height=t||0;this.depth=r||0;this.italic=i||0;this.skew=n||0;this.classes=o||[];this.style=s||{};this.maxFontSize=0;if(a.cjkRegex.test(e)){if(a.hangulRegex.test(e)){this.classes.push("hangul_fallback")}else{this.classes.push("cjk_fallback")}}if(/[\xee\xef\xed\xec]/.test(this.value)){this.value=l[this.value]}}u.prototype.tryCombine=function(e){if(!e||!(e instanceof u)||this.italic>0||n(this.classes)!==n(e.classes)||this.skew!==e.skew||this.maxFontSize!==e.maxFontSize){return false}for(var t in this.style){if(this.style.hasOwnProperty(t)&&this.style[t]!==e.style[t]){return false}}for(var r in e.style){if(e.style.hasOwnProperty(r)&&this.style[r]!==e.style[r]){return false}}this.value+=e.value;this.height=Math.max(this.height,e.height);this.depth=Math.max(this.depth,e.depth);this.italic=e.italic;return true};u.prototype.toNode=function(){var e=document.createTextNode(this.value);var t=null;if(this.italic>0){t=document.createElement("span");t.style.marginRight=this.italic+"em"}if(this.classes.length>0){t=t||document.createElement("span");t.className=n(this.classes)}for(var r in this.style){if(this.style.hasOwnProperty(r)){t=t||document.createElement("span");t.style[r]=this.style[r]}}if(t){t.appendChild(e);return t}else{return e}};u.prototype.toMarkup=function(){var e=false;var t="<span";if(this.classes.length){e=true;t+=' class="';t+=i.escape(n(this.classes));t+='"'}var r="";if(this.italic>0){r+="margin-right:"+this.italic+"em;"}for(var a in this.style){if(this.style.hasOwnProperty(a)){r+=i.hyphenate(a)+":"+this.style[a]+";"}}if(r){e=true;t+=' style="'+i.escape(r)+'"'}var o=i.escape(this.value);if(e){t+=">";t+=o;t+="</span>";return t}else{return o}};t.exports={span:o,documentFragment:s,symbolNode:u}},{"./unicodeRegexes":30,"./utils":31}],20:[function(e,t,r){"use strict";var a=e("./parseData");var i=e("./ParseError");var n=a.ParseNode;function o(e,t,r){var a=[];var o=[a];var s=[];while(true){var l=e.parseExpression(false,null);l=new n("ordgroup",l,e.mode);if(r){l=new n("styling",{style:r,value:[l]},e.mode)}a.push(l);var u=e.nextToken.text;if(u==="&"){e.consume()}else if(u==="\\end"){break}else if(u==="\\\\"||u==="\\cr"){var h=e.parseFunction();s.push(h.value.size);a=[];o.push(a)}else{throw new i("Expected & or \\\\ or \\end",e.nextToken)}}t.body=o;t.rowGaps=s;return new n(t.type,t,e.mode)}function s(e,r,a){if(typeof e==="string"){e=[e]}if(typeof r==="number"){r={numArgs:r}}var i={numArgs:r.numArgs||0,argTypes:r.argTypes,greediness:1,allowedInText:!!r.allowedInText,numOptionalArgs:r.numOptionalArgs||0,handler:a};for(var n=0;n<e.length;++n){t.exports[e[n]]=i}}function l(e){if(e.substr(0,1)==="d"){return"display"}else{return"text"}}s(["array","darray"],{numArgs:1},function(e,t){var r=t[0];r=r.value.map?r.value:[r];var a=r.map(function(e){var t=e.value;if("lcr".indexOf(t)!==-1){return{type:"align",align:t}}else if(t==="|"){return{type:"separator",separator:"|"}}throw new i("Unknown column alignment: "+e.value,e)});var n={type:"array",cols:a,hskipBeforeAndAfter:true};n=o(e.parser,n,l(e.envName));return n});s(["matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix"],{},function(e){var t={matrix:null,pmatrix:["(",")"],bmatrix:["[","]"],Bmatrix:["\\{","\\}"],vmatrix:["|","|"],Vmatrix:["\\Vert","\\Vert"]}[e.envName];var r={type:"array",hskipBeforeAndAfter:false};r=o(e.parser,r,l(e.envName));if(t){r=new n("leftright",{body:[r],left:t[0],right:t[1]},e.mode)}return r});s(["cases","dcases"],{},function(e){var t={type:"array",arraystretch:1.2,cols:[{type:"align",align:"l",pregap:0,postgap:1},{type:"align",align:"l",pregap:0,postgap:0}]};t=o(e.parser,t,l(e.envName));t=new n("leftright",{body:[t],left:"\\{",right:"."},e.mode);return t});s("aligned",{},function(e){var t={type:"array",cols:[],addJot:true};t=o(e.parser,t,"display");var r=new n("ordgroup",[],e.mode);var a=0;t.value.body.forEach(function(e){for(var t=1;t<e.length;t+=2){var i=e[t].value.value[0];i.value.unshift(r)}if(a<e.length){a=e.length}});for(var i=0;i<a;++i){var s="r";var l=0;if(i%2===1){s="l"}else if(i>0){l=2}t.value.cols[i]={type:"align",align:s,pregap:l,postgap:0}}return t});s("gathered",{},function(e){var t={type:"array",cols:[{type:"align",align:"c"}],addJot:true};t=o(e.parser,t,"display");return t})},{"./ParseError":10,"./parseData":26}],21:[function(e,t,r){"use strict";var a=e("./unicodeRegexes").cjkRegex;var i={slant:[.25,.25,.25],space:[0,0,0],stretch:[0,0,0],shrink:[0,0,0],xHeight:[.431,.431,.431],quad:[1,1.171,1.472],extraSpace:[0,0,0],num1:[.677,.732,.925],num2:[.394,.384,.387],num3:[.444,.471,.504],denom1:[.686,.752,1.025],denom2:[.345,.344,.532],sup1:[.413,.503,.504],sup2:[.363,.431,.404],sup3:[.289,.286,.294],sub1:[.15,.143,.2],sub2:[.247,.286,.4],supDrop:[.386,.353,.494],subDrop:[.05,.071,.1],delim1:[2.39,1.7,1.98],delim2:[1.01,1.157,1.42],axisHeight:[.25,.25,.25],defaultRuleThickness:[.04,.04,.04],bigOpSpacing1:[.111,.111,.111],bigOpSpacing2:[.166,.166,.166],bigOpSpacing3:[.2,.2,.2],bigOpSpacing4:[.6,.6,.6],bigOpSpacing5:[.1,.1,.1],ptPerEm:[10,10,10],doubleRuleSep:[.2,.2,.2]};var n=e("./fontMetricsData");var o={"\xc0":"A","\xc1":"A","\xc2":"A","\xc3":"A","\xc4":"A","\xc5":"A","\xc6":"A","\xc7":"C","\xc8":"E","\xc9":"E","\xca":"E","\xcb":"E","\xcc":"I","\xcd":"I","\xce":"I","\xcf":"I","\xd0":"D","\xd1":"N","\xd2":"O","\xd3":"O","\xd4":"O","\xd5":"O","\xd6":"O","\xd8":"O","\xd9":"U","\xda":"U","\xdb":"U","\xdc":"U","\xdd":"Y","\xde":"o","\xdf":"B","\xe0":"a","\xe1":"a","\xe2":"a","\xe3":"a","\xe4":"a","\xe5":"a","\xe6":"a","\xe7":"c","\xe8":"e","\xe9":"e","\xea":"e","\xeb":"e","\xec":"i","\xed":"i","\xee":"i","\xef":"i","\xf0":"d","\xf1":"n","\xf2":"o","\xf3":"o","\xf4":"o","\xf5":"o","\xf6":"o","\xf8":"o","\xf9":"u","\xfa":"u","\xfb":"u","\xfc":"u","\xfd":"y","\xfe":"o","\xff":"y","\u0410":"A","\u0411":"B","\u0412":"B","\u0413":"F","\u0414":"A","\u0415":"E","\u0416":"K","\u0417":"3","\u0418":"N","\u0419":"N","\u041a":"K","\u041b":"N","\u041c":"M","\u041d":"H","\u041e":"O","\u041f":"N","\u0420":"P","\u0421":"C","\u0422":"T","\u0423":"y","\u0424":"O","\u0425":"X","\u0426":"U","\u0427":"h","\u0428":"W","\u0429":"W","\u042a":"B","\u042b":"X","\u042c":"B","\u042d":"3","\u042e":"X","\u042f":"R","\u0430":"a","\u0431":"b","\u0432":"a","\u0433":"r","\u0434":"y","\u0435":"e","\u0436":"m","\u0437":"e","\u0438":"n","\u0439":"n","\u043a":"n","\u043b":"n","\u043c":"m","\u043d":"n","\u043e":"o","\u043f":"n","\u0440":"p","\u0441":"c","\u0442":"o","\u0443":"y","\u0444":"b","\u0445":"x","\u0446":"n","\u0447":"n","\u0448":"w","\u0449":"w","\u044a":"a","\u044b":"m","\u044c":"a","\u044d":"e","\u044e":"m","\u044f":"r"};var s=function e(t,r){var i=t.charCodeAt(0);if(t[0]in o){i=o[t[0]].charCodeAt(0)}else if(a.test(t[0])){i="M".charCodeAt(0)}var s=n[r][i];if(s){return{depth:s[0],height:s[1],italic:s[2],skew:s[3],width:s[4]}}};var l={};var u=function e(t){var r=void 0;if(t>=5){r=0}else if(t>=3){r=1}else{r=2}if(!l[r]){var a=l[r]={};for(var n in i){if(i.hasOwnProperty(n)){a[n]=i[n][r]}}a.emPerEx=a.xHeight/a.quad}return l[r]};t.exports={getFontMetrics:u,getCharacterMetrics:s}},{"./fontMetricsData":22,"./unicodeRegexes":30}],22:[function(e,t,r){"use strict";t.exports={"AMS-Regular":{65:[0,.68889,0,0],66:[0,.68889,0,0],67:[0,.68889,0,0],68:[0,.68889,0,0],69:[0,.68889,0,0],70:[0,.68889,0,0],71:[0,.68889,0,0],72:[0,.68889,0,0],73:[0,.68889,0,0],74:[.16667,.68889,0,0],75:[0,.68889,0,0],76:[0,.68889,0,0],77:[0,.68889,0,0],78:[0,.68889,0,0],79:[.16667,.68889,0,0],80:[0,.68889,0,0],81:[.16667,.68889,0,0],82:[0,.68889,0,0],83:[0,.68889,0,0],84:[0,.68889,0,0],85:[0,.68889,0,0],86:[0,.68889,0,0],87:[0,.68889,0,0],88:[0,.68889,0,0],89:[0,.68889,0,0],90:[0,.68889,0,0],107:[0,.68889,0,0],165:[0,.675,.025,0],174:[.15559,.69224,0,0],240:[0,.68889,0,0],295:[0,.68889,0,0],710:[0,.825,0,0],732:[0,.9,0,0],770:[0,.825,0,0],771:[0,.9,0,0],989:[.08167,.58167,0,0],1008:[0,.43056,.04028,0],8245:[0,.54986,0,0],8463:[0,.68889,0,0],8487:[0,.68889,0,0],8498:[0,.68889,0,0],8502:[0,.68889,0,0],8503:[0,.68889,0,0],8504:[0,.68889,0,0],8513:[0,.68889,0,0],8592:[-.03598,.46402,0,0],8594:[-.03598,.46402,0,0],8602:[-.13313,.36687,0,0],8603:[-.13313,.36687,0,0],8606:[.01354,.52239,0,0],8608:[.01354,.52239,0,0],8610:[.01354,.52239,0,0],8611:[.01354,.52239,0,0],8619:[0,.54986,0,0],8620:[0,.54986,0,0],8621:[-.13313,.37788,0,0],8622:[-.13313,.36687,0,0],8624:[0,.69224,0,0],8625:[0,.69224,0,0],8630:[0,.43056,0,0],8631:[0,.43056,0,0],8634:[.08198,.58198,0,0],8635:[.08198,.58198,0,0],8638:[.19444,.69224,0,0],8639:[.19444,.69224,0,0],8642:[.19444,.69224,0,0],8643:[.19444,.69224,0,0],8644:[.1808,.675,0,0],8646:[.1808,.675,0,0],8647:[.1808,.675,0,0],8648:[.19444,.69224,0,0],8649:[.1808,.675,0,0],8650:[.19444,.69224,0,0],8651:[.01354,.52239,0,0],8652:[.01354,.52239,0,0],8653:[-.13313,.36687,0,0],8654:[-.13313,.36687,0,0],8655:[-.13313,.36687,0,0],8666:[.13667,.63667,0,0],8667:[.13667,.63667,0,0],8669:[-.13313,.37788,0,0],8672:[-.064,.437,0,0],8674:[-.064,.437,0,0],8705:[0,.825,0,0],8708:[0,.68889,0,0],8709:[.08167,.58167,0,0],8717:[0,.43056,0,0],8722:[-.03598,.46402,0,0],8724:[.08198,.69224,0,0],8726:[.08167,.58167,0,0],8733:[0,.69224,0,0],8736:[0,.69224,0,0],8737:[0,.69224,0,0],8738:[.03517,.52239,0,0],8739:[.08167,.58167,0,0],8740:[.25142,.74111,0,0],8741:[.08167,.58167,0,0],8742:[.25142,.74111,0,0],8756:[0,.69224,0,0],8757:[0,.69224,0,0],8764:[-.13313,.36687,0,0],8765:[-.13313,.37788,0,0],8769:[-.13313,.36687,0,0],8770:[-.03625,.46375,0,0],8774:[.30274,.79383,0,0],8776:[-.01688,.48312,0,0],8778:[.08167,.58167,0,0],8782:[.06062,.54986,0,0],8783:[.06062,.54986,0,0],8785:[.08198,.58198,0,0],8786:[.08198,.58198,0,0],8787:[.08198,.58198,0,0],8790:[0,.69224,0,0],8791:[.22958,.72958,0,0],8796:[.08198,.91667,0,0],8806:[.25583,.75583,0,0],8807:[.25583,.75583,0,0],8808:[.25142,.75726,0,0],8809:[.25142,.75726,0,0],8812:[.25583,.75583,0,0],8814:[.20576,.70576,0,0],8815:[.20576,.70576,0,0],8816:[.30274,.79383,0,0],8817:[.30274,.79383,0,0],8818:[.22958,.72958,0,0],8819:[.22958,.72958,0,0],8822:[.1808,.675,0,0],8823:[.1808,.675,0,0],8828:[.13667,.63667,0,0],8829:[.13667,.63667,0,0],8830:[.22958,.72958,0,0],8831:[.22958,.72958,0,0],8832:[.20576,.70576,0,0],8833:[.20576,.70576,0,0],8840:[.30274,.79383,0,0],8841:[.30274,.79383,0,0],8842:[.13597,.63597,0,0],8843:[.13597,.63597,0,0],8847:[.03517,.54986,0,0],8848:[.03517,.54986,0,0],8858:[.08198,.58198,0,0],8859:[.08198,.58198,0,0],8861:[.08198,.58198,0,0],8862:[0,.675,0,0],8863:[0,.675,0,0],8864:[0,.675,0,0],8865:[0,.675,0,0],8872:[0,.69224,0,0],8873:[0,.69224,0,0],8874:[0,.69224,0,0],8876:[0,.68889,0,0],8877:[0,.68889,0,0],8878:[0,.68889,0,0],8879:[0,.68889,0,0],8882:[.03517,.54986,0,0],8883:[.03517,.54986,0,0],8884:[.13667,.63667,0,0],8885:[.13667,.63667,0,0],8888:[0,.54986,0,0],8890:[.19444,.43056,0,0],8891:[.19444,.69224,0,0],8892:[.19444,.69224,0,0],8901:[0,.54986,0,0],8903:[.08167,.58167,0,0],8905:[.08167,.58167,0,0],8906:[.08167,.58167,0,0],8907:[0,.69224,0,0],8908:[0,.69224,0,0],8909:[-.03598,.46402,0,0],8910:[0,.54986,0,0],8911:[0,.54986,0,0],8912:[.03517,.54986,0,0],8913:[.03517,.54986,0,0],8914:[0,.54986,0,0],8915:[0,.54986,0,0],8916:[0,.69224,0,0],8918:[.0391,.5391,0,0],8919:[.0391,.5391,0,0],8920:[.03517,.54986,0,0],8921:[.03517,.54986,0,0],8922:[.38569,.88569,0,0],8923:[.38569,.88569,0,0],8926:[.13667,.63667,0,0],8927:[.13667,.63667,0,0],8928:[.30274,.79383,0,0],8929:[.30274,.79383,0,0],8934:[.23222,.74111,0,0],8935:[.23222,.74111,0,0],8936:[.23222,.74111,0,0],8937:[.23222,.74111,0,0],8938:[.20576,.70576,0,0],8939:[.20576,.70576,0,0],8940:[.30274,.79383,0,0],8941:[.30274,.79383,0,0],8994:[.19444,.69224,0,0],8995:[.19444,.69224,0,0],9416:[.15559,.69224,0,0],9484:[0,.69224,0,0],9488:[0,.69224,0,0],9492:[0,.37788,0,0],9496:[0,.37788,0,0],9585:[.19444,.68889,0,0],9586:[.19444,.74111,0,0],9632:[0,.675,0,0],9633:[0,.675,0,0],9650:[0,.54986,0,0],9651:[0,.54986,0,0],9654:[.03517,.54986,0,0],9660:[0,.54986,0,0],9661:[0,.54986,0,0],9664:[.03517,.54986,0,0],9674:[.11111,.69224,0,0],9733:[.19444,.69224,0,0],10003:[0,.69224,0,0],10016:[0,.69224,0,0],10731:[.11111,.69224,0,0],10846:[.19444,.75583,0,0],10877:[.13667,.63667,0,0],10878:[.13667,.63667,0,0],10885:[.25583,.75583,0,0],10886:[.25583,.75583,0,0],10887:[.13597,.63597,0,0],10888:[.13597,.63597,0,0],10889:[.26167,.75726,0,0],10890:[.26167,.75726,0,0],10891:[.48256,.98256,0,0],10892:[.48256,.98256,0,0],10901:[.13667,.63667,0,0],10902:[.13667,.63667,0,0],10933:[.25142,.75726,0,0],10934:[.25142,.75726,0,0],10935:[.26167,.75726,0,0],10936:[.26167,.75726,0,0],10937:[.26167,.75726,0,0],10938:[.26167,.75726,0,0],10949:[.25583,.75583,0,0],10950:[.25583,.75583,0,0],10955:[.28481,.79383,0,0],10956:[.28481,.79383,0,0],57350:[.08167,.58167,0,0],57351:[.08167,.58167,0,0],57352:[.08167,.58167,0,0],57353:[0,.43056,.04028,0],57356:[.25142,.75726,0,0],57357:[.25142,.75726,0,0],57358:[.41951,.91951,0,0],57359:[.30274,.79383,0,0],57360:[.30274,.79383,0,0],57361:[.41951,.91951,0,0],57366:[.25142,.75726,0,0],57367:[.25142,.75726,0,0],57368:[.25142,.75726,0,0],57369:[.25142,.75726,0,0],57370:[.13597,.63597,0,0],57371:[.13597,.63597,0,0]},"Caligraphic-Regular":{48:[0,.43056,0,0],49:[0,.43056,0,0],50:[0,.43056,0,0],51:[.19444,.43056,0,0],52:[.19444,.43056,0,0],53:[.19444,.43056,0,0],54:[0,.64444,0,0],55:[.19444,.43056,0,0],56:[0,.64444,0,0],57:[.19444,.43056,0,0],65:[0,.68333,0,.19445],66:[0,.68333,.03041,.13889],67:[0,.68333,.05834,.13889],68:[0,.68333,.02778,.08334],69:[0,.68333,.08944,.11111],70:[0,.68333,.09931,.11111],71:[.09722,.68333,.0593,.11111],72:[0,.68333,.00965,.11111],73:[0,.68333,.07382,0],74:[.09722,.68333,.18472,.16667],75:[0,.68333,.01445,.05556],76:[0,.68333,0,.13889],77:[0,.68333,0,.13889],78:[0,.68333,.14736,.08334],79:[0,.68333,.02778,.11111],80:[0,.68333,.08222,.08334],81:[.09722,.68333,0,.11111],82:[0,.68333,0,.08334],83:[0,.68333,.075,.13889],84:[0,.68333,.25417,0],85:[0,.68333,.09931,.08334],86:[0,.68333,.08222,0],87:[0,.68333,.08222,.08334],88:[0,.68333,.14643,.13889],89:[.09722,.68333,.08222,.08334],90:[0,.68333,.07944,.13889]},"Fraktur-Regular":{33:[0,.69141,0,0],34:[0,.69141,0,0],38:[0,.69141,0,0],39:[0,.69141,0,0],40:[.24982,.74947,0,0],41:[.24982,.74947,0,0],42:[0,.62119,0,0],43:[.08319,.58283,0,0],44:[0,.10803,0,0],45:[.08319,.58283,0,0],46:[0,.10803,0,0],47:[.24982,.74947,0,0],48:[0,.47534,0,0],49:[0,.47534,0,0],50:[0,.47534,0,0],51:[.18906,.47534,0,0],52:[.18906,.47534,0,0],53:[.18906,.47534,0,0],54:[0,.69141,0,0],55:[.18906,.47534,0,0],56:[0,.69141,0,0],57:[.18906,.47534,0,0],58:[0,.47534,0,0],59:[.12604,.47534,0,0],61:[-.13099,.36866,0,0],63:[0,.69141,0,0],65:[0,.69141,0,0],66:[0,.69141,0,0],67:[0,.69141,0,0],68:[0,.69141,0,0],69:[0,.69141,0,0],70:[.12604,.69141,0,0],71:[0,.69141,0,0],72:[.06302,.69141,0,0],73:[0,.69141,0,0],74:[.12604,.69141,0,0],75:[0,.69141,0,0],76:[0,.69141,0,0],77:[0,.69141,0,0],78:[0,.69141,0,0],79:[0,.69141,0,0],80:[.18906,.69141,0,0],81:[.03781,.69141,0,0],82:[0,.69141,0,0],83:[0,.69141,0,0],84:[0,.69141,0,0],85:[0,.69141,0,0],86:[0,.69141,0,0],87:[0,.69141,0,0],88:[0,.69141,0,0],89:[.18906,.69141,0,0],90:[.12604,.69141,0,0],91:[.24982,.74947,0,0],93:[.24982,.74947,0,0],94:[0,.69141,0,0],97:[0,.47534,0,0],98:[0,.69141,0,0],99:[0,.47534,0,0],100:[0,.62119,0,0],101:[0,.47534,0,0],102:[.18906,.69141,0,0],103:[.18906,.47534,0,0],104:[.18906,.69141,0,0],105:[0,.69141,0,0],106:[0,.69141,0,0],107:[0,.69141,0,0],108:[0,.69141,0,0],109:[0,.47534,0,0],110:[0,.47534,0,0],111:[0,.47534,0,0],112:[.18906,.52396,0,0],113:[.18906,.47534,0,0],114:[0,.47534,0,0],115:[0,.47534,0,0],116:[0,.62119,0,0],117:[0,.47534,0,0],118:[0,.52396,0,0],119:[0,.52396,0,0],120:[.18906,.47534,0,0],121:[.18906,.47534,0,0],122:[.18906,.47534,0,0],8216:[0,.69141,0,0],8217:[0,.69141,0,0],58112:[0,.62119,0,0],58113:[0,.62119,0,0],58114:[.18906,.69141,0,0],58115:[.18906,.69141,0,0],58116:[.18906,.47534,0,0],58117:[0,.69141,0,0],58118:[0,.62119,0,0],58119:[0,.47534,0,0]},"Main-Bold":{33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.13333,.63333,0,0],44:[.19444,.15556,0,0],45:[0,.44444,0,0],46:[0,.15556,0,0],47:[.25,.75,0,0],48:[0,.64444,0,0],49:[0,.64444,0,0],50:[0,.64444,0,0],51:[0,.64444,0,0],52:[0,.64444,0,0],53:[0,.64444,0,0],54:[0,.64444,0,0],55:[0,.64444,0,0],56:[0,.64444,0,0],57:[0,.64444,0,0],58:[0,.44444,0,0],59:[.19444,.44444,0,0],60:[.08556,.58556,0,0],61:[-.10889,.39111,0,0],62:[.08556,.58556,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.68611,0,0],66:[0,.68611,0,0],67:[0,.68611,0,0],68:[0,.68611,0,0],69:[0,.68611,0,0],70:[0,.68611,0,0],71:[0,.68611,0,0],72:[0,.68611,0,0],73:[0,.68611,0,0],74:[0,.68611,0,0],75:[0,.68611,0,0],76:[0,.68611,0,0],77:[0,.68611,0,0],78:[0,.68611,0,0],79:[0,.68611,0,0],80:[0,.68611,0,0],81:[.19444,.68611,0,0],82:[0,.68611,0,0],83:[0,.68611,0,0],84:[0,.68611,0,0],85:[0,.68611,0,0],86:[0,.68611,.01597,0],87:[0,.68611,.01597,0],88:[0,.68611,0,0],89:[0,.68611,.02875,0],90:[0,.68611,0,0],91:[.25,.75,0,0],92:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.31,.13444,.03194,0],96:[0,.69444,0,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[0,.69444,.10903,0],103:[.19444,.44444,.01597,0],104:[0,.69444,0,0],105:[0,.69444,0,0],106:[.19444,.69444,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,0,0],114:[0,.44444,0,0],115:[0,.44444,0,0],116:[0,.63492,0,0],117:[0,.44444,0,0],118:[0,.44444,.01597,0],119:[0,.44444,.01597,0],120:[0,.44444,0,0],121:[.19444,.44444,.01597,0],122:[0,.44444,0,0],123:[.25,.75,0,0],124:[.25,.75,0,0],125:[.25,.75,0,0],126:[.35,.34444,0,0],168:[0,.69444,0,0],172:[0,.44444,0,0],175:[0,.59611,0,0],176:[0,.69444,0,0],177:[.13333,.63333,0,0],180:[0,.69444,0,0],215:[.13333,.63333,0,0],247:[.13333,.63333,0,0],305:[0,.44444,0,0],567:[.19444,.44444,0,0],710:[0,.69444,0,0],711:[0,.63194,0,0],713:[0,.59611,0,0],714:[0,.69444,0,0],715:[0,.69444,0,0],728:[0,.69444,0,0],729:[0,.69444,0,0],730:[0,.69444,0,0],732:[0,.69444,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.69444,0,0],772:[0,.59611,0,0],774:[0,.69444,0,0],775:[0,.69444,0,0],776:[0,.69444,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.63194,0,0],824:[.19444,.69444,0,0],915:[0,.68611,0,0],916:[0,.68611,0,0],920:[0,.68611,0,0],923:[0,.68611,0,0],926:[0,.68611,0,0],928:[0,.68611,0,0],931:[0,.68611,0,0],933:[0,.68611,0,0],934:[0,.68611,0,0],936:[0,.68611,0,0],937:[0,.68611,0,0],8211:[0,.44444,.03194,0],8212:[0,.44444,.03194,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0],8224:[.19444,.69444,0,0],8225:[.19444,.69444,0,0],8242:[0,.55556,0,0],8407:[0,.72444,.15486,0],8463:[0,.69444,0,0],8465:[0,.69444,0,0],8467:[0,.69444,0,0],8472:[.19444,.44444,0,0],8476:[0,.69444,0,0],8501:[0,.69444,0,0],8592:[-.10889,.39111,0,0],8593:[.19444,.69444,0,0],8594:[-.10889,.39111,0,0],8595:[.19444,.69444,0,0],8596:[-.10889,.39111,0,0],8597:[.25,.75,0,0],8598:[.19444,.69444,0,0],8599:[.19444,.69444,0,0],8600:[.19444,.69444,0,0],8601:[.19444,.69444,0,0],8636:[-.10889,.39111,0,0],8637:[-.10889,.39111,0,0],8640:[-.10889,.39111,0,0],8641:[-.10889,.39111,0,0],8656:[-.10889,.39111,0,0],8657:[.19444,.69444,0,0],8658:[-.10889,.39111,0,0],8659:[.19444,.69444,0,0],8660:[-.10889,.39111,0,0],8661:[.25,.75,0,0],8704:[0,.69444,0,0],8706:[0,.69444,.06389,0],8707:[0,.69444,0,0],8709:[.05556,.75,0,0],8711:[0,.68611,0,0],8712:[.08556,.58556,0,0],8715:[.08556,.58556,0,0],8722:[.13333,.63333,0,0],8723:[.13333,.63333,0,0],8725:[.25,.75,0,0],8726:[.25,.75,0,0],8727:[-.02778,.47222,0,0],8728:[-.02639,.47361,0,0],8729:[-.02639,.47361,0,0],8730:[.18,.82,0,0],8733:[0,.44444,0,0],8734:[0,.44444,0,0],8736:[0,.69224,0,0],8739:[.25,.75,0,0],8741:[.25,.75,0,0],8743:[0,.55556,0,0],8744:[0,.55556,0,0],8745:[0,.55556,0,0],8746:[0,.55556,0,0],8747:[.19444,.69444,.12778,0],8764:[-.10889,.39111,0,0],8768:[.19444,.69444,0,0],8771:[.00222,.50222,0,0],8776:[.02444,.52444,0,0],8781:[.00222,.50222,0,0],8801:[.00222,.50222,0,0],8804:[.19667,.69667,0,0],8805:[.19667,.69667,0,0],8810:[.08556,.58556,0,0],8811:[.08556,.58556,0,0],8826:[.08556,.58556,0,0],8827:[.08556,.58556,0,0],8834:[.08556,.58556,0,0],8835:[.08556,.58556,0,0],8838:[.19667,.69667,0,0],8839:[.19667,.69667,0,0],8846:[0,.55556,0,0],8849:[.19667,.69667,0,0],8850:[.19667,.69667,0,0],8851:[0,.55556,0,0],8852:[0,.55556,0,0],8853:[.13333,.63333,0,0],8854:[.13333,.63333,0,0],8855:[.13333,.63333,0,0],8856:[.13333,.63333,0,0],8857:[.13333,.63333,0,0],8866:[0,.69444,0,0],8867:[0,.69444,0,0],8868:[0,.69444,0,0],8869:[0,.69444,0,0],8900:[-.02639,.47361,0,0],8901:[-.02639,.47361,0,0],8902:[-.02778,.47222,0,0],8968:[.25,.75,0,0],8969:[.25,.75,0,0],8970:[.25,.75,0,0],8971:[.25,.75,0,0],8994:[-.13889,.36111,0,0],8995:[-.13889,.36111,0,0],9651:[.19444,.69444,0,0],9657:[-.02778,.47222,0,0],9661:[.19444,.69444,0,0],9667:[-.02778,.47222,0,0],9711:[.19444,.69444,0,0],9824:[.12963,.69444,0,0],9825:[.12963,.69444,0,0],9826:[.12963,.69444,0,0],9827:[.12963,.69444,0,0],9837:[0,.75,0,0],9838:[.19444,.69444,0,0],9839:[.19444,.69444,0,0],10216:[.25,.75,0,0],10217:[.25,.75,0,0],10815:[0,.68611,0,0],10927:[.19667,.69667,0,0],10928:[.19667,.69667,0,0]},"Main-Italic":{33:[0,.69444,.12417,0],34:[0,.69444,.06961,0],35:[.19444,.69444,.06616,0],37:[.05556,.75,.13639,0],38:[0,.69444,.09694,0],39:[0,.69444,.12417,0],40:[.25,.75,.16194,0],41:[.25,.75,.03694,0],42:[0,.75,.14917,0],43:[.05667,.56167,.03694,0],44:[.19444,.10556,0,0],45:[0,.43056,.02826,0],46:[0,.10556,0,0],47:[.25,.75,.16194,0],48:[0,.64444,.13556,0],49:[0,.64444,.13556,0],50:[0,.64444,.13556,0],51:[0,.64444,.13556,0],52:[.19444,.64444,.13556,0],53:[0,.64444,.13556,0],54:[0,.64444,.13556,0],55:[.19444,.64444,.13556,0],56:[0,.64444,.13556,0],57:[0,.64444,.13556,0],58:[0,.43056,.0582,0],59:[.19444,.43056,.0582,0],61:[-.13313,.36687,.06616,0],63:[0,.69444,.1225,0],64:[0,.69444,.09597,0],65:[0,.68333,0,0],66:[0,.68333,.10257,0],67:[0,.68333,.14528,0],68:[0,.68333,.09403,0],69:[0,.68333,.12028,0],70:[0,.68333,.13305,0],71:[0,.68333,.08722,0],72:[0,.68333,.16389,0],73:[0,.68333,.15806,0],74:[0,.68333,.14028,0],75:[0,.68333,.14528,0],76:[0,.68333,0,0],77:[0,.68333,.16389,0],78:[0,.68333,.16389,0],79:[0,.68333,.09403,0],80:[0,.68333,.10257,0],81:[.19444,.68333,.09403,0],82:[0,.68333,.03868,0],83:[0,.68333,.11972,0],84:[0,.68333,.13305,0],85:[0,.68333,.16389,0],86:[0,.68333,.18361,0],87:[0,.68333,.18361,0],88:[0,.68333,.15806,0],89:[0,.68333,.19383,0],90:[0,.68333,.14528,0],91:[.25,.75,.1875,0],93:[.25,.75,.10528,0],94:[0,.69444,.06646,0],95:[.31,.12056,.09208,0],97:[0,.43056,.07671,0],98:[0,.69444,.06312,0],99:[0,.43056,.05653,0],100:[0,.69444,.10333,0],101:[0,.43056,.07514,0],102:[.19444,.69444,.21194,0],103:[.19444,.43056,.08847,0],104:[0,.69444,.07671,0],105:[0,.65536,.1019,0],106:[.19444,.65536,.14467,0],107:[0,.69444,.10764,0],108:[0,.69444,.10333,0],109:[0,.43056,.07671,0],110:[0,.43056,.07671,0],111:[0,.43056,.06312,0],112:[.19444,.43056,.06312,0],113:[.19444,.43056,.08847,0],114:[0,.43056,.10764,0],115:[0,.43056,.08208,0],116:[0,.61508,.09486,0],117:[0,.43056,.07671,0],118:[0,.43056,.10764,0],119:[0,.43056,.10764,0],120:[0,.43056,.12042,0],121:[.19444,.43056,.08847,0],122:[0,.43056,.12292,0],126:[.35,.31786,.11585,0],163:[0,.69444,0,0],305:[0,.43056,0,.02778],567:[.19444,.43056,0,.08334],768:[0,.69444,0,0],769:[0,.69444,.09694,0],770:[0,.69444,.06646,0],771:[0,.66786,.11585,0],772:[0,.56167,.10333,0],774:[0,.69444,.10806,0],775:[0,.66786,.11752,0],776:[0,.66786,.10474,0],778:[0,.69444,0,0],779:[0,.69444,.1225,0],780:[0,.62847,.08295,0],915:[0,.68333,.13305,0],916:[0,.68333,0,0],920:[0,.68333,.09403,0],923:[0,.68333,0,0],926:[0,.68333,.15294,0],928:[0,.68333,.16389,0],931:[0,.68333,.12028,0],933:[0,.68333,.11111,0],934:[0,.68333,.05986,0],936:[0,.68333,.11111,0],937:[0,.68333,.10257,0],8211:[0,.43056,.09208,0],8212:[0,.43056,.09208,0],8216:[0,.69444,.12417,0],8217:[0,.69444,.12417,0],8220:[0,.69444,.1685,0],8221:[0,.69444,.06961,0],8463:[0,.68889,0,0]},"Main-Regular":{32:[0,0,0,0],33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.08333,.58333,0,0],44:[.19444,.10556,0,0],45:[0,.43056,0,0],46:[0,.10556,0,0],47:[.25,.75,0,0],48:[0,.64444,0,0],49:[0,.64444,0,0],50:[0,.64444,0,0],51:[0,.64444,0,0],52:[0,.64444,0,0],53:[0,.64444,0,0],54:[0,.64444,0,0],55:[0,.64444,0,0],56:[0,.64444,0,0],57:[0,.64444,0,0],58:[0,.43056,0,0],59:[.19444,.43056,0,0],60:[.0391,.5391,0,0],61:[-.13313,.36687,0,0],62:[.0391,.5391,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.68333,0,0],66:[0,.68333,0,0],67:[0,.68333,0,0],68:[0,.68333,0,0],69:[0,.68333,0,0],70:[0,.68333,0,0],71:[0,.68333,0,0],72:[0,.68333,0,0],73:[0,.68333,0,0],74:[0,.68333,0,0],75:[0,.68333,0,0],76:[0,.68333,0,0],77:[0,.68333,0,0],78:[0,.68333,0,0],79:[0,.68333,0,0],80:[0,.68333,0,0],81:[.19444,.68333,0,0],82:[0,.68333,0,0],83:[0,.68333,0,0],84:[0,.68333,0,0],85:[0,.68333,0,0],86:[0,.68333,.01389,0],87:[0,.68333,.01389,0],88:[0,.68333,0,0],89:[0,.68333,.025,0],90:[0,.68333,0,0],91:[.25,.75,0,0],92:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.31,.12056,.02778,0],96:[0,.69444,0,0],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,0],100:[0,.69444,0,0],101:[0,.43056,0,0],102:[0,.69444,.07778,0],103:[.19444,.43056,.01389,0],104:[0,.69444,0,0],105:[0,.66786,0,0],106:[.19444,.66786,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,0],112:[.19444,.43056,0,0],113:[.19444,.43056,0,0],114:[0,.43056,0,0],115:[0,.43056,0,0],116:[0,.61508,0,0],117:[0,.43056,0,0],118:[0,.43056,.01389,0],119:[0,.43056,.01389,0],120:[0,.43056,0,0],121:[.19444,.43056,.01389,0],122:[0,.43056,0,0],123:[.25,.75,0,0],124:[.25,.75,0,0],125:[.25,.75,0,0],126:[.35,.31786,0,0],160:[0,0,0,0],168:[0,.66786,0,0],172:[0,.43056,0,0],175:[0,.56778,0,0],176:[0,.69444,0,0],177:[.08333,.58333,0,0],180:[0,.69444,0,0],215:[.08333,.58333,0,0],247:[.08333,.58333,0,0],305:[0,.43056,0,0],567:[.19444,.43056,0,0],710:[0,.69444,0,0],711:[0,.62847,0,0],713:[0,.56778,0,0],714:[0,.69444,0,0],715:[0,.69444,0,0],728:[0,.69444,0,0],729:[0,.66786,0,0],730:[0,.69444,0,0],732:[0,.66786,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.66786,0,0],772:[0,.56778,0,0],774:[0,.69444,0,0],775:[0,.66786,0,0],776:[0,.66786,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.62847,0,0],824:[.19444,.69444,0,0],915:[0,.68333,0,0],916:[0,.68333,0,0],920:[0,.68333,0,0],923:[0,.68333,0,0],926:[0,.68333,0,0],928:[0,.68333,0,0],931:[0,.68333,0,0],933:[0,.68333,0,0],934:[0,.68333,0,0],936:[0,.68333,0,0],937:[0,.68333,0,0],8211:[0,.43056,.02778,0],8212:[0,.43056,.02778,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0],8224:[.19444,.69444,0,0],8225:[.19444,.69444,0,0],8230:[0,.12,0,0],8242:[0,.55556,0,0],8407:[0,.71444,.15382,0],8463:[0,.68889,0,0],8465:[0,.69444,0,0],8467:[0,.69444,0,.11111],8472:[.19444,.43056,0,.11111],8476:[0,.69444,0,0],8501:[0,.69444,0,0],8592:[-.13313,.36687,0,0],8593:[.19444,.69444,0,0],8594:[-.13313,.36687,0,0],8595:[.19444,.69444,0,0],8596:[-.13313,.36687,0,0],8597:[.25,.75,0,0],8598:[.19444,.69444,0,0],8599:[.19444,.69444,0,0],8600:[.19444,.69444,0,0],8601:[.19444,.69444,0,0],8614:[.011,.511,0,0],8617:[.011,.511,0,0],8618:[.011,.511,0,0],8636:[-.13313,.36687,0,0],8637:[-.13313,.36687,0,0],8640:[-.13313,.36687,0,0],8641:[-.13313,.36687,0,0],8652:[.011,.671,0,0],8656:[-.13313,.36687,0,0],8657:[.19444,.69444,0,0],8658:[-.13313,.36687,0,0],8659:[.19444,.69444,0,0],8660:[-.13313,.36687,0,0],8661:[.25,.75,0,0],8704:[0,.69444,0,0],8706:[0,.69444,.05556,.08334],8707:[0,.69444,0,0],8709:[.05556,.75,0,0],8711:[0,.68333,0,0],8712:[.0391,.5391,0,0],8715:[.0391,.5391,0,0],8722:[.08333,.58333,0,0],8723:[.08333,.58333,0,0],8725:[.25,.75,0,0],8726:[.25,.75,0,0],8727:[-.03472,.46528,0,0],8728:[-.05555,.44445,0,0],8729:[-.05555,.44445,0,0],8730:[.2,.8,0,0],8733:[0,.43056,0,0],8734:[0,.43056,0,0],8736:[0,.69224,0,0],8739:[.25,.75,0,0],8741:[.25,.75,0,0],8743:[0,.55556,0,0],8744:[0,.55556,0,0],8745:[0,.55556,0,0],8746:[0,.55556,0,0],8747:[.19444,.69444,.11111,0],8764:[-.13313,.36687,0,0],8768:[.19444,.69444,0,0],8771:[-.03625,.46375,0,0],8773:[-.022,.589,0,0],8776:[-.01688,.48312,0,0],8781:[-.03625,.46375,0,0],8784:[-.133,.67,0,0],8800:[.215,.716,0,0],8801:[-.03625,.46375,0,0],8804:[.13597,.63597,0,0],8805:[.13597,.63597,0,0],8810:[.0391,.5391,0,0],8811:[.0391,.5391,0,0],8826:[.0391,.5391,0,0],8827:[.0391,.5391,0,0],8834:[.0391,.5391,0,0],8835:[.0391,.5391,0,0],8838:[.13597,.63597,0,0],8839:[.13597,.63597,0,0],8846:[0,.55556,0,0],8849:[.13597,.63597,0,0],8850:[.13597,.63597,0,0],8851:[0,.55556,0,0],8852:[0,.55556,0,0],8853:[.08333,.58333,0,0],8854:[.08333,.58333,0,0],8855:[.08333,.58333,0,0],8856:[.08333,.58333,0,0],8857:[.08333,.58333,0,0],8866:[0,.69444,0,0],8867:[0,.69444,0,0],8868:[0,.69444,0,0],8869:[0,.69444,0,0],8872:[.249,.75,0,0],8900:[-.05555,.44445,0,0],8901:[-.05555,.44445,0,0],8902:[-.03472,.46528,0,0],8904:[.005,.505,0,0],8942:[.03,.9,0,0],8943:[-.19,.31,0,0],8945:[-.1,.82,0,0],8968:[.25,.75,0,0],8969:[.25,.75,0,0],8970:[.25,.75,0,0],8971:[.25,.75,0,0],8994:[-.14236,.35764,0,0],8995:[-.14236,.35764,0,0],9136:[.244,.744,0,0],9137:[.244,.744,0,0],9651:[.19444,.69444,0,0],9657:[-.03472,.46528,0,0],9661:[.19444,.69444,0,0],9667:[-.03472,.46528,0,0],9711:[.19444,.69444,0,0],9824:[.12963,.69444,0,0],9825:[.12963,.69444,0,0],9826:[.12963,.69444,0,0],9827:[.12963,.69444,0,0],9837:[0,.75,0,0],9838:[.19444,.69444,0,0],9839:[.19444,.69444,0,0],10216:[.25,.75,0,0],10217:[.25,.75,0,0],10222:[.244,.744,0,0],10223:[.244,.744,0,0],10229:[.011,.511,0,0],10230:[.011,.511,0,0],10231:[.011,.511,0,0],10232:[.024,.525,0,0],10233:[.024,.525,0,0],10234:[.024,.525,0,0],10236:[.011,.511,0,0],10815:[0,.68333,0,0],10927:[.13597,.63597,0,0],10928:[.13597,.63597,0,0]},"Math-BoldItalic":{47:[.19444,.69444,0,0],65:[0,.68611,0,0],66:[0,.68611,.04835,0],67:[0,.68611,.06979,0],68:[0,.68611,.03194,0],69:[0,.68611,.05451,0],70:[0,.68611,.15972,0],71:[0,.68611,0,0],72:[0,.68611,.08229,0],73:[0,.68611,.07778,0],74:[0,.68611,.10069,0],75:[0,.68611,.06979,0],76:[0,.68611,0,0],77:[0,.68611,.11424,0],78:[0,.68611,.11424,0],79:[0,.68611,.03194,0],80:[0,.68611,.15972,0],81:[.19444,.68611,0,0],82:[0,.68611,.00421,0],83:[0,.68611,.05382,0],84:[0,.68611,.15972,0],85:[0,.68611,.11424,0],86:[0,.68611,.25555,0],87:[0,.68611,.15972,0],88:[0,.68611,.07778,0],89:[0,.68611,.25555,0],90:[0,.68611,.06979,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[.19444,.69444,.11042,0],103:[.19444,.44444,.03704,0],104:[0,.69444,0,0],105:[0,.69326,0,0],106:[.19444,.69326,.0622,0],107:[0,.69444,.01852,0],108:[0,.69444,.0088,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,.03704,0],114:[0,.44444,.03194,0],115:[0,.44444,0,0],116:[0,.63492,0,0],117:[0,.44444,0,0],118:[0,.44444,.03704,0],119:[0,.44444,.02778,0],120:[0,.44444,0,0],121:[.19444,.44444,.03704,0],122:[0,.44444,.04213,0],915:[0,.68611,.15972,0],916:[0,.68611,0,0],920:[0,.68611,.03194,0],923:[0,.68611,0,0],926:[0,.68611,.07458,0],928:[0,.68611,.08229,0],931:[0,.68611,.05451,0],933:[0,.68611,.15972,0],
934:[0,.68611,0,0],936:[0,.68611,.11653,0],937:[0,.68611,.04835,0],945:[0,.44444,0,0],946:[.19444,.69444,.03403,0],947:[.19444,.44444,.06389,0],948:[0,.69444,.03819,0],949:[0,.44444,0,0],950:[.19444,.69444,.06215,0],951:[.19444,.44444,.03704,0],952:[0,.69444,.03194,0],953:[0,.44444,0,0],954:[0,.44444,0,0],955:[0,.69444,0,0],956:[.19444,.44444,0,0],957:[0,.44444,.06898,0],958:[.19444,.69444,.03021,0],959:[0,.44444,0,0],960:[0,.44444,.03704,0],961:[.19444,.44444,0,0],962:[.09722,.44444,.07917,0],963:[0,.44444,.03704,0],964:[0,.44444,.13472,0],965:[0,.44444,.03704,0],966:[.19444,.44444,0,0],967:[.19444,.44444,0,0],968:[.19444,.69444,.03704,0],969:[0,.44444,.03704,0],977:[0,.69444,0,0],981:[.19444,.69444,0,0],982:[0,.44444,.03194,0],1009:[.19444,.44444,0,0],1013:[0,.44444,0,0]},"Math-Italic":{47:[.19444,.69444,0,0],65:[0,.68333,0,.13889],66:[0,.68333,.05017,.08334],67:[0,.68333,.07153,.08334],68:[0,.68333,.02778,.05556],69:[0,.68333,.05764,.08334],70:[0,.68333,.13889,.08334],71:[0,.68333,0,.08334],72:[0,.68333,.08125,.05556],73:[0,.68333,.07847,.11111],74:[0,.68333,.09618,.16667],75:[0,.68333,.07153,.05556],76:[0,.68333,0,.02778],77:[0,.68333,.10903,.08334],78:[0,.68333,.10903,.08334],79:[0,.68333,.02778,.08334],80:[0,.68333,.13889,.08334],81:[.19444,.68333,0,.08334],82:[0,.68333,.00773,.08334],83:[0,.68333,.05764,.08334],84:[0,.68333,.13889,.08334],85:[0,.68333,.10903,.02778],86:[0,.68333,.22222,0],87:[0,.68333,.13889,0],88:[0,.68333,.07847,.08334],89:[0,.68333,.22222,0],90:[0,.68333,.07153,.08334],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,.05556],100:[0,.69444,0,.16667],101:[0,.43056,0,.05556],102:[.19444,.69444,.10764,.16667],103:[.19444,.43056,.03588,.02778],104:[0,.69444,0,0],105:[0,.65952,0,0],106:[.19444,.65952,.05724,0],107:[0,.69444,.03148,0],108:[0,.69444,.01968,.08334],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,.05556],112:[.19444,.43056,0,.08334],113:[.19444,.43056,.03588,.08334],114:[0,.43056,.02778,.05556],115:[0,.43056,0,.05556],116:[0,.61508,0,.08334],117:[0,.43056,0,.02778],118:[0,.43056,.03588,.02778],119:[0,.43056,.02691,.08334],120:[0,.43056,0,.02778],121:[.19444,.43056,.03588,.05556],122:[0,.43056,.04398,.05556],915:[0,.68333,.13889,.08334],916:[0,.68333,0,.16667],920:[0,.68333,.02778,.08334],923:[0,.68333,0,.16667],926:[0,.68333,.07569,.08334],928:[0,.68333,.08125,.05556],931:[0,.68333,.05764,.08334],933:[0,.68333,.13889,.05556],934:[0,.68333,0,.08334],936:[0,.68333,.11,.05556],937:[0,.68333,.05017,.08334],945:[0,.43056,.0037,.02778],946:[.19444,.69444,.05278,.08334],947:[.19444,.43056,.05556,0],948:[0,.69444,.03785,.05556],949:[0,.43056,0,.08334],950:[.19444,.69444,.07378,.08334],951:[.19444,.43056,.03588,.05556],952:[0,.69444,.02778,.08334],953:[0,.43056,0,.05556],954:[0,.43056,0,0],955:[0,.69444,0,0],956:[.19444,.43056,0,.02778],957:[0,.43056,.06366,.02778],958:[.19444,.69444,.04601,.11111],959:[0,.43056,0,.05556],960:[0,.43056,.03588,0],961:[.19444,.43056,0,.08334],962:[.09722,.43056,.07986,.08334],963:[0,.43056,.03588,0],964:[0,.43056,.1132,.02778],965:[0,.43056,.03588,.02778],966:[.19444,.43056,0,.08334],967:[.19444,.43056,0,.05556],968:[.19444,.69444,.03588,.11111],969:[0,.43056,.03588,0],977:[0,.69444,0,.08334],981:[.19444,.69444,0,.08334],982:[0,.43056,.02778,0],1009:[.19444,.43056,0,.08334],1013:[0,.43056,0,.05556]},"Math-Regular":{65:[0,.68333,0,.13889],66:[0,.68333,.05017,.08334],67:[0,.68333,.07153,.08334],68:[0,.68333,.02778,.05556],69:[0,.68333,.05764,.08334],70:[0,.68333,.13889,.08334],71:[0,.68333,0,.08334],72:[0,.68333,.08125,.05556],73:[0,.68333,.07847,.11111],74:[0,.68333,.09618,.16667],75:[0,.68333,.07153,.05556],76:[0,.68333,0,.02778],77:[0,.68333,.10903,.08334],78:[0,.68333,.10903,.08334],79:[0,.68333,.02778,.08334],80:[0,.68333,.13889,.08334],81:[.19444,.68333,0,.08334],82:[0,.68333,.00773,.08334],83:[0,.68333,.05764,.08334],84:[0,.68333,.13889,.08334],85:[0,.68333,.10903,.02778],86:[0,.68333,.22222,0],87:[0,.68333,.13889,0],88:[0,.68333,.07847,.08334],89:[0,.68333,.22222,0],90:[0,.68333,.07153,.08334],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,.05556],100:[0,.69444,0,.16667],101:[0,.43056,0,.05556],102:[.19444,.69444,.10764,.16667],103:[.19444,.43056,.03588,.02778],104:[0,.69444,0,0],105:[0,.65952,0,0],106:[.19444,.65952,.05724,0],107:[0,.69444,.03148,0],108:[0,.69444,.01968,.08334],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,.05556],112:[.19444,.43056,0,.08334],113:[.19444,.43056,.03588,.08334],114:[0,.43056,.02778,.05556],115:[0,.43056,0,.05556],116:[0,.61508,0,.08334],117:[0,.43056,0,.02778],118:[0,.43056,.03588,.02778],119:[0,.43056,.02691,.08334],120:[0,.43056,0,.02778],121:[.19444,.43056,.03588,.05556],122:[0,.43056,.04398,.05556],915:[0,.68333,.13889,.08334],916:[0,.68333,0,.16667],920:[0,.68333,.02778,.08334],923:[0,.68333,0,.16667],926:[0,.68333,.07569,.08334],928:[0,.68333,.08125,.05556],931:[0,.68333,.05764,.08334],933:[0,.68333,.13889,.05556],934:[0,.68333,0,.08334],936:[0,.68333,.11,.05556],937:[0,.68333,.05017,.08334],945:[0,.43056,.0037,.02778],946:[.19444,.69444,.05278,.08334],947:[.19444,.43056,.05556,0],948:[0,.69444,.03785,.05556],949:[0,.43056,0,.08334],950:[.19444,.69444,.07378,.08334],951:[.19444,.43056,.03588,.05556],952:[0,.69444,.02778,.08334],953:[0,.43056,0,.05556],954:[0,.43056,0,0],955:[0,.69444,0,0],956:[.19444,.43056,0,.02778],957:[0,.43056,.06366,.02778],958:[.19444,.69444,.04601,.11111],959:[0,.43056,0,.05556],960:[0,.43056,.03588,0],961:[.19444,.43056,0,.08334],962:[.09722,.43056,.07986,.08334],963:[0,.43056,.03588,0],964:[0,.43056,.1132,.02778],965:[0,.43056,.03588,.02778],966:[.19444,.43056,0,.08334],967:[.19444,.43056,0,.05556],968:[.19444,.69444,.03588,.11111],969:[0,.43056,.03588,0],977:[0,.69444,0,.08334],981:[.19444,.69444,0,.08334],982:[0,.43056,.02778,0],1009:[.19444,.43056,0,.08334],1013:[0,.43056,0,.05556]},"SansSerif-Regular":{33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.08333,.58333,0,0],44:[.125,.08333,0,0],45:[0,.44444,0,0],46:[0,.08333,0,0],47:[.25,.75,0,0],48:[0,.65556,0,0],49:[0,.65556,0,0],50:[0,.65556,0,0],51:[0,.65556,0,0],52:[0,.65556,0,0],53:[0,.65556,0,0],54:[0,.65556,0,0],55:[0,.65556,0,0],56:[0,.65556,0,0],57:[0,.65556,0,0],58:[0,.44444,0,0],59:[.125,.44444,0,0],61:[-.13,.37,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.69444,0,0],66:[0,.69444,0,0],67:[0,.69444,0,0],68:[0,.69444,0,0],69:[0,.69444,0,0],70:[0,.69444,0,0],71:[0,.69444,0,0],72:[0,.69444,0,0],73:[0,.69444,0,0],74:[0,.69444,0,0],75:[0,.69444,0,0],76:[0,.69444,0,0],77:[0,.69444,0,0],78:[0,.69444,0,0],79:[0,.69444,0,0],80:[0,.69444,0,0],81:[.125,.69444,0,0],82:[0,.69444,0,0],83:[0,.69444,0,0],84:[0,.69444,0,0],85:[0,.69444,0,0],86:[0,.69444,.01389,0],87:[0,.69444,.01389,0],88:[0,.69444,0,0],89:[0,.69444,.025,0],90:[0,.69444,0,0],91:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.35,.09444,.02778,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[0,.69444,.06944,0],103:[.19444,.44444,.01389,0],104:[0,.69444,0,0],105:[0,.67937,0,0],106:[.19444,.67937,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,0,0],114:[0,.44444,.01389,0],115:[0,.44444,0,0],116:[0,.57143,0,0],117:[0,.44444,0,0],118:[0,.44444,.01389,0],119:[0,.44444,.01389,0],120:[0,.44444,0,0],121:[.19444,.44444,.01389,0],122:[0,.44444,0,0],126:[.35,.32659,0,0],305:[0,.44444,0,0],567:[.19444,.44444,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.67659,0,0],772:[0,.60889,0,0],774:[0,.69444,0,0],775:[0,.67937,0,0],776:[0,.67937,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.63194,0,0],915:[0,.69444,0,0],916:[0,.69444,0,0],920:[0,.69444,0,0],923:[0,.69444,0,0],926:[0,.69444,0,0],928:[0,.69444,0,0],931:[0,.69444,0,0],933:[0,.69444,0,0],934:[0,.69444,0,0],936:[0,.69444,0,0],937:[0,.69444,0,0],8211:[0,.44444,.02778,0],8212:[0,.44444,.02778,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0]},"Script-Regular":{65:[0,.7,.22925,0],66:[0,.7,.04087,0],67:[0,.7,.1689,0],68:[0,.7,.09371,0],69:[0,.7,.18583,0],70:[0,.7,.13634,0],71:[0,.7,.17322,0],72:[0,.7,.29694,0],73:[0,.7,.19189,0],74:[.27778,.7,.19189,0],75:[0,.7,.31259,0],76:[0,.7,.19189,0],77:[0,.7,.15981,0],78:[0,.7,.3525,0],79:[0,.7,.08078,0],80:[0,.7,.08078,0],81:[0,.7,.03305,0],82:[0,.7,.06259,0],83:[0,.7,.19189,0],84:[0,.7,.29087,0],85:[0,.7,.25815,0],86:[0,.7,.27523,0],87:[0,.7,.27523,0],88:[0,.7,.26006,0],89:[0,.7,.2939,0],90:[0,.7,.24037,0]},"Size1-Regular":{40:[.35001,.85,0,0],41:[.35001,.85,0,0],47:[.35001,.85,0,0],91:[.35001,.85,0,0],92:[.35001,.85,0,0],93:[.35001,.85,0,0],123:[.35001,.85,0,0],125:[.35001,.85,0,0],710:[0,.72222,0,0],732:[0,.72222,0,0],770:[0,.72222,0,0],771:[0,.72222,0,0],8214:[-99e-5,.601,0,0],8593:[1e-5,.6,0,0],8595:[1e-5,.6,0,0],8657:[1e-5,.6,0,0],8659:[1e-5,.6,0,0],8719:[.25001,.75,0,0],8720:[.25001,.75,0,0],8721:[.25001,.75,0,0],8730:[.35001,.85,0,0],8739:[-.00599,.606,0,0],8741:[-.00599,.606,0,0],8747:[.30612,.805,.19445,0],8748:[.306,.805,.19445,0],8749:[.306,.805,.19445,0],8750:[.30612,.805,.19445,0],8896:[.25001,.75,0,0],8897:[.25001,.75,0,0],8898:[.25001,.75,0,0],8899:[.25001,.75,0,0],8968:[.35001,.85,0,0],8969:[.35001,.85,0,0],8970:[.35001,.85,0,0],8971:[.35001,.85,0,0],9168:[-99e-5,.601,0,0],10216:[.35001,.85,0,0],10217:[.35001,.85,0,0],10752:[.25001,.75,0,0],10753:[.25001,.75,0,0],10754:[.25001,.75,0,0],10756:[.25001,.75,0,0],10758:[.25001,.75,0,0]},"Size2-Regular":{40:[.65002,1.15,0,0],41:[.65002,1.15,0,0],47:[.65002,1.15,0,0],91:[.65002,1.15,0,0],92:[.65002,1.15,0,0],93:[.65002,1.15,0,0],123:[.65002,1.15,0,0],125:[.65002,1.15,0,0],710:[0,.75,0,0],732:[0,.75,0,0],770:[0,.75,0,0],771:[0,.75,0,0],8719:[.55001,1.05,0,0],8720:[.55001,1.05,0,0],8721:[.55001,1.05,0,0],8730:[.65002,1.15,0,0],8747:[.86225,1.36,.44445,0],8748:[.862,1.36,.44445,0],8749:[.862,1.36,.44445,0],8750:[.86225,1.36,.44445,0],8896:[.55001,1.05,0,0],8897:[.55001,1.05,0,0],8898:[.55001,1.05,0,0],8899:[.55001,1.05,0,0],8968:[.65002,1.15,0,0],8969:[.65002,1.15,0,0],8970:[.65002,1.15,0,0],8971:[.65002,1.15,0,0],10216:[.65002,1.15,0,0],10217:[.65002,1.15,0,0],10752:[.55001,1.05,0,0],10753:[.55001,1.05,0,0],10754:[.55001,1.05,0,0],10756:[.55001,1.05,0,0],10758:[.55001,1.05,0,0]},"Size3-Regular":{40:[.95003,1.45,0,0],41:[.95003,1.45,0,0],47:[.95003,1.45,0,0],91:[.95003,1.45,0,0],92:[.95003,1.45,0,0],93:[.95003,1.45,0,0],123:[.95003,1.45,0,0],125:[.95003,1.45,0,0],710:[0,.75,0,0],732:[0,.75,0,0],770:[0,.75,0,0],771:[0,.75,0,0],8730:[.95003,1.45,0,0],8968:[.95003,1.45,0,0],8969:[.95003,1.45,0,0],8970:[.95003,1.45,0,0],8971:[.95003,1.45,0,0],10216:[.95003,1.45,0,0],10217:[.95003,1.45,0,0]},"Size4-Regular":{40:[1.25003,1.75,0,0],41:[1.25003,1.75,0,0],47:[1.25003,1.75,0,0],91:[1.25003,1.75,0,0],92:[1.25003,1.75,0,0],93:[1.25003,1.75,0,0],123:[1.25003,1.75,0,0],125:[1.25003,1.75,0,0],710:[0,.825,0,0],732:[0,.825,0,0],770:[0,.825,0,0],771:[0,.825,0,0],8730:[1.25003,1.75,0,0],8968:[1.25003,1.75,0,0],8969:[1.25003,1.75,0,0],8970:[1.25003,1.75,0,0],8971:[1.25003,1.75,0,0],9115:[.64502,1.155,0,0],9116:[1e-5,.6,0,0],9117:[.64502,1.155,0,0],9118:[.64502,1.155,0,0],9119:[1e-5,.6,0,0],9120:[.64502,1.155,0,0],9121:[.64502,1.155,0,0],9122:[-99e-5,.601,0,0],9123:[.64502,1.155,0,0],9124:[.64502,1.155,0,0],9125:[-99e-5,.601,0,0],9126:[.64502,1.155,0,0],9127:[1e-5,.9,0,0],9128:[.65002,1.15,0,0],9129:[.90001,0,0,0],9130:[0,.3,0,0],9131:[1e-5,.9,0,0],9132:[.65002,1.15,0,0],9133:[.90001,0,0,0],9143:[.88502,.915,0,0],10216:[1.25003,1.75,0,0],10217:[1.25003,1.75,0,0],57344:[-.00499,.605,0,0],57345:[-.00499,.605,0,0],57680:[0,.12,0,0],57681:[0,.12,0,0],57682:[0,.12,0,0],57683:[0,.12,0,0]},"Typewriter-Regular":{33:[0,.61111,0,0],34:[0,.61111,0,0],35:[0,.61111,0,0],36:[.08333,.69444,0,0],37:[.08333,.69444,0,0],38:[0,.61111,0,0],39:[0,.61111,0,0],40:[.08333,.69444,0,0],41:[.08333,.69444,0,0],42:[0,.52083,0,0],43:[-.08056,.53055,0,0],44:[.13889,.125,0,0],45:[-.08056,.53055,0,0],46:[0,.125,0,0],47:[.08333,.69444,0,0],48:[0,.61111,0,0],49:[0,.61111,0,0],50:[0,.61111,0,0],51:[0,.61111,0,0],52:[0,.61111,0,0],53:[0,.61111,0,0],54:[0,.61111,0,0],55:[0,.61111,0,0],56:[0,.61111,0,0],57:[0,.61111,0,0],58:[0,.43056,0,0],59:[.13889,.43056,0,0],60:[-.05556,.55556,0,0],61:[-.19549,.41562,0,0],62:[-.05556,.55556,0,0],63:[0,.61111,0,0],64:[0,.61111,0,0],65:[0,.61111,0,0],66:[0,.61111,0,0],67:[0,.61111,0,0],68:[0,.61111,0,0],69:[0,.61111,0,0],70:[0,.61111,0,0],71:[0,.61111,0,0],72:[0,.61111,0,0],73:[0,.61111,0,0],74:[0,.61111,0,0],75:[0,.61111,0,0],76:[0,.61111,0,0],77:[0,.61111,0,0],78:[0,.61111,0,0],79:[0,.61111,0,0],80:[0,.61111,0,0],81:[.13889,.61111,0,0],82:[0,.61111,0,0],83:[0,.61111,0,0],84:[0,.61111,0,0],85:[0,.61111,0,0],86:[0,.61111,0,0],87:[0,.61111,0,0],88:[0,.61111,0,0],89:[0,.61111,0,0],90:[0,.61111,0,0],91:[.08333,.69444,0,0],92:[.08333,.69444,0,0],93:[.08333,.69444,0,0],94:[0,.61111,0,0],95:[.09514,0,0,0],96:[0,.61111,0,0],97:[0,.43056,0,0],98:[0,.61111,0,0],99:[0,.43056,0,0],100:[0,.61111,0,0],101:[0,.43056,0,0],102:[0,.61111,0,0],103:[.22222,.43056,0,0],104:[0,.61111,0,0],105:[0,.61111,0,0],106:[.22222,.61111,0,0],107:[0,.61111,0,0],108:[0,.61111,0,0],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,0],112:[.22222,.43056,0,0],113:[.22222,.43056,0,0],114:[0,.43056,0,0],115:[0,.43056,0,0],116:[0,.55358,0,0],117:[0,.43056,0,0],118:[0,.43056,0,0],119:[0,.43056,0,0],120:[0,.43056,0,0],121:[.22222,.43056,0,0],122:[0,.43056,0,0],123:[.08333,.69444,0,0],124:[.08333,.69444,0,0],125:[.08333,.69444,0,0],126:[0,.61111,0,0],127:[0,.61111,0,0],305:[0,.43056,0,0],567:[.22222,.43056,0,0],768:[0,.61111,0,0],769:[0,.61111,0,0],770:[0,.61111,0,0],771:[0,.61111,0,0],772:[0,.56555,0,0],774:[0,.61111,0,0],776:[0,.61111,0,0],778:[0,.61111,0,0],780:[0,.56597,0,0],915:[0,.61111,0,0],916:[0,.61111,0,0],920:[0,.61111,0,0],923:[0,.61111,0,0],926:[0,.61111,0,0],928:[0,.61111,0,0],931:[0,.61111,0,0],933:[0,.61111,0,0],934:[0,.61111,0,0],936:[0,.61111,0,0],937:[0,.61111,0,0],2018:[0,.61111,0,0],2019:[0,.61111,0,0],8242:[0,.61111,0,0]}}},{}],23:[function(e,t,r){"use strict";var a=e("./utils");var i=e("./ParseError");var n=e("./parseData");var o=n.ParseNode;function s(e,r,a){if(typeof e==="string"){e=[e]}if(typeof r==="number"){r={numArgs:r}}var i={numArgs:r.numArgs,argTypes:r.argTypes,greediness:r.greediness===undefined?1:r.greediness,allowedInText:!!r.allowedInText,numOptionalArgs:r.numOptionalArgs||0,infix:!!r.infix,handler:a};for(var n=0;n<e.length;++n){t.exports[e[n]]=i}}var l=function e(t){if(t.type==="ordgroup"){return t.value}else{return[t]}};s("\\sqrt",{numArgs:1,numOptionalArgs:1},function(e,t){var r=t[0];var a=t[1];return{type:"sqrt",body:a,index:r}});var u={"\\text":undefined,"\\textrm":"mathrm","\\textsf":"mathsf","\\texttt":"mathtt","\\textnormal":"mathrm","\\textbf":"mathbf","\\textit":"textit"};s(["\\text","\\textrm","\\textsf","\\texttt","\\textnormal","\\textbf","\\textit"],{numArgs:1,argTypes:["text"],greediness:2,allowedInText:true},function(e,t){var r=t[0];return{type:"text",body:l(r),style:u[e.funcName]}});s("\\xmlClass",{numArgs:2,allowedInText:true,greediness:3,argTypes:["string","original"]},function(e,t){var r=t[0];var a=t[1];var i=void 0;if(a.type==="ordgroup"){i=a.value}else{i=[a]}return{type:"xmlClass",cl:r,value:i}});s("\\textcolor",{numArgs:2,allowedInText:true,greediness:3,argTypes:["color","original"]},function(e,t){var r=t[0];var a=t[1];return{type:"color",color:r.value,value:l(a)}});s("\\color",{numArgs:1,allowedInText:true,greediness:3,argTypes:["color"]},null);s("\\overline",{numArgs:1},function(e,t){var r=t[0];return{type:"overline",body:r}});s("\\underline",{numArgs:1},function(e,t){var r=t[0];return{type:"underline",body:r}});s("\\rule",{numArgs:2,numOptionalArgs:1,argTypes:["size","size","size"]},function(e,t){var r=t[0];var a=t[1];var i=t[2];return{type:"rule",shift:r&&r.value,width:a.value,height:i.value}});s("\\cursor",{numArgs:1,numOptionalArgs:1,argTypes:["size","size"]},function(e,t){var r=t[0];var a=t[1];return{type:"cursor",shift:r&&r.value,height:a.value}});s(["\\kern","\\mkern"],{numArgs:1,argTypes:["size"]},function(e,t){return{type:"kern",dimension:t[0].value}});s("\\KaTeX",{numArgs:0},function(e){return{type:"katex"}});s("\\phantom",{numArgs:1},function(e,t){var r=t[0];return{type:"phantom",value:l(r)}});s(["\\mathord","\\mathbin","\\mathrel","\\mathopen","\\mathclose","\\mathpunct","\\mathinner"],{numArgs:1},function(e,t){var r=t[0];return{type:"mclass",mclass:"m"+e.funcName.substr(5),value:l(r)}});s("\\stackrel",{numArgs:2},function(e,t){var r=t[0];var a=t[1];var i=new o("op",{type:"op",limits:true,alwaysHandleSupSub:true,symbol:false,value:l(a)},a.mode);var n=new o("supsub",{base:i,sup:r,sub:null},r.mode);return{type:"mclass",mclass:"mrel",value:[n]}});s("\\bmod",{numArgs:0},function(e,t){return{type:"mod",modType:"bmod",value:null}});s(["\\pod","\\pmod","\\mod"],{numArgs:1},function(e,t){var r=t[0];return{type:"mod",modType:e.funcName.substr(1),value:l(r)}});var h={"\\bigl":{mclass:"mopen",size:1},"\\Bigl":{mclass:"mopen",size:2},"\\biggl":{mclass:"mopen",size:3},"\\Biggl":{mclass:"mopen",size:4},"\\bigr":{mclass:"mclose",size:1},"\\Bigr":{mclass:"mclose",size:2},"\\biggr":{mclass:"mclose",size:3},"\\Biggr":{mclass:"mclose",size:4},"\\bigm":{mclass:"mrel",size:1},"\\Bigm":{mclass:"mrel",size:2},"\\biggm":{mclass:"mrel",size:3},"\\Biggm":{mclass:"mrel",size:4},"\\big":{mclass:"mord",size:1},"\\Big":{mclass:"mord",size:2},"\\bigg":{mclass:"mord",size:3},"\\Bigg":{mclass:"mord",size:4}};var p=["(",")","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\\lceil","\\rceil","<",">","\\langle","\\rangle","\\lt","\\gt","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","\\lmoustache","\\rmoustache","/","\\backslash","|","\\vert","\\|","\\Vert","\\uparrow","\\Uparrow","\\downarrow","\\Downarrow","\\updownarrow","\\Updownarrow","."];var c={"\\Bbb":"\\mathbb","\\bold":"\\mathbf","\\frak":"\\mathfrak"};s(["\\blue","\\orange","\\pink","\\red","\\green","\\gray","\\purple","\\blueA","\\blueB","\\blueC","\\blueD","\\blueE","\\tealA","\\tealB","\\tealC","\\tealD","\\tealE","\\greenA","\\greenB","\\greenC","\\greenD","\\greenE","\\goldA","\\goldB","\\goldC","\\goldD","\\goldE","\\redA","\\redB","\\redC","\\redD","\\redE","\\maroonA","\\maroonB","\\maroonC","\\maroonD","\\maroonE","\\purpleA","\\purpleB","\\purpleC","\\purpleD","\\purpleE","\\mintA","\\mintB","\\mintC","\\grayA","\\grayB","\\grayC","\\grayD","\\grayE","\\grayF","\\grayG","\\grayH","\\grayI","\\kaBlue","\\kaGreen"],{numArgs:1,allowedInText:true,greediness:3},function(e,t){var r=t[0];return{type:"color",color:"katex-"+e.funcName.slice(1),value:l(r)}});s(["\\arcsin","\\arccos","\\arctan","\\arctg","\\arcctg","\\arg","\\ch","\\cos","\\cosec","\\cosh","\\cot","\\cotg","\\coth","\\csc","\\ctg","\\cth","\\deg","\\dim","\\exp","\\hom","\\ker","\\lg","\\ln","\\log","\\sec","\\sin","\\sinh","\\sh","\\tan","\\tanh","\\tg","\\th"],{numArgs:0},function(e){return{type:"op",limits:false,symbol:false,body:e.funcName}});s(["\\det","\\gcd","\\inf","\\lim","\\liminf","\\limsup","\\max","\\min","\\Pr","\\sup"],{numArgs:0},function(e){return{type:"op",limits:true,symbol:false,body:e.funcName}});s(["\\int","\\iint","\\iiint","\\oint"],{numArgs:0},function(e){return{type:"op",limits:false,symbol:true,body:e.funcName}});s(["\\coprod","\\bigvee","\\bigwedge","\\biguplus","\\bigcap","\\bigcup","\\intop","\\prod","\\sum","\\bigotimes","\\bigoplus","\\bigodot","\\bigsqcup","\\smallint"],{numArgs:0},function(e){return{type:"op",limits:true,symbol:true,body:e.funcName}});s("\\mathop",{numArgs:1},function(e,t){var r=t[0];return{type:"op",limits:false,symbol:false,value:l(r)}});s(["\\dfrac","\\frac","\\tfrac","\\dbinom","\\binom","\\tbinom","\\\\atopfrac"],{numArgs:2,greediness:2},function(e,t){var r=t[0];var a=t[1];var i=void 0;var n=null;var o=null;var s="auto";switch(e.funcName){case"\\dfrac":case"\\frac":case"\\tfrac":i=true;break;case"\\\\atopfrac":i=false;break;case"\\dbinom":case"\\binom":case"\\tbinom":i=false;n="(";o=")";break;default:throw new Error("Unrecognized genfrac command")}switch(e.funcName){case"\\dfrac":case"\\dbinom":s="display";break;case"\\tfrac":case"\\tbinom":s="text";break}return{type:"genfrac",numer:r,denom:a,hasBarLine:i,leftDelim:n,rightDelim:o,size:s}});s(["\\llap","\\rlap"],{numArgs:1,allowedInText:true},function(e,t){var r=t[0];return{type:e.funcName.slice(1),body:r}});var v=function e(t,r){if(a.contains(p,t.value)){return t}else{throw new i("Invalid delimiter: '"+t.value+"' after '"+r.funcName+"'",t)}};s(["\\bigl","\\Bigl","\\biggl","\\Biggl","\\bigr","\\Bigr","\\biggr","\\Biggr","\\bigm","\\Bigm","\\biggm","\\Biggm","\\big","\\Big","\\bigg","\\Bigg"],{numArgs:1},function(e,t){var r=v(t[0],e);return{type:"delimsizing",size:h[e.funcName].size,mclass:h[e.funcName].mclass,value:r.value}});s(["\\left","\\right"],{numArgs:1},function(e,t){var r=v(t[0],e);return{type:"leftright",value:r.value}});s("\\middle",{numArgs:1},function(e,t){var r=v(t[0],e);if(!e.parser.leftrightDepth){throw new i("\\middle without preceding \\left",r)}return{type:"middle",value:r.value}});s(["\\tiny","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"],0,null);s(["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"],0,null);s(["\\rm","\\sf","\\tt","\\bf","\\it"],0,null);s(["\\mathrm","\\mathit","\\mathbf","\\mathbb","\\mathcal","\\mathfrak","\\mathscr","\\mathsf","\\mathtt","\\Bbb","\\bold","\\frak"],{numArgs:1,greediness:2},function(e,t){var r=t[0];var a=e.funcName;if(a in c){a=c[a]}return{type:"font",font:a.slice(1),body:r}});s(["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot","\\widehat","\\widetilde","\\overrightarrow","\\overleftarrow","\\Overrightarrow","\\overleftrightarrow","\\overgroup","\\overlinesegment","\\overleftharpoon","\\overrightharpoon"],{numArgs:1},function(e,t){var r=t[0];var i=!a.contains(["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot"],e.funcName);var n=!i||a.contains(["\\widehat","\\widetilde"],e.funcName);return{type:"accent",label:e.funcName,isStretchy:i,isShifty:n,value:l(r),base:r}});s(["\\overbrace","\\underbrace"],{numArgs:1},function(e,t){var r=t[0];return{type:"horizBrace",label:e.funcName,isOver:/^\\over/.test(e.funcName),base:r}});s(["\\underleftarrow","\\underrightarrow","\\underleftrightarrow","\\undergroup","\\underlinesegment","\\undertilde"],{numArgs:1},function(e,t){var r=t[0];return{type:"accentUnder",label:e.funcName,value:l(r),body:r}});s(["\\xleftarrow","\\xrightarrow","\\xLeftarrow","\\xRightarrow","\\xleftrightarrow","\\xLeftrightarrow","\\xhookleftarrow","\\xhookrightarrow","\\xmapsto","\\xrightharpoondown","\\xrightharpoonup","\\xleftharpoondown","\\xleftharpoonup","\\xrightleftharpoons","\\xleftrightharpoons","\\xLongequal","\\xtwoheadrightarrow","\\xtwoheadleftarrow","\\xLongequal","\\xtofrom"],{numArgs:1,numOptionalArgs:1},function(e,t){var r=t[0];var a=t[1];return{type:"xArrow",label:e.funcName,body:a,below:r}});s(["\\cancel","\\bcancel","\\xcancel","\\sout","\\fbox"],{numArgs:1},function(e,t){var r=t[0];return{type:"enclose",label:e.funcName,body:r}});s(["\\over","\\choose","\\atop"],{numArgs:0,infix:true},function(e){var t=void 0;switch(e.funcName){case"\\over":t="\\frac";break;case"\\choose":t="\\binom";break;case"\\atop":t="\\\\atopfrac";break;default:throw new Error("Unrecognized infix genfrac command")}return{type:"infix",replaceWith:t,token:e.token}});s(["\\\\","\\cr"],{numArgs:0,numOptionalArgs:1,argTypes:["size"]},function(e,t){var r=t[0];return{type:"cr",size:r}});s(["\\begin","\\end"],{numArgs:1,argTypes:["text"]},function(e,t){var r=t[0];if(r.type!=="ordgroup"){throw new i("Invalid environment name",r)}var a="";for(var n=0;n<r.value.length;++n){a+=r.value[n].value}return{type:"environment",name:a,nameGroup:r}})},{"./ParseError":10,"./parseData":26,"./utils":31}],24:[function(e,t,r){"use strict";function a(e,r){t.exports[e]=r}a("\\bgroup","{");a("\\egroup","}");a("\\begingroup","{");a("\\endgroup","}");a("\\overset","\\mathop{#2}\\limits^{#1}");a("\\underset","\\mathop{#2}\\limits_{#1}");a("\\boxed","\\fbox{\\displaystyle{#1}}");a("\\iff","\\;\\Longleftrightarrow\\;");a("\\implies","\\;\\Longrightarrow\\;");a("\\impliedby","\\;\\Longleftarrow\\;");a("\\ordinarycolon",":");a("\\vcentcolon","\\mathrel{\\mathop\\ordinarycolon}");a("\\dblcolon","\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon");a("\\coloneqq","\\vcentcolon\\mathrel{\\mkern-1.2mu}=");a("\\Coloneqq","\\dblcolon\\mathrel{\\mkern-1.2mu}=");a("\\coloneq","\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}");a("\\Coloneq","\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}");a("\\eqqcolon","=\\mathrel{\\mkern-1.2mu}\\vcentcolon");a("\\Eqqcolon","=\\mathrel{\\mkern-1.2mu}\\dblcolon");a("\\eqcolon","\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon");a("\\Eqcolon","\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon");a("\\colonapprox","\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx");a("\\Colonapprox","\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx");a("\\colonsim","\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim");a("\\Colonsim","\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim");a("\\ratio","\\vcentcolon");a("\\coloncolon","\\dblcolon");a("\\colonequals","\\coloneqq");a("\\coloncolonequals","\\Coloneqq");a("\\equalscolon","\\eqqcolon");a("\\equalscoloncolon","\\Eqqcolon");a("\\colonminus","\\coloneq");a("\\coloncolonminus","\\Coloneq");a("\\minuscolon","\\eqcolon");a("\\minuscoloncolon","\\Eqcolon");a("\\coloncolonapprox","\\Colonapprox");a("\\coloncolonsim","\\Colonsim");a("\\simcolon","\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon");a("\\simcoloncolon","\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon");a("\\approxcolon","\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon");a("\\approxcoloncolon","\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon")},{}],25:[function(e,t,r){"use strict";var a=e("./utils");function i(e,t){this.type=e;this.attributes={};this.children=t||[]}i.prototype.setAttribute=function(e,t){this.attributes[e]=t};i.prototype.toNode=function(){var e=document.createElementNS("http://www.w3.org/1998/Math/MathML",this.type);for(var t in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,t)){e.setAttribute(t,this.attributes[t])}}for(var r=0;r<this.children.length;r++){e.appendChild(this.children[r].toNode())}return e};i.prototype.toMarkup=function(){var e="<"+this.type;for(var t in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,t)){e+=" "+t+'="';e+=a.escape(this.attributes[t]);e+='"'}}e+=">";for(var r=0;r<this.children.length;r++){e+=this.children[r].toMarkup()}e+="</"+this.type+">";return e};function n(e){this.text=e}n.prototype.toNode=function(){return document.createTextNode(this.text)};n.prototype.toMarkup=function(){return a.escape(this.text)};t.exports={MathNode:i,TextNode:n}},{"./utils":31}],26:[function(e,t,r){"use strict";function a(e,t,r,a,i){this.type=e;this.value=t;this.mode=r;if(a&&(!i||i.lexer===a.lexer)){this.lexer=a.lexer;this.start=a.start;this.end=(i||a).end}}t.exports={ParseNode:a}},{}],27:[function(e,t,r){"use strict";var a=e("./Parser");var i=function e(t,r){if(!(typeof t==="string"||t instanceof String)){throw new TypeError("KaTeX can only parse string typed expression")}var i=new a(t,r);return i.parse()};t.exports=i},{"./Parser":11}],28:[function(e,t,r){"use strict";var a=e("./buildCommon");var i=e("./mathMLTree");var n=e("./utils");var o={widehat:"^",widetilde:"~",undertilde:"~",overleftarrow:"\u2190",underleftarrow:"\u2190",xleftarrow:"\u2190",overrightarrow:"\u2192",underrightarrow:"\u2192",xrightarrow:"\u2192",underbrace:"\u23b5",overbrace:"\u23de",overleftrightarrow:"\u2194",underleftrightarrow:"\u2194",xleftrightarrow:"\u2194",Overrightarrow:"\u21d2",xRightarrow:"\u21d2",overleftharpoon:"\u21bc",xleftharpoonup:"\u21bc",overrightharpoon:"\u21c0",xrightharpoonup:"\u21c0",xLeftarrow:"\u21d0",xLeftrightarrow:"\u21d4",xhookleftarrow:"\u21a9",xhookrightarrow:"\u21aa",xmapsto:"\u21a6",xrightharpoondown:"\u21c1",xleftharpoondown:"\u21bd",xrightleftharpoons:"\u21cc",xleftrightharpoons:"\u21cb",xtwoheadleftarrow:"\u219e",xtwoheadrightarrow:"\u21a0",xLongequal:"=",xtofrom:"\u21c4"};var s=function e(t){var r=new i.MathNode("mo",[new i.TextNode(o[t.substr(1)])]);r.setAttribute("stretchy","true");return r};var l={overleftarrow:[.522,0,"leftarrow"],underleftarrow:[.522,0,"leftarrow"],xleftarrow:[.261,.261,"leftarrow"],overrightarrow:[.522,0,"rightarrow"],underrightarrow:[.522,0,"rightarrow"],xrightarrow:[.261,.261,"rightarrow"],overbrace:[.548,0,"overbrace"],underbrace:[.548,0,"underbrace"],overleftrightarrow:[.522,0,"leftrightarrow"],underleftrightarrow:[.522,0,"leftrightarrow"],xleftrightarrow:[.261,.261,"leftrightarrow"],Overrightarrow:[.56,0,"doublerightarrow"],xLeftarrow:[.28,.28,"doubleleftarrow"],xRightarrow:[.28,.28,"doublerightarrow"],xLeftrightarrow:[.28,.28,"doubleleftrightarrow"],overleftharpoon:[.522,0,"leftharpoon"],overrightharpoon:[.522,0,"rightharpoon"],xleftharpoonup:[.261,.261,"leftharpoon"],xrightharpoonup:[.261,.261,"rightharpoon"],xhookleftarrow:[.261,.261,"hookleftarrow"],xhookrightarrow:[.261,.261,"hookrightarrow"],overlinesegment:[.414,0,"linesegment"],underlinesegment:[.414,0,"linesegment"],xmapsto:[.261,.261,"mapsto"],xrightharpoondown:[.261,.261,"rightharpoondown"],xleftharpoondown:[.261,.261,"leftharpoondown"],xrightleftharpoons:[.358,.358,"rightleftharpoons"],xleftrightharpoons:[.358,.358,"leftrightharpoons"],overgroup:[.342,0,"overgroup"],undergroup:[.342,0,"undergroup"],xtwoheadleftarrow:[.167,.167,"twoheadleftarrow"],xtwoheadrightarrow:[.167,.167,"twoheadrightarrow"],xLongequal:[.167,.167,"longequal"],xtofrom:[.264,.264,"tofrom"]};var u=function e(t,r){var i=t.value.label.substr(1);var o=0;var s=0;var u=["stretchy"];var h="";if(n.contains(["widehat","widetilde","undertilde"],i)){var p=t.value.value.length;if(p>5){o=.312;h=(i==="widehat"?"widehat":"tilde")+"4"}else{var c=[1,1,2,2,3,3][p];if(i==="widehat"){o=[0,.24,.3,.3,.36,.36][p];h="widehat"+c}else{o=[0,.26,.3,.3,.34,.34][p];h="tilde"+c}}}else{var v=l[i];o=v[0];s=v[1];h=v[2];if(i.substr(0,1)==="x"){u.push("x-arrow")}}var f=void 0;if(r.color){u.push(h);u.push("mask");u.push(h+"-mask");f=a.makeSpan(u,[],r);f.style.backgroundColor=r.color}else{u.push(h);f=a.makeSpan(u,[],r)}f.height=o;f.depth=s;f.maxFontSize=1;return f};var h=function e(t,r,i,n,o){var s=a.makeSpan(["stretchy",i],[],o);if(o.color){if(i==="fbox"){s.style.borderColor=o.color}else{s.classes[2]=i+"-mask";s.style.backgroundColor=o.color}}s.height=t.height+t.depth+2*n;s.style.height=s.height+"em";if(/cancel/.test(i)&&r){s.maxFontSize=1.2}else{s.maxFontSize=1}return s};t.exports={encloseSpan:h,mathMLnode:s,svgSpan:u}},{"./buildCommon":14,"./mathMLTree":25,"./utils":31}],29:[function(e,t,r){"use strict";t.exports={math:{},text:{}};function a(e,r,a,i,n){t.exports[e][n]={font:r,group:a,replace:i}}var i="math";var n="text";var o="main";var s="ams";var l="accent";var u="bin";var h="close";var p="inner";var c="mathord";var v="op";var f="open";var m="punct";var d="rel";var g="spacing";var y="textord";a(i,o,d,"\u2261","\\equiv");a(i,o,d,"\u227a","\\prec");a(i,o,d,"\u227b","\\succ");a(i,o,d,"\u223c","\\sim");a(i,o,d,"\u22a5","\\perp");a(i,o,d,"\u2aaf","\\preceq");a(i,o,d,"\u2ab0","\\succeq");a(i,o,d,"\u2243","\\simeq");a(i,o,d,"\u2223","\\mid");a(i,o,d,"\u226a","\\ll");a(i,o,d,"\u226b","\\gg");a(i,o,d,"\u224d","\\asymp");a(i,o,d,"\u2225","\\parallel");a(i,o,d,"\u22c8","\\bowtie");a(i,o,d,"\u2323","\\smile");a(i,o,d,"\u2291","\\sqsubseteq");a(i,o,d,"\u2292","\\sqsupseteq");a(i,o,d,"\u2250","\\doteq");a(i,o,d,"\u2322","\\frown");a(i,o,d,"\u220b","\\ni");a(i,o,d,"\u221d","\\propto");a(i,o,d,"\u22a2","\\vdash");a(i,o,d,"\u22a3","\\dashv");a(i,o,d,"\u220b","\\owns");
a(i,o,m,".","\\ldotp");a(i,o,m,"\u22c5","\\cdotp");a(i,o,y,"#","\\#");a(n,o,y,"#","\\#");a(i,o,y,"&","\\&");a(n,o,y,"&","\\&");a(i,o,y,"\u2135","\\aleph");a(i,o,y,"\u2200","\\forall");a(i,o,y,"\u210f","\\hbar");a(i,o,y,"\u2203","\\exists");a(i,o,y,"\u2207","\\nabla");a(i,o,y,"\u266d","\\flat");a(i,o,y,"\u2113","\\ell");a(i,o,y,"\u266e","\\natural");a(i,o,y,"\u2663","\\clubsuit");a(i,o,y,"\u2118","\\wp");a(i,o,y,"\u266f","\\sharp");a(i,o,y,"\u2662","\\diamondsuit");a(i,o,y,"\u211c","\\Re");a(i,o,y,"\u2661","\\heartsuit");a(i,o,y,"\u2111","\\Im");a(i,o,y,"\u2660","\\spadesuit");a(i,o,y,"\u2020","\\dag");a(n,o,y,"\u2020","\\dag");a(n,o,y,"\u2020","\\textdagger");a(i,o,y,"\u2021","\\ddag");a(n,o,y,"\u2021","\\ddag");a(n,o,y,"\u2020","\\textdaggerdbl");a(i,o,h,"\u23b1","\\rmoustache");a(i,o,f,"\u23b0","\\lmoustache");a(i,o,h,"\u27ef","\\rgroup");a(i,o,f,"\u27ee","\\lgroup");a(i,o,u,"\u2213","\\mp");a(i,o,u,"\u2296","\\ominus");a(i,o,u,"\u228e","\\uplus");a(i,o,u,"\u2293","\\sqcap");a(i,o,u,"\u2217","\\ast");a(i,o,u,"\u2294","\\sqcup");a(i,o,u,"\u25ef","\\bigcirc");a(i,o,u,"\u2219","\\bullet");a(i,o,u,"\u2021","\\ddagger");a(i,o,u,"\u2240","\\wr");a(i,o,u,"\u2a3f","\\amalg");a(i,o,d,"\u27f5","\\longleftarrow");a(i,o,d,"\u21d0","\\Leftarrow");a(i,o,d,"\u27f8","\\Longleftarrow");a(i,o,d,"\u27f6","\\longrightarrow");a(i,o,d,"\u21d2","\\Rightarrow");a(i,o,d,"\u27f9","\\Longrightarrow");a(i,o,d,"\u2194","\\leftrightarrow");a(i,o,d,"\u27f7","\\longleftrightarrow");a(i,o,d,"\u21d4","\\Leftrightarrow");a(i,o,d,"\u27fa","\\Longleftrightarrow");a(i,o,d,"\u21a6","\\mapsto");a(i,o,d,"\u27fc","\\longmapsto");a(i,o,d,"\u2197","\\nearrow");a(i,o,d,"\u21a9","\\hookleftarrow");a(i,o,d,"\u21aa","\\hookrightarrow");a(i,o,d,"\u2198","\\searrow");a(i,o,d,"\u21bc","\\leftharpoonup");a(i,o,d,"\u21c0","\\rightharpoonup");a(i,o,d,"\u2199","\\swarrow");a(i,o,d,"\u21bd","\\leftharpoondown");a(i,o,d,"\u21c1","\\rightharpoondown");a(i,o,d,"\u2196","\\nwarrow");a(i,o,d,"\u21cc","\\rightleftharpoons");a(i,s,d,"\u226e","\\nless");a(i,s,d,"\ue010","\\nleqslant");a(i,s,d,"\ue011","\\nleqq");a(i,s,d,"\u2a87","\\lneq");a(i,s,d,"\u2268","\\lneqq");a(i,s,d,"\ue00c","\\lvertneqq");a(i,s,d,"\u22e6","\\lnsim");a(i,s,d,"\u2a89","\\lnapprox");a(i,s,d,"\u2280","\\nprec");a(i,s,d,"\u22e0","\\npreceq");a(i,s,d,"\u22e8","\\precnsim");a(i,s,d,"\u2ab9","\\precnapprox");a(i,s,d,"\u2241","\\nsim");a(i,s,d,"\ue006","\\nshortmid");a(i,s,d,"\u2224","\\nmid");a(i,s,d,"\u22ac","\\nvdash");a(i,s,d,"\u22ad","\\nvDash");a(i,s,d,"\u22ea","\\ntriangleleft");a(i,s,d,"\u22ec","\\ntrianglelefteq");a(i,s,d,"\u228a","\\subsetneq");a(i,s,d,"\ue01a","\\varsubsetneq");a(i,s,d,"\u2acb","\\subsetneqq");a(i,s,d,"\ue017","\\varsubsetneqq");a(i,s,d,"\u226f","\\ngtr");a(i,s,d,"\ue00f","\\ngeqslant");a(i,s,d,"\ue00e","\\ngeqq");a(i,s,d,"\u2a88","\\gneq");a(i,s,d,"\u2269","\\gneqq");a(i,s,d,"\ue00d","\\gvertneqq");a(i,s,d,"\u22e7","\\gnsim");a(i,s,d,"\u2a8a","\\gnapprox");a(i,s,d,"\u2281","\\nsucc");a(i,s,d,"\u22e1","\\nsucceq");a(i,s,d,"\u22e9","\\succnsim");a(i,s,d,"\u2aba","\\succnapprox");a(i,s,d,"\u2246","\\ncong");a(i,s,d,"\ue007","\\nshortparallel");a(i,s,d,"\u2226","\\nparallel");a(i,s,d,"\u22af","\\nVDash");a(i,s,d,"\u22eb","\\ntriangleright");a(i,s,d,"\u22ed","\\ntrianglerighteq");a(i,s,d,"\ue018","\\nsupseteqq");a(i,s,d,"\u228b","\\supsetneq");a(i,s,d,"\ue01b","\\varsupsetneq");a(i,s,d,"\u2acc","\\supsetneqq");a(i,s,d,"\ue019","\\varsupsetneqq");a(i,s,d,"\u22ae","\\nVdash");a(i,s,d,"\u2ab5","\\precneqq");a(i,s,d,"\u2ab6","\\succneqq");a(i,s,d,"\ue016","\\nsubseteqq");a(i,s,u,"\u22b4","\\unlhd");a(i,s,u,"\u22b5","\\unrhd");a(i,s,d,"\u219a","\\nleftarrow");a(i,s,d,"\u219b","\\nrightarrow");a(i,s,d,"\u21cd","\\nLeftarrow");a(i,s,d,"\u21cf","\\nRightarrow");a(i,s,d,"\u21ae","\\nleftrightarrow");a(i,s,d,"\u21ce","\\nLeftrightarrow");a(i,s,d,"\u25b3","\\vartriangle");a(i,s,y,"\u210f","\\hslash");a(i,s,y,"\u25bd","\\triangledown");a(i,s,y,"\u25ca","\\lozenge");a(i,s,y,"\u24c8","\\circledS");a(i,s,y,"\xae","\\circledR");a(n,s,y,"\xae","\\circledR");a(i,s,y,"\u2221","\\measuredangle");a(i,s,y,"\u2204","\\nexists");a(i,s,y,"\u2127","\\mho");a(i,s,y,"\u2132","\\Finv");a(i,s,y,"\u2141","\\Game");a(i,s,y,"k","\\Bbbk");a(i,s,y,"\u2035","\\backprime");a(i,s,y,"\u25b2","\\blacktriangle");a(i,s,y,"\u25bc","\\blacktriangledown");a(i,s,y,"\u25a0","\\blacksquare");a(i,s,y,"\u29eb","\\blacklozenge");a(i,s,y,"\u2605","\\bigstar");a(i,s,y,"\u2222","\\sphericalangle");a(i,s,y,"\u2201","\\complement");a(i,s,y,"\xf0","\\eth");a(i,s,y,"\u2571","\\diagup");a(i,s,y,"\u2572","\\diagdown");a(i,s,y,"\u25a1","\\square");a(i,s,y,"\u25a1","\\Box");a(i,s,y,"\u25ca","\\Diamond");a(i,s,y,"\xa5","\\yen");a(i,s,y,"\u2713","\\checkmark");a(n,s,y,"\u2713","\\checkmark");a(i,s,y,"\u2136","\\beth");a(i,s,y,"\u2138","\\daleth");a(i,s,y,"\u2137","\\gimel");a(i,s,y,"\u03dd","\\digamma");a(i,s,y,"\u03f0","\\varkappa");a(i,s,f,"\u250c","\\ulcorner");a(i,s,h,"\u2510","\\urcorner");a(i,s,f,"\u2514","\\llcorner");a(i,s,h,"\u2518","\\lrcorner");a(i,s,d,"\u2266","\\leqq");a(i,s,d,"\u2a7d","\\leqslant");a(i,s,d,"\u2a95","\\eqslantless");a(i,s,d,"\u2272","\\lesssim");a(i,s,d,"\u2a85","\\lessapprox");a(i,s,d,"\u224a","\\approxeq");a(i,s,u,"\u22d6","\\lessdot");a(i,s,d,"\u22d8","\\lll");a(i,s,d,"\u2276","\\lessgtr");a(i,s,d,"\u22da","\\lesseqgtr");a(i,s,d,"\u2a8b","\\lesseqqgtr");a(i,s,d,"\u2251","\\doteqdot");a(i,s,d,"\u2253","\\risingdotseq");a(i,s,d,"\u2252","\\fallingdotseq");a(i,s,d,"\u223d","\\backsim");a(i,s,d,"\u22cd","\\backsimeq");a(i,s,d,"\u2ac5","\\subseteqq");a(i,s,d,"\u22d0","\\Subset");a(i,s,d,"\u228f","\\sqsubset");a(i,s,d,"\u227c","\\preccurlyeq");a(i,s,d,"\u22de","\\curlyeqprec");a(i,s,d,"\u227e","\\precsim");a(i,s,d,"\u2ab7","\\precapprox");a(i,s,d,"\u22b2","\\vartriangleleft");a(i,s,d,"\u22b4","\\trianglelefteq");a(i,s,d,"\u22a8","\\vDash");a(i,s,d,"\u22aa","\\Vvdash");a(i,s,d,"\u2323","\\smallsmile");a(i,s,d,"\u2322","\\smallfrown");a(i,s,d,"\u224f","\\bumpeq");a(i,s,d,"\u224e","\\Bumpeq");a(i,s,d,"\u2267","\\geqq");a(i,s,d,"\u2a7e","\\geqslant");a(i,s,d,"\u2a96","\\eqslantgtr");a(i,s,d,"\u2273","\\gtrsim");a(i,s,d,"\u2a86","\\gtrapprox");a(i,s,u,"\u22d7","\\gtrdot");a(i,s,d,"\u22d9","\\ggg");a(i,s,d,"\u2277","\\gtrless");a(i,s,d,"\u22db","\\gtreqless");a(i,s,d,"\u2a8c","\\gtreqqless");a(i,s,d,"\u2256","\\eqcirc");a(i,s,d,"\u2257","\\circeq");a(i,s,d,"\u225c","\\triangleq");a(i,s,d,"\u223c","\\thicksim");a(i,s,d,"\u2248","\\thickapprox");a(i,s,d,"\u2ac6","\\supseteqq");a(i,s,d,"\u22d1","\\Supset");a(i,s,d,"\u2290","\\sqsupset");a(i,s,d,"\u227d","\\succcurlyeq");a(i,s,d,"\u22df","\\curlyeqsucc");a(i,s,d,"\u227f","\\succsim");a(i,s,d,"\u2ab8","\\succapprox");a(i,s,d,"\u22b3","\\vartriangleright");a(i,s,d,"\u22b5","\\trianglerighteq");a(i,s,d,"\u22a9","\\Vdash");a(i,s,d,"\u2223","\\shortmid");a(i,s,d,"\u2225","\\shortparallel");a(i,s,d,"\u226c","\\between");a(i,s,d,"\u22d4","\\pitchfork");a(i,s,d,"\u221d","\\varpropto");a(i,s,d,"\u25c0","\\blacktriangleleft");a(i,s,d,"\u2234","\\therefore");a(i,s,d,"\u220d","\\backepsilon");a(i,s,d,"\u25b6","\\blacktriangleright");a(i,s,d,"\u2235","\\because");a(i,s,d,"\u22d8","\\llless");a(i,s,d,"\u22d9","\\gggtr");a(i,s,u,"\u22b2","\\lhd");a(i,s,u,"\u22b3","\\rhd");a(i,s,d,"\u2242","\\eqsim");a(i,o,d,"\u22c8","\\Join");a(i,s,d,"\u2251","\\Doteq");a(i,s,u,"\u2214","\\dotplus");a(i,s,u,"\u2216","\\smallsetminus");a(i,s,u,"\u22d2","\\Cap");a(i,s,u,"\u22d3","\\Cup");a(i,s,u,"\u2a5e","\\doublebarwedge");a(i,s,u,"\u229f","\\boxminus");a(i,s,u,"\u229e","\\boxplus");a(i,s,u,"\u22c7","\\divideontimes");a(i,s,u,"\u22c9","\\ltimes");a(i,s,u,"\u22ca","\\rtimes");a(i,s,u,"\u22cb","\\leftthreetimes");a(i,s,u,"\u22cc","\\rightthreetimes");a(i,s,u,"\u22cf","\\curlywedge");a(i,s,u,"\u22ce","\\curlyvee");a(i,s,u,"\u229d","\\circleddash");a(i,s,u,"\u229b","\\circledast");a(i,s,u,"\u22c5","\\centerdot");a(i,s,u,"\u22ba","\\intercal");a(i,s,u,"\u22d2","\\doublecap");a(i,s,u,"\u22d3","\\doublecup");a(i,s,u,"\u22a0","\\boxtimes");a(i,s,d,"\u21e2","\\dashrightarrow");a(i,s,d,"\u21e0","\\dashleftarrow");a(i,s,d,"\u21c7","\\leftleftarrows");a(i,s,d,"\u21c6","\\leftrightarrows");a(i,s,d,"\u21da","\\Lleftarrow");a(i,s,d,"\u219e","\\twoheadleftarrow");a(i,s,d,"\u21a2","\\leftarrowtail");a(i,s,d,"\u21ab","\\looparrowleft");a(i,s,d,"\u21cb","\\leftrightharpoons");a(i,s,d,"\u21b6","\\curvearrowleft");a(i,s,d,"\u21ba","\\circlearrowleft");a(i,s,d,"\u21b0","\\Lsh");a(i,s,d,"\u21c8","\\upuparrows");a(i,s,d,"\u21bf","\\upharpoonleft");a(i,s,d,"\u21c3","\\downharpoonleft");a(i,s,d,"\u22b8","\\multimap");a(i,s,d,"\u21ad","\\leftrightsquigarrow");a(i,s,d,"\u21c9","\\rightrightarrows");a(i,s,d,"\u21c4","\\rightleftarrows");a(i,s,d,"\u21a0","\\twoheadrightarrow");a(i,s,d,"\u21a3","\\rightarrowtail");a(i,s,d,"\u21ac","\\looparrowright");a(i,s,d,"\u21b7","\\curvearrowright");a(i,s,d,"\u21bb","\\circlearrowright");a(i,s,d,"\u21b1","\\Rsh");a(i,s,d,"\u21ca","\\downdownarrows");a(i,s,d,"\u21be","\\upharpoonright");a(i,s,d,"\u21c2","\\downharpoonright");a(i,s,d,"\u21dd","\\rightsquigarrow");a(i,s,d,"\u21dd","\\leadsto");a(i,s,d,"\u21db","\\Rrightarrow");a(i,s,d,"\u21be","\\restriction");a(i,o,y,"\u2018","`");a(i,o,y,"$","\\$");a(n,o,y,"$","\\$");a(n,o,y,"$","\\textdollar");a(i,o,y,"%","\\%");a(n,o,y,"%","\\%");a(i,o,y,"_","\\_");a(n,o,y,"_","\\_");a(n,o,y,"_","\\textunderscore");a(i,o,y,"\u2220","\\angle");a(i,o,y,"\u221e","\\infty");a(i,o,y,"\u2032","\\prime");a(i,o,y,"\u25b3","\\triangle");a(i,o,y,"\u0393","\\Gamma");a(i,o,y,"\u0394","\\Delta");a(i,o,y,"\u0398","\\Theta");a(i,o,y,"\u039b","\\Lambda");a(i,o,y,"\u039e","\\Xi");a(i,o,y,"\u03a0","\\Pi");a(i,o,y,"\u03a3","\\Sigma");a(i,o,y,"\u03a5","\\Upsilon");a(i,o,y,"\u03a6","\\Phi");a(i,o,y,"\u03a8","\\Psi");a(i,o,y,"\u03a9","\\Omega");a(i,o,y,"\xac","\\neg");a(i,o,y,"\xac","\\lnot");a(i,o,y,"\u22a4","\\top");a(i,o,y,"\u22a5","\\bot");a(i,o,y,"\u2205","\\emptyset");a(i,s,y,"\u2205","\\varnothing");a(i,o,c,"\u03b1","\\alpha");a(i,o,c,"\u03b2","\\beta");a(i,o,c,"\u03b3","\\gamma");a(i,o,c,"\u03b4","\\delta");a(i,o,c,"\u03f5","\\epsilon");a(i,o,c,"\u03b6","\\zeta");a(i,o,c,"\u03b7","\\eta");a(i,o,c,"\u03b8","\\theta");a(i,o,c,"\u03b9","\\iota");a(i,o,c,"\u03ba","\\kappa");a(i,o,c,"\u03bb","\\lambda");a(i,o,c,"\u03bc","\\mu");a(i,o,c,"\u03bd","\\nu");a(i,o,c,"\u03be","\\xi");a(i,o,c,"o","\\omicron");a(i,o,c,"\u03c0","\\pi");a(i,o,c,"\u03c1","\\rho");a(i,o,c,"\u03c3","\\sigma");a(i,o,c,"\u03c4","\\tau");a(i,o,c,"\u03c5","\\upsilon");a(i,o,c,"\u03d5","\\phi");a(i,o,c,"\u03c7","\\chi");a(i,o,c,"\u03c8","\\psi");a(i,o,c,"\u03c9","\\omega");a(i,o,c,"\u03b5","\\varepsilon");a(i,o,c,"\u03d1","\\vartheta");a(i,o,c,"\u03d6","\\varpi");a(i,o,c,"\u03f1","\\varrho");a(i,o,c,"\u03c2","\\varsigma");a(i,o,c,"\u03c6","\\varphi");a(i,o,u,"\u2217","*");a(i,o,u,"+","+");a(i,o,u,"\u2212","-");a(i,o,u,"\u22c5","\\cdot");a(i,o,u,"\u2218","\\circ");a(i,o,u,"\xf7","\\div");a(i,o,u,"\xb1","\\pm");a(i,o,u,"\xd7","\\times");a(i,o,u,"\u2229","\\cap");a(i,o,u,"\u222a","\\cup");a(i,o,u,"\u2216","\\setminus");a(i,o,u,"\u2227","\\land");a(i,o,u,"\u2228","\\lor");a(i,o,u,"\u2227","\\wedge");a(i,o,u,"\u2228","\\vee");a(i,o,y,"\u221a","\\surd");a(i,o,f,"(","(");a(i,o,f,"[","[");a(i,o,f,"\u27e8","\\langle");a(i,o,f,"\u2223","\\lvert");a(i,o,f,"\u2225","\\lVert");a(i,o,h,")",")");a(i,o,h,"]","]");a(i,o,h,"?","?");a(i,o,h,"!","!");a(i,o,h,"\u27e9","\\rangle");a(i,o,h,"\u2223","\\rvert");a(i,o,h,"\u2225","\\rVert");a(i,o,d,"=","=");a(i,o,d,"<","<");a(i,o,d,">",">");a(i,o,d,":",":");a(i,o,d,"\u2248","\\approx");a(i,o,d,"\u2245","\\cong");a(i,o,d,"\u2265","\\ge");a(i,o,d,"\u2265","\\geq");a(i,o,d,"\u2190","\\gets");a(i,o,d,">","\\gt");a(i,o,d,"\u2208","\\in");a(i,o,d,"\u2209","\\notin");a(i,o,d,"\u2282","\\subset");a(i,o,d,"\u2283","\\supset");a(i,o,d,"\u2286","\\subseteq");a(i,o,d,"\u2287","\\supseteq");a(i,s,d,"\u2288","\\nsubseteq");a(i,s,d,"\u2289","\\nsupseteq");a(i,o,d,"\u22a8","\\models");a(i,o,d,"\u2190","\\leftarrow");a(i,o,d,"\u2264","\\le");a(i,o,d,"\u2264","\\leq");a(i,o,d,"<","\\lt");a(i,o,d,"\u2260","\\ne");a(i,o,d,"\u2260","\\neq");a(i,o,d,"\u2192","\\rightarrow");a(i,o,d,"\u2192","\\to");a(i,s,d,"\u2271","\\ngeq");a(i,s,d,"\u2270","\\nleq");a(i,o,g,null,"\\!");a(i,o,g,"\xa0","\\ ");a(i,o,g,"\xa0","~");a(i,o,g,null,"\\,");a(i,o,g,null,"\\:");a(i,o,g,null,"\\;");a(i,o,g,null,"\\enspace");a(i,o,g,null,"\\qquad");a(i,o,g,null,"\\quad");a(i,o,g,"\xa0","\\space");a(i,o,m,",",",");a(i,o,m,";",";");a(i,o,m,":","\\colon");a(i,s,u,"\u22bc","\\barwedge");a(i,s,u,"\u22bb","\\veebar");a(i,o,u,"\u2299","\\odot");a(i,o,u,"\u2295","\\oplus");a(i,o,u,"\u2297","\\otimes");a(i,o,y,"\u2202","\\partial");a(i,o,u,"\u2298","\\oslash");a(i,s,u,"\u229a","\\circledcirc");a(i,s,u,"\u22a1","\\boxdot");a(i,o,u,"\u25b3","\\bigtriangleup");a(i,o,u,"\u25bd","\\bigtriangledown");a(i,o,u,"\u2020","\\dagger");a(i,o,u,"\u22c4","\\diamond");a(i,o,u,"\u22c6","\\star");a(i,o,u,"\u25c3","\\triangleleft");a(i,o,u,"\u25b9","\\triangleright");a(i,o,f,"{","\\{");a(n,o,y,"{","\\{");a(n,o,y,"{","\\textbraceleft");a(i,o,h,"}","\\}");a(n,o,y,"}","\\}");a(n,o,y,"}","\\textbraceright");a(i,o,f,"{","\\lbrace");a(i,o,h,"}","\\rbrace");a(i,o,f,"[","\\lbrack");a(i,o,h,"]","\\rbrack");a(n,o,y,"<","\\textless");a(n,o,y,">","\\textgreater");a(i,o,f,"\u230a","\\lfloor");a(i,o,h,"\u230b","\\rfloor");a(i,o,f,"\u2308","\\lceil");a(i,o,h,"\u2309","\\rceil");a(i,o,y,"\\","\\backslash");a(i,o,y,"\u2223","|");a(i,o,y,"\u2223","\\vert");a(n,o,y,"|","\\textbar");a(i,o,y,"\u2225","\\|");a(i,o,y,"\u2225","\\Vert");a(n,o,y,"\u2225","\\textbardbl");a(i,o,d,"\u2191","\\uparrow");a(i,o,d,"\u21d1","\\Uparrow");a(i,o,d,"\u2193","\\downarrow");a(i,o,d,"\u21d3","\\Downarrow");a(i,o,d,"\u2195","\\updownarrow");a(i,o,d,"\u21d5","\\Updownarrow");a(i,o,v,"\u2210","\\coprod");a(i,o,v,"\u22c1","\\bigvee");a(i,o,v,"\u22c0","\\bigwedge");a(i,o,v,"\u2a04","\\biguplus");a(i,o,v,"\u22c2","\\bigcap");a(i,o,v,"\u22c3","\\bigcup");a(i,o,v,"\u222b","\\int");a(i,o,v,"\u222b","\\intop");a(i,o,v,"\u222c","\\iint");a(i,o,v,"\u222d","\\iiint");a(i,o,v,"\u220f","\\prod");a(i,o,v,"\u2211","\\sum");a(i,o,v,"\u2a02","\\bigotimes");a(i,o,v,"\u2a01","\\bigoplus");a(i,o,v,"\u2a00","\\bigodot");a(i,o,v,"\u222e","\\oint");a(i,o,v,"\u2a06","\\bigsqcup");a(i,o,v,"\u222b","\\smallint");a(n,o,p,"\u2026","\\textellipsis");a(i,o,p,"\u2026","\\mathellipsis");a(n,o,p,"\u2026","\\ldots");a(i,o,p,"\u2026","\\ldots");a(i,o,p,"\u22ef","\\cdots");a(i,o,p,"\u22f1","\\ddots");a(i,o,y,"\u22ee","\\vdots");a(i,o,l,"\xb4","\\acute");a(i,o,l,"`","\\grave");a(i,o,l,"\xa8","\\ddot");a(i,o,l,"~","\\tilde");a(i,o,l,"\xaf","\\bar");a(i,o,l,"\u02d8","\\breve");a(i,o,l,"\u02c7","\\check");a(i,o,l,"^","\\hat");a(i,o,l,"\u20d7","\\vec");a(i,o,l,"\u02d9","\\dot");a(i,o,c,"\u0131","\\imath");a(i,o,c,"\u0237","\\jmath");a(n,o,y,"\u2013","--");a(n,o,y,"\u2013","\\textendash");a(n,o,y,"\u2014","---");a(n,o,y,"\u2014","\\textemdash");a(n,o,y,"\u2018","`");a(n,o,y,"\u2018","\\textquoteleft");a(n,o,y,"\u2019","'");a(n,o,y,"\u2019","\\textquoteright");a(n,o,y,"\u201c","``");a(n,o,y,"\u201c","\\textquotedblleft");a(n,o,y,"\u201d","''");a(n,o,y,"\u201d","\\textquotedblright");a(i,o,y,"\xb0","\\degree");a(n,o,y,"\xb0","\\degree");a(i,o,c,"\xa3","\\pounds");a(i,o,c,"\xa3","\\mathsterling");a(n,o,c,"\xa3","\\pounds");a(n,o,c,"\xa3","\\textsterling");a(i,s,y,"\u2720","\\maltese");a(n,s,y,"\u2720","\\maltese");a(n,o,g,"\xa0","\\ ");a(n,o,g,"\xa0"," ");a(n,o,g,"\xa0","~");var x='0123456789/@."';for(var b=0;b<x.length;b++){var w=x.charAt(b);a(i,o,y,w,w)}var k='0123456789!@*()-=+[]<>|";:?/.,';for(var z=0;z<k.length;z++){var M=k.charAt(z);a(n,o,y,M,M)}var S="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var A=0;A<S.length;A++){var N=S.charAt(A);a(i,o,c,N,N);a(n,o,y,N,N)}for(var T=192;T<=214;T++){var q=String.fromCharCode(T);a(n,o,y,q,q)}for(var C=216;C<=246;C++){var E=String.fromCharCode(C);a(n,o,y,E,E)}for(var O=248;O<=255;O++){var R=String.fromCharCode(O);a(n,o,y,R,R)}for(var L=1040;L<=1103;L++){var D=String.fromCharCode(L);a(n,o,y,D,D)}a(n,o,y,"\u2013","\u2013");a(n,o,y,"\u2014","\u2014");a(n,o,y,"\u2018","\u2018");a(n,o,y,"\u2019","\u2019");a(n,o,y,"\u201c","\u201c");a(n,o,y,"\u201d","\u201d")},{}],30:[function(e,t,r){"use strict";var a=/[\uAC00-\uD7AF]/;var i=/[\u3040-\u309F]|[\u30A0-\u30FF]|[\u4E00-\u9FAF]|[\uAC00-\uD7AF]/;t.exports={cjkRegex:i,hangulRegex:a}},{}],31:[function(e,t,r){"use strict";var a=Array.prototype.indexOf;var i=function e(t,r){if(t==null){return-1}if(a&&t.indexOf===a){return t.indexOf(r)}var i=t.length;for(var n=0;n<i;n++){if(t[n]===r){return n}}return-1};var n=function e(t,r){return i(t,r)!==-1};var o=function e(t,r){return t===undefined?r:t};var s=/([A-Z])/g;var l=function e(t){return t.replace(s,"-$1").toLowerCase()};var u={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"};var h=/[&><"']/g;function p(e){return u[e]}function c(e){return(""+e).replace(h,p)}var v=void 0;if(typeof document!=="undefined"){var f=document.createElement("span");if("textContent"in f){v=function e(t,r){t.textContent=r}}else{v=function e(t,r){t.innerText=r}}}function m(e){v(e,"")}t.exports={contains:n,deflt:o,escape:c,hyphenate:l,indexOf:i,setTextContent:v,clearNode:m}},{}]},{},[1])(1)});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],2:[function(require,module,exports){
/*global define:false */
/**
 * Copyright 2012-2017 Craig Campbell
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Mousetrap is a simple keyboard shortcut library for Javascript with
 * no external dependencies
 *
 * @version 1.6.1
 * @url craig.is/killing/mice
 */
(function(window, document, undefined) {

    // Check if mousetrap is used inside browser, if not, return
    if (!window) {
        return;
    }

    /**
     * mapping of special keycodes to their corresponding keys
     *
     * everything in this dictionary cannot use keypress events
     * so it has to be here to map to the correct keycodes for
     * keyup/keydown events
     *
     * @type {Object}
     */
    var _MAP = {
        8: 'backspace',
        9: 'tab',
        13: 'enter',
        16: 'shift',
        17: 'ctrl',
        18: 'alt',
        20: 'capslock',
        27: 'esc',
        32: 'space',
        33: 'pageup',
        34: 'pagedown',
        35: 'end',
        36: 'home',
        37: 'left',
        38: 'up',
        39: 'right',
        40: 'down',
        45: 'ins',
        46: 'del',
        91: 'meta',
        93: 'meta',
        224: 'meta'
    };

    /**
     * mapping for special characters so they can support
     *
     * this dictionary is only used incase you want to bind a
     * keyup or keydown event to one of these keys
     *
     * @type {Object}
     */
    var _KEYCODE_MAP = {
        106: '*',
        107: '+',
        109: '-',
        110: '.',
        111 : '/',
        186: ';',
        187: '=',
        188: ',',
        189: '-',
        190: '.',
        191: '/',
        192: '`',
        219: '[',
        220: '\\',
        221: ']',
        222: '\''
    };

    /**
     * this is a mapping of keys that require shift on a US keypad
     * back to the non shift equivelents
     *
     * this is so you can use keyup events with these keys
     *
     * note that this will only work reliably on US keyboards
     *
     * @type {Object}
     */
    var _SHIFT_MAP = {
        '~': '`',
        '!': '1',
        '@': '2',
        '#': '3',
        '$': '4',
        '%': '5',
        '^': '6',
        '&': '7',
        '*': '8',
        '(': '9',
        ')': '0',
        '_': '-',
        '+': '=',
        ':': ';',
        '\"': '\'',
        '<': ',',
        '>': '.',
        '?': '/',
        '|': '\\'
    };

    /**
     * this is a list of special strings you can use to map
     * to modifier keys when you specify your keyboard shortcuts
     *
     * @type {Object}
     */
    var _SPECIAL_ALIASES = {
        'option': 'alt',
        'command': 'meta',
        'return': 'enter',
        'escape': 'esc',
        'plus': '+',
        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'
    };

    /**
     * variable to store the flipped version of _MAP from above
     * needed to check if we should use keypress or not when no action
     * is specified
     *
     * @type {Object|undefined}
     */
    var _REVERSE_MAP;

    /**
     * loop through the f keys, f1 to f19 and add them to the map
     * programatically
     */
    for (var i = 1; i < 20; ++i) {
        _MAP[111 + i] = 'f' + i;
    }

    /**
     * loop through to map numbers on the numeric keypad
     */
    for (i = 0; i <= 9; ++i) {

        // This needs to use a string cause otherwise since 0 is falsey
        // mousetrap will never fire for numpad 0 pressed as part of a keydown
        // event.
        //
        // @see https://github.com/ccampbell/mousetrap/pull/258
        _MAP[i + 96] = i.toString();
    }

    /**
     * cross browser add event method
     *
     * @param {Element|HTMLDocument} object
     * @param {string} type
     * @param {Function} callback
     * @returns void
     */
    function _addEvent(object, type, callback) {
        if (object.addEventListener) {
            object.addEventListener(type, callback, false);
            return;
        }

        object.attachEvent('on' + type, callback);
    }

    /**
     * takes the event and returns the key character
     *
     * @param {Event} e
     * @return {string}
     */
    function _characterFromEvent(e) {

        // for keypress events we should return the character as is
        if (e.type == 'keypress') {
            var character = String.fromCharCode(e.which);

            // if the shift key is not pressed then it is safe to assume
            // that we want the character to be lowercase.  this means if
            // you accidentally have caps lock on then your key bindings
            // will continue to work
            //
            // the only side effect that might not be desired is if you
            // bind something like 'A' cause you want to trigger an
            // event when capital A is pressed caps lock will no longer
            // trigger the event.  shift+a will though.
            if (!e.shiftKey) {
                character = character.toLowerCase();
            }

            return character;
        }

        // for non keypress events the special maps are needed
        if (_MAP[e.which]) {
            return _MAP[e.which];
        }

        if (_KEYCODE_MAP[e.which]) {
            return _KEYCODE_MAP[e.which];
        }

        // if it is not in the special map

        // with keydown and keyup events the character seems to always
        // come in as an uppercase character whether you are pressing shift
        // or not.  we should make sure it is always lowercase for comparisons
        return String.fromCharCode(e.which).toLowerCase();
    }

    /**
     * checks if two arrays are equal
     *
     * @param {Array} modifiers1
     * @param {Array} modifiers2
     * @returns {boolean}
     */
    function _modifiersMatch(modifiers1, modifiers2) {
        return modifiers1.sort().join(',') === modifiers2.sort().join(',');
    }

    /**
     * takes a key event and figures out what the modifiers are
     *
     * @param {Event} e
     * @returns {Array}
     */
    function _eventModifiers(e) {
        var modifiers = [];

        if (e.shiftKey) {
            modifiers.push('shift');
        }

        if (e.altKey) {
            modifiers.push('alt');
        }

        if (e.ctrlKey) {
            modifiers.push('ctrl');
        }

        if (e.metaKey) {
            modifiers.push('meta');
        }

        return modifiers;
    }

    /**
     * prevents default for this event
     *
     * @param {Event} e
     * @returns void
     */
    function _preventDefault(e) {
        if (e.preventDefault) {
            e.preventDefault();
            return;
        }

        e.returnValue = false;
    }

    /**
     * stops propogation for this event
     *
     * @param {Event} e
     * @returns void
     */
    function _stopPropagation(e) {
        if (e.stopPropagation) {
            e.stopPropagation();
            return;
        }

        e.cancelBubble = true;
    }

    /**
     * determines if the keycode specified is a modifier key or not
     *
     * @param {string} key
     * @returns {boolean}
     */
    function _isModifier(key) {
        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';
    }

    /**
     * reverses the map lookup so that we can look for specific keys
     * to see what can and can't use keypress
     *
     * @return {Object}
     */
    function _getReverseMap() {
        if (!_REVERSE_MAP) {
            _REVERSE_MAP = {};
            for (var key in _MAP) {

                // pull out the numeric keypad from here cause keypress should
                // be able to detect the keys from the character
                if (key > 95 && key < 112) {
                    continue;
                }

                if (_MAP.hasOwnProperty(key)) {
                    _REVERSE_MAP[_MAP[key]] = key;
                }
            }
        }
        return _REVERSE_MAP;
    }

    /**
     * picks the best action based on the key combination
     *
     * @param {string} key - character for key
     * @param {Array} modifiers
     * @param {string=} action passed in
     */
    function _pickBestAction(key, modifiers, action) {

        // if no action was picked in we should try to pick the one
        // that we think would work best for this key
        if (!action) {
            action = _getReverseMap()[key] ? 'keydown' : 'keypress';
        }

        // modifier keys don't work as expected with keypress,
        // switch to keydown
        if (action == 'keypress' && modifiers.length) {
            action = 'keydown';
        }

        return action;
    }

    /**
     * Converts from a string key combination to an array
     *
     * @param  {string} combination like "command+shift+l"
     * @return {Array}
     */
    function _keysFromString(combination) {
        if (combination === '+') {
            return ['+'];
        }

        combination = combination.replace(/\+{2}/g, '+plus');
        return combination.split('+');
    }

    /**
     * Gets info for a specific key combination
     *
     * @param  {string} combination key combination ("command+s" or "a" or "*")
     * @param  {string=} action
     * @returns {Object}
     */
    function _getKeyInfo(combination, action) {
        var keys;
        var key;
        var i;
        var modifiers = [];

        // take the keys from this pattern and figure out what the actual
        // pattern is all about
        keys = _keysFromString(combination);

        for (i = 0; i < keys.length; ++i) {
            key = keys[i];

            // normalize key names
            if (_SPECIAL_ALIASES[key]) {
                key = _SPECIAL_ALIASES[key];
            }

            // if this is not a keypress event then we should
            // be smart about using shift keys
            // this will only work for US keyboards however
            if (action && action != 'keypress' && _SHIFT_MAP[key]) {
                key = _SHIFT_MAP[key];
                modifiers.push('shift');
            }

            // if this key is a modifier then add it to the list of modifiers
            if (_isModifier(key)) {
                modifiers.push(key);
            }
        }

        // depending on what the key combination is
        // we will try to pick the best event for it
        action = _pickBestAction(key, modifiers, action);

        return {
            key: key,
            modifiers: modifiers,
            action: action
        };
    }

    function _belongsTo(element, ancestor) {
        if (element === null || element === document) {
            return false;
        }

        if (element === ancestor) {
            return true;
        }

        return _belongsTo(element.parentNode, ancestor);
    }

    function Mousetrap(targetElement) {
        var self = this;

        targetElement = targetElement || document;

        if (!(self instanceof Mousetrap)) {
            return new Mousetrap(targetElement);
        }

        /**
         * element to attach key events to
         *
         * @type {Element}
         */
        self.target = targetElement;

        /**
         * a list of all the callbacks setup via Mousetrap.bind()
         *
         * @type {Object}
         */
        self._callbacks = {};

        /**
         * direct map of string combinations to callbacks used for trigger()
         *
         * @type {Object}
         */
        self._directMap = {};

        /**
         * keeps track of what level each sequence is at since multiple
         * sequences can start out with the same sequence
         *
         * @type {Object}
         */
        var _sequenceLevels = {};

        /**
         * variable to store the setTimeout call
         *
         * @type {null|number}
         */
        var _resetTimer;

        /**
         * temporary state where we will ignore the next keyup
         *
         * @type {boolean|string}
         */
        var _ignoreNextKeyup = false;

        /**
         * temporary state where we will ignore the next keypress
         *
         * @type {boolean}
         */
        var _ignoreNextKeypress = false;

        /**
         * are we currently inside of a sequence?
         * type of action ("keyup" or "keydown" or "keypress") or false
         *
         * @type {boolean|string}
         */
        var _nextExpectedAction = false;

        /**
         * resets all sequence counters except for the ones passed in
         *
         * @param {Object} doNotReset
         * @returns void
         */
        function _resetSequences(doNotReset) {
            doNotReset = doNotReset || {};

            var activeSequences = false,
                key;

            for (key in _sequenceLevels) {
                if (doNotReset[key]) {
                    activeSequences = true;
                    continue;
                }
                _sequenceLevels[key] = 0;
            }

            if (!activeSequences) {
                _nextExpectedAction = false;
            }
        }

        /**
         * finds all callbacks that match based on the keycode, modifiers,
         * and action
         *
         * @param {string} character
         * @param {Array} modifiers
         * @param {Event|Object} e
         * @param {string=} sequenceName - name of the sequence we are looking for
         * @param {string=} combination
         * @param {number=} level
         * @returns {Array}
         */
        function _getMatches(character, modifiers, e, sequenceName, combination, level) {
            var i;
            var callback;
            var matches = [];
            var action = e.type;

            // if there are no events related to this keycode
            if (!self._callbacks[character]) {
                return [];
            }

            // if a modifier key is coming up on its own we should allow it
            if (action == 'keyup' && _isModifier(character)) {
                modifiers = [character];
            }

            // loop through all callbacks for the key that was pressed
            // and see if any of them match
            for (i = 0; i < self._callbacks[character].length; ++i) {
                callback = self._callbacks[character][i];

                // if a sequence name is not specified, but this is a sequence at
                // the wrong level then move onto the next match
                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {
                    continue;
                }

                // if the action we are looking for doesn't match the action we got
                // then we should keep going
                if (action != callback.action) {
                    continue;
                }

                // if this is a keypress event and the meta key and control key
                // are not pressed that means that we need to only look at the
                // character, otherwise check the modifiers as well
                //
                // chrome will not fire a keypress if meta or control is down
                // safari will fire a keypress if meta or meta+shift is down
                // firefox will fire a keypress if meta or control is down
                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {

                    // when you bind a combination or sequence a second time it
                    // should overwrite the first one.  if a sequenceName or
                    // combination is specified in this call it does just that
                    //
                    // @todo make deleting its own method?
                    var deleteCombo = !sequenceName && callback.combo == combination;
                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;
                    if (deleteCombo || deleteSequence) {
                        self._callbacks[character].splice(i, 1);
                    }

                    matches.push(callback);
                }
            }

            return matches;
        }

        /**
         * actually calls the callback function
         *
         * if your callback function returns false this will use the jquery
         * convention - prevent default and stop propogation on the event
         *
         * @param {Function} callback
         * @param {Event} e
         * @returns void
         */
        function _fireCallback(callback, e, combo, sequence) {

            // if this event should not happen stop here
            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {
                return;
            }

            if (callback(e, combo) === false) {
                _preventDefault(e);
                _stopPropagation(e);
            }
        }

        /**
         * handles a character key event
         *
         * @param {string} character
         * @param {Array} modifiers
         * @param {Event} e
         * @returns void
         */
        self._handleKey = function(character, modifiers, e) {
            var callbacks = _getMatches(character, modifiers, e);
            var i;
            var doNotReset = {};
            var maxLevel = 0;
            var processedSequenceCallback = false;

            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence
            for (i = 0; i < callbacks.length; ++i) {
                if (callbacks[i].seq) {
                    maxLevel = Math.max(maxLevel, callbacks[i].level);
                }
            }

            // loop through matching callbacks for this key event
            for (i = 0; i < callbacks.length; ++i) {

                // fire for all sequence callbacks
                // this is because if for example you have multiple sequences
                // bound such as "g i" and "g t" they both need to fire the
                // callback for matching g cause otherwise you can only ever
                // match the first one
                if (callbacks[i].seq) {

                    // only fire callbacks for the maxLevel to prevent
                    // subsequences from also firing
                    //
                    // for example 'a option b' should not cause 'option b' to fire
                    // even though 'option b' is part of the other sequence
                    //
                    // any sequences that do not match here will be discarded
                    // below by the _resetSequences call
                    if (callbacks[i].level != maxLevel) {
                        continue;
                    }

                    processedSequenceCallback = true;

                    // keep a list of which sequences were matches for later
                    doNotReset[callbacks[i].seq] = 1;
                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);
                    continue;
                }

                // if there were no sequence matches but we are still here
                // that means this is a regular match so we should fire that
                if (!processedSequenceCallback) {
                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);
                }
            }

            // if the key you pressed matches the type of sequence without
            // being a modifier (ie "keyup" or "keypress") then we should
            // reset all sequences that were not matched by this event
            //
            // this is so, for example, if you have the sequence "h a t" and you
            // type "h e a r t" it does not match.  in this case the "e" will
            // cause the sequence to reset
            //
            // modifier keys are ignored because you can have a sequence
            // that contains modifiers such as "enter ctrl+space" and in most
            // cases the modifier key will be pressed before the next key
            //
            // also if you have a sequence such as "ctrl+b a" then pressing the
            // "b" key will trigger a "keypress" and a "keydown"
            //
            // the "keydown" is expected when there is a modifier, but the
            // "keypress" ends up matching the _nextExpectedAction since it occurs
            // after and that causes the sequence to reset
            //
            // we ignore keypresses in a sequence that directly follow a keydown
            // for the same character
            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;
            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {
                _resetSequences(doNotReset);
            }

            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';
        };

        /**
         * handles a keydown event
         *
         * @param {Event} e
         * @returns void
         */
        function _handleKeyEvent(e) {

            // normalize e.which for key events
            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion
            if (typeof e.which !== 'number') {
                e.which = e.keyCode;
            }

            var character = _characterFromEvent(e);

            // no character found then stop
            if (!character) {
                return;
            }

            // need to use === for the character check because the character can be 0
            if (e.type == 'keyup' && _ignoreNextKeyup === character) {
                _ignoreNextKeyup = false;
                return;
            }

            self.handleKey(character, _eventModifiers(e), e);
        }

        /**
         * called to set a 1 second timeout on the specified sequence
         *
         * this is so after each key press in the sequence you have 1 second
         * to press the next key before you have to start over
         *
         * @returns void
         */
        function _resetSequenceTimer() {
            clearTimeout(_resetTimer);
            _resetTimer = setTimeout(_resetSequences, 1000);
        }

        /**
         * binds a key sequence to an event
         *
         * @param {string} combo - combo specified in bind call
         * @param {Array} keys
         * @param {Function} callback
         * @param {string=} action
         * @returns void
         */
        function _bindSequence(combo, keys, callback, action) {

            // start off by adding a sequence level record for this combination
            // and setting the level to 0
            _sequenceLevels[combo] = 0;

            /**
             * callback to increase the sequence level for this sequence and reset
             * all other sequences that were active
             *
             * @param {string} nextAction
             * @returns {Function}
             */
            function _increaseSequence(nextAction) {
                return function() {
                    _nextExpectedAction = nextAction;
                    ++_sequenceLevels[combo];
                    _resetSequenceTimer();
                };
            }

            /**
             * wraps the specified callback inside of another function in order
             * to reset all sequence counters as soon as this sequence is done
             *
             * @param {Event} e
             * @returns void
             */
            function _callbackAndReset(e) {
                _fireCallback(callback, e, combo);

                // we should ignore the next key up if the action is key down
                // or keypress.  this is so if you finish a sequence and
                // release the key the final key will not trigger a keyup
                if (action !== 'keyup') {
                    _ignoreNextKeyup = _characterFromEvent(e);
                }

                // weird race condition if a sequence ends with the key
                // another sequence begins with
                setTimeout(_resetSequences, 10);
            }

            // loop through keys one at a time and bind the appropriate callback
            // function.  for any key leading up to the final one it should
            // increase the sequence. after the final, it should reset all sequences
            //
            // if an action is specified in the original bind call then that will
            // be used throughout.  otherwise we will pass the action that the
            // next key in the sequence should match.  this allows a sequence
            // to mix and match keypress and keydown events depending on which
            // ones are better suited to the key provided
            for (var i = 0; i < keys.length; ++i) {
                var isFinal = i + 1 === keys.length;
                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);
                _bindSingle(keys[i], wrappedCallback, action, combo, i);
            }
        }

        /**
         * binds a single keyboard combination
         *
         * @param {string} combination
         * @param {Function} callback
         * @param {string=} action
         * @param {string=} sequenceName - name of sequence if part of sequence
         * @param {number=} level - what part of the sequence the command is
         * @returns void
         */
        function _bindSingle(combination, callback, action, sequenceName, level) {

            // store a direct mapped reference for use with Mousetrap.trigger
            self._directMap[combination + ':' + action] = callback;

            // make sure multiple spaces in a row become a single space
            combination = combination.replace(/\s+/g, ' ');

            var sequence = combination.split(' ');
            var info;

            // if this pattern is a sequence of keys then run through this method
            // to reprocess each pattern one key at a time
            if (sequence.length > 1) {
                _bindSequence(combination, sequence, callback, action);
                return;
            }

            info = _getKeyInfo(combination, action);

            // make sure to initialize array if this is the first time
            // a callback is added for this key
            self._callbacks[info.key] = self._callbacks[info.key] || [];

            // remove an existing match if there is one
            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);

            // add this call back to the array
            // if it is a sequence put it at the beginning
            // if not put it at the end
            //
            // this is important because the way these are processed expects
            // the sequence ones to come first
            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({
                callback: callback,
                modifiers: info.modifiers,
                action: info.action,
                seq: sequenceName,
                level: level,
                combo: combination
            });
        }

        /**
         * binds multiple combinations to the same callback
         *
         * @param {Array} combinations
         * @param {Function} callback
         * @param {string|undefined} action
         * @returns void
         */
        self._bindMultiple = function(combinations, callback, action) {
            for (var i = 0; i < combinations.length; ++i) {
                _bindSingle(combinations[i], callback, action);
            }
        };

        // start!
        _addEvent(targetElement, 'keypress', _handleKeyEvent);
        _addEvent(targetElement, 'keydown', _handleKeyEvent);
        _addEvent(targetElement, 'keyup', _handleKeyEvent);
    }

    /**
     * binds an event to mousetrap
     *
     * can be a single key, a combination of keys separated with +,
     * an array of keys, or a sequence of keys separated by spaces
     *
     * be sure to list the modifier keys first to make sure that the
     * correct key ends up getting bound (the last key in the pattern)
     *
     * @param {string|Array} keys
     * @param {Function} callback
     * @param {string=} action - 'keypress', 'keydown', or 'keyup'
     * @returns void
     */
    Mousetrap.prototype.bind = function(keys, callback, action) {
        var self = this;
        keys = keys instanceof Array ? keys : [keys];
        self._bindMultiple.call(self, keys, callback, action);
        return self;
    };

    /**
     * unbinds an event to mousetrap
     *
     * the unbinding sets the callback function of the specified key combo
     * to an empty function and deletes the corresponding key in the
     * _directMap dict.
     *
     * TODO: actually remove this from the _callbacks dictionary instead
     * of binding an empty function
     *
     * the keycombo+action has to be exactly the same as
     * it was defined in the bind method
     *
     * @param {string|Array} keys
     * @param {string} action
     * @returns void
     */
    Mousetrap.prototype.unbind = function(keys, action) {
        var self = this;
        return self.bind.call(self, keys, function() {}, action);
    };

    /**
     * triggers an event that has already been bound
     *
     * @param {string} keys
     * @param {string=} action
     * @returns void
     */
    Mousetrap.prototype.trigger = function(keys, action) {
        var self = this;
        if (self._directMap[keys + ':' + action]) {
            self._directMap[keys + ':' + action]({}, keys);
        }
        return self;
    };

    /**
     * resets the library back to its initial state.  this is useful
     * if you want to clear out the current keyboard shortcuts and bind
     * new ones - for example if you switch to another page
     *
     * @returns void
     */
    Mousetrap.prototype.reset = function() {
        var self = this;
        self._callbacks = {};
        self._directMap = {};
        return self;
    };

    /**
     * should we stop this event before firing off callbacks
     *
     * @param {Event} e
     * @param {Element} element
     * @return {boolean}
     */
    Mousetrap.prototype.stopCallback = function(e, element) {
        var self = this;

        // if the element has the class "mousetrap" then no need to stop
        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {
            return false;
        }

        if (_belongsTo(element, self.target)) {
            return false;
        }

        // stop for input, select, and textarea
        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;
    };

    /**
     * exposes _handleKey publicly so it can be overwritten by extensions
     */
    Mousetrap.prototype.handleKey = function() {
        var self = this;
        return self._handleKey.apply(self, arguments);
    };

    /**
     * allow custom key mappings
     */
    Mousetrap.addKeycodes = function(object) {
        for (var key in object) {
            if (object.hasOwnProperty(key)) {
                _MAP[key] = object[key];
            }
        }
        _REVERSE_MAP = null;
    };

    /**
     * Init the global mousetrap functions
     *
     * This method is needed to allow the global mousetrap functions to work
     * now that mousetrap is a constructor function.
     */
    Mousetrap.init = function() {
        var documentMousetrap = Mousetrap(document);
        for (var method in documentMousetrap) {
            if (method.charAt(0) !== '_') {
                Mousetrap[method] = (function(method) {
                    return function() {
                        return documentMousetrap[method].apply(documentMousetrap, arguments);
                    };
                } (method));
            }
        }
    };

    Mousetrap.init();

    // expose mousetrap to the global object
    window.Mousetrap = Mousetrap;

    // expose as a common js module
    if (typeof module !== 'undefined' && module.exports) {
        module.exports = Mousetrap;
    }

    // expose mousetrap as an AMD module
    if (typeof define === 'function' && define.amd) {
        define(function() {
            return Mousetrap;
        });
    }
}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);

},{}],3:[function(require,module,exports){
/* eslint-disable no-undefined */

var throttle = require('./throttle');

/**
 * Debounce execution of a function. Debouncing, unlike throttling,
 * guarantees that a function is only executed a single time, either at the
 * very beginning of a series of calls, or at the very end.
 *
 * @param  {Number}   delay         A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.
 * @param  {Boolean}  atBegin       Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds
 *                                  after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.
 *                                  (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).
 * @param  {Function} callback      A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,
 *                                  to `callback` when the debounced-function is executed.
 *
 * @return {Function} A new, debounced function.
 */
module.exports = function ( delay, atBegin, callback ) {
	return callback === undefined ? throttle(delay, atBegin, false) : throttle(delay, callback, atBegin !== false);
};

},{"./throttle":4}],4:[function(require,module,exports){
/* eslint-disable no-undefined,no-param-reassign,no-shadow */

/**
 * Throttle execution of a function. Especially useful for rate limiting
 * execution of handlers on events like resize and scroll.
 *
 * @param  {Number}    delay          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.
 * @param  {Boolean}   noTrailing     Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds while the
 *                                    throttled-function is being called. If noTrailing is false or unspecified, callback will be executed one final time
 *                                    after the last throttled-function call. (After the throttled-function has not been called for `delay` milliseconds,
 *                                    the internal counter is reset)
 * @param  {Function}  callback       A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,
 *                                    to `callback` when the throttled-function is executed.
 * @param  {Boolean}   debounceMode   If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is false (at end),
 *                                    schedule `callback` to execute after `delay` ms.
 *
 * @return {Function}  A new, throttled, function.
 */
module.exports = function ( delay, noTrailing, callback, debounceMode ) {

	// After wrapper has stopped being called, this timeout ensures that
	// `callback` is executed at the proper times in `throttle` and `end`
	// debounce modes.
	var timeoutID;

	// Keep track of the last time `callback` was executed.
	var lastExec = 0;

	// `noTrailing` defaults to falsy.
	if ( typeof noTrailing !== 'boolean' ) {
		debounceMode = callback;
		callback = noTrailing;
		noTrailing = undefined;
	}

	// The `wrapper` function encapsulates all of the throttling / debouncing
	// functionality and when executed will limit the rate at which `callback`
	// is executed.
	function wrapper () {

		var self = this;
		var elapsed = Number(new Date()) - lastExec;
		var args = arguments;

		// Execute `callback` and update the `lastExec` timestamp.
		function exec () {
			lastExec = Number(new Date());
			callback.apply(self, args);
		}

		// If `debounceMode` is true (at begin) this is used to clear the flag
		// to allow future `callback` executions.
		function clear () {
			timeoutID = undefined;
		}

		if ( debounceMode && !timeoutID ) {
			// Since `wrapper` is being called for the first time and
			// `debounceMode` is true (at begin), execute `callback`.
			exec();
		}

		// Clear any existing timeout.
		if ( timeoutID ) {
			clearTimeout(timeoutID);
		}

		if ( debounceMode === undefined && elapsed > delay ) {
			// In throttle mode, if `delay` time has been exceeded, execute
			// `callback`.
			exec();

		} else if ( noTrailing !== true ) {
			// In trailing throttle mode, since `delay` time has not been
			// exceeded, schedule `callback` to execute `delay` ms after most
			// recent execution.
			//
			// If `debounceMode` is true (at begin), schedule `clear` to execute
			// after `delay` ms.
			//
			// If `debounceMode` is false (at end), schedule `callback` to
			// execute after `delay` ms.
			timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);
		}

	}

	// Return the wrapper function.
	return wrapper;

};

},{}],5:[function(require,module,exports){
(function (global){
(function(){'use strict';var k=this;
function aa(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return"object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else return"null";else if("function"==
b&&"undefined"==typeof a.call)return"object";return b}function l(a){return"string"==typeof a}function ba(a,b,c){return a.call.apply(a.bind,arguments)}function ca(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}
function da(a,b,c){da=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?ba:ca;return da.apply(null,arguments)}function ea(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}}
function m(a){var b=n;function c(){}c.prototype=b.prototype;a.G=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.F=function(a,c,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[c].apply(a,g)}};/*

 The MIT License

 Copyright (c) 2007 Cybozu Labs, Inc.
 Copyright (c) 2012 Google Inc.

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to
 deal in the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 IN THE SOFTWARE.
*/
var fa=String.prototype.trim?function(a){return a.trim()}:function(a){return a.replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")};function q(a,b){return-1!=a.indexOf(b)}function ga(a,b){return a<b?-1:a>b?1:0};var ha=Array.prototype.indexOf?function(a,b,c){return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if(l(a))return l(b)&&1==b.length?a.indexOf(b,c):-1;for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},r=Array.prototype.forEach?function(a,b,c){Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=l(a)?a.split(""):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)},ia=Array.prototype.filter?function(a,b,c){return Array.prototype.filter.call(a,
b,c)}:function(a,b,c){for(var d=a.length,e=[],f=0,g=l(a)?a.split(""):a,h=0;h<d;h++)if(h in g){var p=g[h];b.call(c,p,h,a)&&(e[f++]=p)}return e},t=Array.prototype.reduce?function(a,b,c,d){d&&(b=da(b,d));return Array.prototype.reduce.call(a,b,c)}:function(a,b,c,d){var e=c;r(a,function(c,g){e=b.call(d,e,c,g,a)});return e},ja=Array.prototype.some?function(a,b,c){return Array.prototype.some.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=l(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;
return!1};function ka(a,b){var c;a:{c=a.length;for(var d=l(a)?a.split(""):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a)){c=e;break a}c=-1}return 0>c?null:l(a)?a.charAt(c):a[c]}function la(a){return Array.prototype.concat.apply(Array.prototype,arguments)}function ma(a,b,c){return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)};var u;a:{var na=k.navigator;if(na){var oa=na.userAgent;if(oa){u=oa;break a}}u=""};var pa=q(u,"Opera")||q(u,"OPR"),v=q(u,"Trident")||q(u,"MSIE"),qa=q(u,"Edge"),ra=q(u,"Gecko")&&!(q(u.toLowerCase(),"webkit")&&!q(u,"Edge"))&&!(q(u,"Trident")||q(u,"MSIE"))&&!q(u,"Edge"),sa=q(u.toLowerCase(),"webkit")&&!q(u,"Edge");function ta(){var a=k.document;return a?a.documentMode:void 0}var ua;
a:{var va="",wa=function(){var a=u;if(ra)return/rv\:([^\);]+)(\)|;)/.exec(a);if(qa)return/Edge\/([\d\.]+)/.exec(a);if(v)return/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);if(sa)return/WebKit\/(\S+)/.exec(a);if(pa)return/(?:Version)[ \/]?(\S+)/.exec(a)}();wa&&(va=wa?wa[1]:"");if(v){var xa=ta();if(null!=xa&&xa>parseFloat(va)){ua=String(xa);break a}}ua=va}var ya={};
function za(a){if(!ya[a]){for(var b=0,c=fa(String(ua)).split("."),d=fa(String(a)).split("."),e=Math.max(c.length,d.length),f=0;0==b&&f<e;f++){var g=c[f]||"",h=d[f]||"",p=/(\d*)(\D*)/g,y=/(\d*)(\D*)/g;do{var D=p.exec(g)||["","",""],X=y.exec(h)||["","",""];if(0==D[0].length&&0==X[0].length)break;b=ga(0==D[1].length?0:parseInt(D[1],10),0==X[1].length?0:parseInt(X[1],10))||ga(0==D[2].length,0==X[2].length)||ga(D[2],X[2])}while(0==b)}ya[a]=0<=b}}
var Aa=k.document,Ba=Aa&&v?ta()||("CSS1Compat"==Aa.compatMode?parseInt(ua,10):5):void 0;var w=v&&!(9<=Number(Ba)),Ca=v&&!(8<=Number(Ba));function x(a,b,c,d){this.a=a;this.nodeName=c;this.nodeValue=d;this.nodeType=2;this.parentNode=this.ownerElement=b}function Da(a,b){var c=Ca&&"href"==b.nodeName?a.getAttribute(b.nodeName,2):b.nodeValue;return new x(b,a,b.nodeName,c)};function z(a){var b=null,c=a.nodeType;1==c&&(b=a.textContent,b=void 0==b||null==b?a.innerText:b,b=void 0==b||null==b?"":b);if("string"!=typeof b)if(w&&"title"==a.nodeName.toLowerCase()&&1==c)b=a.text;else if(9==c||1==c){a=9==c?a.documentElement:a.firstChild;for(var c=0,d=[],b="";a;){do 1!=a.nodeType&&(b+=a.nodeValue),w&&"title"==a.nodeName.toLowerCase()&&(b+=a.text),d[c++]=a;while(a=a.firstChild);for(;c&&!(a=d[--c].nextSibling););}}else b=a.nodeValue;return""+b}
function A(a,b,c){if(null===b)return!0;try{if(!a.getAttribute)return!1}catch(d){return!1}Ca&&"class"==b&&(b="className");return null==c?!!a.getAttribute(b):a.getAttribute(b,2)==c}function B(a,b,c,d,e){return(w?Ea:Fa).call(null,a,b,l(c)?c:null,l(d)?d:null,e||new C)}
function Ea(a,b,c,d,e){if(a instanceof E||8==a.b||c&&null===a.b){var f=b.all;if(!f)return e;a=Ga(a);if("*"!=a&&(f=b.getElementsByTagName(a),!f))return e;if(c){for(var g=[],h=0;b=f[h++];)A(b,c,d)&&g.push(b);f=g}for(h=0;b=f[h++];)"*"==a&&"!"==b.tagName||F(e,b);return e}Ha(a,b,c,d,e);return e}
function Fa(a,b,c,d,e){b.getElementsByName&&d&&"name"==c&&!v?(b=b.getElementsByName(d),r(b,function(b){a.a(b)&&F(e,b)})):b.getElementsByClassName&&d&&"class"==c?(b=b.getElementsByClassName(d),r(b,function(b){b.className==d&&a.a(b)&&F(e,b)})):a instanceof G?Ha(a,b,c,d,e):b.getElementsByTagName&&(b=b.getElementsByTagName(a.f()),r(b,function(a){A(a,c,d)&&F(e,a)}));return e}
function Ia(a,b,c,d,e){var f;if((a instanceof E||8==a.b||c&&null===a.b)&&(f=b.childNodes)){var g=Ga(a);if("*"!=g&&(f=ia(f,function(a){return a.tagName&&a.tagName.toLowerCase()==g}),!f))return e;c&&(f=ia(f,function(a){return A(a,c,d)}));r(f,function(a){"*"==g&&("!"==a.tagName||"*"==g&&1!=a.nodeType)||F(e,a)});return e}return Ja(a,b,c,d,e)}function Ja(a,b,c,d,e){for(b=b.firstChild;b;b=b.nextSibling)A(b,c,d)&&a.a(b)&&F(e,b);return e}
function Ha(a,b,c,d,e){for(b=b.firstChild;b;b=b.nextSibling)A(b,c,d)&&a.a(b)&&F(e,b),Ha(a,b,c,d,e)}function Ga(a){if(a instanceof G){if(8==a.b)return"!";if(null===a.b)return"*"}return a.f()};!ra&&!v||v&&9<=Number(Ba)||ra&&za("1.9.1");v&&za("9");function Ka(a,b){if(!a||!b)return!1;if(a.contains&&1==b.nodeType)return a==b||a.contains(b);if("undefined"!=typeof a.compareDocumentPosition)return a==b||!!(a.compareDocumentPosition(b)&16);for(;b&&a!=b;)b=b.parentNode;return b==a}
function La(a,b){if(a==b)return 0;if(a.compareDocumentPosition)return a.compareDocumentPosition(b)&2?1:-1;if(v&&!(9<=Number(Ba))){if(9==a.nodeType)return-1;if(9==b.nodeType)return 1}if("sourceIndex"in a||a.parentNode&&"sourceIndex"in a.parentNode){var c=1==a.nodeType,d=1==b.nodeType;if(c&&d)return a.sourceIndex-b.sourceIndex;var e=a.parentNode,f=b.parentNode;return e==f?Ma(a,b):!c&&Ka(e,b)?-1*Na(a,b):!d&&Ka(f,a)?Na(b,a):(c?a.sourceIndex:e.sourceIndex)-(d?b.sourceIndex:f.sourceIndex)}d=9==a.nodeType?
a:a.ownerDocument||a.document;c=d.createRange();c.selectNode(a);c.collapse(!0);d=d.createRange();d.selectNode(b);d.collapse(!0);return c.compareBoundaryPoints(k.Range.START_TO_END,d)}function Na(a,b){var c=a.parentNode;if(c==b)return-1;for(var d=b;d.parentNode!=c;)d=d.parentNode;return Ma(d,a)}function Ma(a,b){for(var c=b;c=c.previousSibling;)if(c==a)return-1;return 1};function C(){this.b=this.a=null;this.l=0}function Oa(a){this.node=a;this.a=this.b=null}function Pa(a,b){if(!a.a)return b;if(!b.a)return a;for(var c=a.a,d=b.a,e=null,f=null,g=0;c&&d;){var f=c.node,h=d.node;f==h||f instanceof x&&h instanceof x&&f.a==h.a?(f=c,c=c.a,d=d.a):0<La(c.node,d.node)?(f=d,d=d.a):(f=c,c=c.a);(f.b=e)?e.a=f:a.a=f;e=f;g++}for(f=c||d;f;)f.b=e,e=e.a=f,g++,f=f.a;a.b=e;a.l=g;return a}function Qa(a,b){var c=new Oa(b);c.a=a.a;a.b?a.a.b=c:a.a=a.b=c;a.a=c;a.l++}
function F(a,b){var c=new Oa(b);c.b=a.b;a.a?a.b.a=c:a.a=a.b=c;a.b=c;a.l++}function Ra(a){return(a=a.a)?a.node:null}function Sa(a){return(a=Ra(a))?z(a):""}function H(a,b){return new Ta(a,!!b)}function Ta(a,b){this.f=a;this.b=(this.c=b)?a.b:a.a;this.a=null}function I(a){var b=a.b;if(null==b)return null;var c=a.a=b;a.b=a.c?b.b:b.a;return c.node};function n(a){this.i=a;this.b=this.g=!1;this.f=null}function J(a){return"\n  "+a.toString().split("\n").join("\n  ")}function Ua(a,b){a.g=b}function Va(a,b){a.b=b}function K(a,b){var c=a.a(b);return c instanceof C?+Sa(c):+c}function L(a,b){var c=a.a(b);return c instanceof C?Sa(c):""+c}function M(a,b){var c=a.a(b);return c instanceof C?!!c.l:!!c};function N(a,b,c){n.call(this,a.i);this.c=a;this.h=b;this.o=c;this.g=b.g||c.g;this.b=b.b||c.b;this.c==Wa&&(c.b||c.g||4==c.i||0==c.i||!b.f?b.b||b.g||4==b.i||0==b.i||!c.f||(this.f={name:c.f.name,s:b}):this.f={name:b.f.name,s:c})}m(N);
function O(a,b,c,d,e){b=b.a(d);c=c.a(d);var f;if(b instanceof C&&c instanceof C){b=H(b);for(d=I(b);d;d=I(b))for(e=H(c),f=I(e);f;f=I(e))if(a(z(d),z(f)))return!0;return!1}if(b instanceof C||c instanceof C){b instanceof C?(e=b,d=c):(e=c,d=b);f=H(e);for(var g=typeof d,h=I(f);h;h=I(f)){switch(g){case "number":h=+z(h);break;case "boolean":h=!!z(h);break;case "string":h=z(h);break;default:throw Error("Illegal primitive type for comparison.");}if(e==b&&a(h,d)||e==c&&a(d,h))return!0}return!1}return e?"boolean"==
typeof b||"boolean"==typeof c?a(!!b,!!c):"number"==typeof b||"number"==typeof c?a(+b,+c):a(b,c):a(+b,+c)}N.prototype.a=function(a){return this.c.m(this.h,this.o,a)};N.prototype.toString=function(){var a="Binary Expression: "+this.c,a=a+J(this.h);return a+=J(this.o)};function Xa(a,b,c,d){this.a=a;this.w=b;this.i=c;this.m=d}Xa.prototype.toString=function(){return this.a};var Ya={};
function P(a,b,c,d){if(Ya.hasOwnProperty(a))throw Error("Binary operator already created: "+a);a=new Xa(a,b,c,d);return Ya[a.toString()]=a}P("div",6,1,function(a,b,c){return K(a,c)/K(b,c)});P("mod",6,1,function(a,b,c){return K(a,c)%K(b,c)});P("*",6,1,function(a,b,c){return K(a,c)*K(b,c)});P("+",5,1,function(a,b,c){return K(a,c)+K(b,c)});P("-",5,1,function(a,b,c){return K(a,c)-K(b,c)});P("<",4,2,function(a,b,c){return O(function(a,b){return a<b},a,b,c)});
P(">",4,2,function(a,b,c){return O(function(a,b){return a>b},a,b,c)});P("<=",4,2,function(a,b,c){return O(function(a,b){return a<=b},a,b,c)});P(">=",4,2,function(a,b,c){return O(function(a,b){return a>=b},a,b,c)});var Wa=P("=",3,2,function(a,b,c){return O(function(a,b){return a==b},a,b,c,!0)});P("!=",3,2,function(a,b,c){return O(function(a,b){return a!=b},a,b,c,!0)});P("and",2,2,function(a,b,c){return M(a,c)&&M(b,c)});P("or",1,2,function(a,b,c){return M(a,c)||M(b,c)});function Q(a,b,c){this.a=a;this.b=b||1;this.f=c||1};function Za(a,b){if(b.a.length&&4!=a.i)throw Error("Primary expression must evaluate to nodeset if filter has predicate(s).");n.call(this,a.i);this.c=a;this.h=b;this.g=a.g;this.b=a.b}m(Za);Za.prototype.a=function(a){a=this.c.a(a);return $a(this.h,a)};Za.prototype.toString=function(){var a;a="Filter:"+J(this.c);return a+=J(this.h)};function ab(a,b){if(b.length<a.A)throw Error("Function "+a.j+" expects at least"+a.A+" arguments, "+b.length+" given");if(null!==a.v&&b.length>a.v)throw Error("Function "+a.j+" expects at most "+a.v+" arguments, "+b.length+" given");a.B&&r(b,function(b,d){if(4!=b.i)throw Error("Argument "+d+" to function "+a.j+" is not of type Nodeset: "+b);});n.call(this,a.i);this.h=a;this.c=b;Ua(this,a.g||ja(b,function(a){return a.g}));Va(this,a.D&&!b.length||a.C&&!!b.length||ja(b,function(a){return a.b}))}m(ab);
ab.prototype.a=function(a){return this.h.m.apply(null,la(a,this.c))};ab.prototype.toString=function(){var a="Function: "+this.h;if(this.c.length)var b=t(this.c,function(a,b){return a+J(b)},"Arguments:"),a=a+J(b);return a};function bb(a,b,c,d,e,f,g,h,p){this.j=a;this.i=b;this.g=c;this.D=d;this.C=e;this.m=f;this.A=g;this.v=void 0!==h?h:g;this.B=!!p}bb.prototype.toString=function(){return this.j};var cb={};
function R(a,b,c,d,e,f,g,h){if(cb.hasOwnProperty(a))throw Error("Function already created: "+a+".");cb[a]=new bb(a,b,c,d,!1,e,f,g,h)}R("boolean",2,!1,!1,function(a,b){return M(b,a)},1);R("ceiling",1,!1,!1,function(a,b){return Math.ceil(K(b,a))},1);R("concat",3,!1,!1,function(a,b){return t(ma(arguments,1),function(b,d){return b+L(d,a)},"")},2,null);R("contains",2,!1,!1,function(a,b,c){return q(L(b,a),L(c,a))},2);R("count",1,!1,!1,function(a,b){return b.a(a).l},1,1,!0);
R("false",2,!1,!1,function(){return!1},0);R("floor",1,!1,!1,function(a,b){return Math.floor(K(b,a))},1);R("id",4,!1,!1,function(a,b){function c(a){if(w){var b=e.all[a];if(b){if(b.nodeType&&a==b.id)return b;if(b.length)return ka(b,function(b){return a==b.id})}return null}return e.getElementById(a)}var d=a.a,e=9==d.nodeType?d:d.ownerDocument,d=L(b,a).split(/\s+/),f=[];r(d,function(a){a=c(a);!a||0<=ha(f,a)||f.push(a)});f.sort(La);var g=new C;r(f,function(a){F(g,a)});return g},1);
R("lang",2,!1,!1,function(){return!1},1);R("last",1,!0,!1,function(a){if(1!=arguments.length)throw Error("Function last expects ()");return a.f},0);R("local-name",3,!1,!0,function(a,b){var c=b?Ra(b.a(a)):a.a;return c?c.localName||c.nodeName.toLowerCase():""},0,1,!0);R("name",3,!1,!0,function(a,b){var c=b?Ra(b.a(a)):a.a;return c?c.nodeName.toLowerCase():""},0,1,!0);R("namespace-uri",3,!0,!1,function(){return""},0,1,!0);
R("normalize-space",3,!1,!0,function(a,b){return(b?L(b,a):z(a.a)).replace(/[\s\xa0]+/g," ").replace(/^\s+|\s+$/g,"")},0,1);R("not",2,!1,!1,function(a,b){return!M(b,a)},1);R("number",1,!1,!0,function(a,b){return b?K(b,a):+z(a.a)},0,1);R("position",1,!0,!1,function(a){return a.b},0);R("round",1,!1,!1,function(a,b){return Math.round(K(b,a))},1);R("starts-with",2,!1,!1,function(a,b,c){b=L(b,a);a=L(c,a);return 0==b.lastIndexOf(a,0)},2);R("string",3,!1,!0,function(a,b){return b?L(b,a):z(a.a)},0,1);
R("string-length",1,!1,!0,function(a,b){return(b?L(b,a):z(a.a)).length},0,1);R("substring",3,!1,!1,function(a,b,c,d){c=K(c,a);if(isNaN(c)||Infinity==c||-Infinity==c)return"";d=d?K(d,a):Infinity;if(isNaN(d)||-Infinity===d)return"";c=Math.round(c)-1;var e=Math.max(c,0);a=L(b,a);return Infinity==d?a.substring(e):a.substring(e,c+Math.round(d))},2,3);R("substring-after",3,!1,!1,function(a,b,c){b=L(b,a);a=L(c,a);c=b.indexOf(a);return-1==c?"":b.substring(c+a.length)},2);
R("substring-before",3,!1,!1,function(a,b,c){b=L(b,a);a=L(c,a);a=b.indexOf(a);return-1==a?"":b.substring(0,a)},2);R("sum",1,!1,!1,function(a,b){for(var c=H(b.a(a)),d=0,e=I(c);e;e=I(c))d+=+z(e);return d},1,1,!0);R("translate",3,!1,!1,function(a,b,c,d){b=L(b,a);c=L(c,a);var e=L(d,a);a={};for(d=0;d<c.length;d++){var f=c.charAt(d);f in a||(a[f]=e.charAt(d))}c="";for(d=0;d<b.length;d++)f=b.charAt(d),c+=f in a?a[f]:f;return c},3);R("true",2,!1,!1,function(){return!0},0);function G(a,b){this.h=a;this.c=void 0!==b?b:null;this.b=null;switch(a){case "comment":this.b=8;break;case "text":this.b=3;break;case "processing-instruction":this.b=7;break;case "node":break;default:throw Error("Unexpected argument");}}function db(a){return"comment"==a||"text"==a||"processing-instruction"==a||"node"==a}G.prototype.a=function(a){return null===this.b||this.b==a.nodeType};G.prototype.f=function(){return this.h};
G.prototype.toString=function(){var a="Kind Test: "+this.h;null===this.c||(a+=J(this.c));return a};function eb(a){this.b=a;this.a=0}function fb(a){a=a.match(gb);for(var b=0;b<a.length;b++)hb.test(a[b])&&a.splice(b,1);return new eb(a)}var gb=/\$?(?:(?![0-9-\.])(?:\*|[\w-\.]+):)?(?![0-9-\.])(?:\*|[\w-\.]+)|\/\/|\.\.|::|\d+(?:\.\d*)?|\.\d+|"[^"]*"|'[^']*'|[!<>]=|\s+|./g,hb=/^\s/;function S(a,b){return a.b[a.a+(b||0)]}function T(a){return a.b[a.a++]}function ib(a){return a.b.length<=a.a};function jb(a){n.call(this,3);this.c=a.substring(1,a.length-1)}m(jb);jb.prototype.a=function(){return this.c};jb.prototype.toString=function(){return"Literal: "+this.c};function E(a,b){this.j=a.toLowerCase();var c;c="*"==this.j?"*":"http://www.w3.org/1999/xhtml";this.c=b?b.toLowerCase():c}E.prototype.a=function(a){var b=a.nodeType;if(1!=b&&2!=b)return!1;b=void 0!==a.localName?a.localName:a.nodeName;return"*"!=this.j&&this.j!=b.toLowerCase()?!1:"*"==this.c?!0:this.c==(a.namespaceURI?a.namespaceURI.toLowerCase():"http://www.w3.org/1999/xhtml")};E.prototype.f=function(){return this.j};
E.prototype.toString=function(){return"Name Test: "+("http://www.w3.org/1999/xhtml"==this.c?"":this.c+":")+this.j};function kb(a,b){n.call(this,a.i);this.h=a;this.c=b;this.g=a.g;this.b=a.b;if(1==this.c.length){var c=this.c[0];c.u||c.c!=lb||(c=c.o,"*"!=c.f()&&(this.f={name:c.f(),s:null}))}}m(kb);function mb(){n.call(this,4)}m(mb);mb.prototype.a=function(a){var b=new C;a=a.a;9==a.nodeType?F(b,a):F(b,a.ownerDocument);return b};mb.prototype.toString=function(){return"Root Helper Expression"};function nb(){n.call(this,4)}m(nb);nb.prototype.a=function(a){var b=new C;F(b,a.a);return b};nb.prototype.toString=function(){return"Context Helper Expression"};
function ob(a){return"/"==a||"//"==a}kb.prototype.a=function(a){var b=this.h.a(a);if(!(b instanceof C))throw Error("Filter expression must evaluate to nodeset.");a=this.c;for(var c=0,d=a.length;c<d&&b.l;c++){var e=a[c],f=H(b,e.c.a),g;if(e.g||e.c!=pb)if(e.g||e.c!=qb)for(g=I(f),b=e.a(new Q(g));null!=(g=I(f));)g=e.a(new Q(g)),b=Pa(b,g);else g=I(f),b=e.a(new Q(g));else{for(g=I(f);(b=I(f))&&(!g.contains||g.contains(b))&&b.compareDocumentPosition(g)&8;g=b);b=e.a(new Q(g))}}return b};
kb.prototype.toString=function(){var a;a="Path Expression:"+J(this.h);if(this.c.length){var b=t(this.c,function(a,b){return a+J(b)},"Steps:");a+=J(b)}return a};function rb(a){n.call(this,4);this.c=a;Ua(this,ja(this.c,function(a){return a.g}));Va(this,ja(this.c,function(a){return a.b}))}m(rb);rb.prototype.a=function(a){var b=new C;r(this.c,function(c){c=c.a(a);if(!(c instanceof C))throw Error("Path expression must evaluate to NodeSet.");b=Pa(b,c)});return b};rb.prototype.toString=function(){return t(this.c,function(a,b){return a+J(b)},"Union Expression:")};function sb(a,b){this.a=a;this.b=!!b}
function $a(a,b,c){for(c=c||0;c<a.a.length;c++)for(var d=a.a[c],e=H(b),f=b.l,g,h=0;g=I(e);h++){var p=a.b?f-h:h+1;g=d.a(new Q(g,p,f));if("number"==typeof g)p=p==g;else if("string"==typeof g||"boolean"==typeof g)p=!!g;else if(g instanceof C)p=0<g.l;else throw Error("Predicate.evaluate returned an unexpected type.");if(!p){p=e;g=p.f;var y=p.a;if(!y)throw Error("Next must be called at least once before remove.");var D=y.b,y=y.a;D?D.a=y:g.a=y;y?y.b=D:g.b=D;g.l--;p.a=null}}return b}
sb.prototype.toString=function(){return t(this.a,function(a,b){return a+J(b)},"Predicates:")};function U(a,b,c,d){n.call(this,4);this.c=a;this.o=b;this.h=c||new sb([]);this.u=!!d;b=this.h;b=0<b.a.length?b.a[0].f:null;a.b&&b&&(a=b.name,a=w?a.toLowerCase():a,this.f={name:a,s:b.s});a:{a=this.h;for(b=0;b<a.a.length;b++)if(c=a.a[b],c.g||1==c.i||0==c.i){a=!0;break a}a=!1}this.g=a}m(U);
U.prototype.a=function(a){var b=a.a,c=null,c=this.f,d=null,e=null,f=0;c&&(d=c.name,e=c.s?L(c.s,a):null,f=1);if(this.u)if(this.g||this.c!=tb)if(a=H((new U(ub,new G("node"))).a(a)),b=I(a))for(c=this.m(b,d,e,f);null!=(b=I(a));)c=Pa(c,this.m(b,d,e,f));else c=new C;else c=B(this.o,b,d,e),c=$a(this.h,c,f);else c=this.m(a.a,d,e,f);return c};U.prototype.m=function(a,b,c,d){a=this.c.f(this.o,a,b,c);return a=$a(this.h,a,d)};
U.prototype.toString=function(){var a;a="Step:"+J("Operator: "+(this.u?"//":"/"));this.c.j&&(a+=J("Axis: "+this.c));a+=J(this.o);if(this.h.a.length){var b=t(this.h.a,function(a,b){return a+J(b)},"Predicates:");a+=J(b)}return a};function vb(a,b,c,d){this.j=a;this.f=b;this.a=c;this.b=d}vb.prototype.toString=function(){return this.j};var wb={};function V(a,b,c,d){if(wb.hasOwnProperty(a))throw Error("Axis already created: "+a);b=new vb(a,b,c,!!d);return wb[a]=b}
V("ancestor",function(a,b){for(var c=new C,d=b;d=d.parentNode;)a.a(d)&&Qa(c,d);return c},!0);V("ancestor-or-self",function(a,b){var c=new C,d=b;do a.a(d)&&Qa(c,d);while(d=d.parentNode);return c},!0);
var lb=V("attribute",function(a,b){var c=new C,d=a.f();if("style"==d&&w&&b.style)return F(c,new x(b.style,b,"style",b.style.cssText)),c;var e=b.attributes;if(e)if(a instanceof G&&null===a.b||"*"==d)for(var d=0,f;f=e[d];d++)w?f.nodeValue&&F(c,Da(b,f)):F(c,f);else(f=e.getNamedItem(d))&&(w?f.nodeValue&&F(c,Da(b,f)):F(c,f));return c},!1),tb=V("child",function(a,b,c,d,e){return(w?Ia:Ja).call(null,a,b,l(c)?c:null,l(d)?d:null,e||new C)},!1,!0);V("descendant",B,!1,!0);
var ub=V("descendant-or-self",function(a,b,c,d){var e=new C;A(b,c,d)&&a.a(b)&&F(e,b);return B(a,b,c,d,e)},!1,!0),pb=V("following",function(a,b,c,d){var e=new C;do for(var f=b;f=f.nextSibling;)A(f,c,d)&&a.a(f)&&F(e,f),e=B(a,f,c,d,e);while(b=b.parentNode);return e},!1,!0);V("following-sibling",function(a,b){for(var c=new C,d=b;d=d.nextSibling;)a.a(d)&&F(c,d);return c},!1);V("namespace",function(){return new C},!1);
var xb=V("parent",function(a,b){var c=new C;if(9==b.nodeType)return c;if(2==b.nodeType)return F(c,b.ownerElement),c;var d=b.parentNode;a.a(d)&&F(c,d);return c},!1),qb=V("preceding",function(a,b,c,d){var e=new C,f=[];do f.unshift(b);while(b=b.parentNode);for(var g=1,h=f.length;g<h;g++){var p=[];for(b=f[g];b=b.previousSibling;)p.unshift(b);for(var y=0,D=p.length;y<D;y++)b=p[y],A(b,c,d)&&a.a(b)&&F(e,b),e=B(a,b,c,d,e)}return e},!0,!0);
V("preceding-sibling",function(a,b){for(var c=new C,d=b;d=d.previousSibling;)a.a(d)&&Qa(c,d);return c},!0);var yb=V("self",function(a,b){var c=new C;a.a(b)&&F(c,b);return c},!1);function zb(a){n.call(this,1);this.c=a;this.g=a.g;this.b=a.b}m(zb);zb.prototype.a=function(a){return-K(this.c,a)};zb.prototype.toString=function(){return"Unary Expression: -"+J(this.c)};function Ab(a){n.call(this,1);this.c=a}m(Ab);Ab.prototype.a=function(){return this.c};Ab.prototype.toString=function(){return"Number: "+this.c};function Bb(a,b){this.a=a;this.b=b}function Cb(a){for(var b,c=[];;){W(a,"Missing right hand side of binary expression.");b=Db(a);var d=T(a.a);if(!d)break;var e=(d=Ya[d]||null)&&d.w;if(!e){a.a.a--;break}for(;c.length&&e<=c[c.length-1].w;)b=new N(c.pop(),c.pop(),b);c.push(b,d)}for(;c.length;)b=new N(c.pop(),c.pop(),b);return b}function W(a,b){if(ib(a.a))throw Error(b);}function Eb(a,b){var c=T(a.a);if(c!=b)throw Error("Bad token, expected: "+b+" got: "+c);}
function Fb(a){a=T(a.a);if(")"!=a)throw Error("Bad token: "+a);}function Gb(a){a=T(a.a);if(2>a.length)throw Error("Unclosed literal string");return new jb(a)}
function Hb(a){var b,c=[],d;if(ob(S(a.a))){b=T(a.a);d=S(a.a);if("/"==b&&(ib(a.a)||"."!=d&&".."!=d&&"@"!=d&&"*"!=d&&!/(?![0-9])[\w]/.test(d)))return new mb;d=new mb;W(a,"Missing next location step.");b=Ib(a,b);c.push(b)}else{a:{b=S(a.a);d=b.charAt(0);switch(d){case "$":throw Error("Variable reference not allowed in HTML XPath");case "(":T(a.a);b=Cb(a);W(a,'unclosed "("');Eb(a,")");break;case '"':case "'":b=Gb(a);break;default:if(isNaN(+b))if(!db(b)&&/(?![0-9])[\w]/.test(d)&&"("==S(a.a,1)){b=T(a.a);
b=cb[b]||null;T(a.a);for(d=[];")"!=S(a.a);){W(a,"Missing function argument list.");d.push(Cb(a));if(","!=S(a.a))break;T(a.a)}W(a,"Unclosed function argument list.");Fb(a);b=new ab(b,d)}else{b=null;break a}else b=new Ab(+T(a.a))}"["==S(a.a)&&(d=new sb(Jb(a)),b=new Za(b,d))}if(b)if(ob(S(a.a)))d=b;else return b;else b=Ib(a,"/"),d=new nb,c.push(b)}for(;ob(S(a.a));)b=T(a.a),W(a,"Missing next location step."),b=Ib(a,b),c.push(b);return new kb(d,c)}
function Ib(a,b){var c,d,e;if("/"!=b&&"//"!=b)throw Error('Step op should be "/" or "//"');if("."==S(a.a))return d=new U(yb,new G("node")),T(a.a),d;if(".."==S(a.a))return d=new U(xb,new G("node")),T(a.a),d;var f;if("@"==S(a.a))f=lb,T(a.a),W(a,"Missing attribute name");else if("::"==S(a.a,1)){if(!/(?![0-9])[\w]/.test(S(a.a).charAt(0)))throw Error("Bad token: "+T(a.a));c=T(a.a);f=wb[c]||null;if(!f)throw Error("No axis with name: "+c);T(a.a);W(a,"Missing node name")}else f=tb;c=S(a.a);if(/(?![0-9])[\w\*]/.test(c.charAt(0)))if("("==
S(a.a,1)){if(!db(c))throw Error("Invalid node type: "+c);c=T(a.a);if(!db(c))throw Error("Invalid type name: "+c);Eb(a,"(");W(a,"Bad nodetype");e=S(a.a).charAt(0);var g=null;if('"'==e||"'"==e)g=Gb(a);W(a,"Bad nodetype");Fb(a);c=new G(c,g)}else if(c=T(a.a),e=c.indexOf(":"),-1==e)c=new E(c);else{var g=c.substring(0,e),h;if("*"==g)h="*";else if(h=a.b(g),!h)throw Error("Namespace prefix not declared: "+g);c=c.substr(e+1);c=new E(c,h)}else throw Error("Bad token: "+T(a.a));e=new sb(Jb(a),f.a);return d||
new U(f,c,e,"//"==b)}function Jb(a){for(var b=[];"["==S(a.a);){T(a.a);W(a,"Missing predicate expression.");var c=Cb(a);b.push(c);W(a,"Unclosed predicate expression.");Eb(a,"]")}return b}function Db(a){if("-"==S(a.a))return T(a.a),new zb(Db(a));var b=Hb(a);if("|"!=S(a.a))a=b;else{for(b=[b];"|"==T(a.a);)W(a,"Missing next union location path."),b.push(Hb(a));a.a.a--;a=new rb(b)}return a};function Kb(a){switch(a.nodeType){case 1:return ea(Lb,a);case 9:return Kb(a.documentElement);case 11:case 10:case 6:case 12:return Mb;default:return a.parentNode?Kb(a.parentNode):Mb}}function Mb(){return null}function Lb(a,b){if(a.prefix==b)return a.namespaceURI||"http://www.w3.org/1999/xhtml";var c=a.getAttributeNode("xmlns:"+b);return c&&c.specified?c.value||null:a.parentNode&&9!=a.parentNode.nodeType?Lb(a.parentNode,b):null};function Nb(a,b){if(!a.length)throw Error("Empty XPath expression.");var c=fb(a);if(ib(c))throw Error("Invalid XPath expression.");b?"function"==aa(b)||(b=da(b.lookupNamespaceURI,b)):b=function(){return null};var d=Cb(new Bb(c,b));if(!ib(c))throw Error("Bad token: "+T(c));this.evaluate=function(a,b){var c=d.a(new Q(a));return new Y(c,b)}}
function Y(a,b){if(0==b)if(a instanceof C)b=4;else if("string"==typeof a)b=2;else if("number"==typeof a)b=1;else if("boolean"==typeof a)b=3;else throw Error("Unexpected evaluation result.");if(2!=b&&1!=b&&3!=b&&!(a instanceof C))throw Error("value could not be converted to the specified type");this.resultType=b;var c;switch(b){case 2:this.stringValue=a instanceof C?Sa(a):""+a;break;case 1:this.numberValue=a instanceof C?+Sa(a):+a;break;case 3:this.booleanValue=a instanceof C?0<a.l:!!a;break;case 4:case 5:case 6:case 7:var d=
H(a);c=[];for(var e=I(d);e;e=I(d))c.push(e instanceof x?e.a:e);this.snapshotLength=a.l;this.invalidIteratorState=!1;break;case 8:case 9:d=Ra(a);this.singleNodeValue=d instanceof x?d.a:d;break;default:throw Error("Unknown XPathResult type.");}var f=0;this.iterateNext=function(){if(4!=b&&5!=b)throw Error("iterateNext called with wrong result type");return f>=c.length?null:c[f++]};this.snapshotItem=function(a){if(6!=b&&7!=b)throw Error("snapshotItem called with wrong result type");return a>=c.length||
0>a?null:c[a]}}Y.ANY_TYPE=0;Y.NUMBER_TYPE=1;Y.STRING_TYPE=2;Y.BOOLEAN_TYPE=3;Y.UNORDERED_NODE_ITERATOR_TYPE=4;Y.ORDERED_NODE_ITERATOR_TYPE=5;Y.UNORDERED_NODE_SNAPSHOT_TYPE=6;Y.ORDERED_NODE_SNAPSHOT_TYPE=7;Y.ANY_UNORDERED_NODE_TYPE=8;Y.FIRST_ORDERED_NODE_TYPE=9;function Ob(a){this.lookupNamespaceURI=Kb(a)}
function Pb(a,b){var c=a||k,d=c.Document&&c.Document.prototype||c.document;if(!d.evaluate||b)c.XPathResult=Y,d.evaluate=function(a,b,c,d){return(new Nb(a,c)).evaluate(b,d)},d.createExpression=function(a,b){return new Nb(a,b)},d.createNSResolver=function(a){return new Ob(a)}}var Qb=["wgxpath","install"],Z=k;Qb[0]in Z||!Z.execScript||Z.execScript("var "+Qb[0]);for(var Rb;Qb.length&&(Rb=Qb.shift());)Qb.length||void 0===Pb?Z[Rb]?Z=Z[Rb]:Z=Z[Rb]={}:Z[Rb]=Pb;module.exports.install=Pb;module.exports.XPathResultType={ANY_TYPE:0,NUMBER_TYPE:1,STRING_TYPE:2,BOOLEAN_TYPE:3,UNORDERED_NODE_ITERATOR_TYPE:4,ORDERED_NODE_ITERATOR_TYPE:5,UNORDERED_NODE_SNAPSHOT_TYPE:6,ORDERED_NODE_SNAPSHOT_TYPE:7,ANY_UNORDERED_NODE_TYPE:8,FIRST_ORDERED_NODE_TYPE:9};}).call(global)

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],6:[function(require,module,exports){
Mousetrap = require('mousetrap');
katex = require('../lib/katex/katex-modified.min.js');
MathYlemBackend = require('./mathylem_backend.js');
MathYlemUtils = require('./mathylem_utils.js');
MathYlemSymbols = require('./mathylem_symbols.js');
debounce = require('throttle-debounce/debounce');

var MathYlem = function (mathylem_div, config) {
  var self = this;
  var config = config || {};
  var options = config['options'] || {};

  if (typeof mathylem_div == 'string' || mathylem_div instanceof String) {
    mathylem_div = document.getElementById(mathylem_div);
  }

  if (!(mathylem_div.id)) {
    var i = MathYlem.max_uid || 0;
    while (document.getElementById('mathylem_uid_' + i)) i++;
    MathYlem.max_uid = i;
    mathylem_div.id = 'mathylem_uid_' + i;
  }
  mathylem_div.className += " mathylem";
  var i = MathYlem.max_tabIndex || 0;
  mathylem_div.tabIndex = i;
  MathYlem.max_tabIndex = i + 1;

  this.editor_active = true;
  this.empty_content = options['empty_content'] || '\\red{[?]}';
  this.editor = mathylem_div;
  this.blacklist = [];
  this.maintain_focus = false;
  this.processed_fake_input = 20;
  this.autoreplace = true;
  this.ready = false;

  MathYlem.instances[mathylem_div.id] = this;

  config['parent'] = self;

  if (/Mobi/.test(navigator.userAgent)) {
    var fakeInput = document.createElement('textarea');
    this.fakeInput = fakeInput;

    fakeInput.setAttribute('id', 'fakeInput_' + mathylem_div.id);
    fakeInput.setAttribute('autocapitalize', 'none');
    fakeInput.setAttribute('autocomplete', 'off');
    fakeInput.setAttribute('autocorrect', 'off');
    fakeInput.setAttribute('spellcheck', 'false');
    mathylem_div.insertAdjacentElement('afterend', fakeInput);

    fakeInput.style.position = 'absolute';
    fakeInput.style.top = mathylem_div.offsetTop + 'px';
    fakeInput.style.left = mathylem_div.offsetLeft + 'px';
    fakeInput.style.width = '1px';
    fakeInput.style.height = '1px';
    fakeInput.style.opacity = 0;
    fakeInput.style.padding = 0;
    fakeInput.style.margin = 0;
    fakeInput.style.border = 0;
    fakeInput.addEventListener('input', debounce(100, function () {
      for (; self.processed_fake_input > self.fakeInput.value.length; self.processed_fake_input--) {
        Mousetrap.trigger('backspace');
      }
      if (self.fakeInput.value.length == 0) {
        self.processed_fake_input = 20;
        self.fakeInput.value = '____________________';
      }
      for (; self.processed_fake_input < self.fakeInput.value.length; self.processed_fake_input++) {
        var c = self.fakeInput.value[self.processed_fake_input];
        if (c != c.toLowerCase()) { Mousetrap.trigger('shift+' + c.toLowerCase()) } else if (c == ' ') { Mousetrap.trigger('space') } else { Mousetrap.trigger(c) }
      }
    }));
    fakeInput.addEventListener('keydown', function (e) {
      if (e.keycode == 8) {
        Mousetrap.trigger('backspace');
        e.preventDefault();
      } else if (e.keycode == 13) {
        Mousetrap.trigger('enter');
        e.preventDefault();
      }
    });
    fakeInput.addEventListener('focus', function () {
      self.activate(false);
    });
    fakeInput.addEventListener('blur', function () {
      if (self.maintain_focus) {
        self.maintain_focus = false;
        this.focus();
      } else { self.deactivate(false) }
    });
    fakeInput.value = '____________________';
  }

  this.backend = new MathYlemBackend(config);
  this.temp_cursor = {'node': null, 'caret': 0};
  this.editor.addEventListener('click', function () {
    var g = MathYlem.instances[this.id];
    var b = g.backend;
    if (g.editor_active) { return }
    g.maintain_focus = true;
    setTimeout(function () {
      g.maintain_focus = false;
    }, 500);
    b.sel_clear();
    b.current = b.doc.root().lastChild;
    b.caret = MathYlemUtils.get_length(b.current);
    g.activate(true);
  });
  if (MathYlem.ready && !this.ready) {
    this.ready = true;
    this.backend.fire_event('ready');
    this.render(true);
  }
  this.deactivate(true);
  this.recompute_locations_paths();
};

MathYlem.instances = {};
MathYlem.ready = false;

MathYlem.active_mathylem = null;

MathYlem.add_symbols = function (symbols) {
  for (var s in symbols) {
    var new_syms = MathYlemSymbols.add_symbols(s, symbols[s], MathYlemSymbols.symbols);
    for (var s in new_syms) { MathYlemSymbols.symbols[s] = new_syms[s] }
  }
  for (var i in MathYlem.instances) {
    for (var s in symbols) {
      MathYlem.instances[i].backend.symbols[s] = JSON.parse(JSON.stringify(symbols[s]));
    }
  }
};

MathYlem.set_global_symbols = function (symbols) {
  MathYlemSymbols.symbols = {};
  MathYlem.add_symbols(symbols);
};

MathYlem.reset_global_symbols = function () {
  for (var i in MathYlem.instances) {
    MathYlem.instances[i].backend.symbols = JSON.parse(JSON.stringify(MathYlemSymbols.symbols));
  }
};

MathYlem.init_symbols = function (symbols) {
  var all_ready = function () {
    MathYlem.register_keyboard_handlers();
    for (var i in MathYlem.instances) {
      MathYlem.instances[i].ready = true;
      MathYlem.instances[i].render(true);
      MathYlem.instances[i].backend.symbols = JSON.parse(JSON.stringify(MathYlemSymbols.symbols));
      MathYlem.instances[i].backend.fire_event('ready');
    }
    MathYlemBackend.ready = true;
  };
  if (!(Array.isArray(symbols))) {
    symbols = [symbols];
  }
  var calls = [];
  for (var i = 0; i < symbols.length; i++) {
    var x = (function outer (j) {
      return function (callback) {
        var req = new XMLHttpRequest();
        req.onload = function () {
          var syms = JSON.parse(this.responseText);
          for (var s in syms) {
            var new_syms = MathYlemSymbols.add_symbols(s, syms[s], MathYlemSymbols.symbols);
            for (var s in new_syms) { MathYlemSymbols.symbols[s] = new_syms[s] }
          }
          callback();
        };
        req.open('get', symbols[j], true);
        req.send();
      };
    }(i));
    calls.push(x);
  }
  calls.push(all_ready);
  var j = 0;
  var cb = function () {
    j += 1;
    if (j < calls.length) calls[j](cb);
  };
  if (calls.length > 0) calls[0](cb);
};

MathYlem.prototype.is_changed = function () {
  var bb = this.editor.getElementsByClassName('katex')[0];
  if (!bb) { return }
  var rect = bb.getBoundingClientRect();
  var ans = !this.bounding_box || this.bounding_box.top != rect.top || this.bounding_box.bottom != rect.bottom || this.bounding_box.right != rect.right || this.bounding_box.left != rect.left;
  this.bounding_box = rect;
  return ans;
};

MathYlem.prototype.recompute_locations_paths = function () {
  var ans = [];
  var bb = this.editor.getElementsByClassName('katex')[0];
  if (!bb) { return }
  var rect = bb.getBoundingClientRect();
  ans.push({
    'path': 'all',
    'top': rect.top,
    'bottom': rect.bottom,
    'left': rect.left,
    'right': rect.right
  });
  var elts = this.editor.getElementsByClassName('mathylem_elt');
  for (var i = 0; i < elts.length; i++) {
    var elt = elts[i];
    if (elt.nodeName == 'mstyle') { continue }
    var rect = elt.getBoundingClientRect();
    if (rect.top == 0 && rect.bottom == 0 && rect.left == 0 && rect.right == 0) { continue }
    var cl = elt.className.split(/\s+/);
    for (var j = 0; j < cl.length; j++) {
      if (cl[j].startsWith('mathylem_loc')) {
        ans.push({
          'path': cl[j],
          'top': rect.top,
          'bottom': rect.bottom,
          'left': rect.left,
          'right': rect.right,
          'mid_x': (rect.left + rect.right) / 2,
          'mid_y': (rect.bottom + rect.top) / 2,
          'blank': cl.indexOf('mathylem_blank') >= 0
        });
        break;
      }
    }
  }
  this.boxes = ans;
};

MathYlem.get_loc = function (x, y, current_node, current_caret) {
  var g = MathYlem.active_mathylem;
  var min_dist = -1;
  var mid_dist = 0;
  var opt = null;
  // check if we go to first or last element
  if (current_node) {
    var current_path = MathYlemUtils.path_to(current_node);
    var current_pos = parseInt(current_path.substring(current_path.lastIndexOf('e') + 1));
  }

  var boxes = g.boxes;
  if (!boxes) { return }
  if (current_node) {
    current_path = current_path.replace(/e[0-9]+$/, 'e');
    var boxes2 = [];
    for (var i = 0; i < boxes.length; i++) {
      if (boxes[i].path == 'all') { continue }
      var loc = boxes[i].path.substring(0, boxes[i].path.lastIndexOf('_'));
      loc = loc.replace(/e[0-9]+$/, 'e');
      if (loc == current_path) {
        boxes2.push(boxes[i]);
      }
    }
    boxes = boxes2;
  }
  if (!boxes) { return }
  for (var i = 0; i < boxes.length; i++) {
    var box = boxes[i];
    if (box.path == 'all') {
      if (!opt) { opt = { 'path': 'mathylem_loc_m_e1_0' } }
      continue;
    }
    var xdist = Math.max(box.left - x, x - box.right, 0);
    var ydist = Math.max(box.top - y, y - box.bottom, 0);
    var dist = Math.sqrt(xdist * xdist + ydist * ydist);
    if (min_dist == -1 || dist < min_dist) {
      min_dist = dist;
      mid_dist = x - box.mid_x;
      opt = box;
    }
  }
  var loc = opt.path.substring('mathylem_loc'.length);
  loc = loc.replace(/_/g, '/');
  loc = loc.replace(/([0-9]+)(?=.*?\/)/g, '[$1]');
  var cur = g.backend.doc.xpath_node(loc.substring(0, loc.lastIndexOf('/')), g.backend.doc.root());
  var car = parseInt(loc.substring(loc.lastIndexOf('/') + 1));
  // Check if we want the cursor before or after the element
  if (mid_dist > 0 && !(opt.blank)) {
    car++;
  }
  var ans = {
    'current': cur,
    'caret': car,
    'pos': 'none'
  };
  if (current_node && opt) {
    var opt_pos = parseInt(opt.path.substring(opt.path.lastIndexOf('e') + 1, opt.path.lastIndexOf('_')));
    if (opt_pos < current_pos) { ans['pos'] = 'left' } else if (opt_pos > current_pos) { ans['pos'] = 'right' } else if (car < current_caret) { ans['pos'] = 'left' } else if (car > current_caret) { ans['pos'] = 'right' }
  }
  return ans;
};

MathYlem.mouse_up = function (e) {
  MathYlem.kb.is_mouse_down = false;
  var g = MathYlem.active_mathylem;
  if (g) { g.render(true) }
};

MathYlem.mouse_down = function (e) {
  var n = e.target;
  MathYlem.kb.is_mouse_down = true;
  while (n != null) {
    if (n.id in MathYlem.instances) {
      var g = MathYlem.active_mathylem;
      if (MathYlem.instances[n.id] == g) {
        g.maintain_focus = true;
        setTimeout(function () {
          g.maintain_focus = false;
        }, 500);
        if (e.shiftKey) {
          g.select_to(e.clientX, e.clientY, true);
        } else {
          var loc = e.touches ? MathYlem.get_loc(e.touches[0].clientX, e.touches[0].clientY) : MathYlem.get_loc(e.clientX, e.clientY);
          if (!loc) { return }
          var b = g.backend;
          b.current = loc.current;
          b.caret = loc.caret;
          b.sel_status = MathYlemBackend.SEL_NONE;
        }
        g.render(true);
      } else if (g) { g.deactivate(true) }
      return;
    }
    n = n.parentNode;
  }
  MathYlem.active_mathylem = null;
  for (var i in MathYlem.instances) {
    MathYlem.instances[i].deactivate(true);
  }
};

MathYlem.mouse_move = function (e) {
  var g = MathYlem.active_mathylem;
  if (!g) { return }
  if (!MathYlem.kb.is_mouse_down) {
    var bb = g.editor;
    var rect = bb.getBoundingClientRect();
    if ((e.clientX < rect.left || e.clientX > rect.right) || (e.clientY > rect.bottom || e.clientY < rect.top)) {
      g.temp_cursor = {
        'node': null,
        'caret': 0
      };
    } else {
      var loc = MathYlem.get_loc(e.clientX, e.clientY);
      if (!loc) { return }
      g.temp_cursor = {
        'node': loc.current,
        'caret': loc.caret
      };
    }
  } else {
    g.select_to(e.clientX, e.clientY, true);
  }
  g.render(g.is_changed());
};

MathYlem.touch_move = function (e) {
  var g = MathYlem.active_mathylem;
  if (!g) { return }
  g.select_to(e.touches[0].clientX, e.touches[0].clientY, true);
  g.render(g.is_changed());
};

MathYlem.prototype.select_to = function (x, y, mouse) {
  var sel_caret = this.backend.caret;
  var sel_cursor = this.backend.current;
  if (this.backend.sel_status == MathYlemBackend.SEL_CURSOR_AT_START) {
    sel_cursor = this.backend.sel_end.node;
    sel_caret = this.backend.sel_end.caret;
  } else if (this.backend.sel_status == MathYlemBackend.SEL_CURSOR_AT_END) {
    sel_cursor = this.backend.sel_start.node;
    sel_caret = this.backend.sel_start.caret;
  }
  var loc = MathYlem.get_loc(x, y, sel_cursor, sel_caret);
  if (!loc) { return }
  this.backend.select_to(loc, sel_cursor, sel_caret, mouse);
};

if ('ontouchstart' in window) {
  window.addEventListener('touchstart', MathYlem.mouse_down, false);
  window.addEventListener('touchmove', MathYlem.touch_move, false);
} else {
  window.addEventListener('mousedown', MathYlem.mouse_down, false);
  window.addEventListener('mouseup', MathYlem.mouse_up, false);
  window.addEventListener('mousemove', MathYlem.mouse_move, false);
}

MathYlem.prototype.render_node = function (t) {
  // All the interesting work is done by transform.  This function just adds in the cursor and selection-start cursor
  var output = '';
  if (t == 'render') {
    var root = this.backend.doc.root();
    this.backend.add_paths(root, 'm');
    this.backend.temp_cursor = this.temp_cursor;
    this.backend.add_classes_cursors(root);
    this.backend.current.setAttribute('current', 'yes');
    if (this.temp_cursor.node) this.temp_cursor.node.setAttribute('temp', 'yes');
    output = this.backend.get_content('latex', true);
    this.backend.remove_cursors_classes(root);
    output = output.replace(new RegExp('&amp;', 'g'), '&');
    return output;
  } else {
    output = this.backend.get_content(t);
  }
  return output;
};

MathYlem.prototype.render = function (updated) {
  if (!this.editor_active && this.backend.doc.is_blank()) {
    katex.render(this.empty_content, this.editor);
    return;
  }
  var tex = this.render_node('render');
  katex.render(tex, this.editor);
  if (updated) {
    this.recompute_locations_paths();
  }
};

MathYlem.prototype.activate = function (focus) {
  MathYlem.active_mathylem = this;
  this.editor_active = true;
  this.editor.className = this.editor.className.replace(new RegExp('(\\s|^)mathylem_inactive(\\s|$)'), ' mathylem_active ');
  if (focus) {
    if (this.fakeInput) {
      this.fakeInput.style.top = this.editor.offsetTop + 'px';
      this.fakeInput.style.left = this.editor.offsetLeft + 'px';
      this.fakeInput.focus();
      this.fakeInput.setSelectionRange(this.fakeInput.value.length, this.fakeInput.value.length);
    } else { this.editor.focus() }
  }
  if (this.ready) {
    this.render(true);
    this.backend.fire_event('focus', {'focused': true});
  }
};

MathYlem.prototype.deactivate = function (blur) {
  this.editor_active = false;
  var r1 = new RegExp('(?:\\s|^)mathylem_active(?:\\s|$)');
  var r2 = new RegExp('(?:\\s|^)mathylem_inactive(?:\\s|$)');
  if (this.editor.className.match(r1)) {
    this.editor.className = this.editor.className.replace(r1, ' mathylem_inactive ');
  } else if (!this.editor.className.match(r2)) {
    this.editor.className += ' mathylem_inactive ';
  }
  if (blur && this.fakeInput) { this.fakeInput.blur() }
  if (this.ready) {
    this.render();
    this.backend.fire_event('focus', {'focused': false});
  }
};

// Keyboard stuff

MathYlem.kb = {};

MathYlem.kb.is_mouse_down = false;

/* keyboard behaviour definitions */

// keys aside from 0-9,a-z,A-Z
MathYlem.kb.k_chars = {
  '=': '=',
  '+': '+',
  '-': '-',
  '*': '*',
  '.': '.',
  ',': ',',
  'shift+/': '/',
  'shift+=': '+'
};
MathYlem.kb.k_syms = {
  '/': 'frac',
  '^': 'power',
  '(': 'paren',
  '<': 'less',
  '>': 'greater',
  '_': 'sub',
  '|': 'abs',
  '!': 'fact',
  'shift+up': 'power',
  'shift+down': 'sub'
};
MathYlem.kb.k_controls = {
  'up': 'up',
  'down': 'down',
  'right': 'right',
  'left': 'left',
  'alt+k': 'up',
  'alt+j': 'down',
  'alt+l': 'right',
  'alt+h': 'left',
  'space': 'spacebar',
  'home': 'home',
  'end': 'end',
  'backspace': 'backspace',
  'del': 'delete_key',
  'mod+a': 'sel_all',
  'mod+c': 'sel_copy',
  'mod+x': 'sel_cut',
  'mod+v': 'sel_paste',
  'mod+z': 'undo',
  'mod+y': 'redo',
  'enter': 'done',
  'mod+shift+right': 'list_extend_copy_right',
  'mod+shift+left': 'list_extend_copy_left',
  'mod+right': 'list_extend_right',
  'mod+left': 'list_extend_left',
  'mod+up': 'list_extend_up',
  'mod+down': 'list_extend_down',
  'mod+shift+up': 'list_extend_copy_up',
  'mod+shift+down': 'list_extend_copy_down',
  'mod+backspace': 'list_remove',
  'mod+shift+backspace': 'list_remove_row',
  'shift+left': 'sel_left',
  'shift+right': 'sel_right',
  ')': 'right_paren',
  '\\': 'backslash',
  'tab': 'tab'
};

// letters

for (var i = 65; i <= 90; i++) {
  MathYlem.kb.k_chars[String.fromCharCode(i).toLowerCase()] = String.fromCharCode(i).toLowerCase();
  MathYlem.kb.k_chars['shift+' + String.fromCharCode(i).toLowerCase()] = String.fromCharCode(i).toUpperCase();
}

// numbers

for (var i = 48; i <= 57; i++) { MathYlem.kb.k_chars[String.fromCharCode(i)] = String.fromCharCode(i) }

MathYlem.register_keyboard_handlers = function () {
  Mousetrap.addKeycodes({173: '-'}); // Firefox's special minus (needed for _ = sub binding)
  for (var i in MathYlem.kb.k_chars) {
    Mousetrap.bind(i, (function (i) {
      return function () {
        if (!MathYlem.active_mathylem) return true;
        MathYlem.active_mathylem.temp_cursor.node = null;
        MathYlem.active_mathylem.backend.insert_string(MathYlem.kb.k_chars[i]);
        MathYlem.active_mathylem.render(true);
        return false;
      };
    }(i)));
  }
  for (var i in MathYlem.kb.k_syms) {
    Mousetrap.bind(i, (function (i) {
      return function () {
        if (!MathYlem.active_mathylem) return true;
        MathYlem.active_mathylem.temp_cursor.node = null;
        MathYlem.active_mathylem.backend.insert_symbol(MathYlem.kb.k_syms[i]);
        MathYlem.active_mathylem.render(true);
        return false;
      };
    }(i)));
  }
  for (var i in MathYlem.kb.k_controls) {
    Mousetrap.bind(i, (function (i) {
      return function () {
        if (!MathYlem.active_mathylem) return true;
        MathYlem.active_mathylem.backend[MathYlem.kb.k_controls[i]]();
        MathYlem.active_mathylem.temp_cursor.node = null;
        MathYlem.active_mathylem.render(['up', 'down', 'right', 'left', 'home', 'end', 'sel_left', 'sel_right'].indexOf(i) < 0);
        MathYlem.active_mathylem.render(false);
        return false;
      };
    }(i)));
  }
};

module.exports = MathYlem;

},{"../lib/katex/katex-modified.min.js":1,"./mathylem_backend.js":7,"./mathylem_symbols.js":9,"./mathylem_utils.js":10,"mousetrap":2,"throttle-debounce/debounce":3}],7:[function(require,module,exports){
Mousetrap = require('mousetrap');
katex = require('../lib/katex/katex-modified.min.js');
MathYlemUtils = require('./mathylem_utils.js');
MathYlemDoc = require('./mathylem_doc.js');
MathYlemSymbols = require('./mathylem_symbols.js');

if (!String.prototype.startsWith) {
  String.prototype.startsWith = function (searchString, position) {
    position = position || 0;
    return this.substr(position, searchString.length) == searchString;
  };
}
if (!String.prototype.endsWith) {
  String.prototype.endsWith = function (searchString, position) {
    position = position || this.length;
    position -= searchString.length;
    return this.indexOf(searchString, position) != -1;
  };
}
String.prototype.splice = function (idx, s) {
  return (this.slice(0, idx) + s + this.slice(idx));
};
String.prototype.splicen = function (idx, s, n) {
  return (this.slice(0, idx) + s + this.slice(idx + n));
};
String.prototype.search_at = function (idx, s) {
  return (this.substring(idx - s.length, idx) == s);
};

var MathYlemBackend = function (config) {
  var config = config || {};
  var events = config['events'] || {};
  var options = config['options'] || {};
  this.parent = config['parent'];

  this.blacklist = [];
  this.autoreplace = true;
  this.ready = false;
  this.events = {};

  var evts = ['ready', 'change', 'left_end', 'right_end', 'done', 'completion', 'debug', 'error', 'focus'];

  for (var i = 0; i < evts.length; i++) {
    var e = evts[i];
    if (e in events) this.events[e] = e in events ? events[e] : null;
  }

  var opts = ['blank_caret', 'empty_content', 'blacklist', 'autoreplace'];

  for (var i = 0; i < opts.length; i++) {
    var p = opts[i];
    if (p in options) this[p] = options[p];
  }

  this.symbols = {};
  this.doc = new MathYlemDoc(options['xml_content']);

  this.current = this.doc.root().firstChild;
  this.caret = 0;
  this.sel_start = null;
  this.sel_end = null;
  this.undo_data = [];
  this.undo_now = -1;
  this.sel_status = MathYlemBackend.SEL_NONE;
  this.checkpoint();
  if (MathYlemBackend.ready && !this.ready) {
    this.ready = true;
    this.symbols = JSON.parse(JSON.stringify(MathYlemSymbols.symbols));
    this.fire_event('ready');
  }
};

MathYlemBackend.SEL_NONE = 0;
MathYlemBackend.SEL_CURSOR_AT_START = 1;
MathYlemBackend.SEL_CURSOR_AT_END = 2;

MathYlemBackend.clipboard = null;

MathYlemBackend.prototype.get_content = function (t, r) {
  return this.doc.get_content(t, r);
};

MathYlemBackend.prototype.set_content = function (xml_data) {
  this.doc = new MathYlemDoc(xml_data);
  this.current = this.doc.root().lastChild;
  this.caret = MathYlemUtils.get_length(this.current);
  this.sel_start = null;
  this.sel_end = null;
  this.undo_data = [];
  this.undo_now = -1;
  this.sel_status = MathYlemBackend.SEL_NONE;
  this.checkpoint();
};

MathYlemBackend.prototype.fire_event = function (event, args) {
  args = args || {};
  args.target = this.parent || this;
  if (this.events[event]) { this.events[event](args) }
};

MathYlemBackend.prototype.remove_symbol = function (name) {
  if (this.symbols[name]) delete this.symbols[name];
};

MathYlemBackend.prototype.add_symbols = function (name, sym) {
  var new_syms = MathYlemSymbols.add_symbols(name, sym);
  for (var s in new_syms) {
    this.symbols[s] = new_syms[s];
  }
};

MathYlemBackend.prototype.add_symbol_func_nonlatex = function (name, group) {
  var new_syms = MathYlemSymbols.add_symbols('_func_nonlatex', [{'group': group, 'symbols': [name]}]);
  for (var s in new_syms) { this.symbols[s] = new_syms[s] }
};

MathYlemBackend.prototype.add_symbol_func = function (name, group) {
  var new_syms = MathYlemSymbols.add_symbols('_func', [{'group': group, 'symbols': [name]}]);
  for (var s in new_syms) { this.symbols[s] = new_syms[s] }
};

MathYlemBackend.prototype.add_symbol_raw = function (name, latex, text, group) {
  var s = {};
  s[name] = {'latex': latex, 'text': text};
  var new_syms = MathYlemSymbols.add_symbols('_raw', [{'group': group, 'symbols': s}]);
  for (var s in new_syms) { this.symbols[s] = new_syms[s] }
};

MathYlemBackend.prototype.select_to = function (loc, sel_cursor, sel_caret, mouse) {
  if (loc.current == sel_cursor && loc.caret == sel_caret) {
    this.sel_status = MathYlemBackend.SEL_NONE;
  } else if (loc.pos == 'left') {
    this.sel_end = {
      'node': sel_cursor,
      'caret': sel_caret
    };
    this.set_sel_boundary(MathYlemBackend.SEL_CURSOR_AT_START, mouse);
  } else if (loc.pos == 'right') {
    this.sel_start = {
      'node': sel_cursor,
      'caret': sel_caret
    };
    this.set_sel_boundary(MathYlemBackend.SEL_CURSOR_AT_END, mouse);
  }
  this.current = loc.current;
  this.caret = loc.caret;
};

MathYlemBackend.prototype.set_sel_start = function () {
  this.sel_start = {'node': this.current, 'caret': this.caret};
};

MathYlemBackend.prototype.set_sel_end = function () {
  this.sel_end = {'node': this.current, 'caret': this.caret};
};

MathYlemBackend.prototype.add_paths = function (n, path) {
  if (n.nodeName == 'e') {
    n.setAttribute('path', path);
  } else {
    var es = 1;
    var fs = 1;
    var cs = 1;
    var ls = 1;
    for (var c = n.firstChild; c != null; c = c.nextSibling) {
      if (c.nodeName == 'c') { this.add_paths(c, path + '_c' + cs); cs++ } else if (c.nodeName == 'f') { this.add_paths(c, path + '_f' + fs); fs++ } else if (c.nodeName == 'l') { this.add_paths(c, path + '_l' + ls); ls++ } else if (c.nodeName == 'e') { this.add_paths(c, path + '_e' + es); es++ }
    }
  }
};

MathYlemBackend.prototype.add_classes_cursors = function (n, path) {
  if (n.nodeName == 'e') {
    var text = MathYlemUtils.get_value(n);
    var ans = '';
    var sel_cursor;
    var text_node = MathYlemUtils.is_text(n);
    if (this.sel_status == MathYlemBackend.SEL_CURSOR_AT_START) sel_cursor = this.sel_end;
    if (this.sel_status == MathYlemBackend.SEL_CURSOR_AT_END) sel_cursor = this.sel_start;
    if (this.sel_status != MathYlemBackend.SEL_NONE) {
      var sel_caret_text = MathYlemUtils.is_small(sel_cursor.node) ? MathYlemUtils.SMALL_SEL_CARET : MathYlemUtils.SEL_CARET;
      if (!text_node && text.length == 0 && n.parentNode.childElementCount > 1) {
        sel_caret_text = '\\blue{\\xmlClass{mathylem_elt mathylem_blank mathylem_loc_' + n.getAttribute('path') + '_0}{' + sel_caret_text + '}}';
      } else {
        sel_caret_text = '\\blue{' + sel_caret_text + '}';
      }
      if (this.sel_status == MathYlemBackend.SEL_CURSOR_AT_END) sel_caret_text = text_node ? '[' : sel_caret_text + '\\' + MathYlemUtils.SEL_COLOR + '{';
      if (this.sel_status == MathYlemBackend.SEL_CURSOR_AT_START) sel_caret_text = text_node ? ']' : '}' + sel_caret_text;
    }
    var caret_text = '';
    var temp_caret_text = '';
    if (text.length == 0) {
      if (text_node) caret_text = '\\_';
      else if (n.parentNode.childElementCount == 1) {
        if (this.current == n) {
          var blank_caret = this.blank_caret || (MathYlemUtils.is_small(this.current) ? MathYlemUtils.SMALL_CARET : MathYlemUtils.CARET);
          ans = '\\red{\\xmlClass{main_cursor mathylem_elt mathylem_blank mathylem_loc_' + n.getAttribute('path') + '_0' + '}{' + blank_caret + '}}';
        } else if (this.temp_cursor.node == n) { ans = '\\gray{\\xmlClass{mathylem_elt mathylem_blank mathylem_loc_' + n.getAttribute('path') + '_0' + '}{[?]}}' } else { ans = '\\blue{\\xmlClass{mathylem_elt mathylem_blank mathylem_loc_' + n.getAttribute('path') + '_0' + '}{[?]}}' }
      } else if (this.temp_cursor.node != n && this.current != n && (!(sel_cursor) || sel_cursor.node != n)) {
        // These are the empty e elements at either end of
        // a c or m node, such as the space before and
        // after both the sin and x^2 in sin(x^2)
        //
        // Here, we add in a small element so that we can
        // use the mouse to select these areas
        ans = '\\phantom{\\xmlClass{mathylem_elt mathylem_blank mathylem_loc_' + n.getAttribute('path') + '_0' + '}{\\cursor[0.1ex]{1ex}}}';
      }
    }
    for (var i = 0; i < text.length + 1; i++) {
      if (n == this.current && i == this.caret && (text.length > 0 || n.parentNode.childElementCount > 1)) {
        if (text_node) {
          if (this.sel_status == MathYlemBackend.SEL_CURSOR_AT_START) { caret_text = '[' } else if (this.sel_status == MathYlemBackend.SEL_CURSOR_AT_END) { caret_text = ']' } else { caret_text = '\\_' }
        } else {
          caret_text = MathYlemUtils.is_small(this.current) ? MathYlemUtils.SMALL_CARET : MathYlemUtils.CARET;
          if (text.length == 0) { caret_text = '\\red{\\xmlClass{main_cursor mathylem_elt mathylem_blank mathylem_loc_' + n.getAttribute('path') + '_0}{' + caret_text + '}}' } else {
            caret_text = '\\red{\\xmlClass{main_cursor}{' + caret_text + '}}';
          }
          if (this.sel_status == MathYlemBackend.SEL_CURSOR_AT_START) { caret_text = caret_text + '\\' + MathYlemUtils.SEL_COLOR + '{' } else if (this.sel_status == MathYlemBackend.SEL_CURSOR_AT_END) { caret_text = '}' + caret_text }
        }
        ans += caret_text;
      } else if (n == this.current && i == this.caret && text_node) {
        ans += caret_text;
      } else if (this.sel_status != MathYlemBackend.SEL_NONE && sel_cursor.node == n && i == sel_cursor.caret) {
        ans += sel_caret_text;
      } else if (this.temp_cursor.node == n && i == this.temp_cursor.caret && (text.length > 0 || n.parentNode.childElementCount > 1)) {
        if (text_node) { temp_caret_text = '.' } else {
          temp_caret_text = MathYlemUtils.is_small(this.current) ? MathYlemUtils.TEMP_SMALL_CARET : MathYlemUtils.TEMP_CARET;
          if (text.length == 0) {
            temp_caret_text = '\\gray{\\xmlClass{mathylem_elt mathylem_blank mathylem_loc_' + n.getAttribute('path') + '_0}{' + temp_caret_text + '}}';
          } else { temp_caret_text = '\\gray{' + temp_caret_text + '}' }
        }
        ans += temp_caret_text;
      }
      if (i < text.length) ans += '\\xmlClass{mathylem_elt mathylem_loc_' + n.getAttribute('path') + '_' + i + '}{' + text[i] + '}';
    }
    if (text_node && n == this.current) {
      ans = '\\xmlClass{mathylem_text_current}{{' + ans + '}}';
    }
    n.setAttribute('render', ans);
    n.removeAttribute('path');
  } else {
    for (var c = n.firstChild; c != null; c = c.nextSibling) {
      if (c.nodeName == 'c' || c.nodeName == 'l' || c.nodeName == 'f' || c.nodeName == 'e') { this.add_classes_cursors(c) }
    }
  }
};

MathYlemBackend.prototype.remove_cursors_classes = function (n) {
  if (n.nodeName == 'e') {
    n.removeAttribute('path');
    n.removeAttribute('render');
    n.removeAttribute('current');
    n.removeAttribute('temp');
  } else {
    for (var c = n.firstChild; c != null; c = c.nextSibling) {
      if (c.nodeType == 1) { this.remove_cursors_classes(c) }
    }
  }
};

MathYlemBackend.prototype.down_from_f = function () {
  var nn = this.current.firstChild;
  while (nn != null && nn.nodeName != 'c' && nn.nodeName != 'l') nn = nn.nextSibling;
  if (nn != null) {
    while (nn.nodeName == 'l') nn = nn.firstChild;
    this.current = nn.firstChild;
  }
};

MathYlemBackend.prototype.down_from_f_to_blank = function () {
  var nn = this.current.firstChild;
  while (nn != null && !(nn.nodeName == 'c' && nn.childNodes.length == 1 && MathYlemUtils.is_blank(nn.firstChild))) {
    nn = nn.nextSibling;
  }
  if (nn != null) {
    // Sanity check:

    while (nn.nodeName == 'l') nn = nn.firstChild;
    if (nn.nodeName != 'c' || nn.firstChild.nodeName != 'e') {
      this.problem('dfftb');
      return;
    }
    this.current = nn.firstChild;
  } else this.down_from_f();
};

MathYlemBackend.prototype.delete_from_f = function (to_insert) {
  var n = this.current;
  var p = n.parentNode;
  var prev = n.previousSibling;
  var next = n.nextSibling;
  var middle = to_insert || '';
  var new_node = this.make_e(MathYlemUtils.get_value(prev) + middle + MathYlemUtils.get_value(next));
  this.current = new_node;
  this.caret = MathYlemUtils.get_length(prev);
  p.insertBefore(new_node, prev);
  p.removeChild(prev);
  p.removeChild(n);
  p.removeChild(next);
};

MathYlemBackend.prototype.symbol_to_node = function (sym_name, content) {
  // sym_name is a key in the symbols dictionary
  //
  // content is a list of nodes to insert
  var base = this.doc.base;
  var s = this.symbols[sym_name];
  var f = base.createElement('f');
  if ('type' in s) f.setAttribute('type', s['type']);
  if ('group' in s) f.setAttribute('group', s['group']);
  if (s['char']) f.setAttribute('c', 'yes');

  var first_ref = -1;
  var refs_count = 0;
  var lists = {};
  var first;

  // Make the b nodes for rendering each output    
  for (var t in s['output']) {
    var b = base.createElement('b');
    b.setAttribute('p', t);

    var out = s['output'][t];
    if (typeof out == 'string') {
      out = out.split(/(\{\$[0-9]+(?:\{[^}]+\})*\})/g);
      for (var i = 0; i < out.length; i++) {
        var m = out[i].match(/^\{\$([0-9]+)((?:\{[^}]+\})*)\}$/);
        if (m) {
          out[i] = {'ref': parseInt(m[1])};
          if (m[2].length > 0) {
            var mm = m[2].match(/\{[^}]*\}/g);
            out[i]['d'] = mm.length;
            for (var j = 0; j < mm.length; j++) {
              out[i]['sep' + j] = mm[j].substring(1, mm[j].length - 1);
            }
          }
        }
      }
    }
    for (var i = 0; i < out.length; i++) {
      if (typeof out[i] == 'string' || out[i] instanceof String) {
        var nt = base.createTextNode(out[i]);
        b.appendChild(nt);
      } else {
        var nt = base.createElement('r');
        for (var attr in out[i]) {
          nt.setAttribute(attr, out[i][attr]);
        }
        if (t == 'latex') {
          if (first_ref == -1) first_ref = out[i]['ref'];
          if ('d' in out[i]) lists[refs_count] = out[i]['d'];
          refs_count++;
        }
        b.appendChild(nt);
      }
    }
    f.appendChild(b);
  }
  // Now make the c nodes for storing the content
  for (var i = 0; i < refs_count; i++) {
    var nc = base.createElement('c');
    if (i in content) {
      var node_list = content[i];
      for (var se = 0; se < node_list.length; se++) {
        nc.appendChild(node_list[se].cloneNode(true));
      }
    } else nc.appendChild(this.make_e(''));
    if (i + 1 == first_ref) first = nc.lastChild;
    if (s['attrs']) { for (var a in (s['attrs'][i] || {})) { nc.setAttribute(a, s['attrs'][i][a]) } }
    if (i in lists) {
      var par = f;
      for (var j = 0; j < lists[i]; j++) {
        var nl = base.createElement('l');
        nl.setAttribute('s', '1');
        par.appendChild(nl);
        par = nl;
        if (j == lists[i] - 1) nl.appendChild(nc);
      }
    } else f.appendChild(nc);
  }
  return {'f': f, 'first': first};
};

MathYlemBackend.prototype.insert_symbol = function (sym_name) {
  if (sym_name == 'power' && this.caret == 0 && this.current.parentNode.parentNode.nodeName == 'f' && this.current.parentNode.childNodes.length == 1) { this.current = this.current.parentNode.parentNode.nextSibling }

  var s = this.symbols[sym_name];
  if (this.is_blacklisted(s['type'])) {
    return false;
  }
  var content = {};
  var left_piece, right_piece;
  var cur = s['current'] == null ? 0 : parseInt(s['current']);
  var to_remove = [];
  var to_replace = null;
  var replace_f = false;

  if (cur > 0) {
    cur--;
    if (this.sel_status != MathYlemBackend.SEL_NONE) {
      var sel = this.sel_get();
      to_remove = sel.involved;
      left_piece = this.make_e(MathYlemUtils.get_value(sel.remnant).slice(0, this.sel_start.caret));
      right_piece = this.make_e(MathYlemUtils.get_value(sel.remnant).slice(this.sel_start.caret));
      content[cur] = sel.node_list;
    } else if (s['current_type'] == 'token') {
      // If we're at the beginning, then the token is the previous f node
      if (this.caret == 0 && this.current.previousSibling != null) {
        content[cur] = [this.make_e(''), this.current.previousSibling, this.make_e('')];
        to_replace = this.current.previousSibling;
        replace_f = true;
      } else {
        // look for [0-9.]+|[a-zA-Z] immediately preceeding the caret and use that as token
        var prev = MathYlemUtils.get_value(this.current).substring(0, this.caret);
        var token = prev.match(/[0-9.]+$|[a-zA-Z]$/);
        if (token != null && token.length > 0) {
          token = token[0];
          left_piece = this.make_e(MathYlemUtils.get_value(this.current).slice(0, this.caret - token.length));
          right_piece = this.make_e(MathYlemUtils.get_value(this.current).slice(this.caret));
          content[cur] = [this.make_e(token)];
        }
      }
    }
  }
  if (!replace_f && (left_piece == null || right_piece == null)) {
    left_piece = this.make_e(MathYlemUtils.get_value(this.current).slice(0, this.caret));
    right_piece = this.make_e(MathYlemUtils.get_value(this.current).slice(this.caret));
    to_remove = [this.current];
  }

  // By now:
  // 
  // content contains whatever we want to pre-populate the 'current' field with (if any)
  //
  // right_piece contains whatever content was in an involved node
  // to the right of the cursor but is not part of the insertion.
  // Analogously for left_piece
  //
  // Thus all we should have to do now is symbol_to_node(sym_type,
  // content) and then add the left_piece, resulting node, and
  // right_piece in that order.
  var current_parent = this.current.parentNode;

  var sym = this.symbol_to_node(sym_name, content);
  var f = sym.f;

  var next = this.current.nextSibling;

  if (replace_f) {
    current_parent.replaceChild(f, to_replace);
  } else {
    if (to_remove.length == 0) this.current.parentNode.removeChild(this.current);

    for (var i = 0; i < to_remove.length; i++) {
      if (next == to_remove[i]) next = next.nextSibling;
      current_parent.removeChild(to_remove[i]);
    }
    current_parent.insertBefore(left_piece, next);
    current_parent.insertBefore(f, next);
    current_parent.insertBefore(right_piece, next);
  }

  this.caret = 0;
  this.current = f;
  if (s['char']) {
    this.current = this.current.nextSibling;
  } else this.down_from_f_to_blank();

  this.sel_clear();
  this.checkpoint();
  return true;
};

MathYlemBackend.prototype.sel_get = function () {
  if (this.sel_status == MathYlemBackend.SEL_NONE) {
    return null;
  }
  var involved = [];
  var node_list = [];
  var remnant = null;

  if (this.sel_start.node == this.sel_end.node) {
    return {'node_list': [this.make_e(MathYlemUtils.get_value(this.sel_start.node).substring(this.sel_start.caret, this.sel_end.caret))],
      'remnant': this.make_e(MathYlemUtils.get_value(this.sel_start.node).substring(0, this.sel_start.caret) + MathYlemUtils.get_value(this.sel_end.node).substring(this.sel_end.caret)),
      'involved': [this.sel_start.node]};
  }

  node_list.push(this.make_e(MathYlemUtils.get_value(this.sel_start.node).substring(this.sel_start.caret)));
  involved.push(this.sel_start.node);
  involved.push(this.sel_end.node);
  remnant = this.make_e(MathYlemUtils.get_value(this.sel_start.node).substring(0, this.sel_start.caret) + MathYlemUtils.get_value(this.sel_end.node).substring(this.sel_end.caret));
  var n = this.sel_start.node.nextSibling;
  while (n != null && n != this.sel_end.node) {
    involved.push(n);
    node_list.push(n);
    n = n.nextSibling;
  }
  node_list.push(this.make_e(MathYlemUtils.get_value(this.sel_end.node).substring(0, this.sel_end.caret)));
  return {'node_list': node_list,
    'remnant': remnant,
    'involved': involved,
    'cursor': 0};
};

MathYlemBackend.prototype.make_e = function (text) {
  var base = this.doc.base;
  var new_node = base.createElement('e');
  new_node.appendChild(base.createTextNode(text));
  return new_node;
};

MathYlemBackend.prototype.insert_string = function (s) {
  if (this.sel_status != MathYlemBackend.SEL_NONE) {
    this.sel_delete();
    this.sel_clear();
  }
  if (s == '*' && this.check_for_power()) return;
  if (this.current.firstChild) { this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splice(this.caret, s) } else { this.current.appendChild(this.doc.base.createTextNode(s)) }
  this.caret += s.length;
  this.checkpoint();
  if (this.autoreplace) this.check_for_symbol();
};

MathYlemBackend.prototype.sel_copy = function () {
  var sel = this.sel_get();
  if (!sel) return;
  MathYlemBackend.clipboard = [];
  for (var i = 0; i < sel.node_list.length; i++) {
    MathYlemBackend.clipboard.push(sel.node_list[i].cloneNode(true));
  }
  this.sel_clear();
};

MathYlemBackend.prototype.sel_cut = function () {
  var node_list = this.sel_delete();
  if (!node_list) return;
  MathYlemBackend.clipboard = [];
  for (var i = 0; i < node_list.length; i++) {
    MathYlemBackend.clipboard.push(node_list[i].cloneNode(true));
  }
  this.sel_clear();
  this.checkpoint();
};

MathYlemBackend.prototype.insert_nodes = function (node_list, move_cursor) {
  var real_clipboard = [];
  for (var i = 0; i < node_list.length; i++) {
    real_clipboard.push(node_list[i].cloneNode(true));
  }

  if (!this.current.firstChild) this.current.appendChild(this.doc.base.createTextNode(''));
  if (real_clipboard.length == 1) {
    if (real_clipboard[0].firstChild) {
      this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.substring(0, this.caret) + real_clipboard[0].firstChild.nodeValue + this.current.firstChild.nodeValue.substring(this.caret);
      if (move_cursor) this.caret += real_clipboard[0].firstChild.nodeValue.length;
    }
  } else {
    var nn = this.make_e(MathYlemUtils.get_value(real_clipboard[real_clipboard.length - 1]) + this.current.firstChild.nodeValue.substring(this.caret));
    this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.substring(0, this.caret) + MathYlemUtils.get_value(real_clipboard[0]);
    if (this.current.nextSibling == null) { this.current.parentNode.appendChild(nn) } else { this.current.parentNode.insertBefore(nn, this.current.nextSibling) }
    for (var i = 1; i < real_clipboard.length - 1; i++) { this.current.parentNode.insertBefore(real_clipboard[i], nn) }
    if (move_cursor) {
      this.current = nn;
      this.caret = MathYlemUtils.get_length(real_clipboard[real_clipboard.length - 1]);
    }
  }
};

MathYlemBackend.prototype.sel_paste = function () {
  this.sel_delete();
  this.sel_clear();
  if (!(MathYlemBackend.clipboard) || MathYlemBackend.clipboard.length == 0) return;
  this.insert_nodes(MathYlemBackend.clipboard, true);
  this.checkpoint();
};

MathYlemBackend.prototype.sel_clear = function () {
  this.sel_start = null;
  this.sel_end = null;
  this.sel_status = MathYlemBackend.SEL_NONE;
};

MathYlemBackend.prototype.sel_delete = function () {
  var sel = this.sel_get();
  if (!sel) return null;
  var sel_parent = sel.involved[0].parentNode;
  var sel_prev = sel.involved[0].previousSibling;
  for (var i = 0; i < sel.involved.length; i++) {
    var n = sel.involved[i];
    sel_parent.removeChild(n);
  }
  if (sel_prev == null) {
    if (sel_parent.firstChild == null) { sel_parent.appendChild(sel.remnant) } else { sel_parent.insertBefore(sel.remnant, sel_parent.firstChild) }
  } else if (sel_prev.nodeName == 'f') {
    if (sel_prev.nextSibling == null) { sel_parent.appendChild(sel.remnant) } else { sel_parent.insertBefore(sel.remnant, sel_prev.nextSibling) }
  }
  this.current = sel.remnant;
  this.caret = this.sel_start.caret;
  return sel.node_list;
};

MathYlemBackend.prototype.sel_all = function () {
  this.home();
  this.set_sel_start();
  this.end();
  this.set_sel_end();
  if (this.sel_start.node != this.sel_end.node || this.sel_start.caret != this.sel_end.caret) { this.sel_status = MathYlemBackend.SEL_CURSOR_AT_END }
};

MathYlemBackend.prototype.sel_right = function () {
  if (this.sel_status == MathYlemBackend.SEL_NONE) {
    this.set_sel_start();
    this.sel_status = MathYlemBackend.SEL_CURSOR_AT_END;
  }
  if (this.caret >= MathYlemUtils.get_length(this.current)) {
    var nn = this.current.nextSibling;
    if (nn != null) {
      this.current = nn.nextSibling;
      this.caret = 0;
      this.set_sel_boundary(MathYlemBackend.SEL_CURSOR_AT_END);
    } else {
      this.set_sel_boundary(MathYlemBackend.SEL_CURSOR_AT_END);
    }
  } else {
    this.caret += 1;
    this.set_sel_boundary(MathYlemBackend.SEL_CURSOR_AT_END);
  }
  if (this.sel_start.node == this.sel_end.node && this.sel_start.caret == this.sel_end.caret) {
    this.sel_status = MathYlemBackend.SEL_NONE;
  }
};

MathYlemBackend.prototype.set_sel_boundary = function (sstatus, mouse) {
  if (this.sel_status == MathYlemBackend.SEL_NONE || mouse) this.sel_status = sstatus;
  if (this.sel_status == MathYlemBackend.SEL_CURSOR_AT_START) { this.set_sel_start() } else if (this.sel_status == MathYlemBackend.SEL_CURSOR_AT_END) { this.set_sel_end() }
};

MathYlemBackend.prototype.sel_left = function () {
  if (this.sel_status == MathYlemBackend.SEL_NONE) {
    this.set_sel_end();
    this.sel_status = MathYlemBackend.SEL_CURSOR_AT_START;
  }
  if (this.caret <= 0) {
    var nn = this.current.previousSibling;
    if (nn != null) {
      this.current = nn.previousSibling;
      this.caret = MathYlemUtils.get_length(this.current);
      this.set_sel_boundary(MathYlemBackend.SEL_CURSOR_AT_START);
    } else {
      this.set_sel_boundary(MathYlemBackend.SEL_CURSOR_AT_START);
    }
  } else {
    this.caret -= 1;
    this.set_sel_boundary(MathYlemBackend.SEL_CURSOR_AT_START);
  }
  if (this.sel_start.node == this.sel_end.node && this.sel_start.caret == this.sel_end.caret) {
    this.sel_status = MathYlemBackend.SEL_NONE;
  }
};

MathYlemBackend.prototype.list_extend_copy_right = function () { this.list_extend('right', true) };
MathYlemBackend.prototype.list_extend_copy_left = function () { this.list_extend('left', true) };
MathYlemBackend.prototype.list_extend_right = function () { this.list_extend('right', false) };
MathYlemBackend.prototype.list_extend_left = function () { this.list_extend('left', false) };
MathYlemBackend.prototype.list_extend_up = function () { this.list_extend('up', false) };
MathYlemBackend.prototype.list_extend_down = function () { this.list_extend('down', false) };
MathYlemBackend.prototype.list_extend_copy_up = function () { this.list_extend('up', true) };
MathYlemBackend.prototype.list_extend_copy_down = function () { this.list_extend('down', true) };

MathYlemBackend.prototype.list_vertical_move = function (down) {
  var n = this.current;
  while (n.parentNode && n.parentNode.parentNode && !(n.nodeName == 'c' && n.parentNode.nodeName == 'l' && n.parentNode.parentNode.nodeName == 'l')) {
    n = n.parentNode;
  }
  if (!n.parentNode) return;
  var pos = 1;
  var cc = n;
  while (cc.previousSibling != null) {
    pos++;
    cc = cc.previousSibling;
  }
  var new_l = down ? n.parentNode.nextSibling : n.parentNode.previousSibling;
  if (!new_l) return;
  var idx = 1;
  var nn = new_l.firstChild;
  while (idx < pos) {
    idx++;
    nn = nn.nextSibling;
  }
  this.current = nn.firstChild;
  this.caret = down ? 0 : MathYlemUtils.get_length(this.current);
};

MathYlemBackend.prototype.list_extend = function (direction, copy) {
  var base = this.doc.base;
  var vertical = direction == 'up' || direction == 'down';
  var before = direction == 'up' || direction == 'left';
  var this_name = vertical ? 'l' : 'c';
  var n = this.current;
  while (n.parentNode && !(n.nodeName == this_name && n.parentNode.nodeName == 'l')) {
    n = n.parentNode;
  }
  if (!n.parentNode) return;
  var to_insert;

  // check if 2D and horizontal and extend all the other rows if so 
  if (!vertical && n.parentNode.parentNode.nodeName == 'l') {
    to_insert = base.createElement('c');
    to_insert.appendChild(this.make_e(''));
    var pos = 1;
    var cc = n;
    while (cc.previousSibling != null) {
      pos++;
      cc = cc.previousSibling;
    }
    var to_modify = [];
    var iterator = this.doc.xpath_list('./l/c[position()=' + pos + ']', n.parentNode.parentNode);
    try { for (var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext()) { to_modify.push(nn) } } catch (e) { this.fire_event('error', {'message': 'XML modified during iteration? ' + e}) }
    for (var j = 0; j < to_modify.length; j++) {
      var nn = to_modify[j];
      if (copy) nn.parentNode.insertBefore(nn.cloneNode(true), before ? nn : nn.nextSibling);
      else nn.parentNode.insertBefore(to_insert.cloneNode(true), before ? nn : nn.nextSibling);
      nn.parentNode.setAttribute('s', parseInt(nn.parentNode.getAttribute('s')) + 1);
    }
    this.current = before ? n.previousSibling.lastChild : n.nextSibling.firstChild;
    this.caret = MathYlemUtils.get_length(this.current);
    this.checkpoint();
    return;
  }

  if (copy) {
    to_insert = n.cloneNode(true);
  } else {
    if (vertical) {
      to_insert = base.createElement('l');
      to_insert.setAttribute('s', n.getAttribute('s'));
      for (var i = 0; i < parseInt(n.getAttribute('s')); i++) {
        var c = base.createElement('c');
        c.appendChild(this.make_e(''));
        to_insert.appendChild(c);
      }
    } else {
      to_insert = base.createElement('c');
      to_insert.appendChild(this.make_e(''));
    }
  }
  n.parentNode.setAttribute('s', parseInt(n.parentNode.getAttribute('s')) + 1);
  n.parentNode.insertBefore(to_insert, before ? n : n.nextSibling);
  if (vertical) this.current = to_insert.firstChild.firstChild;
  else this.current = to_insert.firstChild;
  this.caret = 0;
  this.checkpoint();
};

MathYlemBackend.prototype.list_remove_col = function () {
  var n = this.current;
  while (n.parentNode && n.parentNode.parentNode && !(n.nodeName == 'c' && n.parentNode.nodeName == 'l' && n.parentNode.parentNode.nodeName == 'l')) {
    n = n.parentNode;
  }
  if (!n.parentNode) return;

  // Don't remove if there is only a single column:
  if (n.previousSibling != null) {
    this.current = n.previousSibling.lastChild;
    this.caret = MathYlemUtils.get_length(this.current);
  } else if (n.nextSibling != null) {
    this.current = n.nextSibling.firstChild;
    this.caret = 0;
  } else return;

  var pos = 1;
  var cc = n;

  // Find position of column
  while (cc.previousSibling != null) {
    pos++;
    cc = cc.previousSibling;
  }
  var to_modify = [];
  var iterator = this.doc.xpath_list('./l/c[position()=' + pos + ']', n.parentNode.parentNode);
  try { for (var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext()) { to_modify.push(nn) } } catch (e) { this.fire_event('error', {'message': 'XML modified during iteration? ' + e}) }
  for (var j = 0; j < to_modify.length; j++) {
    var nn = to_modify[j];
    nn.parentNode.setAttribute('s', parseInt(nn.parentNode.getAttribute('s')) - 1);
    nn.parentNode.removeChild(nn);
  }
};

MathYlemBackend.prototype.list_remove_row = function () {
  var n = this.current;
  while (n.parentNode && !(n.nodeName == 'l' && n.parentNode.nodeName == 'l')) {
    n = n.parentNode;
  }
  if (!n.parentNode) return;
  // Don't remove if there is only a single row:
  if (n.previousSibling != null) {
    this.current = n.previousSibling.lastChild.lastChild;
    this.caret = MathYlemUtils.get_length(this.current);
  } else if (n.nextSibling != null) {
    this.current = n.nextSibling.firstChild.firstChild;
    this.caret = 0;
  } else return;

  n.parentNode.setAttribute('s', parseInt(n.parentNode.getAttribute('s')) - 1);
  n.parentNode.removeChild(n);
};

MathYlemBackend.prototype.list_remove = function () {
  var n = this.current;
  while (n.parentNode && !(n.nodeName == 'c' && n.parentNode.nodeName == 'l')) {
    n = n.parentNode;
  }
  if (!n.parentNode) return;
  if (n.parentNode.parentNode && n.parentNode.parentNode.nodeName == 'l') {
    this.list_remove_col();
    return;
  }
  if (n.previousSibling != null) {
    this.current = n.previousSibling.lastChild;
    this.caret = MathYlemUtils.get_length(this.current);
  } else if (n.nextSibling != null) {
    this.current = n.nextSibling.firstChild;
    this.caret = 0;
  } else return;
  n.parentNode.setAttribute('s', parseInt(n.parentNode.getAttribute('s')) - 1);
  n.parentNode.removeChild(n);
};

MathYlemBackend.prototype.right = function () {
  this.sel_clear();
  if (this.caret >= MathYlemUtils.get_length(this.current)) {
    var nn = this.doc.xpath_node('following::e[1]', this.current);
    if (nn != null) {
      this.current = nn;
      this.caret = 0;
    } else {
      this.fire_event('right_end');
    }
  } else {
    this.caret += 1;
  }
};

MathYlemBackend.prototype.spacebar = function () {
  if (MathYlemUtils.is_text(this.current)) this.insert_string(' ');
};

MathYlemBackend.prototype.left = function () {
  this.sel_clear();
  if (this.caret <= 0) {
    var pn = this.doc.xpath_node('preceding::e[1]', this.current);
    if (pn != null) {
      this.current = pn;
      this.caret = MathYlemUtils.get_length(this.current);
    } else {
      this.fire_event('left_end');
    }
  } else {
    this.caret -= 1;
  }
};

MathYlemBackend.prototype.delete_from_c = function () {
  var pos = 0;
  var c = this.current.parentNode;
  while (c && c.nodeName == 'c') {
    pos++;
    c = c.previousSibling;
  }
  var idx = this.current.parentNode.getAttribute('delete');
  var survivor_node = this.doc.xpath_node('./c[position()=' + idx + ']', this.current.parentNode.parentNode);
  var survivor_nodes = [];
  for (var n = survivor_node.firstChild; n != null; n = n.nextSibling) {
    survivor_nodes.push(n);
  }
  this.current = this.current.parentNode.parentNode;
  this.delete_from_f();
  this.insert_nodes(survivor_nodes, pos > idx);
};

MathYlemBackend.prototype.delete_from_e = function () {
  // return false if we deleted something, and true otherwise.
  if (this.caret > 0) {
    this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splicen(this.caret - 1, '', 1);
    this.caret--;
  } else {
    // The order of these is important
    if (this.current.previousSibling != null && this.current.previousSibling.getAttribute('c') == 'yes') {
      // The previous node is an f node but is really just a character.  Delete it.
      this.current = this.current.previousSibling;
      this.delete_from_f();
    } else if (this.current.previousSibling != null && this.current.previousSibling.nodeName == 'f') {
      // We're in an e node just after an f node.  Move back into the f node (delete it?)
      this.left();
      return false;
    } else if (this.current.parentNode.previousSibling != null && this.current.parentNode.previousSibling.nodeName == 'c') {
      // We're in a c child of an f node, but not the first one.  Go to the previous c
      if (this.current.parentNode.hasAttribute('delete')) {
        this.delete_from_c();
      } else {
        this.left();
        return false;
      }
    } else if (this.current.previousSibling == null && this.current.parentNode.nodeName == 'c' && (this.current.parentNode.previousSibling == null || this.current.parentNode.previousSibling.nodeName != 'c')) {
      // We're in the first c child of an f node and at the beginning--delete the f node
      var par = this.current.parentNode;
      while (par.parentNode.nodeName == 'l' || par.parentNode.nodeName == 'c') {
        par = par.parentNode;
      }
      if (par.hasAttribute('delete')) {
        this.delete_from_c();
      } else {
        this.current = par.parentNode;
        this.delete_from_f();
      }
    } else {
      // We're at the beginning (hopefully!) 
      return false;
    }
  }
  return true;
};

MathYlemBackend.prototype.delete_forward_from_e = function () {
  // return false if we deleted something, and true otherwise.
  if (this.caret < this.current.firstChild.nodeValue.length) {
    this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splicen(this.caret, '', 1);
  } else {
    // We're at the end
    if (this.current.nextSibling != null) {
      // The next node is an f node.  Delete it.
      this.current = this.current.nextSibling;
      this.delete_from_f();
    } else if (this.current.parentNode.nodeName == 'c') {
      // We're in a c child of an f node.  Do nothing
      return false;
    }
  }
  return true;
};

MathYlemBackend.prototype.backspace = function () {
  if (this.sel_status != MathYlemBackend.SEL_NONE) {
    this.sel_delete();
    this.sel_status = MathYlemBackend.SEL_NONE;
    this.checkpoint();
  } else if (this.delete_from_e()) {
    this.checkpoint();
  }
};

MathYlemBackend.prototype.delete_key = function () {
  if (this.sel_status != MathYlemBackend.SEL_NONE) {
    this.sel_delete();
    this.sel_status = MathYlemBackend.SEL_NONE;
    this.checkpoint();
  } else if (this.delete_forward_from_e()) {
    this.checkpoint();
  }
};

MathYlemBackend.prototype.backslash = function () {
  if (MathYlemUtils.is_text(this.current)) return;
  this.insert_symbol('sym_name');
};

MathYlemBackend.prototype.tab = function () {
  if (!MathYlemUtils.is_symbol(this.current)) {
    this.check_for_symbol();
    return;
  }
  var sym_name = this.current.firstChild.textContent;
  var candidates = [];
  for (var n in this.symbols) {
    if (n.startsWith(sym_name)) candidates.push(n);
  }
  if (candidates.length == 1) {
    this.current.firstChild.textContent = candidates[0];
    this.caret = candidates[0].length;
  } else {
    this.fire_event('completion', {'candidates': candidates});
  }
};

MathYlemBackend.prototype.right_paren = function () {
  if (this.current.nodeName != 'e' || this.caret == MathYlemUtils.get_length(this.current)) { this.right() }
};

MathYlemBackend.prototype.up = function () {
  this.sel_clear();
  if (this.current.parentNode.hasAttribute('up')) {
    var t = parseInt(this.current.parentNode.getAttribute('up'));
    var f = this.current.parentNode.parentNode;
    var n = f.firstChild;
    while (n != null && t > 0) {
      if (n.nodeName == 'c') t--;
      if (t > 0) n = n.nextSibling;
    }
    this.current = n.lastChild;
    this.caret = MathYlemUtils.get_length(this.current);
  } else this.list_vertical_move(false);
};

MathYlemBackend.prototype.down = function () {
  this.sel_clear();
  if (this.current.parentNode.hasAttribute('down')) {
    var t = parseInt(this.current.parentNode.getAttribute('down'));
    var f = this.current.parentNode.parentNode;
    var n = f.firstChild;
    while (n != null && t > 0) {
      if (n.nodeName == 'c') t--;
      if (t > 0) n = n.nextSibling;
    }
    this.current = n.lastChild;
    this.caret = MathYlemUtils.get_length(this.current);
  } else this.list_vertical_move(true);
};

MathYlemBackend.prototype.home = function () {
  this.current = this.doc.root().firstChild;
  this.caret = 0;
};

MathYlemBackend.prototype.end = function () {
  this.current = this.doc.root().lastChild;
  this.caret = MathYlemUtils.get_length(this.current);
};

MathYlemBackend.prototype.checkpoint = function () {
  var base = this.doc.base;
  this.current.setAttribute('current', 'yes');
  this.current.setAttribute('caret', this.caret.toString());
  this.undo_now++;
  this.undo_data[this.undo_now] = base.cloneNode(true);
  this.undo_data.splice(this.undo_now + 1, this.undo_data.length);
  this.fire_event('change', {'old': this.undo_data[this.undo_now - 1], 'new': this.undo_data[this.undo_now]});
  this.current.removeAttribute('current');
  this.current.removeAttribute('caret');
  if (this.parent && this.parent.ready) this.parent.render(true);
};

MathYlemBackend.prototype.restore = function (t) {
  this.doc.base = this.undo_data[t].cloneNode(true);
  this.find_current();
  this.current.removeAttribute('current');
  this.current.removeAttribute('caret');
};

MathYlemBackend.prototype.find_current = function () {
  this.current = this.doc.xpath_node("//*[@current='yes']");
  this.caret = parseInt(this.current.getAttribute('caret'));
};

MathYlemBackend.prototype.undo = function () {
  this.sel_clear();
  if (this.undo_now <= 0) return;
  this.undo_now--;
  this.restore(this.undo_now);
};

MathYlemBackend.prototype.redo = function () {
  this.sel_clear();
  if (this.undo_now >= this.undo_data.length - 1) return;
  this.undo_now++;
  this.restore(this.undo_now);
};

MathYlemBackend.prototype.done = function (s) {
  if (MathYlemUtils.is_symbol(this.current)) this.complete_symbol();
  else this.fire_event('done');
};

MathYlemBackend.prototype.complete_symbol = function () {
  var sym_name = this.current.firstChild.textContent;
  if (!(this.symbols[sym_name])) return;
  this.current = this.current.parentNode.parentNode;
  this.delete_from_f();
  this.insert_symbol(sym_name);
};

MathYlemBackend.prototype.problem = function (message) {
  this.fire_event('error', {'message': message});
};

MathYlemBackend.prototype.is_blacklisted = function (symb_type) {
  for (var i = 0; i < this.blacklist.length; i++) { if (symb_type == this.blacklist[i]) return true; }
  return false;
};

MathYlemBackend.prototype.check_for_power = function () {
  if (this.autoreplace && this.caret == 0 && this.current.previousSibling && this.current.previousSibling.nodeName == 'f' && this.current.previousSibling.getAttribute('type') == '*') {
    var n = this.current.previousSibling;
    var p = n.parentNode;
    var prev = n.previousSibling;
    var next = n.nextSibling;
    var new_node = this.make_e(MathYlemUtils.get_value(prev) + MathYlemUtils.get_value(next));
    this.current = new_node;
    this.caret = MathYlemUtils.get_length(prev);
    p.insertBefore(new_node, prev);
    p.removeChild(prev);
    p.removeChild(n);
    p.removeChild(next);
    this.insert_symbol('power');
    return true;
  }
  return false;
};

MathYlemBackend.prototype.check_for_symbol = function () {
  var instance = this;
  if (MathYlemUtils.is_text(this.current)) return;
  if (this.current.parentNode.parentNode.nodeName == 'f' && this.current.parentNode.childNodes.length == 1 && this.current.firstChild.nodeValue == 'h') {
    var n = this.current.parentNode.parentNode;
    var sym_name = n.getAttribute('type') + 'h';
    var s = this.symbols[sym_name];
    if (!s || this.is_blacklisted(s['type'])) { return }
    var f = this.symbol_to_node(sym_name, []).f;
    n.parentNode.replaceChild(f, n);
    this.caret = 0;
    this.current = f;
    this.down_from_f_to_blank();
    this.checkpoint();
    return;
  }
  for (var s in this.symbols) {
    if (instance.current.nodeName == 'e' && !(MathYlemUtils.is_blank(instance.current)) && instance.current.firstChild.nodeValue.search_at(instance.caret, s)) {
      var temp = instance.current.firstChild.nodeValue;
      var temp_caret = instance.caret;
      instance.current.firstChild.nodeValue = instance.current.firstChild.nodeValue.slice(0, instance.caret - s.length) + instance.current.firstChild.nodeValue.slice(instance.caret);
      instance.caret -= s.length;
      var success = instance.insert_symbol(s);
      if (!success) {
        instance.current.firstChild.nodeValue = temp;
        instance.caret = temp_caret;
      }
      return;
    }
  }
};

module.exports = MathYlemBackend;

},{"../lib/katex/katex-modified.min.js":1,"./mathylem_doc.js":8,"./mathylem_symbols.js":9,"./mathylem_utils.js":10,"mousetrap":2}],8:[function(require,module,exports){
require('wicked-good-xpath').install();

var MathYlemDoc = function (doc) {
  doc = doc || '<m><e></e></m>';
  this.set_content(doc);
};

MathYlemDoc.prototype.is_small = function (nn) {
  var n = nn.parentNode;
  while (n != null && n.nodeName != 'm') {
    if (n.getAttribute('small') == 'yes') { return true }
    n = n.parentNode;
    while (n != null && n.nodeName != 'c') { n = n.parentNode }
  }
  return false;
};

MathYlemDoc.prototype.ensure_text_nodes = function () {
  var l = this.base.getElementsByTagName('e');
  for (var i = 0; i < l.length; i++) {
    if (!(l[i].firstChild)) { l[i].appendChild(this.base.createTextNode('')) }
  }
};

MathYlemDoc.prototype.is_blank = function () {
  if (this.base.getElementsByTagName('f').length > 0) { return false }
  var l = this.base.getElementsByTagName('e');
  if (l.length == 1 && (!(l[0].firstChild) || l[0].firstChild.textContent == '')) { return true }
  return false;
};

MathYlemDoc.prototype.root = function () {
  return this.base.documentElement;
};

MathYlemDoc.prototype.get_content = function (t, r) {
  if (t != 'xml') { return this.manual_render(t, this.root(), r) } else { return (new XMLSerializer()).serializeToString(this.base) }
};

MathYlemDoc.prototype.xpath_node = function (xpath, node) {
  node = node || this.root();
  return this.base.evaluate(xpath, node, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
};

MathYlemDoc.prototype.xpath_list = function (xpath, node) {
  node = node || this.root();
  return this.base.evaluate(xpath, node, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);
};

MathYlemDoc.prototype.set_content = function (xml_data) {
  this.base = (new window.DOMParser()).parseFromString(xml_data, 'text/xml');
  this.ensure_text_nodes();
};

MathYlemDoc.bracket_xpath = "(count(./*) != 1 and not \
                  ( \
                            count(./e)=2 and \
                count(./f)=1 and \
                count(./e[string-length(text())=0])=2 and \
                ( \
                  (\
                                count(./f/c)=1 and\
                    count(./f/c[@is_bracket='yes'])=1\
                  )\
                  or\
                  (\
                    f/@c='yes' and \
                count(./e[@current='yes'])=0 and \
                count(./e[@temp='yes'])=0 \
                  )\
                )\
              )\
            )  \
            or\
                (\
              count(./*) = 1 and \
              string-length(./e/text()) != 1 and \
              number(./e/text()) != ./e/text() \
            ) \
            or \
                ( \
              count(./*) = 1 and \
              ./e/@current = 'yes' \
            ) \
            or \
                ( \
              count(./*) = 1 and \
              ./e/@temp = 'yes' \
            )";

MathYlemDoc.prototype.manual_render = function (t, n, r) {
  var ans = '';
  if (n.nodeName == 'e') {
    if (t == 'latex' && r) {
      ans = n.getAttribute('render');
    } else if (t == 'text') {
      ans = MathYlemUtils.get_value(n);
      if (n.previousSibling && n.nextSibling && ans == '') { ans = ' * ' } else {
        ans = ans.replace(/(.)([^a-zA-Z0-9.])(.)/g, '$1 $2 $3');
        ans = ans.replace(/([a-zA-Z])(?=\.)/g, '$1 * ');
        ans = ans.replace(/(\.)(?=[a-zA-Z])/g, '$1 * ');
        ans = ans.replace(/([a-zA-Z])(?=[a-zA-Z0-9])/g, '$1 * ');
        ans = ans.replace(/([a-zA-Z0-9])(?=[a-zA-Z])/g, '$1 * ');
        if (n.previousSibling && n.previousSibling.getAttribute('group') != 'operations') { ans = ans.replace(/^([a-zA-Z0-9])/g, ' * $1') }
        if (n.nextSibling && n.nextSibling.getAttribute('group') != 'operations') { ans = ans.replace(/([a-zA-Z0-9])$/g, '$1 * ') }
        ans = ' ' + ans + ' ';
      }
    } else {
      ans = MathYlemUtils.get_value(n);
    }
  } else if (n.nodeName == 'f') {
    var real_type = (t == 'latex' && this.is_small(n)) ? 'small_latex' : t;
    var nn = this.xpath_node("./b[@p='" + real_type + "']", n) || this.xpath_node("./b[@p='" + t + "']", n);
    if (nn) { ans = this.manual_render(t, nn, r) }
  } else if (n.nodeName == 'b') {
    var cs = [];
    var i = 1;
    var par = n.parentNode;
    for (var nn = par.firstChild; nn != null; nn = nn.nextSibling) {
      if (nn.nodeName == 'c' || nn.nodeName == 'l') { cs[i++] = this.manual_render(t, nn, r) }
    }
    for (var nn = n.firstChild; nn != null; nn = nn.nextSibling) {
      if (nn.nodeType == 3) { ans += nn.textContent } else if (nn.nodeType == 1) {
        if (nn.hasAttribute('d')) {
          var dim = parseInt(nn.getAttribute('d'));
          var joiner = function (d, l) {
            if (d > 1) {
              for (var k = 0; k < l.length; k++) { l[k] = joiner(d - 1, l[k]) }
            }
            return l.join(nn.getAttribute('sep' + (d - 1)));
          };
          ans += joiner(dim, cs[parseInt(nn.getAttribute('ref'))]);
        } else { ans += cs[parseInt(nn.getAttribute('ref'))] }
      }
    }
  } else if (n.nodeName == 'l') {
    ans = [];
    var i = 0;
    for (var nn = n.firstChild; nn != null; nn = nn.nextSibling) {
      ans[i++] = this.manual_render(t, nn, r);
    }
  } else if (n.nodeName == 'c' || n.nodeName == 'm') {
    for (var nn = n.firstChild; nn != null; nn = nn.nextSibling) { ans += this.manual_render(t, nn, r) }
    if (t == 'latex' &&
                n.getAttribute('bracket') == 'yes' &&
                this.base.evaluate(MathYlemDoc.bracket_xpath, n, null,
                  XPathResult.BOOLEAN_TYPE, null).booleanValue) {
      ans = '\\left(' + ans + '\\right)';
    }
  }
  return ans;
};

MathYlemDoc.prototype.path_to = function (n) {
  var name = n.nodeName;
  if (name == 'm') { return 'mathylem_loc_m' }
  var ns = 0;
  for (var nn = n; nn != null; nn = nn.previousSibling) {
    if (nn.nodeType == 1 && nn.nodeName == name) { ns++ }
  }
  return this.path_to(n.parentNode) + '_' + name + '' + ns;
};

module.exports = MathYlemDoc;

},{"wicked-good-xpath":5}],9:[function(require,module,exports){
MathYlemSymbols = {'symbols': {}};

MathYlemSymbols.symb_raw = function (symb_name, latex_symb, text_symb, group) {
  return {'output': {'latex': latex_symb,
    'text': text_symb},
  'group': group,
  'char': true,
  'type': symb_name};
};

MathYlemSymbols.symb_func = function (func_name, group) {
  return {'output': {'latex': '\\' + func_name + '\\left({$1}\\right)',
    'text': ' ' + func_name + '({$1})'},
  'type': func_name,
  'group': group,
  'attrs': [
    {'delete': '1'}
  ]
  };
};

MathYlemSymbols.symb_func_nonlatex = function (func_name, group) {
  return {'output': {'latex': '\\mathrm{' + func_name + '}\\left({$1}\\right)',
    'text': ' ' + func_name + '({$1})'},
  'type': func_name,
  'group': group,
  'attrs': [
    {'delete': '1'}
  ]
  };
};

MathYlemSymbols.add_symbols = function (name, sym) {
  var symbols = {};
  if (name == '_raw') {
    for (var i = 0; i < sym.length; i++) {
      for (var t in sym[i]['symbols']) {
        symbols[t] = MathYlemSymbols.symb_raw(t, sym[i]['symbols'][t]['latex'], sym[i]['symbols'][t]['text'], sym[i]['group']);
      }
    }
  } else if (name == '_literal') {
    for (var j = 0; j < sym.length; j++) {
      for (var i = 0; i < sym[j]['symbols'].length; i++) {
        symbols[sym[j]['symbols'][i]] = MathYlemSymbols.symb_raw(sym[j]['symbols'][i], '\\' + sym[j]['symbols'][i], ' $' + sym[j]['symbols'][i] + ' ', sym[j]['group']);
      }
    }
  } else if (name == '_func') {
    for (var j = 0; j < sym.length; j++) {
      for (var i = 0; i < sym[j]['symbols'].length; i++) {
        symbols[sym[j]['symbols'][i]] = MathYlemSymbols.symb_func(sym[j]['symbols'][i], sym[j]['group']);
      }
    }
  } else if (name == '_func_nonlatex') {
    for (var j = 0; j < sym.length; j++) {
      for (var i = 0; i < sym[j]['symbols'].length; i++) {
        symbols[sym[j]['symbols'][i]] = MathYlemSymbols.symb_func_nonlatex(sym[j]['symbols'][i], sym[j]['group']);
      }
    }
  } else symbols[name] = sym;
  return symbols;
};

module.exports = MathYlemSymbols;

},{}],10:[function(require,module,exports){
var MathYlemUtils = {};

MathYlemUtils.CARET = '\\cursor[-0.2ex]{0.7em}';
MathYlemUtils.TEMP_SMALL_CARET = '\\cursor[0em]{0.6em}';
MathYlemUtils.TEMP_CARET = '\\cursor[-0.2ex]{0.7em}';
MathYlemUtils.SMALL_CARET = '\\cursor[-0.05em]{0.5em}';
MathYlemUtils.SEL_CARET = '\\cursor[-0.2ex]{0.7em}';
MathYlemUtils.SMALL_SEL_CARET = '\\cursor[-0.05em]{0.5em}';
MathYlemUtils.SEL_COLOR = 'red';

MathYlemUtils.is_blank = function (n) {
  return n.firstChild == null || n.firstChild.nodeValue == '';
};

MathYlemUtils.get_value = function (n) {
  return n.firstChild ? n.firstChild.nodeValue : '';
};

MathYlemUtils.get_length = function (n) {
  if (MathYlemUtils.is_blank(n) || n.nodeName == 'f') return 0;
  return n.firstChild.nodeValue.length;
};

MathYlemUtils.path_to = function (n) {
  var name = n.nodeName;
  if (name == 'm') return 'mathylem_loc_m';
  var ns = 0;
  for (var nn = n; nn != null; nn = nn.previousSibling) if (nn.nodeType == 1 && nn.nodeName == name) ns++;
  return MathYlemUtils.path_to(n.parentNode) + '_' + name + '' + ns;
};

MathYlemUtils.is_text = function (nn) {
  return nn.parentNode.getAttribute('mode') && (nn.parentNode.getAttribute('mode') == 'text' || nn.parentNode.getAttribute('mode') == 'symbol');
};

MathYlemUtils.is_symbol = function (nn) {
  return nn.parentNode.getAttribute('mode') && nn.parentNode.getAttribute('mode') == 'symbol';
};

MathYlemUtils.is_small = function (nn) {
  var n = nn.parentNode;
  while (n != null && n.nodeName != 'm') {
    if (n.getAttribute('small') == 'yes') {
      return true;
    }
    n = n.parentNode;
    while (n != null && n.nodeName != 'c') { n = n.parentNode }
  }
  return false;
};

module.exports = MathYlemUtils;

},{}]},{},[6])(6)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJsaWIva2F0ZXgva2F0ZXgtbW9kaWZpZWQubWluLmpzIiwibm9kZV9tb2R1bGVzL21vdXNldHJhcC9tb3VzZXRyYXAuanMiLCJub2RlX21vZHVsZXMvdGhyb3R0bGUtZGVib3VuY2UvZGVib3VuY2UuanMiLCJub2RlX21vZHVsZXMvdGhyb3R0bGUtZGVib3VuY2UvdGhyb3R0bGUuanMiLCJub2RlX21vZHVsZXMvd2lja2VkLWdvb2QteHBhdGgvZGlzdC93Z3hwYXRoLmluc3RhbGwtbm9kZS5qcyIsInNyYy9tYXRoeWxlbS5qcyIsInNyYy9tYXRoeWxlbV9iYWNrZW5kLmpzIiwic3JjL21hdGh5bGVtX2RvYy5qcyIsInNyYy9tYXRoeWxlbV9zeW1ib2xzLmpzIiwic3JjL21hdGh5bGVtX3V0aWxzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3BoQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDckJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzNGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUM3RUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbmtCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwbkNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDL0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiKGZ1bmN0aW9uKGUpe2lmKHR5cGVvZiBleHBvcnRzPT09XCJvYmplY3RcIiYmdHlwZW9mIG1vZHVsZSE9PVwidW5kZWZpbmVkXCIpe21vZHVsZS5leHBvcnRzPWUoKX1lbHNlIGlmKHR5cGVvZiBkZWZpbmU9PT1cImZ1bmN0aW9uXCImJmRlZmluZS5hbWQpe2RlZmluZShbXSxlKX1lbHNle3ZhciB0O2lmKHR5cGVvZiB3aW5kb3chPT1cInVuZGVmaW5lZFwiKXt0PXdpbmRvd31lbHNlIGlmKHR5cGVvZiBnbG9iYWwhPT1cInVuZGVmaW5lZFwiKXt0PWdsb2JhbH1lbHNlIGlmKHR5cGVvZiBzZWxmIT09XCJ1bmRlZmluZWRcIil7dD1zZWxmfWVsc2V7dD10aGlzfXQua2F0ZXg9ZSgpfX0pKGZ1bmN0aW9uKCl7dmFyIGUsdCxyO3JldHVybiBmdW5jdGlvbiBlKHQscixhKXtmdW5jdGlvbiBpKG8scyl7aWYoIXJbb10pe2lmKCF0W29dKXt2YXIgbD10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCFzJiZsKXJldHVybiBsKG8sITApO2lmKG4pcmV0dXJuIG4obywhMCk7dmFyIHU9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyB1LmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsdX12YXIgaD1yW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwoaC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciByPXRbb11bMV1bZV07cmV0dXJuIGkocj9yOmUpfSxoLGguZXhwb3J0cyxlLHQscixhKX1yZXR1cm4gcltvXS5leHBvcnRzfXZhciBuPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxhLmxlbmd0aDtvKyspaShhW29dKTtyZXR1cm4gaX0oezE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi9zcmMvUGFyc2VFcnJvclwiKTt2YXIgaT1lKFwiLi9zcmMvU2V0dGluZ3NcIik7dmFyIG49ZShcIi4vc3JjL2J1aWxkVHJlZVwiKTt2YXIgbz1lKFwiLi9zcmMvcGFyc2VUcmVlXCIpO3ZhciBzPWUoXCIuL3NyYy91dGlsc1wiKTt2YXIgbD1mdW5jdGlvbiBlKHQscixhKXtzLmNsZWFyTm9kZShyKTt2YXIgbD1uZXcgaShhKTt2YXIgdT1vKHQsbCk7dmFyIGg9bih1LHQsbCkudG9Ob2RlKCk7ci5hcHBlbmRDaGlsZChoKX07aWYodHlwZW9mIGRvY3VtZW50IT09XCJ1bmRlZmluZWRcIil7aWYoZG9jdW1lbnQuY29tcGF0TW9kZSE9PVwiQ1NTMUNvbXBhdFwiKXt0eXBlb2YgY29uc29sZSE9PVwidW5kZWZpbmVkXCImJmNvbnNvbGUud2FybihcIldhcm5pbmc6IEthVGVYIGRvZXNuJ3Qgd29yayBpbiBxdWlya3MgbW9kZS4gTWFrZSBzdXJlIHlvdXIgXCIrXCJ3ZWJzaXRlIGhhcyBhIHN1aXRhYmxlIGRvY3R5cGUuXCIpO2w9ZnVuY3Rpb24gZSgpe3Rocm93IG5ldyBhKFwiS2FUZVggZG9lc24ndCB3b3JrIGluIHF1aXJrcyBtb2RlLlwiKX19fXZhciB1PWZ1bmN0aW9uIGUodCxyKXt2YXIgYT1uZXcgaShyKTt2YXIgcz1vKHQsYSk7cmV0dXJuIG4ocyx0LGEpLnRvTWFya3VwKCl9O3ZhciBoPWZ1bmN0aW9uIGUodCxyKXt2YXIgYT1uZXcgaShyKTtyZXR1cm4gbyh0LGEpfTt0LmV4cG9ydHM9e3JlbmRlcjpsLHJlbmRlclRvU3RyaW5nOnUsX19wYXJzZTpoLFBhcnNlRXJyb3I6YX19LHtcIi4vc3JjL1BhcnNlRXJyb3JcIjoxMCxcIi4vc3JjL1NldHRpbmdzXCI6MTIsXCIuL3NyYy9idWlsZFRyZWVcIjoxNyxcIi4vc3JjL3BhcnNlVHJlZVwiOjI3LFwiLi9zcmMvdXRpbHNcIjozMX1dLDI6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9e2RlZmF1bHQ6ZShcImNvcmUtanMvbGlicmFyeS9mbi9qc29uL3N0cmluZ2lmeVwiKSxfX2VzTW9kdWxlOnRydWV9fSx7XCJjb3JlLWpzL2xpYnJhcnkvZm4vanNvbi9zdHJpbmdpZnlcIjozfV0sMzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBhPWUoXCIuLi8uLi9tb2R1bGVzL19jb3JlXCIpLGk9YS5KU09OfHwoYS5KU09OPXtzdHJpbmdpZnk6SlNPTi5zdHJpbmdpZnl9KTt0LmV4cG9ydHM9ZnVuY3Rpb24gZSh0KXtyZXR1cm4gaS5zdHJpbmdpZnkuYXBwbHkoaSxhcmd1bWVudHMpfX0se1wiLi4vLi4vbW9kdWxlcy9fY29yZVwiOjR9XSw0OltmdW5jdGlvbihlLHQscil7dmFyIGE9dC5leHBvcnRzPXt2ZXJzaW9uOlwiMi40LjBcIn07aWYodHlwZW9mIF9fZT09XCJudW1iZXJcIilfX2U9YX0se31dLDU6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUpe2lmKCFlLl9fbWF0Y2hBdFJlbG9jYXRhYmxlKXt2YXIgdD1lLnNvdXJjZStcInwoKVwiO3ZhciByPVwiZ1wiKyhlLmlnbm9yZUNhc2U/XCJpXCI6XCJcIikrKGUubXVsdGlsaW5lP1wibVwiOlwiXCIpKyhlLnVuaWNvZGU/XCJ1XCI6XCJcIik7ZS5fX21hdGNoQXRSZWxvY2F0YWJsZT1uZXcgUmVnRXhwKHQscil9cmV0dXJuIGUuX19tYXRjaEF0UmVsb2NhdGFibGV9ZnVuY3Rpb24gaShlLHQscil7aWYoZS5nbG9iYWx8fGUuc3RpY2t5KXt0aHJvdyBuZXcgRXJyb3IoXCJtYXRjaEF0KC4uLik6IE9ubHkgbm9uLWdsb2JhbCByZWdleGVzIGFyZSBzdXBwb3J0ZWRcIil9dmFyIGk9YShlKTtpLmxhc3RJbmRleD1yO3ZhciBuPWkuZXhlYyh0KTtpZihuW24ubGVuZ3RoLTFdPT1udWxsKXtuLmxlbmd0aD1uLmxlbmd0aC0xO3JldHVybiBufWVsc2V7cmV0dXJuIG51bGx9fXQuZXhwb3J0cz1pfSx7fV0sNjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7dmFyIGk9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTt2YXIgbj1PYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO2Z1bmN0aW9uIG8oZSl7aWYoZT09PW51bGx8fGU9PT11bmRlZmluZWQpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZFwiKX1yZXR1cm4gT2JqZWN0KGUpfWZ1bmN0aW9uIHMoKXt0cnl7aWYoIU9iamVjdC5hc3NpZ24pe3JldHVybiBmYWxzZX12YXIgZT1uZXcgU3RyaW5nKFwiYWJjXCIpO2VbNV09XCJkZVwiO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGUpWzBdPT09XCI1XCIpe3JldHVybiBmYWxzZX12YXIgdD17fTtmb3IodmFyIHI9MDtyPDEwO3IrKyl7dFtcIl9cIitTdHJpbmcuZnJvbUNoYXJDb2RlKHIpXT1yfXZhciBhPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHQpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gdFtlXX0pO2lmKGEuam9pbihcIlwiKSE9PVwiMDEyMzQ1Njc4OVwiKXtyZXR1cm4gZmFsc2V9dmFyIGk9e307XCJhYmNkZWZnaGlqa2xtbm9wcXJzdFwiLnNwbGl0KFwiXCIpLmZvckVhY2goZnVuY3Rpb24oZSl7aVtlXT1lfSk7aWYoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSxpKSkuam9pbihcIlwiKSE9PVwiYWJjZGVmZ2hpamtsbW5vcHFyc3RcIil7cmV0dXJuIGZhbHNlfXJldHVybiB0cnVlfWNhdGNoKGUpe3JldHVybiBmYWxzZX19dC5leHBvcnRzPXMoKT9PYmplY3QuYXNzaWduOmZ1bmN0aW9uKGUsdCl7dmFyIHI7dmFyIHM9byhlKTt2YXIgbDtmb3IodmFyIHU9MTt1PGFyZ3VtZW50cy5sZW5ndGg7dSsrKXtyPU9iamVjdChhcmd1bWVudHNbdV0pO2Zvcih2YXIgaCBpbiByKXtpZihpLmNhbGwocixoKSl7c1toXT1yW2hdfX1pZihhKXtsPWEocik7Zm9yKHZhciBwPTA7cDxsLmxlbmd0aDtwKyspe2lmKG4uY2FsbChyLGxbcF0pKXtzW2xbcF1dPXJbbFtwXV19fX19cmV0dXJuIHN9fSx7fV0sNzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCJtYXRjaC1hdFwiKTt2YXIgaT1lKFwiLi9QYXJzZUVycm9yXCIpO2Z1bmN0aW9uIG4oZSl7dGhpcy5pbnB1dD1lO3RoaXMucG9zPTB9ZnVuY3Rpb24gbyhlLHQscixhKXt0aGlzLnRleHQ9ZTt0aGlzLnN0YXJ0PXQ7dGhpcy5lbmQ9cjt0aGlzLmxleGVyPWF9by5wcm90b3R5cGUucmFuZ2U9ZnVuY3Rpb24oZSx0KXtpZihlLmxleGVyIT09dGhpcy5sZXhlcil7cmV0dXJuIG5ldyBvKHQpfXJldHVybiBuZXcgbyh0LHRoaXMuc3RhcnQsZS5lbmQsdGhpcy5sZXhlcil9O3ZhciBzPW5ldyBSZWdFeHAoXCIoWyBcXHJcXG5cXHRdKyl8XCIrXCIoWyEtXFxcXFtcXFxcXS1cXHUyMDI3XFx1MjAyYS1cXHVkN2ZmXFx1ZjkwMC1cXHVmZmZmXVwiK1wifFtcXHVkODAwLVxcdWRiZmZdW1xcdWRjMDAtXFx1ZGZmZl1cIitcInxcXFxcXFxcXCg/OlthLXpBLVpdK3xbXlxcdWQ4MDAtXFx1ZGZmZl0pXCIrXCIpXCIpO24ucHJvdG90eXBlLmxleD1mdW5jdGlvbigpe3ZhciBlPXRoaXMuaW5wdXQ7dmFyIHQ9dGhpcy5wb3M7aWYodD09PWUubGVuZ3RoKXtyZXR1cm4gbmV3IG8oXCJFT0ZcIix0LHQsdGhpcyl9dmFyIHI9YShzLGUsdCk7aWYocj09PW51bGwpe3Rocm93IG5ldyBpKFwiVW5leHBlY3RlZCBjaGFyYWN0ZXI6ICdcIitlW3RdK1wiJ1wiLG5ldyBvKGVbdF0sdCx0KzEsdGhpcykpfXZhciBuPXJbMl18fFwiIFwiO3ZhciBsPXRoaXMucG9zO3RoaXMucG9zKz1yWzBdLmxlbmd0aDt2YXIgdT10aGlzLnBvcztyZXR1cm4gbmV3IG8obixsLHUsdGhpcyl9O3QuZXhwb3J0cz1ufSx7XCIuL1BhcnNlRXJyb3JcIjoxMCxcIm1hdGNoLWF0XCI6NX1dLDg6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi9MZXhlclwiKTt2YXIgaT1lKFwiLi9tYWNyb3NcIik7dmFyIG49ZShcIi4vUGFyc2VFcnJvclwiKTt2YXIgbz1lKFwib2JqZWN0LWFzc2lnblwiKTtmdW5jdGlvbiBzKGUsdCl7dGhpcy5sZXhlcj1uZXcgYShlKTt0aGlzLm1hY3Jvcz1vKHt9LGksdCk7dGhpcy5zdGFjaz1bXTt0aGlzLmRpc2NhcmRlZFdoaXRlU3BhY2U9W119cy5wcm90b3R5cGUubmV4dFRva2VuPWZ1bmN0aW9uKCl7Zm9yKDs7KXtpZih0aGlzLnN0YWNrLmxlbmd0aD09PTApe3RoaXMuc3RhY2sucHVzaCh0aGlzLmxleGVyLmxleCgpKX12YXIgZT10aGlzLnN0YWNrLnBvcCgpO3ZhciB0PWUudGV4dDtpZighKHQuY2hhckF0KDApPT09XCJcXFxcXCImJnRoaXMubWFjcm9zLmhhc093blByb3BlcnR5KHQpKSl7cmV0dXJuIGV9dmFyIHI9dm9pZCAwO3ZhciBpPXRoaXMubWFjcm9zW3RdO2lmKHR5cGVvZiBpPT09XCJzdHJpbmdcIil7dmFyIG89MDtpZihpLmluZGV4T2YoXCIjXCIpIT09LTEpe3ZhciBzPWkucmVwbGFjZSgvIyMvZyxcIlwiKTt3aGlsZShzLmluZGV4T2YoXCIjXCIrKG8rMSkpIT09LTEpeysrb319dmFyIGw9bmV3IGEoaSk7aT1bXTtyPWwubGV4KCk7d2hpbGUoci50ZXh0IT09XCJFT0ZcIil7aS5wdXNoKHIpO3I9bC5sZXgoKX1pLnJldmVyc2UoKTtpLm51bUFyZ3M9bzt0aGlzLm1hY3Jvc1t0XT1pfWlmKGkubnVtQXJncyl7dmFyIHU9W107dmFyIGg9dm9pZCAwO2ZvcihoPTA7aDxpLm51bUFyZ3M7KytoKXt2YXIgcD10aGlzLmdldCh0cnVlKTtpZihwLnRleHQ9PT1cIntcIil7dmFyIGM9W107dmFyIHY9MTt3aGlsZSh2IT09MCl7cj10aGlzLmdldChmYWxzZSk7Yy5wdXNoKHIpO2lmKHIudGV4dD09PVwie1wiKXsrK3Z9ZWxzZSBpZihyLnRleHQ9PT1cIn1cIil7LS12fWVsc2UgaWYoci50ZXh0PT09XCJFT0ZcIil7dGhyb3cgbmV3IG4oXCJFbmQgb2YgaW5wdXQgaW4gbWFjcm8gYXJndW1lbnRcIixwKX19Yy5wb3AoKTtjLnJldmVyc2UoKTt1W2hdPWN9ZWxzZSBpZihwLnRleHQ9PT1cIkVPRlwiKXt0aHJvdyBuZXcgbihcIkVuZCBvZiBpbnB1dCBleHBlY3RpbmcgbWFjcm8gYXJndW1lbnRcIixlKX1lbHNle3VbaF09W3BdfX1pPWkuc2xpY2UoKTtmb3IoaD1pLmxlbmd0aC0xO2g+PTA7LS1oKXtyPWlbaF07aWYoci50ZXh0PT09XCIjXCIpe2lmKGg9PT0wKXt0aHJvdyBuZXcgbihcIkluY29tcGxldGUgcGxhY2Vob2xkZXIgYXQgZW5kIG9mIG1hY3JvIGJvZHlcIixyKX1yPWlbLS1oXTtpZihyLnRleHQ9PT1cIiNcIil7aS5zcGxpY2UoaCsxLDEpfWVsc2UgaWYoL15bMS05XSQvLnRlc3Qoci50ZXh0KSl7aS5zcGxpY2UuYXBwbHkoaSxbaCwyXS5jb25jYXQodVtyLnRleHQtMV0pKX1lbHNle3Rocm93IG5ldyBuKFwiTm90IGEgdmFsaWQgYXJndW1lbnQgbnVtYmVyXCIscil9fX19dGhpcy5zdGFjaz10aGlzLnN0YWNrLmNvbmNhdChpKX19O3MucHJvdG90eXBlLmdldD1mdW5jdGlvbihlKXt0aGlzLmRpc2NhcmRlZFdoaXRlU3BhY2U9W107dmFyIHQ9dGhpcy5uZXh0VG9rZW4oKTtpZihlKXt3aGlsZSh0LnRleHQ9PT1cIiBcIil7dGhpcy5kaXNjYXJkZWRXaGl0ZVNwYWNlLnB1c2godCk7dD10aGlzLm5leHRUb2tlbigpfX1yZXR1cm4gdH07cy5wcm90b3R5cGUudW5nZXQ9ZnVuY3Rpb24oZSl7dGhpcy5zdGFjay5wdXNoKGUpO3doaWxlKHRoaXMuZGlzY2FyZGVkV2hpdGVTcGFjZS5sZW5ndGghPT0wKXt0aGlzLnN0YWNrLnB1c2godGhpcy5kaXNjYXJkZWRXaGl0ZVNwYWNlLnBvcCgpKX19O3QuZXhwb3J0cz1zfSx7XCIuL0xleGVyXCI6NyxcIi4vUGFyc2VFcnJvclwiOjEwLFwiLi9tYWNyb3NcIjoyNCxcIm9iamVjdC1hc3NpZ25cIjo2fV0sOTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL2ZvbnRNZXRyaWNzXCIpO3ZhciBpPTY7dmFyIG49W1sxLDEsMV0sWzIsMSwxXSxbMywxLDFdLFs0LDIsMV0sWzUsMiwxXSxbNiwzLDFdLFs3LDQsMl0sWzgsNiwzXSxbOSw3LDZdLFsxMCw4LDddLFsxMSwxMCw5XV07dmFyIG89Wy41LC42LC43LC44LC45LDEsMS4yLDEuNDQsMS43MjgsMi4wNzQsMi40ODhdO2Z1bmN0aW9uIHMoZSl7dGhpcy5zdHlsZT1lLnN0eWxlO3RoaXMuY29sb3I9ZS5jb2xvcjt0aGlzLnNpemU9ZS5zaXplfHxpO3RoaXMudGV4dFNpemU9ZS50ZXh0U2l6ZXx8dGhpcy5zaXplO3RoaXMucGhhbnRvbT1lLnBoYW50b207dGhpcy5mb250PWUuZm9udDt0aGlzLnNpemVNdWx0aXBsaWVyPW9bdGhpcy5zaXplLTFdO3RoaXMuX2ZvbnRNZXRyaWNzPW51bGx9cy5wcm90b3R5cGUuZXh0ZW5kPWZ1bmN0aW9uKGUpe3ZhciB0PXtzdHlsZTp0aGlzLnN0eWxlLHNpemU6dGhpcy5zaXplLHRleHRTaXplOnRoaXMudGV4dFNpemUsY29sb3I6dGhpcy5jb2xvcixwaGFudG9tOnRoaXMucGhhbnRvbSxmb250OnRoaXMuZm9udH07Zm9yKHZhciByIGluIGUpe2lmKGUuaGFzT3duUHJvcGVydHkocikpe3Rbcl09ZVtyXX19cmV0dXJuIG5ldyBzKHQpfTtmdW5jdGlvbiBsKGUsdCl7cmV0dXJuIHQuc2l6ZTwyP2U6bltlLTFdW3Quc2l6ZS0xXX1zLnByb3RvdHlwZS5oYXZpbmdTdHlsZT1mdW5jdGlvbihlKXtpZih0aGlzLnN0eWxlPT09ZSl7cmV0dXJuIHRoaXN9ZWxzZXtyZXR1cm4gdGhpcy5leHRlbmQoe3N0eWxlOmUsc2l6ZTpsKHRoaXMudGV4dFNpemUsZSl9KX19O3MucHJvdG90eXBlLmhhdmluZ0NyYW1wZWRTdHlsZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmhhdmluZ1N0eWxlKHRoaXMuc3R5bGUuY3JhbXAoKSl9O3MucHJvdG90eXBlLmhhdmluZ1NpemU9ZnVuY3Rpb24oZSl7aWYodGhpcy5zaXplPT09ZSYmdGhpcy50ZXh0U2l6ZT09PWUpe3JldHVybiB0aGlzfWVsc2V7cmV0dXJuIHRoaXMuZXh0ZW5kKHtzdHlsZTp0aGlzLnN0eWxlLnRleHQoKSxzaXplOmUsdGV4dFNpemU6ZX0pfX07cy5wcm90b3R5cGUuaGF2aW5nQmFzZVN0eWxlPWZ1bmN0aW9uKGUpe2U9ZXx8dGhpcy5zdHlsZS50ZXh0KCk7dmFyIHQ9bChpLGUpO2lmKHRoaXMuc2l6ZT09PXQmJnRoaXMudGV4dFNpemU9PT1pJiZ0aGlzLnN0eWxlPT09ZSl7cmV0dXJuIHRoaXN9ZWxzZXtyZXR1cm4gdGhpcy5leHRlbmQoe3N0eWxlOmUsc2l6ZTp0LGJhc2VTaXplOml9KX19O3MucHJvdG90eXBlLndpdGhDb2xvcj1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5leHRlbmQoe2NvbG9yOmV9KX07cy5wcm90b3R5cGUud2l0aFBoYW50b209ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5leHRlbmQoe3BoYW50b206dHJ1ZX0pfTtzLnByb3RvdHlwZS53aXRoRm9udD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5leHRlbmQoe2ZvbnQ6ZXx8dGhpcy5mb250fSl9O3MucHJvdG90eXBlLnNpemluZ0NsYXNzZXM9ZnVuY3Rpb24oZSl7aWYoZS5zaXplIT09dGhpcy5zaXplKXtyZXR1cm5bXCJzaXppbmdcIixcInJlc2V0LXNpemVcIitlLnNpemUsXCJzaXplXCIrdGhpcy5zaXplXX1lbHNle3JldHVybltdfX07cy5wcm90b3R5cGUuYmFzZVNpemluZ0NsYXNzZXM9ZnVuY3Rpb24oKXtpZih0aGlzLnNpemUhPT1pKXtyZXR1cm5bXCJzaXppbmdcIixcInJlc2V0LXNpemVcIit0aGlzLnNpemUsXCJzaXplXCIraV19ZWxzZXtyZXR1cm5bXX19O3MucHJvdG90eXBlLmZvbnRNZXRyaWNzPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2ZvbnRNZXRyaWNzKXt0aGlzLl9mb250TWV0cmljcz1hLmdldEZvbnRNZXRyaWNzKHRoaXMuc2l6ZSl9cmV0dXJuIHRoaXMuX2ZvbnRNZXRyaWNzfTt2YXIgdT17XCJrYXRleC1ibHVlXCI6XCIjNjQ5NWVkXCIsXCJrYXRleC1vcmFuZ2VcIjpcIiNmZmE1MDBcIixcImthdGV4LXBpbmtcIjpcIiNmZjAwYWZcIixcImthdGV4LXJlZFwiOlwiI2RmMDAzMFwiLFwia2F0ZXgtZ3JlZW5cIjpcIiMyOGFlN2JcIixcImthdGV4LWdyYXlcIjpcImdyYXlcIixcImthdGV4LXB1cnBsZVwiOlwiIzlkMzhiZFwiLFwia2F0ZXgtYmx1ZUFcIjpcIiNjY2ZhZmZcIixcImthdGV4LWJsdWVCXCI6XCIjODBmNmZmXCIsXCJrYXRleC1ibHVlQ1wiOlwiIzYzZDllYVwiLFwia2F0ZXgtYmx1ZURcIjpcIiMxMWFjY2RcIixcImthdGV4LWJsdWVFXCI6XCIjMGM3Zjk5XCIsXCJrYXRleC10ZWFsQVwiOlwiIzk0ZmZmNVwiLFwia2F0ZXgtdGVhbEJcIjpcIiMyNmVkZDVcIixcImthdGV4LXRlYWxDXCI6XCIjMDFkMWMxXCIsXCJrYXRleC10ZWFsRFwiOlwiIzAxYTk5NVwiLFwia2F0ZXgtdGVhbEVcIjpcIiMyMDgxNzBcIixcImthdGV4LWdyZWVuQVwiOlwiI2I2ZmZiMFwiLFwia2F0ZXgtZ3JlZW5CXCI6XCIjOGFmMjgxXCIsXCJrYXRleC1ncmVlbkNcIjpcIiM3NGNmNzBcIixcImthdGV4LWdyZWVuRFwiOlwiIzFmYWI1NFwiLFwia2F0ZXgtZ3JlZW5FXCI6XCIjMGQ5MjNmXCIsXCJrYXRleC1nb2xkQVwiOlwiI2ZmZDBhOVwiLFwia2F0ZXgtZ29sZEJcIjpcIiNmZmJiNzFcIixcImthdGV4LWdvbGRDXCI6XCIjZmY5YzM5XCIsXCJrYXRleC1nb2xkRFwiOlwiI2UwN2QxMFwiLFwia2F0ZXgtZ29sZEVcIjpcIiNhNzVhMDVcIixcImthdGV4LXJlZEFcIjpcIiNmY2E5YTlcIixcImthdGV4LXJlZEJcIjpcIiNmZjg0ODJcIixcImthdGV4LXJlZENcIjpcIiNmOTY4NWRcIixcImthdGV4LXJlZERcIjpcIiNlODRkMzlcIixcImthdGV4LXJlZEVcIjpcIiNiYzI2MTJcIixcImthdGV4LW1hcm9vbkFcIjpcIiNmZmJkZTBcIixcImthdGV4LW1hcm9vbkJcIjpcIiNmZjkyYzZcIixcImthdGV4LW1hcm9vbkNcIjpcIiNlZDVmYTZcIixcImthdGV4LW1hcm9vbkRcIjpcIiNjYTMzN2NcIixcImthdGV4LW1hcm9vbkVcIjpcIiM5ZTAzNGVcIixcImthdGV4LXB1cnBsZUFcIjpcIiNkZGQ3ZmZcIixcImthdGV4LXB1cnBsZUJcIjpcIiNjNmI5ZmNcIixcImthdGV4LXB1cnBsZUNcIjpcIiNhYTg3ZmZcIixcImthdGV4LXB1cnBsZURcIjpcIiM3ODU0YWJcIixcImthdGV4LXB1cnBsZUVcIjpcIiM1NDNiNzhcIixcImthdGV4LW1pbnRBXCI6XCIjZjVmOWU4XCIsXCJrYXRleC1taW50QlwiOlwiI2VkZjJkZlwiLFwia2F0ZXgtbWludENcIjpcIiNlMGU1Y2NcIixcImthdGV4LWdyYXlBXCI6XCIjZjZmN2Y3XCIsXCJrYXRleC1ncmF5QlwiOlwiI2YwZjFmMlwiLFwia2F0ZXgtZ3JheUNcIjpcIiNlM2U1ZTZcIixcImthdGV4LWdyYXlEXCI6XCIjZDZkOGRhXCIsXCJrYXRleC1ncmF5RVwiOlwiI2JhYmVjMlwiLFwia2F0ZXgtZ3JheUZcIjpcIiM4ODhkOTNcIixcImthdGV4LWdyYXlHXCI6XCIjNjI2NTY5XCIsXCJrYXRleC1ncmF5SFwiOlwiIzNiM2U0MFwiLFwia2F0ZXgtZ3JheUlcIjpcIiMyMTI0MmNcIixcImthdGV4LWthQmx1ZVwiOlwiIzMxNDQ1M1wiLFwia2F0ZXgta2FHcmVlblwiOlwiIzcxQjMwN1wifTtzLnByb3RvdHlwZS5nZXRDb2xvcj1mdW5jdGlvbigpe2lmKHRoaXMucGhhbnRvbSl7cmV0dXJuXCJ0cmFuc3BhcmVudFwifWVsc2V7cmV0dXJuIHVbdGhpcy5jb2xvcl18fHRoaXMuY29sb3J9fTtzLkJBU0VTSVpFPWk7dC5leHBvcnRzPXN9LHtcIi4vZm9udE1ldHJpY3NcIjoyMX1dLDEwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYShlLHQpe3ZhciByPVwiS2FUZVggcGFyc2UgZXJyb3I6IFwiK2U7dmFyIGk9dm9pZCAwO3ZhciBuPXZvaWQgMDtpZih0JiZ0LmxleGVyJiZ0LnN0YXJ0PD10LmVuZCl7dmFyIG89dC5sZXhlci5pbnB1dDtpPXQuc3RhcnQ7bj10LmVuZDtpZihpPT09by5sZW5ndGgpe3IrPVwiIGF0IGVuZCBvZiBpbnB1dDogXCJ9ZWxzZXtyKz1cIiBhdCBwb3NpdGlvbiBcIisoaSsxKStcIjogXCJ9dmFyIHM9by5zbGljZShpLG4pLnJlcGxhY2UoL1teXS9nLFwiJCZcXHUwMzMyXCIpO3ZhciBsPXZvaWQgMDtpZihpPjE1KXtsPVwiXFx1MjAyNlwiK28uc2xpY2UoaS0xNSxpKX1lbHNle2w9by5zbGljZSgwLGkpfXZhciB1PXZvaWQgMDtpZihuKzE1PG8ubGVuZ3RoKXt1PW8uc2xpY2UobixuKzE1KStcIlxcdTIwMjZcIn1lbHNle3U9by5zbGljZShuKX1yKz1sK3MrdX12YXIgaD1uZXcgRXJyb3Iocik7aC5uYW1lPVwiUGFyc2VFcnJvclwiO2guX19wcm90b19fPWEucHJvdG90eXBlO2gucG9zaXRpb249aTtyZXR1cm4gaH1hLnByb3RvdHlwZS5fX3Byb3RvX189RXJyb3IucHJvdG90eXBlO3QuZXhwb3J0cz1hfSx7fV0sMTE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi9mdW5jdGlvbnNcIik7dmFyIGk9ZShcIi4vZW52aXJvbm1lbnRzXCIpO3ZhciBuPWUoXCIuL01hY3JvRXhwYW5kZXJcIik7dmFyIG89ZShcIi4vc3ltYm9sc1wiKTt2YXIgcz1lKFwiLi91dGlsc1wiKTt2YXIgbD1lKFwiLi91bmljb2RlUmVnZXhlc1wiKS5jamtSZWdleDt2YXIgdT1lKFwiLi9wYXJzZURhdGFcIik7dmFyIGg9ZShcIi4vUGFyc2VFcnJvclwiKTtmdW5jdGlvbiBwKGUsdCl7dGhpcy5ndWxsZXQ9bmV3IG4oZSx0Lm1hY3Jvcyk7aWYodC5jb2xvcklzVGV4dENvbG9yKXt0aGlzLmd1bGxldC5tYWNyb3NbXCJcXFxcY29sb3JcIl09XCJcXFxcdGV4dGNvbG9yXCJ9dGhpcy5zZXR0aW5ncz10O3RoaXMubGVmdHJpZ2h0RGVwdGg9MH12YXIgYz11LlBhcnNlTm9kZTtmdW5jdGlvbiB2KGUsdCxyKXt0aGlzLnJlc3VsdD1lO3RoaXMuaXNGdW5jdGlvbj10O3RoaXMudG9rZW49cn1wLnByb3RvdHlwZS5leHBlY3Q9ZnVuY3Rpb24oZSx0KXtpZih0aGlzLm5leHRUb2tlbi50ZXh0IT09ZSl7dGhyb3cgbmV3IGgoXCJFeHBlY3RlZCAnXCIrZStcIicsIGdvdCAnXCIrdGhpcy5uZXh0VG9rZW4udGV4dCtcIidcIix0aGlzLm5leHRUb2tlbil9aWYodCE9PWZhbHNlKXt0aGlzLmNvbnN1bWUoKX19O3AucHJvdG90eXBlLmNvbnN1bWU9ZnVuY3Rpb24oKXt0aGlzLm5leHRUb2tlbj10aGlzLmd1bGxldC5nZXQodGhpcy5tb2RlPT09XCJtYXRoXCIpfTtwLnByb3RvdHlwZS5zd2l0Y2hNb2RlPWZ1bmN0aW9uKGUpe3RoaXMuZ3VsbGV0LnVuZ2V0KHRoaXMubmV4dFRva2VuKTt0aGlzLm1vZGU9ZTt0aGlzLmNvbnN1bWUoKX07cC5wcm90b3R5cGUucGFyc2U9ZnVuY3Rpb24oKXt0aGlzLm1vZGU9XCJtYXRoXCI7dGhpcy5jb25zdW1lKCk7dmFyIGU9dGhpcy5wYXJzZUlucHV0KCk7cmV0dXJuIGV9O3AucHJvdG90eXBlLnBhcnNlSW5wdXQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnBhcnNlRXhwcmVzc2lvbihmYWxzZSk7dGhpcy5leHBlY3QoXCJFT0ZcIixmYWxzZSk7cmV0dXJuIGV9O3ZhciBmPVtcIn1cIixcIlxcXFxlbmRcIixcIlxcXFxyaWdodFwiLFwiJlwiLFwiXFxcXFxcXFxcIixcIlxcXFxjclwiXTtwLnByb3RvdHlwZS5wYXJzZUV4cHJlc3Npb249ZnVuY3Rpb24oZSx0KXt2YXIgcj1bXTt3aGlsZSh0cnVlKXt2YXIgaT10aGlzLm5leHRUb2tlbjtpZihmLmluZGV4T2YoaS50ZXh0KSE9PS0xKXticmVha31pZih0JiZpLnRleHQ9PT10KXticmVha31pZihlJiZhW2kudGV4dF0mJmFbaS50ZXh0XS5pbmZpeCl7YnJlYWt9dmFyIG49dGhpcy5wYXJzZUF0b20oKTtpZighbil7aWYoIXRoaXMuc2V0dGluZ3MudGhyb3dPbkVycm9yJiZpLnRleHRbMF09PT1cIlxcXFxcIil7dmFyIG89dGhpcy5oYW5kbGVVbnN1cHBvcnRlZENtZCgpO3IucHVzaChvKTtjb250aW51ZX1icmVha31yLnB1c2gobil9cmV0dXJuIHRoaXMuaGFuZGxlSW5maXhOb2RlcyhyKX07cC5wcm90b3R5cGUuaGFuZGxlSW5maXhOb2Rlcz1mdW5jdGlvbihlKXt2YXIgdD0tMTt2YXIgcj12b2lkIDA7Zm9yKHZhciBhPTA7YTxlLmxlbmd0aDthKyspe3ZhciBpPWVbYV07aWYoaS50eXBlPT09XCJpbmZpeFwiKXtpZih0IT09LTEpe3Rocm93IG5ldyBoKFwib25seSBvbmUgaW5maXggb3BlcmF0b3IgcGVyIGdyb3VwXCIsaS52YWx1ZS50b2tlbil9dD1hO3I9aS52YWx1ZS5yZXBsYWNlV2l0aH19aWYodCE9PS0xKXt2YXIgbj12b2lkIDA7dmFyIG89dm9pZCAwO3ZhciBzPWUuc2xpY2UoMCx0KTt2YXIgbD1lLnNsaWNlKHQrMSk7aWYocy5sZW5ndGg9PT0xJiZzWzBdLnR5cGU9PT1cIm9yZGdyb3VwXCIpe249c1swXX1lbHNle249bmV3IGMoXCJvcmRncm91cFwiLHMsdGhpcy5tb2RlKX1pZihsLmxlbmd0aD09PTEmJmxbMF0udHlwZT09PVwib3JkZ3JvdXBcIil7bz1sWzBdfWVsc2V7bz1uZXcgYyhcIm9yZGdyb3VwXCIsbCx0aGlzLm1vZGUpfXZhciB1PXRoaXMuY2FsbEZ1bmN0aW9uKHIsW24sb10sbnVsbCk7cmV0dXJuW25ldyBjKHUudHlwZSx1LHRoaXMubW9kZSldfWVsc2V7cmV0dXJuIGV9fTt2YXIgbT0xO3AucHJvdG90eXBlLmhhbmRsZVN1cFN1YnNjcmlwdD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLm5leHRUb2tlbjt2YXIgcj10LnRleHQ7dGhpcy5jb25zdW1lKCk7dmFyIGk9dGhpcy5wYXJzZUdyb3VwKCk7aWYoIWkpe2lmKCF0aGlzLnNldHRpbmdzLnRocm93T25FcnJvciYmdGhpcy5uZXh0VG9rZW4udGV4dFswXT09PVwiXFxcXFwiKXtyZXR1cm4gdGhpcy5oYW5kbGVVbnN1cHBvcnRlZENtZCgpfWVsc2V7dGhyb3cgbmV3IGgoXCJFeHBlY3RlZCBncm91cCBhZnRlciAnXCIrcitcIidcIix0KX19ZWxzZSBpZihpLmlzRnVuY3Rpb24pe3ZhciBuPWFbaS5yZXN1bHRdLmdyZWVkaW5lc3M7aWYobj5tKXtyZXR1cm4gdGhpcy5wYXJzZUZ1bmN0aW9uKGkpfWVsc2V7dGhyb3cgbmV3IGgoXCJHb3QgZnVuY3Rpb24gJ1wiK2kucmVzdWx0K1wiJyB3aXRoIG5vIGFyZ3VtZW50cyBcIitcImFzIFwiK2UsdCl9fWVsc2V7cmV0dXJuIGkucmVzdWx0fX07cC5wcm90b3R5cGUuaGFuZGxlVW5zdXBwb3J0ZWRDbWQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm5leHRUb2tlbi50ZXh0O3ZhciB0PVtdO2Zvcih2YXIgcj0wO3I8ZS5sZW5ndGg7cisrKXt0LnB1c2gobmV3IGMoXCJ0ZXh0b3JkXCIsZVtyXSxcInRleHRcIikpfXZhciBhPW5ldyBjKFwidGV4dFwiLHtib2R5OnQsdHlwZTpcInRleHRcIn0sdGhpcy5tb2RlKTt2YXIgaT1uZXcgYyhcImNvbG9yXCIse2NvbG9yOnRoaXMuc2V0dGluZ3MuZXJyb3JDb2xvcix2YWx1ZTpbYV0sdHlwZTpcImNvbG9yXCJ9LHRoaXMubW9kZSk7dGhpcy5jb25zdW1lKCk7cmV0dXJuIGl9O3AucHJvdG90eXBlLnBhcnNlQXRvbT1mdW5jdGlvbigpe3ZhciBlPXRoaXMucGFyc2VJbXBsaWNpdEdyb3VwKCk7aWYodGhpcy5tb2RlPT09XCJ0ZXh0XCIpe3JldHVybiBlfXZhciB0PXZvaWQgMDt2YXIgcj12b2lkIDA7d2hpbGUodHJ1ZSl7dmFyIGE9dGhpcy5uZXh0VG9rZW47aWYoYS50ZXh0PT09XCJcXFxcbGltaXRzXCJ8fGEudGV4dD09PVwiXFxcXG5vbGltaXRzXCIpe2lmKCFlfHxlLnR5cGUhPT1cIm9wXCIpe3Rocm93IG5ldyBoKFwiTGltaXQgY29udHJvbHMgbXVzdCBmb2xsb3cgYSBtYXRoIG9wZXJhdG9yXCIsYSl9ZWxzZXt2YXIgaT1hLnRleHQ9PT1cIlxcXFxsaW1pdHNcIjtlLnZhbHVlLmxpbWl0cz1pO2UudmFsdWUuYWx3YXlzSGFuZGxlU3VwU3ViPXRydWV9dGhpcy5jb25zdW1lKCl9ZWxzZSBpZihhLnRleHQ9PT1cIl5cIil7aWYodCl7dGhyb3cgbmV3IGgoXCJEb3VibGUgc3VwZXJzY3JpcHRcIixhKX10PXRoaXMuaGFuZGxlU3VwU3Vic2NyaXB0KFwic3VwZXJzY3JpcHRcIil9ZWxzZSBpZihhLnRleHQ9PT1cIl9cIil7aWYocil7dGhyb3cgbmV3IGgoXCJEb3VibGUgc3Vic2NyaXB0XCIsYSl9cj10aGlzLmhhbmRsZVN1cFN1YnNjcmlwdChcInN1YnNjcmlwdFwiKX1lbHNlIGlmKGEudGV4dD09PVwiJ1wiKXtpZih0KXt0aHJvdyBuZXcgaChcIkRvdWJsZSBzdXBlcnNjcmlwdFwiLGEpfXZhciBuPW5ldyBjKFwidGV4dG9yZFwiLFwiXFxcXHByaW1lXCIsdGhpcy5tb2RlKTt2YXIgbz1bbl07dGhpcy5jb25zdW1lKCk7d2hpbGUodGhpcy5uZXh0VG9rZW4udGV4dD09PVwiJ1wiKXtvLnB1c2gobik7dGhpcy5jb25zdW1lKCl9aWYodGhpcy5uZXh0VG9rZW4udGV4dD09PVwiXlwiKXtvLnB1c2godGhpcy5oYW5kbGVTdXBTdWJzY3JpcHQoXCJzdXBlcnNjcmlwdFwiKSl9dD1uZXcgYyhcIm9yZGdyb3VwXCIsbyx0aGlzLm1vZGUpfWVsc2V7YnJlYWt9fWlmKHR8fHIpe3JldHVybiBuZXcgYyhcInN1cHN1YlwiLHtiYXNlOmUsc3VwOnQsc3ViOnJ9LHRoaXMubW9kZSl9ZWxzZXtyZXR1cm4gZX19O3ZhciBkPVtcIlxcXFx0aW55XCIsXCJcXFxcc2l4cHRzaXplXCIsXCJcXFxcc2NyaXB0c2l6ZVwiLFwiXFxcXGZvb3Rub3Rlc2l6ZVwiLFwiXFxcXHNtYWxsXCIsXCJcXFxcbm9ybWFsc2l6ZVwiLFwiXFxcXGxhcmdlXCIsXCJcXFxcTGFyZ2VcIixcIlxcXFxMQVJHRVwiLFwiXFxcXGh1Z2VcIixcIlxcXFxIdWdlXCJdO3ZhciBnPVtcIlxcXFxkaXNwbGF5c3R5bGVcIixcIlxcXFx0ZXh0c3R5bGVcIixcIlxcXFxzY3JpcHRzdHlsZVwiLFwiXFxcXHNjcmlwdHNjcmlwdHN0eWxlXCJdO3ZhciB5PXtcIlxcXFxybVwiOlwibWF0aHJtXCIsXCJcXFxcc2ZcIjpcIm1hdGhzZlwiLFwiXFxcXHR0XCI6XCJtYXRodHRcIixcIlxcXFxiZlwiOlwibWF0aGJmXCIsXCJcXFxcaXRcIjpcIm1hdGhpdFwifTtwLnByb3RvdHlwZS5wYXJzZUltcGxpY2l0R3JvdXA9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnBhcnNlU3ltYm9sKCk7aWYoZT09bnVsbCl7cmV0dXJuIHRoaXMucGFyc2VGdW5jdGlvbigpfXZhciB0PWUucmVzdWx0O2lmKHQ9PT1cIlxcXFxsZWZ0XCIpe3ZhciByPXRoaXMucGFyc2VGdW5jdGlvbihlKTsrK3RoaXMubGVmdHJpZ2h0RGVwdGg7dmFyIGE9dGhpcy5wYXJzZUV4cHJlc3Npb24oZmFsc2UpOy0tdGhpcy5sZWZ0cmlnaHREZXB0aDt0aGlzLmV4cGVjdChcIlxcXFxyaWdodFwiLGZhbHNlKTt2YXIgbj10aGlzLnBhcnNlRnVuY3Rpb24oKTtyZXR1cm4gbmV3IGMoXCJsZWZ0cmlnaHRcIix7Ym9keTphLGxlZnQ6ci52YWx1ZS52YWx1ZSxyaWdodDpuLnZhbHVlLnZhbHVlfSx0aGlzLm1vZGUpfWVsc2UgaWYodD09PVwiXFxcXGJlZ2luXCIpe3ZhciBvPXRoaXMucGFyc2VGdW5jdGlvbihlKTt2YXIgbD1vLnZhbHVlLm5hbWU7aWYoIWkuaGFzT3duUHJvcGVydHkobCkpe3Rocm93IG5ldyBoKFwiTm8gc3VjaCBlbnZpcm9ubWVudDogXCIrbCxvLnZhbHVlLm5hbWVHcm91cCl9dmFyIHU9aVtsXTt2YXIgcD10aGlzLnBhcnNlQXJndW1lbnRzKFwiXFxcXGJlZ2lue1wiK2wrXCJ9XCIsdSk7dmFyIHY9e21vZGU6dGhpcy5tb2RlLGVudk5hbWU6bCxwYXJzZXI6dGhpcyxwb3NpdGlvbnM6cC5wb3AoKX07dmFyIGY9dS5oYW5kbGVyKHYscCk7dGhpcy5leHBlY3QoXCJcXFxcZW5kXCIsZmFsc2UpO3ZhciBtPXRoaXMubmV4dFRva2VuO3ZhciB4PXRoaXMucGFyc2VGdW5jdGlvbigpO2lmKHgudmFsdWUubmFtZSE9PWwpe3Rocm93IG5ldyBoKFwiTWlzbWF0Y2g6IFxcXFxiZWdpbntcIitsK1wifSBtYXRjaGVkIFwiK1wiYnkgXFxcXGVuZHtcIit4LnZhbHVlLm5hbWUrXCJ9XCIsbSl9Zi5wb3NpdGlvbj14LnBvc2l0aW9uO3JldHVybiBmfWVsc2UgaWYocy5jb250YWlucyhkLHQpKXt0aGlzLmNvbnN1bWVTcGFjZXMoKTt2YXIgYj10aGlzLnBhcnNlRXhwcmVzc2lvbihmYWxzZSk7cmV0dXJuIG5ldyBjKFwic2l6aW5nXCIse3NpemU6cy5pbmRleE9mKGQsdCkrMSx2YWx1ZTpifSx0aGlzLm1vZGUpfWVsc2UgaWYocy5jb250YWlucyhnLHQpKXt0aGlzLmNvbnN1bWVTcGFjZXMoKTt2YXIgdz10aGlzLnBhcnNlRXhwcmVzc2lvbih0cnVlKTtyZXR1cm4gbmV3IGMoXCJzdHlsaW5nXCIse3N0eWxlOnQuc2xpY2UoMSx0Lmxlbmd0aC01KSx2YWx1ZTp3fSx0aGlzLm1vZGUpfWVsc2UgaWYodCBpbiB5KXt2YXIgaz15W3RdO3RoaXMuY29uc3VtZVNwYWNlcygpO3ZhciB6PXRoaXMucGFyc2VFeHByZXNzaW9uKHRydWUpO2lmKGsuc2xpY2UoMCw0KT09PVwidGV4dFwiKXtyZXR1cm4gbmV3IGMoXCJ0ZXh0XCIse3N0eWxlOmssYm9keTpuZXcgYyhcIm9yZGdyb3VwXCIseix0aGlzLm1vZGUpfSx0aGlzLm1vZGUpfWVsc2V7cmV0dXJuIG5ldyBjKFwiZm9udFwiLHtmb250OmssYm9keTpuZXcgYyhcIm9yZGdyb3VwXCIseix0aGlzLm1vZGUpfSx0aGlzLm1vZGUpfX1lbHNlIGlmKHQ9PT1cIlxcXFxjb2xvclwiKXt2YXIgTT10aGlzLnBhcnNlQ29sb3JHcm91cChmYWxzZSk7aWYoIU0pe3Rocm93IG5ldyBoKFwiXFxcXGNvbG9yIG5vdCBmb2xsb3dlZCBieSBjb2xvclwiKX12YXIgUz10aGlzLnBhcnNlRXhwcmVzc2lvbih0cnVlKTtyZXR1cm4gbmV3IGMoXCJjb2xvclwiLHt0eXBlOlwiY29sb3JcIixjb2xvcjpNLnJlc3VsdC52YWx1ZSx2YWx1ZTpTfSx0aGlzLm1vZGUpfWVsc2UgaWYodD09PVwiJFwiKXtpZih0aGlzLm1vZGU9PT1cIm1hdGhcIil7dGhyb3cgbmV3IGgoXCIkIHdpdGhpbiBtYXRoIG1vZGVcIil9dGhpcy5jb25zdW1lKCk7dmFyIEE9dGhpcy5tb2RlO3RoaXMuc3dpdGNoTW9kZShcIm1hdGhcIik7dmFyIE49dGhpcy5wYXJzZUV4cHJlc3Npb24oZmFsc2UsXCIkXCIpO3RoaXMuZXhwZWN0KFwiJFwiLHRydWUpO3RoaXMuc3dpdGNoTW9kZShBKTtyZXR1cm4gbmV3IGMoXCJzdHlsaW5nXCIse3N0eWxlOlwidGV4dFwiLHZhbHVlOk59LFwibWF0aFwiKX1lbHNle3JldHVybiB0aGlzLnBhcnNlRnVuY3Rpb24oZSl9fTtwLnByb3RvdHlwZS5wYXJzZUZ1bmN0aW9uPWZ1bmN0aW9uKGUpe2lmKCFlKXtlPXRoaXMucGFyc2VHcm91cCgpfWlmKGUpe2lmKGUuaXNGdW5jdGlvbil7dmFyIHQ9ZS5yZXN1bHQ7dmFyIHI9YVt0XTtpZih0aGlzLm1vZGU9PT1cInRleHRcIiYmIXIuYWxsb3dlZEluVGV4dCl7dGhyb3cgbmV3IGgoXCJDYW4ndCB1c2UgZnVuY3Rpb24gJ1wiK3QrXCInIGluIHRleHQgbW9kZVwiLGUudG9rZW4pfXZhciBpPXRoaXMucGFyc2VBcmd1bWVudHModCxyKTt2YXIgbj1lLnRva2VuO3ZhciBvPXRoaXMuY2FsbEZ1bmN0aW9uKHQsaSxpLnBvcCgpLG4pO3JldHVybiBuZXcgYyhvLnR5cGUsbyx0aGlzLm1vZGUpfWVsc2V7cmV0dXJuIGUucmVzdWx0fX1lbHNle3JldHVybiBudWxsfX07cC5wcm90b3R5cGUuY2FsbEZ1bmN0aW9uPWZ1bmN0aW9uKGUsdCxyLGkpe3ZhciBuPXtmdW5jTmFtZTplLHBhcnNlcjp0aGlzLHBvc2l0aW9uczpyLHRva2VuOml9O3JldHVybiBhW2VdLmhhbmRsZXIobix0KX07cC5wcm90b3R5cGUucGFyc2VBcmd1bWVudHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj10Lm51bUFyZ3MrdC5udW1PcHRpb25hbEFyZ3M7aWYocj09PTApe3JldHVybltbdGhpcy5wb3NdXX12YXIgaT10LmdyZWVkaW5lc3M7dmFyIG49W3RoaXMucG9zXTt2YXIgbz1bXTtmb3IodmFyIHM9MDtzPHI7cysrKXt2YXIgbD10aGlzLm5leHRUb2tlbjt2YXIgdT10LmFyZ1R5cGVzJiZ0LmFyZ1R5cGVzW3NdO3ZhciBwPXZvaWQgMDtpZihzPHQubnVtT3B0aW9uYWxBcmdzKXtpZih1KXtwPXRoaXMucGFyc2VHcm91cE9mVHlwZSh1LHRydWUpfWVsc2V7cD10aGlzLnBhcnNlR3JvdXAodHJ1ZSl9aWYoIXApe28ucHVzaChudWxsKTtuLnB1c2godGhpcy5wb3MpO2NvbnRpbnVlfX1lbHNle2lmKHUpe3A9dGhpcy5wYXJzZUdyb3VwT2ZUeXBlKHUpfWVsc2V7cD10aGlzLnBhcnNlR3JvdXAoKX1pZighcCl7aWYoIXRoaXMuc2V0dGluZ3MudGhyb3dPbkVycm9yJiZ0aGlzLm5leHRUb2tlbi50ZXh0WzBdPT09XCJcXFxcXCIpe3A9bmV3IHYodGhpcy5oYW5kbGVVbnN1cHBvcnRlZENtZCh0aGlzLm5leHRUb2tlbi50ZXh0KSxmYWxzZSl9ZWxzZXt0aHJvdyBuZXcgaChcIkV4cGVjdGVkIGdyb3VwIGFmdGVyICdcIitlK1wiJ1wiLGwpfX19dmFyIGM9dm9pZCAwO2lmKHAuaXNGdW5jdGlvbil7dmFyIGY9YVtwLnJlc3VsdF0uZ3JlZWRpbmVzcztpZihmPmkpe2M9dGhpcy5wYXJzZUZ1bmN0aW9uKHApfWVsc2V7dGhyb3cgbmV3IGgoXCJHb3QgZnVuY3Rpb24gJ1wiK3AucmVzdWx0K1wiJyBhcyBcIitcImFyZ3VtZW50IHRvICdcIitlK1wiJ1wiLGwpfX1lbHNle2M9cC5yZXN1bHR9by5wdXNoKGMpO24ucHVzaCh0aGlzLnBvcyl9by5wdXNoKG4pO3JldHVybiBvfTtwLnByb3RvdHlwZS5wYXJzZUdyb3VwT2ZUeXBlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcy5tb2RlO2lmKGU9PT1cIm9yaWdpbmFsXCIpe2U9cn1pZihlPT09XCJjb2xvclwiKXtyZXR1cm4gdGhpcy5wYXJzZUNvbG9yR3JvdXAodCl9aWYoZT09PVwic2l6ZVwiKXtyZXR1cm4gdGhpcy5wYXJzZVNpemVHcm91cCh0KX1pZihlPT09XCJzdHJpbmdcIil7dmFyIGE9dGhpcy5wYXJzZVN0cmluZ0dyb3VwKFwic3RyaW5nXCIsdCk7cmV0dXJuIG5ldyB2KGEudGV4dCxmYWxzZSl9dGhpcy5zd2l0Y2hNb2RlKGUpO2lmKGU9PT1cInRleHRcIil7dGhpcy5jb25zdW1lU3BhY2VzKCl9dmFyIGk9dGhpcy5wYXJzZUdyb3VwKHQpO3RoaXMuc3dpdGNoTW9kZShyKTtyZXR1cm4gaX07cC5wcm90b3R5cGUuY29uc3VtZVNwYWNlcz1mdW5jdGlvbigpe3doaWxlKHRoaXMubmV4dFRva2VuLnRleHQ9PT1cIiBcIil7dGhpcy5jb25zdW1lKCl9fTtwLnByb3RvdHlwZS5wYXJzZVN0cmluZ0dyb3VwPWZ1bmN0aW9uKGUsdCl7aWYodCYmdGhpcy5uZXh0VG9rZW4udGV4dCE9PVwiW1wiKXtyZXR1cm4gbnVsbH12YXIgcj10aGlzLm1vZGU7dGhpcy5tb2RlPVwidGV4dFwiO3RoaXMuZXhwZWN0KHQ/XCJbXCI6XCJ7XCIpO3ZhciBhPVwiXCI7dmFyIGk9dGhpcy5uZXh0VG9rZW47dmFyIG49aTt3aGlsZSh0aGlzLm5leHRUb2tlbi50ZXh0IT09KHQ/XCJdXCI6XCJ9XCIpKXtpZih0aGlzLm5leHRUb2tlbi50ZXh0PT09XCJFT0ZcIil7dGhyb3cgbmV3IGgoXCJVbmV4cGVjdGVkIGVuZCBvZiBpbnB1dCBpbiBcIitlLGkucmFuZ2UodGhpcy5uZXh0VG9rZW4sYSkpfW49dGhpcy5uZXh0VG9rZW47YSs9bi50ZXh0O3RoaXMuY29uc3VtZSgpfXRoaXMubW9kZT1yO3RoaXMuZXhwZWN0KHQ/XCJdXCI6XCJ9XCIpO3JldHVybiBpLnJhbmdlKG4sYSl9O3AucHJvdG90eXBlLnBhcnNlUmVnZXhHcm91cD1mdW5jdGlvbihlLHQpe3ZhciByPXRoaXMubW9kZTt0aGlzLm1vZGU9XCJ0ZXh0XCI7dmFyIGE9dGhpcy5uZXh0VG9rZW47dmFyIGk9YTt2YXIgbj1cIlwiO3doaWxlKHRoaXMubmV4dFRva2VuLnRleHQhPT1cIkVPRlwiJiZlLnRlc3Qobit0aGlzLm5leHRUb2tlbi50ZXh0KSl7aT10aGlzLm5leHRUb2tlbjtuKz1pLnRleHQ7dGhpcy5jb25zdW1lKCl9aWYobj09PVwiXCIpe3Rocm93IG5ldyBoKFwiSW52YWxpZCBcIit0K1wiOiAnXCIrYS50ZXh0K1wiJ1wiLGEpfXRoaXMubW9kZT1yO3JldHVybiBhLnJhbmdlKGksbil9O3AucHJvdG90eXBlLnBhcnNlQ29sb3JHcm91cD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLnBhcnNlU3RyaW5nR3JvdXAoXCJjb2xvclwiLGUpO2lmKCF0KXtyZXR1cm4gbnVsbH12YXIgcj0vXigjW2EtejAtOV0rfFthLXpdKykkL2kuZXhlYyh0LnRleHQpO2lmKCFyKXt0aHJvdyBuZXcgaChcIkludmFsaWQgY29sb3I6ICdcIit0LnRleHQrXCInXCIsdCl9cmV0dXJuIG5ldyB2KG5ldyBjKFwiY29sb3JcIixyWzBdLHRoaXMubW9kZSksZmFsc2UpfTtwLnByb3RvdHlwZS5wYXJzZVNpemVHcm91cD1mdW5jdGlvbihlKXt2YXIgdD12b2lkIDA7aWYoIWUmJnRoaXMubmV4dFRva2VuLnRleHQhPT1cIntcIil7dD10aGlzLnBhcnNlUmVnZXhHcm91cCgvXlstK10/ICooPzokfFxcZCt8XFxkK1xcLlxcZCp8XFwuXFxkKikgKlthLXpdezAsMn0gKiQvLFwic2l6ZVwiKX1lbHNle3Q9dGhpcy5wYXJzZVN0cmluZ0dyb3VwKFwic2l6ZVwiLGUpfWlmKCF0KXtyZXR1cm4gbnVsbH12YXIgcj0vKFstK10/KSAqKFxcZCsoPzpcXC5cXGQqKT98XFwuXFxkKykgKihbYS16XXsyfSkvLmV4ZWModC50ZXh0KTtpZighcil7dGhyb3cgbmV3IGgoXCJJbnZhbGlkIHNpemU6ICdcIit0LnRleHQrXCInXCIsdCl9dmFyIGE9e251bWJlcjorKHJbMV0rclsyXSksdW5pdDpyWzNdfTtpZihhLnVuaXQhPT1cImVtXCImJmEudW5pdCE9PVwiZXhcIiYmYS51bml0IT09XCJtdVwiKXt0aHJvdyBuZXcgaChcIkludmFsaWQgdW5pdDogJ1wiK2EudW5pdCtcIidcIix0KX1yZXR1cm4gbmV3IHYobmV3IGMoXCJjb2xvclwiLGEsdGhpcy5tb2RlKSxmYWxzZSl9O3AucHJvdG90eXBlLnBhcnNlR3JvdXA9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5uZXh0VG9rZW47aWYodGhpcy5uZXh0VG9rZW4udGV4dD09PShlP1wiW1wiOlwie1wiKSl7dGhpcy5jb25zdW1lKCk7dmFyIHI9dGhpcy5wYXJzZUV4cHJlc3Npb24oZmFsc2UsZT9cIl1cIjpudWxsKTt2YXIgYT10aGlzLm5leHRUb2tlbjt0aGlzLmV4cGVjdChlP1wiXVwiOlwifVwiKTtpZih0aGlzLm1vZGU9PT1cInRleHRcIil7dGhpcy5mb3JtTGlnYXR1cmVzKHIpfXJldHVybiBuZXcgdihuZXcgYyhcIm9yZGdyb3VwXCIscix0aGlzLm1vZGUsdCxhKSxmYWxzZSl9ZWxzZXtyZXR1cm4gZT9udWxsOnRoaXMucGFyc2VTeW1ib2woKX19O3AucHJvdG90eXBlLmZvcm1MaWdhdHVyZXM9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5sZW5ndGgtMTtmb3IodmFyIHI9MDtyPHQ7KytyKXt2YXIgYT1lW3JdO3ZhciBpPWEudmFsdWU7aWYoaT09PVwiLVwiJiZlW3IrMV0udmFsdWU9PT1cIi1cIil7aWYocisxPHQmJmVbcisyXS52YWx1ZT09PVwiLVwiKXtlLnNwbGljZShyLDMsbmV3IGMoXCJ0ZXh0b3JkXCIsXCItLS1cIixcInRleHRcIixhLGVbcisyXSkpO3QtPTJ9ZWxzZXtlLnNwbGljZShyLDIsbmV3IGMoXCJ0ZXh0b3JkXCIsXCItLVwiLFwidGV4dFwiLGEsZVtyKzFdKSk7dC09MX19aWYoKGk9PT1cIidcInx8aT09PVwiYFwiKSYmZVtyKzFdLnZhbHVlPT09aSl7ZS5zcGxpY2UociwyLG5ldyBjKFwidGV4dG9yZFwiLGkraSxcInRleHRcIixhLGVbcisxXSkpO3QtPTF9fX07cC5wcm90b3R5cGUucGFyc2VTeW1ib2w9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm5leHRUb2tlbjtpZihhW2UudGV4dF0pe3RoaXMuY29uc3VtZSgpO3JldHVybiBuZXcgdihlLnRleHQsdHJ1ZSxlKX1lbHNlIGlmKG9bdGhpcy5tb2RlXVtlLnRleHRdKXt0aGlzLmNvbnN1bWUoKTtyZXR1cm4gbmV3IHYobmV3IGMob1t0aGlzLm1vZGVdW2UudGV4dF0uZ3JvdXAsZS50ZXh0LHRoaXMubW9kZSxlKSxmYWxzZSxlKX1lbHNlIGlmKHRoaXMubW9kZT09PVwidGV4dFwiJiZsLnRlc3QoZS50ZXh0KSl7dGhpcy5jb25zdW1lKCk7cmV0dXJuIG5ldyB2KG5ldyBjKFwidGV4dG9yZFwiLGUudGV4dCx0aGlzLm1vZGUsZSksZmFsc2UsZSl9ZWxzZSBpZihlLnRleHQ9PT1cIiRcIil7cmV0dXJuIG5ldyB2KGUudGV4dCxmYWxzZSxlKX1lbHNle3JldHVybiBudWxsfX07cC5wcm90b3R5cGUuUGFyc2VOb2RlPWM7dC5leHBvcnRzPXB9LHtcIi4vTWFjcm9FeHBhbmRlclwiOjgsXCIuL1BhcnNlRXJyb3JcIjoxMCxcIi4vZW52aXJvbm1lbnRzXCI6MjAsXCIuL2Z1bmN0aW9uc1wiOjIzLFwiLi9wYXJzZURhdGFcIjoyNixcIi4vc3ltYm9sc1wiOjI5LFwiLi91bmljb2RlUmVnZXhlc1wiOjMwLFwiLi91dGlsc1wiOjMxfV0sMTI6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi91dGlsc1wiKTtmdW5jdGlvbiBpKGUpe2U9ZXx8e307dGhpcy5kaXNwbGF5TW9kZT1hLmRlZmx0KGUuZGlzcGxheU1vZGUsZmFsc2UpO3RoaXMudGhyb3dPbkVycm9yPWEuZGVmbHQoZS50aHJvd09uRXJyb3IsdHJ1ZSk7dGhpcy5lcnJvckNvbG9yPWEuZGVmbHQoZS5lcnJvckNvbG9yLFwiI2NjMDAwMFwiKTt0aGlzLm1hY3Jvcz1lLm1hY3Jvc3x8e307dGhpcy5jb2xvcklzVGV4dENvbG9yPWEuZGVmbHQoZS5jb2xvcklzVGV4dENvbG9yLGZhbHNlKX10LmV4cG9ydHM9aX0se1wiLi91dGlsc1wiOjMxfV0sMTM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUsdCxyKXt0aGlzLmlkPWU7dGhpcy5zaXplPXQ7dGhpcy5jcmFtcGVkPXJ9YS5wcm90b3R5cGUuc3VwPWZ1bmN0aW9uKCl7cmV0dXJuIGNbdlt0aGlzLmlkXV19O2EucHJvdG90eXBlLnN1Yj1mdW5jdGlvbigpe3JldHVybiBjW2ZbdGhpcy5pZF1dfTthLnByb3RvdHlwZS5mcmFjTnVtPWZ1bmN0aW9uKCl7cmV0dXJuIGNbbVt0aGlzLmlkXV19O2EucHJvdG90eXBlLmZyYWNEZW49ZnVuY3Rpb24oKXtyZXR1cm4gY1tkW3RoaXMuaWRdXX07YS5wcm90b3R5cGUuY3JhbXA9ZnVuY3Rpb24oKXtyZXR1cm4gY1tnW3RoaXMuaWRdXX07YS5wcm90b3R5cGUudGV4dD1mdW5jdGlvbigpe3JldHVybiBjW3lbdGhpcy5pZF1dfTthLnByb3RvdHlwZS5pc1RpZ2h0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2l6ZT49Mn07dmFyIGk9MDt2YXIgbj0xO3ZhciBvPTI7dmFyIHM9Mzt2YXIgbD00O3ZhciB1PTU7dmFyIGg9Njt2YXIgcD03O3ZhciBjPVtuZXcgYShpLDAsZmFsc2UpLG5ldyBhKG4sMCx0cnVlKSxuZXcgYShvLDEsZmFsc2UpLG5ldyBhKHMsMSx0cnVlKSxuZXcgYShsLDIsZmFsc2UpLG5ldyBhKHUsMix0cnVlKSxuZXcgYShoLDMsZmFsc2UpLG5ldyBhKHAsMyx0cnVlKV07dmFyIHY9W2wsdSxsLHUsaCxwLGgscF07dmFyIGY9W3UsdSx1LHUscCxwLHAscF07dmFyIG09W28scyxsLHUsaCxwLGgscF07dmFyIGQ9W3Mscyx1LHUscCxwLHAscF07dmFyIGc9W24sbixzLHMsdSx1LHAscF07dmFyIHk9W2ksbixvLHMsbyxzLG8sc107dC5leHBvcnRzPXtESVNQTEFZOmNbaV0sVEVYVDpjW29dLFNDUklQVDpjW2xdLFNDUklQVFNDUklQVDpjW2hdfX0se31dLDE0OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4vZG9tVHJlZVwiKTt2YXIgaT1lKFwiLi9mb250TWV0cmljc1wiKTt2YXIgbj1lKFwiLi9zeW1ib2xzXCIpO3ZhciBvPWUoXCIuL3V0aWxzXCIpO3ZhciBzPVtcIlxcXFxpbWF0aFwiLFwiXFxcXGptYXRoXCIsXCJcXFxccG91bmRzXCJdO3ZhciBsPWZ1bmN0aW9uIGUodCxyLGEpe2lmKG5bYV1bdF0mJm5bYV1bdF0ucmVwbGFjZSl7dD1uW2FdW3RdLnJlcGxhY2V9cmV0dXJue3ZhbHVlOnQsbWV0cmljczppLmdldENoYXJhY3Rlck1ldHJpY3ModCxyKX19O3ZhciB1PWZ1bmN0aW9uIGUodCxyLGksbixvKXt2YXIgcz1sKHQscixpKTt2YXIgdT1zLm1ldHJpY3M7dD1zLnZhbHVlO3ZhciBoPXZvaWQgMDtpZih1KXt2YXIgcD11Lml0YWxpYztpZihpPT09XCJ0ZXh0XCIpe3A9MH1oPW5ldyBhLnN5bWJvbE5vZGUodCx1LmhlaWdodCx1LmRlcHRoLHAsdS5za2V3LG8pfWVsc2V7dHlwZW9mIGNvbnNvbGUhPT1cInVuZGVmaW5lZFwiJiZjb25zb2xlLndhcm4oXCJObyBjaGFyYWN0ZXIgbWV0cmljcyBmb3IgJ1wiK3QrXCInIGluIHN0eWxlICdcIityK1wiJ1wiKTtoPW5ldyBhLnN5bWJvbE5vZGUodCwwLDAsMCwwLG8pfWlmKG4pe2gubWF4Rm9udFNpemU9bi5zaXplTXVsdGlwbGllcjtpZihuLnN0eWxlLmlzVGlnaHQoKSl7aC5jbGFzc2VzLnB1c2goXCJtdGlnaHRcIil9aWYobi5nZXRDb2xvcigpKXtoLnN0eWxlLmNvbG9yPW4uZ2V0Q29sb3IoKX19cmV0dXJuIGh9O3ZhciBoPWZ1bmN0aW9uIGUodCxyLGEsaSl7aWYodD09PVwiXFxcXFwifHxuW3JdW3RdLmZvbnQ9PT1cIm1haW5cIil7cmV0dXJuIHUodCxcIk1haW4tUmVndWxhclwiLHIsYSxpKX1lbHNle3JldHVybiB1KHQsXCJBTVMtUmVndWxhclwiLHIsYSxpLmNvbmNhdChbXCJhbXNybVwiXSkpfX07dmFyIHA9ZnVuY3Rpb24gZSh0LHIsYSxpLG8pe2lmKG89PT1cIm1hdGhvcmRcIil7dmFyIHM9Yyh0LHIsYSxpKTtyZXR1cm4gdSh0LHMuZm9udE5hbWUscixhLGkuY29uY2F0KFtzLmZvbnRDbGFzc10pKX1lbHNlIGlmKG89PT1cInRleHRvcmRcIil7dmFyIGw9bltyXVt0XSYmbltyXVt0XS5mb250O2lmKGw9PT1cImFtc1wiKXtyZXR1cm4gdSh0LFwiQU1TLVJlZ3VsYXJcIixyLGEsaS5jb25jYXQoW1wiYW1zcm1cIl0pKX1lbHNle3JldHVybiB1KHQsXCJNYWluLVJlZ3VsYXJcIixyLGEsaS5jb25jYXQoW1wibWF0aHJtXCJdKSl9fWVsc2V7dGhyb3cgbmV3IEVycm9yKFwidW5leHBlY3RlZCB0eXBlOiBcIitvK1wiIGluIG1hdGhEZWZhdWx0XCIpfX07dmFyIGM9ZnVuY3Rpb24gZSh0LHIsYSxpKXtpZigvWzAtOV0vLnRlc3QodC5jaGFyQXQoMCkpfHxvLmNvbnRhaW5zKHMsdCkpe3JldHVybntmb250TmFtZTpcIk1haW4tSXRhbGljXCIsZm9udENsYXNzOlwibWFpbml0XCJ9fWVsc2V7cmV0dXJue2ZvbnROYW1lOlwiTWF0aC1JdGFsaWNcIixmb250Q2xhc3M6XCJtYXRoaXRcIn19fTt2YXIgdj1mdW5jdGlvbiBlKHQscixhKXt2YXIgaT10Lm1vZGU7dmFyIG49dC52YWx1ZTt2YXIgaD1bXCJtb3JkXCJdO3ZhciB2PXIuZm9udDtpZih2KXt2YXIgZj12b2lkIDA7aWYodj09PVwibWF0aGl0XCJ8fG8uY29udGFpbnMocyxuKSl7Zj1jKG4saSxyLGgpfWVsc2V7Zj13W3ZdfWlmKGwobixmLmZvbnROYW1lLGkpLm1ldHJpY3Mpe3JldHVybiB1KG4sZi5mb250TmFtZSxpLHIsaC5jb25jYXQoW2YuZm9udENsYXNzfHx2XSkpfWVsc2V7cmV0dXJuIHAobixpLHIsaCxhKX19ZWxzZXtyZXR1cm4gcChuLGkscixoLGEpfX07dmFyIGY9ZnVuY3Rpb24gZSh0KXt2YXIgcj0wO3ZhciBhPTA7dmFyIGk9MDtpZih0LmNoaWxkcmVuKXtmb3IodmFyIG49MDtuPHQuY2hpbGRyZW4ubGVuZ3RoO24rKyl7aWYodC5jaGlsZHJlbltuXS5oZWlnaHQ+cil7cj10LmNoaWxkcmVuW25dLmhlaWdodH1pZih0LmNoaWxkcmVuW25dLmRlcHRoPmEpe2E9dC5jaGlsZHJlbltuXS5kZXB0aH1pZih0LmNoaWxkcmVuW25dLm1heEZvbnRTaXplPmkpe2k9dC5jaGlsZHJlbltuXS5tYXhGb250U2l6ZX19fXQuaGVpZ2h0PXI7dC5kZXB0aD1hO3QubWF4Rm9udFNpemU9aX07dmFyIG09ZnVuY3Rpb24gZSh0LHIsaSl7dmFyIG49bmV3IGEuc3Bhbih0LHIsaSk7ZihuKTtyZXR1cm4gbn07dmFyIGQ9ZnVuY3Rpb24gZSh0LHIpe3QuY2hpbGRyZW49ci5jb25jYXQodC5jaGlsZHJlbik7Zih0KX07dmFyIGc9ZnVuY3Rpb24gZSh0LHIpe3ZhciBpPW5ldyBhLmRvY3VtZW50RnJhZ21lbnQodCxyKTtmKGkpO3JldHVybiBpfTt2YXIgeT1mdW5jdGlvbiBlKHQscil7dmFyIGk9bShbXSxbbmV3IGEuc3ltYm9sTm9kZShcIlxcdTIwMGJcIildKTtpLnN0eWxlLmZvbnRTaXplPXIrXCJlbVwiO3ZhciBuPW0oW1wiZm9udHNpemUtZW5zdXJlclwiXS5jb25jYXQodC5iYXNlU2l6aW5nQ2xhc3NlcygpKSxbaV0pO3JldHVybiBufTt2YXIgeD1mdW5jdGlvbiBlKHQscixpLG4pe3ZhciBvPXZvaWQgMDt2YXIgcz12b2lkIDA7dmFyIGw9dm9pZCAwO2lmKHI9PT1cImluZGl2aWR1YWxTaGlmdFwiKXt2YXIgdT10O3Q9W3VbMF1dO289LXVbMF0uc2hpZnQtdVswXS5lbGVtLmRlcHRoO3M9bztmb3IobD0xO2w8dS5sZW5ndGg7bCsrKXt2YXIgaD0tdVtsXS5zaGlmdC1zLXVbbF0uZWxlbS5kZXB0aDt2YXIgcD1oLSh1W2wtMV0uZWxlbS5oZWlnaHQrdVtsLTFdLmVsZW0uZGVwdGgpO3M9cytoO3QucHVzaCh7dHlwZTpcImtlcm5cIixzaXplOnB9KTt0LnB1c2godVtsXSl9fWVsc2UgaWYocj09PVwidG9wXCIpe3ZhciBjPWk7Zm9yKGw9MDtsPHQubGVuZ3RoO2wrKyl7aWYodFtsXS50eXBlPT09XCJrZXJuXCIpe2MtPXRbbF0uc2l6ZX1lbHNle2MtPXRbbF0uZWxlbS5oZWlnaHQrdFtsXS5lbGVtLmRlcHRofX1vPWN9ZWxzZSBpZihyPT09XCJib3R0b21cIil7bz0taX1lbHNlIGlmKHI9PT1cInNoaWZ0XCIpe289LXRbMF0uZWxlbS5kZXB0aC1pfWVsc2UgaWYocj09PVwiZmlyc3RCYXNlbGluZVwiKXtvPS10WzBdLmVsZW0uZGVwdGh9ZWxzZXtvPTB9dmFyIHY9MDtmb3IobD0wO2w8dC5sZW5ndGg7bCsrKXtpZih0W2xdLnR5cGU9PT1cImVsZW1cIil7dj1NYXRoLm1heCh2LHRbbF0uZWxlbS5tYXhGb250U2l6ZSl9fXZhciBmPXkobix2KTt2YXIgZD1bXTtzPW87Zm9yKGw9MDtsPHQubGVuZ3RoO2wrKyl7aWYodFtsXS50eXBlPT09XCJrZXJuXCIpe3MrPXRbbF0uc2l6ZX1lbHNle3ZhciBnPXRbbF0uZWxlbTt2YXIgeD0tZy5kZXB0aC1zO3MrPWcuaGVpZ2h0K2cuZGVwdGg7dmFyIGI9bShbXSxbZixnXSk7Yi5oZWlnaHQtPXg7Yi5kZXB0aCs9eDtiLnN0eWxlLnRvcD14K1wiZW1cIjtkLnB1c2goYil9fXZhciB3PW0oW1wiYmFzZWxpbmUtZml4XCJdLFtmLG5ldyBhLnN5bWJvbE5vZGUoXCJcXHUyMDBiXCIpXSk7ZC5wdXNoKHcpO3ZhciBrPW0oW1widmxpc3RcIl0sZCk7ay5oZWlnaHQ9TWF0aC5tYXgocyxrLmhlaWdodCk7ay5kZXB0aD1NYXRoLm1heCgtbyxrLmRlcHRoKTtyZXR1cm4ga307dmFyIGI9e1wiXFxcXHFxdWFkXCI6e3NpemU6XCIyZW1cIixjbGFzc05hbWU6XCJxcXVhZFwifSxcIlxcXFxxdWFkXCI6e3NpemU6XCIxZW1cIixjbGFzc05hbWU6XCJxdWFkXCJ9LFwiXFxcXGVuc3BhY2VcIjp7c2l6ZTpcIjAuNWVtXCIsY2xhc3NOYW1lOlwiZW5zcGFjZVwifSxcIlxcXFw7XCI6e3NpemU6XCIwLjI3Nzc3OGVtXCIsY2xhc3NOYW1lOlwidGhpY2tzcGFjZVwifSxcIlxcXFw6XCI6e3NpemU6XCIwLjIyMjIyZW1cIixjbGFzc05hbWU6XCJtZWRpdW1zcGFjZVwifSxcIlxcXFwsXCI6e3NpemU6XCIwLjE2NjY3ZW1cIixjbGFzc05hbWU6XCJ0aGluc3BhY2VcIn0sXCJcXFxcIVwiOntzaXplOlwiLTAuMTY2NjdlbVwiLGNsYXNzTmFtZTpcIm5lZ2F0aXZldGhpbnNwYWNlXCJ9fTt2YXIgdz17bWF0aGJmOnt2YXJpYW50OlwiYm9sZFwiLGZvbnROYW1lOlwiTWFpbi1Cb2xkXCJ9LG1hdGhybTp7dmFyaWFudDpcIm5vcm1hbFwiLGZvbnROYW1lOlwiTWFpbi1SZWd1bGFyXCJ9LHRleHRpdDp7dmFyaWFudDpcIml0YWxpY1wiLGZvbnROYW1lOlwiTWFpbi1JdGFsaWNcIn0sbWF0aGJiOnt2YXJpYW50OlwiZG91YmxlLXN0cnVja1wiLGZvbnROYW1lOlwiQU1TLVJlZ3VsYXJcIn0sbWF0aGNhbDp7dmFyaWFudDpcInNjcmlwdFwiLGZvbnROYW1lOlwiQ2FsaWdyYXBoaWMtUmVndWxhclwifSxtYXRoZnJhazp7dmFyaWFudDpcImZyYWt0dXJcIixmb250TmFtZTpcIkZyYWt0dXItUmVndWxhclwifSxtYXRoc2NyOnt2YXJpYW50Olwic2NyaXB0XCIsZm9udE5hbWU6XCJTY3JpcHQtUmVndWxhclwifSxtYXRoc2Y6e3ZhcmlhbnQ6XCJzYW5zLXNlcmlmXCIsZm9udE5hbWU6XCJTYW5zU2VyaWYtUmVndWxhclwifSxtYXRodHQ6e3ZhcmlhbnQ6XCJtb25vc3BhY2VcIixmb250TmFtZTpcIlR5cGV3cml0ZXItUmVndWxhclwifX07dC5leHBvcnRzPXtmb250TWFwOncsbWFrZVN5bWJvbDp1LG1hdGhzeW06aCxtYWtlU3BhbjptLG1ha2VGcmFnbWVudDpnLG1ha2VWTGlzdDp4LG1ha2VPcmQ6dixwcmVwZW5kQ2hpbGRyZW46ZCxzcGFjaW5nRnVuY3Rpb25zOmJ9fSx7XCIuL2RvbVRyZWVcIjoxOSxcIi4vZm9udE1ldHJpY3NcIjoyMSxcIi4vc3ltYm9sc1wiOjI5LFwiLi91dGlsc1wiOjMxfV0sMTU6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5XCIpO3ZhciBpPW4oYSk7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIG89ZShcIi4vUGFyc2VFcnJvclwiKTt2YXIgcz1lKFwiLi9TdHlsZVwiKTt2YXIgbD1lKFwiLi9idWlsZENvbW1vblwiKTt2YXIgdT1lKFwiLi9kZWxpbWl0ZXJcIik7dmFyIGg9ZShcIi4vZG9tVHJlZVwiKTt2YXIgcD1lKFwiLi91dGlsc1wiKTt2YXIgYz1lKFwiLi9zdHJldGNoeVwiKTt2YXIgdj1sLm1ha2VTcGFuO3ZhciBmPWZ1bmN0aW9uIGUodCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBoLnNwYW4mJnQuY2xhc3Nlc1swXT09PVwibXNwYWNlXCJ9O3ZhciBtPWZ1bmN0aW9uIGUodCl7cmV0dXJuIHQmJnQuY2xhc3Nlc1swXT09PVwibWJpblwifTt2YXIgZD1mdW5jdGlvbiBlKHQscil7aWYodCl7cmV0dXJuIHAuY29udGFpbnMoW1wibWJpblwiLFwibW9wZW5cIixcIm1yZWxcIixcIm1vcFwiLFwibXB1bmN0XCJdLHQuY2xhc3Nlc1swXSl9ZWxzZXtyZXR1cm4gcn19O3ZhciBnPWZ1bmN0aW9uIGUodCxyKXtpZih0KXtyZXR1cm4gcC5jb250YWlucyhbXCJtcmVsXCIsXCJtY2xvc2VcIixcIm1wdW5jdFwiXSx0LmNsYXNzZXNbMF0pfWVsc2V7cmV0dXJuIHJ9fTt2YXIgeT1mdW5jdGlvbiBlKHQscil7dmFyIGE9cjt3aGlsZShhPHQubGVuZ3RoJiZmKHRbYV0pKXthKyt9aWYoYT09PXIpe3JldHVybiBudWxsfWVsc2V7cmV0dXJuIHQuc3BsaWNlKHIsYS1yKX19O3ZhciB4PWZ1bmN0aW9uIGUodCxyLGEpe3ZhciBpPVtdO2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgbz10W25dO3ZhciBzPXEobyxyKTtpZihzIGluc3RhbmNlb2YgaC5kb2N1bWVudEZyYWdtZW50KXtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShpLHMuY2hpbGRyZW4pfWVsc2V7aS5wdXNoKHMpfX1mb3IodmFyIHU9MDt1PGkubGVuZ3RoO3UrKyl7dmFyIHA9eShpLHUpO2lmKHApe2lmKHU8aS5sZW5ndGgpe2lmKGlbdV1pbnN0YW5jZW9mIGguc3ltYm9sTm9kZSl7aVt1XT12KFtdLmNvbmNhdChpW3VdLmNsYXNzZXMpLFtpW3VdXSl9bC5wcmVwZW5kQ2hpbGRyZW4oaVt1XSxwKX1lbHNle0FycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KGkscCk7YnJlYWt9fX1mb3IodmFyIGM9MDtjPGkubGVuZ3RoO2MrKyl7dmFyIGY9MTt2YXIgeD0xO3doaWxlKGlbYy1mXSYmaVtjLWZdLmNsYXNzZXNbMF09PT1cImN1cnNvclwiKXtmKyt9d2hpbGUoaVtjK3hdJiZpW2MreF0uY2xhc3Nlc1swXT09PVwiY3Vyc29yXCIpe3grK31pZihtKGlbY10pJiYoZChpW2MtZl0sYSl8fGcoaVtjK3hdLGEpKSl7aVtjXS5jbGFzc2VzWzBdPVwibW9yZFwifX1yZXR1cm4gaX07dmFyIGI9ZnVuY3Rpb24gZSh0KXtpZih0IGluc3RhbmNlb2YgaC5kb2N1bWVudEZyYWdtZW50KXtpZih0LmNoaWxkcmVuLmxlbmd0aCl7cmV0dXJuIGUodC5jaGlsZHJlblt0LmNoaWxkcmVuLmxlbmd0aC0xXSl9fWVsc2V7aWYocC5jb250YWlucyhbXCJtb3JkXCIsXCJtb3BcIixcIm1iaW5cIixcIm1yZWxcIixcIm1vcGVuXCIsXCJtY2xvc2VcIixcIm1wdW5jdFwiLFwibWlubmVyXCJdLHQuY2xhc3Nlc1swXSkpe3JldHVybiB0LmNsYXNzZXNbMF19fXJldHVybiBudWxsfTt2YXIgdz1mdW5jdGlvbiBlKHQscil7aWYoIXQudmFsdWUuYmFzZSl7cmV0dXJuIGZhbHNlfWVsc2V7dmFyIGE9dC52YWx1ZS5iYXNlO2lmKGEudHlwZT09PVwib3BcIil7cmV0dXJuIGEudmFsdWUubGltaXRzJiYoci5zdHlsZS5zaXplPT09cy5ESVNQTEFZLnNpemV8fGEudmFsdWUuYWx3YXlzSGFuZGxlU3VwU3ViKX1lbHNlIGlmKGEudHlwZT09PVwiYWNjZW50XCIpe3JldHVybiB6KGEudmFsdWUuYmFzZSl9ZWxzZSBpZihhLnR5cGU9PT1cImhvcml6QnJhY2VcIil7dmFyIGk9dC52YWx1ZS5zdWI/ZmFsc2U6dHJ1ZTtyZXR1cm4gaT09PWEudmFsdWUuaXNPdmVyfWVsc2V7cmV0dXJuIG51bGx9fX07dmFyIGs9ZnVuY3Rpb24gZSh0KXtpZighdCl7cmV0dXJuIGZhbHNlfWVsc2UgaWYodC50eXBlPT09XCJvcmRncm91cFwiKXtpZih0LnZhbHVlLmxlbmd0aD09PTEpe3JldHVybiBlKHQudmFsdWVbMF0pfWVsc2V7cmV0dXJuIHR9fWVsc2UgaWYodC50eXBlPT09XCJjb2xvclwiKXtpZih0LnZhbHVlLnZhbHVlLmxlbmd0aD09PTEpe3JldHVybiBlKHQudmFsdWUudmFsdWVbMF0pfWVsc2V7cmV0dXJuIHR9fWVsc2UgaWYodC50eXBlPT09XCJmb250XCIpe3JldHVybiBlKHQudmFsdWUuYm9keSl9ZWxzZXtyZXR1cm4gdH19O3ZhciB6PWZ1bmN0aW9uIGUodCl7dmFyIHI9ayh0KTtyZXR1cm4gci50eXBlPT09XCJtYXRob3JkXCJ8fHIudHlwZT09PVwidGV4dG9yZFwifHxyLnR5cGU9PT1cImJpblwifHxyLnR5cGU9PT1cInJlbFwifHxyLnR5cGU9PT1cImlubmVyXCJ8fHIudHlwZT09PVwib3BlblwifHxyLnR5cGU9PT1cImNsb3NlXCJ8fHIudHlwZT09PVwicHVuY3RcIn07dmFyIE09ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPVtcIm51bGxkZWxpbWl0ZXJcIl0uY29uY2F0KHQuYmFzZVNpemluZ0NsYXNzZXMoKSk7cmV0dXJuIHYoci5jb25jYXQoYSkpfTt2YXIgUz17fTtTLm1hdGhvcmQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbC5tYWtlT3JkKGUsdCxcIm1hdGhvcmRcIil9O1MudGV4dG9yZD1mdW5jdGlvbihlLHQpe3JldHVybiBsLm1ha2VPcmQoZSx0LFwidGV4dG9yZFwiKX07Uy5iaW49ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbC5tYXRoc3ltKGUudmFsdWUsZS5tb2RlLHQsW1wibWJpblwiXSl9O1MucmVsPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGwubWF0aHN5bShlLnZhbHVlLGUubW9kZSx0LFtcIm1yZWxcIl0pfTtTLm9wZW49ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbC5tYXRoc3ltKGUudmFsdWUsZS5tb2RlLHQsW1wibW9wZW5cIl0pfTtTLmNsb3NlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGwubWF0aHN5bShlLnZhbHVlLGUubW9kZSx0LFtcIm1jbG9zZVwiXSl9O1MuaW5uZXI9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbC5tYXRoc3ltKGUudmFsdWUsZS5tb2RlLHQsW1wibWlubmVyXCJdKX07Uy5wdW5jdD1mdW5jdGlvbihlLHQpe3JldHVybiBsLm1hdGhzeW0oZS52YWx1ZSxlLm1vZGUsdCxbXCJtcHVuY3RcIl0pfTtTLm9yZGdyb3VwPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHYoW1wibW9yZFwiXSx4KGUudmFsdWUsdCx0cnVlKSx0KX07Uy50ZXh0PWZ1bmN0aW9uKGUsdCl7dmFyIHI9dC53aXRoRm9udChlLnZhbHVlLnN0eWxlKTt2YXIgYT14KGUudmFsdWUuYm9keSxyLHRydWUpO2Zvcih2YXIgaT0wO2k8YS5sZW5ndGgtMTtpKyspe2lmKGFbaV0udHJ5Q29tYmluZShhW2krMV0pKXthLnNwbGljZShpKzEsMSk7aS0tfX1yZXR1cm4gdihbXCJtb3JkXCIsXCJ0ZXh0XCJdLGEscil9O1MueG1sQ2xhc3M9ZnVuY3Rpb24oZSx0LHIpe3ZhciBhPXgoZS52YWx1ZS52YWx1ZSx0LHIpO3JldHVybiBuZXcgbC5tYWtlRnJhZ21lbnQoYSxbZS52YWx1ZS5jbF0pfTtTLmNvbG9yPWZ1bmN0aW9uKGUsdCl7dmFyIHI9eChlLnZhbHVlLnZhbHVlLHQud2l0aENvbG9yKGUudmFsdWUuY29sb3IpLGZhbHNlKTtyZXR1cm4gbmV3IGwubWFrZUZyYWdtZW50KHIpfTtTLnN1cHN1Yj1mdW5jdGlvbihlLHQpe2lmKHcoZSx0KSl7cmV0dXJuIFNbZS52YWx1ZS5iYXNlLnR5cGVdKGUsdCl9dmFyIHI9cShlLnZhbHVlLmJhc2UsdCk7dmFyIGE9dm9pZCAwO3ZhciBpPXZvaWQgMDt2YXIgbj10LmZvbnRNZXRyaWNzKCk7dmFyIG89dm9pZCAwO3ZhciB1PTA7dmFyIHA9MDtpZihlLnZhbHVlLnN1cCl7bz10LmhhdmluZ1N0eWxlKHQuc3R5bGUuc3VwKCkpO2E9cShlLnZhbHVlLnN1cCxvLHQpO2lmKCF6KGUudmFsdWUuYmFzZSkpe3U9ci5oZWlnaHQtby5mb250TWV0cmljcygpLnN1cERyb3Aqby5zaXplTXVsdGlwbGllci90LnNpemVNdWx0aXBsaWVyfX1pZihlLnZhbHVlLnN1Yil7bz10LmhhdmluZ1N0eWxlKHQuc3R5bGUuc3ViKCkpO2k9cShlLnZhbHVlLnN1YixvLHQpO2lmKCF6KGUudmFsdWUuYmFzZSkpe3A9ci5kZXB0aCtvLmZvbnRNZXRyaWNzKCkuc3ViRHJvcCpvLnNpemVNdWx0aXBsaWVyL3Quc2l6ZU11bHRpcGxpZXJ9fXZhciBjPXZvaWQgMDtpZih0LnN0eWxlPT09cy5ESVNQTEFZKXtjPW4uc3VwMX1lbHNlIGlmKHQuc3R5bGUuY3JhbXBlZCl7Yz1uLnN1cDN9ZWxzZXtjPW4uc3VwMn12YXIgZj10LnNpemVNdWx0aXBsaWVyO3ZhciBtPS41L24ucHRQZXJFbS9mK1wiZW1cIjt2YXIgZD12b2lkIDA7aWYoIWUudmFsdWUuc3VwKXtwPU1hdGgubWF4KHAsbi5zdWIxLGkuaGVpZ2h0LS44Km4ueEhlaWdodCk7ZD1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTppfV0sXCJzaGlmdFwiLHAsdCk7ZC5jaGlsZHJlblswXS5zdHlsZS5tYXJnaW5SaWdodD1tO2lmKHIgaW5zdGFuY2VvZiBoLnN5bWJvbE5vZGUpe2QuY2hpbGRyZW5bMF0uc3R5bGUubWFyZ2luTGVmdD0tci5pdGFsaWMrXCJlbVwifX1lbHNlIGlmKCFlLnZhbHVlLnN1Yil7dT1NYXRoLm1heCh1LGMsYS5kZXB0aCsuMjUqbi54SGVpZ2h0KTtkPWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOmF9XSxcInNoaWZ0XCIsLXUsdCk7ZC5jaGlsZHJlblswXS5zdHlsZS5tYXJnaW5SaWdodD1tfWVsc2V7dT1NYXRoLm1heCh1LGMsYS5kZXB0aCsuMjUqbi54SGVpZ2h0KTtwPU1hdGgubWF4KHAsbi5zdWIyKTt2YXIgZz1uLmRlZmF1bHRSdWxlVGhpY2tuZXNzO2lmKHUtYS5kZXB0aC0oaS5oZWlnaHQtcCk8NCpnKXtwPTQqZy0odS1hLmRlcHRoKStpLmhlaWdodDt2YXIgeT0uOCpuLnhIZWlnaHQtKHUtYS5kZXB0aCk7aWYoeT4wKXt1Kz15O3AtPXl9fWQ9bC5tYWtlVkxpc3QoW3t0eXBlOlwiZWxlbVwiLGVsZW06aSxzaGlmdDpwfSx7dHlwZTpcImVsZW1cIixlbGVtOmEsc2hpZnQ6LXV9XSxcImluZGl2aWR1YWxTaGlmdFwiLG51bGwsdCk7aWYociBpbnN0YW5jZW9mIGguc3ltYm9sTm9kZSl7ZC5jaGlsZHJlblswXS5zdHlsZS5tYXJnaW5MZWZ0PS1yLml0YWxpYytcImVtXCJ9ZC5jaGlsZHJlblswXS5zdHlsZS5tYXJnaW5SaWdodD1tO2QuY2hpbGRyZW5bMV0uc3R5bGUubWFyZ2luUmlnaHQ9bX12YXIgeD1iKHIpfHxcIm1vcmRcIjtyZXR1cm4gdihbeF0sW3IsdihbXCJtc3Vwc3ViXCJdLFtkXSldLHQpfTtTLmdlbmZyYWM9ZnVuY3Rpb24oZSx0KXt2YXIgcj10LnN0eWxlO2lmKGUudmFsdWUuc2l6ZT09PVwiZGlzcGxheVwiKXtyPXMuRElTUExBWX1lbHNlIGlmKGUudmFsdWUuc2l6ZT09PVwidGV4dFwiKXtyPXMuVEVYVH12YXIgYT1yLmZyYWNOdW0oKTt2YXIgaT1yLmZyYWNEZW4oKTt2YXIgbj12b2lkIDA7bj10LmhhdmluZ1N0eWxlKGEpO3ZhciBvPXEoZS52YWx1ZS5udW1lcixuLHQpO249dC5oYXZpbmdTdHlsZShpKTt2YXIgaD1xKGUudmFsdWUuZGVub20sbix0KTt2YXIgcD12b2lkIDA7aWYoZS52YWx1ZS5oYXNCYXJMaW5lKXtwPU4oXCJmcmFjLWxpbmVcIix0KX1lbHNle3A9bnVsbH12YXIgYz1wP3AuaGVpZ2h0OjA7dmFyIGY9dm9pZCAwO3ZhciBtPXZvaWQgMDt2YXIgZD12b2lkIDA7aWYoci5zaXplPT09cy5ESVNQTEFZLnNpemUpe2Y9dC5mb250TWV0cmljcygpLm51bTE7aWYoYz4wKXttPTMqY31lbHNle209Nyp0LmZvbnRNZXRyaWNzKCkuZGVmYXVsdFJ1bGVUaGlja25lc3N9ZD10LmZvbnRNZXRyaWNzKCkuZGVub20xfWVsc2V7aWYoYz4wKXtmPXQuZm9udE1ldHJpY3MoKS5udW0yO209Y31lbHNle2Y9dC5mb250TWV0cmljcygpLm51bTM7bT0zKnQuZm9udE1ldHJpY3MoKS5kZWZhdWx0UnVsZVRoaWNrbmVzcztcclxufWQ9dC5mb250TWV0cmljcygpLmRlbm9tMn12YXIgZz12b2lkIDA7aWYoYz09PTApe3ZhciB5PWYtby5kZXB0aC0oaC5oZWlnaHQtZCk7aWYoeTxtKXtmKz0uNSoobS15KTtkKz0uNSoobS15KX1nPWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOmgsc2hpZnQ6ZH0se3R5cGU6XCJlbGVtXCIsZWxlbTpvLHNoaWZ0Oi1mfV0sXCJpbmRpdmlkdWFsU2hpZnRcIixudWxsLHQpfWVsc2V7dmFyIHg9dC5mb250TWV0cmljcygpLmF4aXNIZWlnaHQ7aWYoZi1vLmRlcHRoLSh4Ky41KmMpPG0pe2YrPW0tKGYtby5kZXB0aC0oeCsuNSpjKSl9aWYoeC0uNSpjLShoLmhlaWdodC1kKTxtKXtkKz1tLSh4LS41KmMtKGguaGVpZ2h0LWQpKX12YXIgYj0tKHgtLjUqYyk7Zz1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpoLHNoaWZ0OmR9LHt0eXBlOlwiZWxlbVwiLGVsZW06cCxzaGlmdDpifSx7dHlwZTpcImVsZW1cIixlbGVtOm8sc2hpZnQ6LWZ9XSxcImluZGl2aWR1YWxTaGlmdFwiLG51bGwsdCl9bj10LmhhdmluZ1N0eWxlKHIpO2cuaGVpZ2h0Kj1uLnNpemVNdWx0aXBsaWVyL3Quc2l6ZU11bHRpcGxpZXI7Zy5kZXB0aCo9bi5zaXplTXVsdGlwbGllci90LnNpemVNdWx0aXBsaWVyO3ZhciB3PXZvaWQgMDtpZihyLnNpemU9PT1zLkRJU1BMQVkuc2l6ZSl7dz10LmZvbnRNZXRyaWNzKCkuZGVsaW0xfWVsc2V7dz10LmZvbnRNZXRyaWNzKCkuZGVsaW0yfXZhciBrPXZvaWQgMDt2YXIgej12b2lkIDA7aWYoZS52YWx1ZS5sZWZ0RGVsaW09PW51bGwpe2s9TSh0LFtcIm1vcGVuXCJdKX1lbHNle2s9dS5jdXN0b21TaXplZERlbGltKGUudmFsdWUubGVmdERlbGltLHcsdHJ1ZSx0LmhhdmluZ1N0eWxlKHIpLGUubW9kZSxbXCJtb3BlblwiXSl9aWYoZS52YWx1ZS5yaWdodERlbGltPT1udWxsKXt6PU0odCxbXCJtY2xvc2VcIl0pfWVsc2V7ej11LmN1c3RvbVNpemVkRGVsaW0oZS52YWx1ZS5yaWdodERlbGltLHcsdHJ1ZSx0LmhhdmluZ1N0eWxlKHIpLGUubW9kZSxbXCJtY2xvc2VcIl0pfXJldHVybiB2KFtcIm1vcmRcIl0uY29uY2F0KG4uc2l6aW5nQ2xhc3Nlcyh0KSksW2ssdihbXCJtZnJhY1wiXSxbZ10pLHpdLHQpfTt2YXIgQT1mdW5jdGlvbiBlKHQscil7dmFyIGE9dC5udW1iZXI7aWYodC51bml0PT09XCJleFwiKXthKj1yLmZvbnRNZXRyaWNzKCkuZW1QZXJFeH1lbHNlIGlmKHQudW5pdD09PVwibXVcIil7YS89MTh9cmV0dXJuIGF9O1MuYXJyYXk9ZnVuY3Rpb24oZSx0KXt2YXIgcj12b2lkIDA7dmFyIGE9dm9pZCAwO3ZhciBpPWUudmFsdWUuYm9keS5sZW5ndGg7dmFyIG49MDt2YXIgcz1uZXcgQXJyYXkoaSk7dmFyIHU9MS90LmZvbnRNZXRyaWNzKCkucHRQZXJFbTt2YXIgaD01KnU7dmFyIGM9MTIqdTt2YXIgZj0zKnU7dmFyIG09cC5kZWZsdChlLnZhbHVlLmFycmF5c3RyZXRjaCwxKTt2YXIgZD1tKmM7dmFyIGc9LjcqZDt2YXIgeT0uMypkO3ZhciB4PTA7Zm9yKHI9MDtyPGUudmFsdWUuYm9keS5sZW5ndGg7KytyKXt2YXIgYj1lLnZhbHVlLmJvZHlbcl07dmFyIHc9Zzt2YXIgaz15O2lmKG48Yi5sZW5ndGgpe249Yi5sZW5ndGh9dmFyIHo9bmV3IEFycmF5KGIubGVuZ3RoKTtmb3IoYT0wO2E8Yi5sZW5ndGg7KythKXt2YXIgTT1xKGJbYV0sdCk7aWYoazxNLmRlcHRoKXtrPU0uZGVwdGh9aWYodzxNLmhlaWdodCl7dz1NLmhlaWdodH16W2FdPU19dmFyIFM9MDtpZihlLnZhbHVlLnJvd0dhcHNbcl0pe1M9QShlLnZhbHVlLnJvd0dhcHNbcl0udmFsdWUsdCk7aWYoUz4wKXtTKz15O2lmKGs8Uyl7az1TfVM9MH19aWYoZS52YWx1ZS5hZGRKb3Qpe2srPWZ9ei5oZWlnaHQ9dzt6LmRlcHRoPWs7eCs9dzt6LnBvcz14O3grPWsrUztzW3JdPXp9dmFyIE49eC8yK3QuZm9udE1ldHJpY3MoKS5heGlzSGVpZ2h0O3ZhciBUPWUudmFsdWUuY29sc3x8W107dmFyIEM9W107dmFyIEU9dm9pZCAwO3ZhciBPPXZvaWQgMDtmb3IoYT0wLE89MDthPG58fE88VC5sZW5ndGg7KythLCsrTyl7dmFyIFI9VFtPXXx8e307dmFyIEw9dHJ1ZTt3aGlsZShSLnR5cGU9PT1cInNlcGFyYXRvclwiKXtpZighTCl7RT12KFtcImFycmF5Y29sc2VwXCJdLFtdKTtFLnN0eWxlLndpZHRoPXQuZm9udE1ldHJpY3MoKS5kb3VibGVSdWxlU2VwK1wiZW1cIjtDLnB1c2goRSl9aWYoUi5zZXBhcmF0b3I9PT1cInxcIil7dmFyIEQ9dihbXCJ2ZXJ0aWNhbC1zZXBhcmF0b3JcIl0sW10pO0Quc3R5bGUuaGVpZ2h0PXgrXCJlbVwiO0Quc3R5bGUudmVydGljYWxBbGlnbj0tKHgtTikrXCJlbVwiO0MucHVzaChEKX1lbHNle3Rocm93IG5ldyBvKFwiSW52YWxpZCBzZXBhcmF0b3IgdHlwZTogXCIrUi5zZXBhcmF0b3IpfU8rKztSPVRbT118fHt9O0w9ZmFsc2V9aWYoYT49bil7Y29udGludWV9dmFyIFA9dm9pZCAwO2lmKGE+MHx8ZS52YWx1ZS5oc2tpcEJlZm9yZUFuZEFmdGVyKXtQPXAuZGVmbHQoUi5wcmVnYXAsaCk7aWYoUCE9PTApe0U9dihbXCJhcnJheWNvbHNlcFwiXSxbXSk7RS5zdHlsZS53aWR0aD1QK1wiZW1cIjtDLnB1c2goRSl9fXZhciBCPVtdO2ZvcihyPTA7cjxpOysrcil7dmFyIEY9c1tyXTt2YXIgST1GW2FdO2lmKCFJKXtjb250aW51ZX12YXIgVj1GLnBvcy1OO0kuZGVwdGg9Ri5kZXB0aDtJLmhlaWdodD1GLmhlaWdodDtCLnB1c2goe3R5cGU6XCJlbGVtXCIsZWxlbTpJLHNoaWZ0OlZ9KX1CPWwubWFrZVZMaXN0KEIsXCJpbmRpdmlkdWFsU2hpZnRcIixudWxsLHQpO0I9dihbXCJjb2wtYWxpZ24tXCIrKFIuYWxpZ258fFwiY1wiKV0sW0JdKTtDLnB1c2goQik7aWYoYTxuLTF8fGUudmFsdWUuaHNraXBCZWZvcmVBbmRBZnRlcil7UD1wLmRlZmx0KFIucG9zdGdhcCxoKTtpZihQIT09MCl7RT12KFtcImFycmF5Y29sc2VwXCJdLFtdKTtFLnN0eWxlLndpZHRoPVArXCJlbVwiO0MucHVzaChFKX19fXM9dihbXCJtdGFibGVcIl0sQyk7cmV0dXJuIHYoW1wibW9yZFwiXSxbc10sdCl9O1Muc3BhY2luZz1mdW5jdGlvbihlLHQpe2lmKGUudmFsdWU9PT1cIlxcXFwgXCJ8fGUudmFsdWU9PT1cIlxcXFxzcGFjZVwifHxlLnZhbHVlPT09XCIgXCJ8fGUudmFsdWU9PT1cIn5cIil7aWYoZS5tb2RlPT09XCJ0ZXh0XCIpe3JldHVybiBsLm1ha2VPcmQoZSx0LFwidGV4dG9yZFwiKX1lbHNle3JldHVybiB2KFtcIm1zcGFjZVwiXSxbbC5tYXRoc3ltKGUudmFsdWUsZS5tb2RlLHQpXSx0KX19ZWxzZXtyZXR1cm4gdihbXCJtc3BhY2VcIixsLnNwYWNpbmdGdW5jdGlvbnNbZS52YWx1ZV0uY2xhc3NOYW1lXSxbXSx0KX19O1MubGxhcD1mdW5jdGlvbihlLHQpe3ZhciByPXYoW1wiaW5uZXJcIl0sW3EoZS52YWx1ZS5ib2R5LHQpXSk7dmFyIGE9dihbXCJmaXhcIl0sW10pO3JldHVybiB2KFtcIm1vcmRcIixcImxsYXBcIl0sW3IsYV0sdCl9O1MucmxhcD1mdW5jdGlvbihlLHQpe3ZhciByPXYoW1wiaW5uZXJcIl0sW3EoZS52YWx1ZS5ib2R5LHQpXSk7dmFyIGE9dihbXCJmaXhcIl0sW10pO3JldHVybiB2KFtcIm1vcmRcIixcInJsYXBcIl0sW3IsYV0sdCl9O1Mub3A9ZnVuY3Rpb24oZSx0KXt2YXIgcj12b2lkIDA7dmFyIGE9dm9pZCAwO3ZhciBpPWZhbHNlO2lmKGUudHlwZT09PVwic3Vwc3ViXCIpe3I9ZS52YWx1ZS5zdXA7YT1lLnZhbHVlLnN1YjtlPWUudmFsdWUuYmFzZTtpPXRydWV9dmFyIG49dC5zdHlsZTt2YXIgbz1bXCJcXFxcc21hbGxpbnRcIl07dmFyIHU9ZmFsc2U7aWYobi5zaXplPT09cy5ESVNQTEFZLnNpemUmJmUudmFsdWUuc3ltYm9sJiYhcC5jb250YWlucyhvLGUudmFsdWUuYm9keSkpe3U9dHJ1ZX12YXIgYz12b2lkIDA7aWYoZS52YWx1ZS5zeW1ib2wpe3ZhciBmPXU/XCJTaXplMi1SZWd1bGFyXCI6XCJTaXplMS1SZWd1bGFyXCI7Yz1sLm1ha2VTeW1ib2woZS52YWx1ZS5ib2R5LGYsXCJtYXRoXCIsdCxbXCJtb3BcIixcIm9wLXN5bWJvbFwiLHU/XCJsYXJnZS1vcFwiOlwic21hbGwtb3BcIl0pfWVsc2UgaWYoZS52YWx1ZS52YWx1ZSl7dmFyIG09eChlLnZhbHVlLnZhbHVlLHQsdHJ1ZSk7aWYobS5sZW5ndGg9PT0xJiZtWzBdaW5zdGFuY2VvZiBoLnN5bWJvbE5vZGUpe2M9bVswXTtjLmNsYXNzZXNbMF09XCJtb3BcIn1lbHNle2M9dihbXCJtb3BcIl0sbSx0KX19ZWxzZXt2YXIgZD1bXTtmb3IodmFyIGc9MTtnPGUudmFsdWUuYm9keS5sZW5ndGg7ZysrKXtkLnB1c2gobC5tYXRoc3ltKGUudmFsdWUuYm9keVtnXSxlLm1vZGUpKX1jPXYoW1wibW9wXCJdLGQsdCl9dmFyIHk9MDt2YXIgYj0wO2lmKGMgaW5zdGFuY2VvZiBoLnN5bWJvbE5vZGUpe3k9KGMuaGVpZ2h0LWMuZGVwdGgpLzItdC5mb250TWV0cmljcygpLmF4aXNIZWlnaHQ7Yj1jLml0YWxpY31pZihpKXtjPXYoW10sW2NdKTt2YXIgdz12b2lkIDA7dmFyIGs9dm9pZCAwO3ZhciB6PXZvaWQgMDt2YXIgTT12b2lkIDA7dmFyIFM9dm9pZCAwO2lmKHIpe1M9dC5oYXZpbmdTdHlsZShuLnN1cCgpKTt3PXEocixTLHQpO2s9TWF0aC5tYXgodC5mb250TWV0cmljcygpLmJpZ09wU3BhY2luZzEsdC5mb250TWV0cmljcygpLmJpZ09wU3BhY2luZzMtdy5kZXB0aCl9aWYoYSl7Uz10LmhhdmluZ1N0eWxlKG4uc3ViKCkpO3o9cShhLFMsdCk7TT1NYXRoLm1heCh0LmZvbnRNZXRyaWNzKCkuYmlnT3BTcGFjaW5nMix0LmZvbnRNZXRyaWNzKCkuYmlnT3BTcGFjaW5nNC16LmhlaWdodCl9dmFyIEE9dm9pZCAwO3ZhciBOPXZvaWQgMDt2YXIgVD12b2lkIDA7aWYoIXIpe049Yy5oZWlnaHQteTtBPWwubWFrZVZMaXN0KFt7dHlwZTpcImtlcm5cIixzaXplOnQuZm9udE1ldHJpY3MoKS5iaWdPcFNwYWNpbmc1fSx7dHlwZTpcImVsZW1cIixlbGVtOnp9LHt0eXBlOlwia2VyblwiLHNpemU6TX0se3R5cGU6XCJlbGVtXCIsZWxlbTpjfV0sXCJ0b3BcIixOLHQpO0EuY2hpbGRyZW5bMF0uc3R5bGUubWFyZ2luTGVmdD0tYitcImVtXCJ9ZWxzZSBpZighYSl7VD1jLmRlcHRoK3k7QT1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpjfSx7dHlwZTpcImtlcm5cIixzaXplOmt9LHt0eXBlOlwiZWxlbVwiLGVsZW06d30se3R5cGU6XCJrZXJuXCIsc2l6ZTp0LmZvbnRNZXRyaWNzKCkuYmlnT3BTcGFjaW5nNX1dLFwiYm90dG9tXCIsVCx0KTtBLmNoaWxkcmVuWzFdLnN0eWxlLm1hcmdpbkxlZnQ9YitcImVtXCJ9ZWxzZSBpZighciYmIWEpe3JldHVybiBjfWVsc2V7VD10LmZvbnRNZXRyaWNzKCkuYmlnT3BTcGFjaW5nNSt6LmhlaWdodCt6LmRlcHRoK00rYy5kZXB0aCt5O0E9bC5tYWtlVkxpc3QoW3t0eXBlOlwia2VyblwiLHNpemU6dC5mb250TWV0cmljcygpLmJpZ09wU3BhY2luZzV9LHt0eXBlOlwiZWxlbVwiLGVsZW06en0se3R5cGU6XCJrZXJuXCIsc2l6ZTpNfSx7dHlwZTpcImVsZW1cIixlbGVtOmN9LHt0eXBlOlwia2VyblwiLHNpemU6a30se3R5cGU6XCJlbGVtXCIsZWxlbTp3fSx7dHlwZTpcImtlcm5cIixzaXplOnQuZm9udE1ldHJpY3MoKS5iaWdPcFNwYWNpbmc1fV0sXCJib3R0b21cIixULHQpO0EuY2hpbGRyZW5bMF0uc3R5bGUubWFyZ2luTGVmdD0tYitcImVtXCI7QS5jaGlsZHJlblsyXS5zdHlsZS5tYXJnaW5MZWZ0PWIrXCJlbVwifXJldHVybiB2KFtcIm1vcFwiLFwib3AtbGltaXRzXCJdLFtBXSx0KX1lbHNle2lmKHkpe2Muc3R5bGUucG9zaXRpb249XCJyZWxhdGl2ZVwiO2Muc3R5bGUudG9wPXkrXCJlbVwifXJldHVybiBjfX07Uy5tb2Q9ZnVuY3Rpb24oZSx0KXt2YXIgcj1bXTtpZihlLnZhbHVlLm1vZFR5cGU9PT1cImJtb2RcIil7aWYoIXQuc3R5bGUuaXNUaWdodCgpKXtyLnB1c2godihbXCJtc3BhY2VcIixcIm5lZ2F0aXZlbWVkaXVtc3BhY2VcIl0sW10sdCkpfXIucHVzaCh2KFtcIm1zcGFjZVwiLFwidGhpY2tzcGFjZVwiXSxbXSx0KSl9ZWxzZSBpZih0LnN0eWxlLnNpemU9PT1zLkRJU1BMQVkuc2l6ZSl7ci5wdXNoKHYoW1wibXNwYWNlXCIsXCJxdWFkXCJdLFtdLHQpKX1lbHNlIGlmKGUudmFsdWUubW9kVHlwZT09PVwibW9kXCIpe3IucHVzaCh2KFtcIm1zcGFjZVwiLFwidHdlbHZlbXVzcGFjZVwiXSxbXSx0KSl9ZWxzZXtyLnB1c2godihbXCJtc3BhY2VcIixcImVpZ2h0bXVzcGFjZVwiXSxbXSx0KSl9aWYoZS52YWx1ZS5tb2RUeXBlPT09XCJwb2RcInx8ZS52YWx1ZS5tb2RUeXBlPT09XCJwbW9kXCIpe3IucHVzaChsLm1hdGhzeW0oXCIoXCIsZS5tb2RlKSl9aWYoZS52YWx1ZS5tb2RUeXBlIT09XCJwb2RcIil7dmFyIGE9W2wubWF0aHN5bShcIm1cIixlLm1vZGUpLGwubWF0aHN5bShcIm9cIixlLm1vZGUpLGwubWF0aHN5bShcImRcIixlLm1vZGUpXTtpZihlLnZhbHVlLm1vZFR5cGU9PT1cImJtb2RcIil7ci5wdXNoKHYoW1wibWJpblwiXSxhLHQpKTtyLnB1c2godihbXCJtc3BhY2VcIixcInRoaWNrc3BhY2VcIl0sW10sdCkpO2lmKCF0LnN0eWxlLmlzVGlnaHQoKSl7ci5wdXNoKHYoW1wibXNwYWNlXCIsXCJuZWdhdGl2ZW1lZGl1bXNwYWNlXCJdLFtdLHQpKX19ZWxzZXtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShyLGEpO3IucHVzaCh2KFtcIm1zcGFjZVwiLFwic2l4bXVzcGFjZVwiXSxbXSx0KSl9fWlmKGUudmFsdWUudmFsdWUpe0FycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHIseChlLnZhbHVlLnZhbHVlLHQsZmFsc2UpKX1pZihlLnZhbHVlLm1vZFR5cGU9PT1cInBvZFwifHxlLnZhbHVlLm1vZFR5cGU9PT1cInBtb2RcIil7ci5wdXNoKGwubWF0aHN5bShcIilcIixlLm1vZGUpKX1yZXR1cm4gbC5tYWtlRnJhZ21lbnQocil9O1Mua2F0ZXg9ZnVuY3Rpb24oZSx0KXt2YXIgcj12KFtcImtcIl0sW2wubWF0aHN5bShcIktcIixlLm1vZGUpXSx0KTt2YXIgYT12KFtcImFcIl0sW2wubWF0aHN5bShcIkFcIixlLm1vZGUpXSx0KTthLmhlaWdodD0oYS5oZWlnaHQrLjIpKi43NTthLmRlcHRoPShhLmhlaWdodC0uMikqLjc1O3ZhciBpPXYoW1widFwiXSxbbC5tYXRoc3ltKFwiVFwiLGUubW9kZSldLHQpO3ZhciBuPXYoW1wiZVwiXSxbbC5tYXRoc3ltKFwiRVwiLGUubW9kZSldLHQpO24uaGVpZ2h0PW4uaGVpZ2h0LS4yMTU1O24uZGVwdGg9bi5kZXB0aCsuMjE1NTt2YXIgbz12KFtcInhcIl0sW2wubWF0aHN5bShcIlhcIixlLm1vZGUpXSx0KTtyZXR1cm4gdihbXCJtb3JkXCIsXCJrYXRleC1sb2dvXCJdLFtyLGEsaSxuLG9dLHQpfTt2YXIgTj1mdW5jdGlvbiBlKHQscil7dmFyIGE9ci5oYXZpbmdCYXNlU3R5bGUoKTt2YXIgaT12KFt0XS5jb25jYXQoYS5zaXppbmdDbGFzc2VzKHIpKSxbXSxyKTtpLmhlaWdodD1yLmZvbnRNZXRyaWNzKCkuZGVmYXVsdFJ1bGVUaGlja25lc3Mvci5zaXplTXVsdGlwbGllcjtpLm1heEZvbnRTaXplPTE7cmV0dXJuIGl9O1Mub3ZlcmxpbmU9ZnVuY3Rpb24oZSx0KXt2YXIgcj1xKGUudmFsdWUuYm9keSx0LmhhdmluZ0NyYW1wZWRTdHlsZSgpKTt2YXIgYT1OKFwib3ZlcmxpbmUtbGluZVwiLHQpO3ZhciBpPWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOnJ9LHt0eXBlOlwia2VyblwiLHNpemU6MyphLmhlaWdodH0se3R5cGU6XCJlbGVtXCIsZWxlbTphfSx7dHlwZTpcImtlcm5cIixzaXplOmEuaGVpZ2h0fV0sXCJmaXJzdEJhc2VsaW5lXCIsbnVsbCx0KTtyZXR1cm4gdihbXCJtb3JkXCIsXCJvdmVybGluZVwiXSxbaV0sdCl9O1MudW5kZXJsaW5lPWZ1bmN0aW9uKGUsdCl7dmFyIHI9cShlLnZhbHVlLmJvZHksdCk7dmFyIGE9TihcInVuZGVybGluZS1saW5lXCIsdCk7dmFyIGk9bC5tYWtlVkxpc3QoW3t0eXBlOlwia2VyblwiLHNpemU6YS5oZWlnaHR9LHt0eXBlOlwiZWxlbVwiLGVsZW06YX0se3R5cGU6XCJrZXJuXCIsc2l6ZTozKmEuaGVpZ2h0fSx7dHlwZTpcImVsZW1cIixlbGVtOnJ9XSxcInRvcFwiLHIuaGVpZ2h0LHQpO3JldHVybiB2KFtcIm1vcmRcIixcInVuZGVybGluZVwiXSxbaV0sdCl9O1Muc3FydD1mdW5jdGlvbihlLHQpe3ZhciByPXEoZS52YWx1ZS5ib2R5LHQuaGF2aW5nQ3JhbXBlZFN0eWxlKCkpO3ZhciBhPU4oXCJzcXJ0LWxpbmVcIix0KTt2YXIgaT1hLmhlaWdodDt2YXIgbj1pO2lmKHQuc3R5bGUuaWQ8cy5URVhULmlkKXtuPXQuZm9udE1ldHJpY3MoKS54SGVpZ2h0KnQuc2l6ZU11bHRpcGxpZXJ9dmFyIG89aStuLzQ7dmFyIGg9KHIuaGVpZ2h0K3IuZGVwdGgrbytpKSp0LnNpemVNdWx0aXBsaWVyO3ZhciBwPXYoW1wic3FydC1zaWduXCJdLFt1LmN1c3RvbVNpemVkRGVsaW0oXCJcXFxcc3VyZFwiLGgsZmFsc2UsdCxlLm1vZGUpXSx0KTt2YXIgYz1wLmhlaWdodCtwLmRlcHRoLWk7aWYoYz5yLmhlaWdodCtyLmRlcHRoK28pe289KG8rYy1yLmhlaWdodC1yLmRlcHRoKS8yfXZhciBmPS0oci5oZWlnaHQrbytpKStwLmhlaWdodDtwLnN0eWxlLnRvcD1mK1wiZW1cIjtwLmhlaWdodC09ZjtwLmRlcHRoKz1mO3ZhciBtPXZvaWQgMDtpZihyLmhlaWdodD09PTAmJnIuZGVwdGg9PT0wKXttPXYoKX1lbHNle209bC5tYWtlVkxpc3QoW3t0eXBlOlwiZWxlbVwiLGVsZW06cn0se3R5cGU6XCJrZXJuXCIsc2l6ZTpvfSx7dHlwZTpcImVsZW1cIixlbGVtOmF9LHt0eXBlOlwia2VyblwiLHNpemU6aX1dLFwiZmlyc3RCYXNlbGluZVwiLG51bGwsdCl9aWYoIWUudmFsdWUuaW5kZXgpe3JldHVybiB2KFtcIm1vcmRcIixcInNxcnRcIl0sW3AsbV0sdCl9ZWxzZXt2YXIgZD10LmhhdmluZ1N0eWxlKHMuU0NSSVBUU0NSSVBUKTt2YXIgZz1xKGUudmFsdWUuaW5kZXgsZCx0KTt2YXIgeT1NYXRoLm1heChwLmhlaWdodCxtLmhlaWdodCk7dmFyIHg9TWF0aC5tYXgocC5kZXB0aCxtLmRlcHRoKTt2YXIgYj0uNiooeS14KTt2YXIgdz1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpnfV0sXCJzaGlmdFwiLC1iLHQpO3ZhciBrPXYoW1wicm9vdFwiXSxbd10pO3JldHVybiB2KFtcIm1vcmRcIixcInNxcnRcIl0sW2sscCxtXSx0KX19O2Z1bmN0aW9uIFQoZSx0LHIpe3ZhciBhPXgoZSx0LGZhbHNlKTt2YXIgaT10LnNpemVNdWx0aXBsaWVyL3Iuc2l6ZU11bHRpcGxpZXI7Zm9yKHZhciBuPTA7bjxhLmxlbmd0aDtuKyspe3ZhciBvPXAuaW5kZXhPZihhW25dLmNsYXNzZXMsXCJzaXppbmdcIik7aWYobzwwKXtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShhW25dLmNsYXNzZXMsdC5zaXppbmdDbGFzc2VzKHIpKX1lbHNlIGlmKGFbbl0uY2xhc3Nlc1tvKzFdPT09XCJyZXNldC1zaXplXCIrdC5zaXplKXthW25dLmNsYXNzZXNbbysxXT1cInJlc2V0LXNpemVcIityLnNpemV9YVtuXS5oZWlnaHQqPWk7YVtuXS5kZXB0aCo9aX1yZXR1cm4gbC5tYWtlRnJhZ21lbnQoYSl9Uy5zaXppbmc9ZnVuY3Rpb24oZSx0KXt2YXIgcj10LmhhdmluZ1NpemUoZS52YWx1ZS5zaXplKTtyZXR1cm4gVChlLnZhbHVlLnZhbHVlLHIsdCl9O1Muc3R5bGluZz1mdW5jdGlvbihlLHQpe3ZhciByPXtkaXNwbGF5OnMuRElTUExBWSx0ZXh0OnMuVEVYVCxzY3JpcHQ6cy5TQ1JJUFQsc2NyaXB0c2NyaXB0OnMuU0NSSVBUU0NSSVBUfTt2YXIgYT1yW2UudmFsdWUuc3R5bGVdO3ZhciBpPXQuaGF2aW5nU3R5bGUoYSk7cmV0dXJuIFQoZS52YWx1ZS52YWx1ZSxpLHQpfTtTLmZvbnQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLnZhbHVlLmZvbnQ7cmV0dXJuIHEoZS52YWx1ZS5ib2R5LHQud2l0aEZvbnQocikpfTtTLmRlbGltc2l6aW5nPWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS52YWx1ZS52YWx1ZTtpZihyPT09XCIuXCIpe3JldHVybiB2KFtlLnZhbHVlLm1jbGFzc10pfXJldHVybiB1LnNpemVkRGVsaW0ocixlLnZhbHVlLnNpemUsdCxlLm1vZGUsW2UudmFsdWUubWNsYXNzXSl9O1MubGVmdHJpZ2h0PWZ1bmN0aW9uKGUsdCl7dmFyIHI9eChlLnZhbHVlLmJvZHksdCx0cnVlKTt2YXIgYT0wO3ZhciBpPTA7dmFyIG49ZmFsc2U7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspe2lmKHJbb10uaXNNaWRkbGUpe249dHJ1ZX1lbHNle2E9TWF0aC5tYXgocltvXS5oZWlnaHQsYSk7aT1NYXRoLm1heChyW29dLmRlcHRoLGkpfX1hKj10LnNpemVNdWx0aXBsaWVyO2kqPXQuc2l6ZU11bHRpcGxpZXI7dmFyIHM9dm9pZCAwO2lmKGUudmFsdWUubGVmdD09PVwiLlwiKXtzPU0odCxbXCJtb3BlblwiXSl9ZWxzZXtzPXUubGVmdFJpZ2h0RGVsaW0oZS52YWx1ZS5sZWZ0LGEsaSx0LGUubW9kZSxbXCJtb3BlblwiXSl9ci51bnNoaWZ0KHMpO2lmKG4pe2Zvcih2YXIgaD0xO2g8ci5sZW5ndGg7aCsrKXt2YXIgcD1yW2hdO2lmKHAuaXNNaWRkbGUpe3JbaF09dS5sZWZ0UmlnaHREZWxpbShwLmlzTWlkZGxlLnZhbHVlLGEsaSxwLmlzTWlkZGxlLm9wdGlvbnMsZS5tb2RlLFtdKTt2YXIgYz15KHAuY2hpbGRyZW4sMCk7aWYoYyl7bC5wcmVwZW5kQ2hpbGRyZW4ocltoXSxjKX19fX12YXIgZj12b2lkIDA7aWYoZS52YWx1ZS5yaWdodD09PVwiLlwiKXtmPU0odCxbXCJtY2xvc2VcIl0pfWVsc2V7Zj11LmxlZnRSaWdodERlbGltKGUudmFsdWUucmlnaHQsYSxpLHQsZS5tb2RlLFtcIm1jbG9zZVwiXSl9ci5wdXNoKGYpO3JldHVybiB2KFtcIm1pbm5lclwiXSxyLHQpfTtTLmN1cnNvcj1mdW5jdGlvbihlLHQscil7dmFyIGE9dihbXCJjdXJzb3JcIl0sW10sdCk7dmFyIGk9MDt2YXIgbj1BKGUudmFsdWUuaGVpZ2h0LHQpO2lmKGUudmFsdWUuc2hpZnQpe2k9QShlLnZhbHVlLnNoaWZ0LHQpfWkvPXQuc2l6ZU11bHRpcGxpZXI7bi89dC5zaXplTXVsdGlwbGllcjthLnN0eWxlLm1hcmdpblJpZ2h0PVwiLTFweFwiO2Euc3R5bGUuYm9yZGVyUmlnaHQ9XCIxcHggc29saWRcIjthLnN0eWxlLm1hcmdpbkJvdHRvbT1pK1wiZW1cIjthLnN0eWxlLmhlaWdodD1uK1wiZW1cIjthLndpZHRoPTE7YS5oZWlnaHQ9bitpO2EuZGVwdGg9LWk7ZS52YWx1ZS5wcmV2aW91cz1yO3JldHVybiBhfTtTLm1pZGRsZT1mdW5jdGlvbihlLHQpe3ZhciByPXZvaWQgMDtpZihlLnZhbHVlLnZhbHVlPT09XCIuXCIpe3I9TSh0LFtdKX1lbHNle3I9dS5zaXplZERlbGltKGUudmFsdWUudmFsdWUsMSx0LGUubW9kZSxbXSk7ci5pc01pZGRsZT17dmFsdWU6ZS52YWx1ZS52YWx1ZSxvcHRpb25zOnR9fXJldHVybiByfTtTLnJ1bGU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBhPXYoW1wibW9yZFwiLFwicnVsZVwiXSxbXSx0KTt2YXIgaT0wO2lmKGUudmFsdWUuc2hpZnQpe2k9QShlLnZhbHVlLnNoaWZ0LHQpfXZhciBuPUEoZS52YWx1ZS53aWR0aCx0KTt2YXIgbz1BKGUudmFsdWUuaGVpZ2h0LHQpO2kvPXQuc2l6ZU11bHRpcGxpZXI7bi89dC5zaXplTXVsdGlwbGllcjtvLz10LnNpemVNdWx0aXBsaWVyO2Euc3R5bGUuYm9yZGVyUmlnaHRXaWR0aD1uK1wiZW1cIjthLnN0eWxlLmJvcmRlclRvcFdpZHRoPW8rXCJlbVwiO2Euc3R5bGUuYm90dG9tPWkrXCJlbVwiO2Eud2lkdGg9bjthLmhlaWdodD1vK2k7YS5kZXB0aD0taTtyZXR1cm4gYX07Uy5rZXJuPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dihbXCJtb3JkXCIsXCJydWxlXCJdLFtdLHQpO3ZhciBhPTA7aWYoZS52YWx1ZS5kaW1lbnNpb24pe2E9QShlLnZhbHVlLmRpbWVuc2lvbix0KX1hLz10LnNpemVNdWx0aXBsaWVyO3Iuc3R5bGUubWFyZ2luTGVmdD1hK1wiZW1cIjtyZXR1cm4gcn07Uy5hY2NlbnQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLnZhbHVlLmJhc2U7dmFyIGE9dm9pZCAwO2lmKGUudHlwZT09PVwic3Vwc3ViXCIpe3ZhciBpPWU7ZT1pLnZhbHVlLmJhc2U7cj1lLnZhbHVlLmJhc2U7aS52YWx1ZS5iYXNlPXI7YT1xKGksdCl9dmFyIG49cShyLHQuaGF2aW5nQ3JhbXBlZFN0eWxlKCkpO3ZhciBvPWUudmFsdWUuaXNTaGlmdHkmJnoocik7dmFyIHM9MDtpZihvKXt2YXIgdT1rKHIpO3ZhciBoPXEodSx0LmhhdmluZ0NyYW1wZWRTdHlsZSgpKTtzPWguc2tld312YXIgcD1NYXRoLm1pbihuLmhlaWdodCx0LmZvbnRNZXRyaWNzKCkueEhlaWdodCk7dmFyIGY9dm9pZCAwO2lmKCFlLnZhbHVlLmlzU3RyZXRjaHkpe3ZhciBtPWwubWFrZVN5bWJvbChlLnZhbHVlLmxhYmVsLFwiTWFpbi1SZWd1bGFyXCIsXCJtYXRoXCIsdCk7bS5pdGFsaWM9MDt2YXIgZD1lLnZhbHVlLmxhYmVsPT09XCJcXFxcdmVjXCI/XCJhY2NlbnQtdmVjXCI6bnVsbDtmPXYoW1wiYWNjZW50LWJvZHlcIixkXSxbdihbXSxbbV0pXSk7Zi5zdHlsZS5tYXJnaW5MZWZ0PTIqcytcImVtXCI7Zj1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpufSx7dHlwZTpcImtlcm5cIixzaXplOi1wfSx7dHlwZTpcImVsZW1cIixlbGVtOmZ9XSxcImZpcnN0QmFzZWxpbmVcIixudWxsLHQpfWVsc2V7Zj1jLnN2Z1NwYW4oZSx0KTtpZihzPjApe3ZhciBnPVwiY2FsYygxMDAlIC0gXCIrMipzK1wiZW0pIDEwMCVcIjtmLnN0eWxlLmJhY2tncm91bmRTaXplPWd9Zj1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpufSx7dHlwZTpcImVsZW1cIixlbGVtOmZ9XSxcImZpcnN0QmFzZWxpbmVcIixudWxsLHQpfXZhciB5PXYoW1wibW9yZFwiLFwiYWNjZW50XCJdLFtmXSx0KTtpZihhKXthLmNoaWxkcmVuWzBdPXk7YS5oZWlnaHQ9TWF0aC5tYXgoeS5oZWlnaHQsYS5oZWlnaHQpO2EuY2xhc3Nlc1swXT1cIm1vcmRcIjtyZXR1cm4gYX1lbHNle3JldHVybiB5fX07Uy5ob3JpekJyYWNlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dC5zdHlsZTt2YXIgYT1lLnR5cGU9PT1cInN1cHN1YlwiO3ZhciBpPXZvaWQgMDt2YXIgbj12b2lkIDA7aWYoYSl7aWYoZS52YWx1ZS5zdXApe249dC5oYXZpbmdTdHlsZShyLnN1cCgpKTtpPXEoZS52YWx1ZS5zdXAsbix0KX1lbHNle249dC5oYXZpbmdTdHlsZShyLnN1YigpKTtpPXEoZS52YWx1ZS5zdWIsbix0KX1lPWUudmFsdWUuYmFzZX12YXIgbz1xKGUudmFsdWUuYmFzZSx0LmhhdmluZ1N0eWxlKHIuY3JhbXAoKSkpO3ZhciBzPWMuc3ZnU3BhbihlLHQpO3ZhciB1PXZvaWQgMDtpZihlLnZhbHVlLmlzT3Zlcil7dT1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpvfSx7dHlwZTpcImtlcm5cIixzaXplOi4xfSx7dHlwZTpcImVsZW1cIixlbGVtOnN9XSxcImZpcnN0QmFzZWxpbmVcIixudWxsLHQpfWVsc2V7dT1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpzfSx7dHlwZTpcImtlcm5cIixzaXplOi4xfSx7dHlwZTpcImVsZW1cIixlbGVtOm99XSxcImJvdHRvbVwiLG8uZGVwdGgrLjErcy5oZWlnaHQsdCl9aWYoYSl7dmFyIGg9dihbXCJtb3JkXCIsZS52YWx1ZS5pc092ZXI/XCJtb3ZlclwiOlwibXVuZGVyXCJdLFt1XSx0KTtpZihlLnZhbHVlLmlzT3Zlcil7dT1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpofSx7dHlwZTpcImtlcm5cIixzaXplOi4yfSx7dHlwZTpcImVsZW1cIixlbGVtOml9XSxcImZpcnN0QmFzZWxpbmVcIixudWxsLHQpfWVsc2V7dT1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTppfSx7dHlwZTpcImtlcm5cIixzaXplOi4yfSx7dHlwZTpcImVsZW1cIixlbGVtOmh9XSxcImJvdHRvbVwiLGguZGVwdGgrLjIraS5oZWlnaHQsdCl9fXJldHVybiB2KFtcIm1vcmRcIixlLnZhbHVlLmlzT3Zlcj9cIm1vdmVyXCI6XCJtdW5kZXJcIl0sW3VdLHQpfTtTLmFjY2VudFVuZGVyPWZ1bmN0aW9uKGUsdCl7dmFyIHI9cShlLnZhbHVlLmJvZHksdCk7dmFyIGE9Yy5zdmdTcGFuKGUsdCk7dmFyIGk9L3RpbGRlLy50ZXN0KGUudmFsdWUubGFiZWwpPy4xMjowO3ZhciBuPWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOmF9LHt0eXBlOlwia2VyblwiLHNpemU6aX0se3R5cGU6XCJlbGVtXCIsZWxlbTpyfV0sXCJib3R0b21cIixhLmhlaWdodCtpLHQpO3JldHVybiB2KFtcIm1vcmRcIixcImFjY2VudHVuZGVyXCJdLFtuXSx0KX07Uy5lbmNsb3NlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9cShlLnZhbHVlLmJvZHksdCk7dmFyIGE9ZS52YWx1ZS5sYWJlbC5zdWJzdHIoMSk7dmFyIGk9dC5zaXplTXVsdGlwbGllcjt2YXIgbj12b2lkIDA7dmFyIG89MDt2YXIgcz0wO2lmKGE9PT1cInNvdXRcIil7bj12KFtcInN0cmV0Y2h5XCIsXCJzb3V0XCJdKTtuLmhlaWdodD10LmZvbnRNZXRyaWNzKCkuZGVmYXVsdFJ1bGVUaGlja25lc3MvaTtuLm1heEZvbnRTaXplPTE7cz0tLjUqdC5mb250TWV0cmljcygpLnhIZWlnaHR9ZWxzZXtyLmNsYXNzZXMucHVzaChhPT09XCJmYm94XCI/XCJib3hwYWRcIjpcImNhbmNlbC1wYWRcIik7dmFyIHU9eihlLnZhbHVlLmJvZHkpO289YT09PVwiZmJveFwiPy4zNDp1Py4yOjA7cz1yLmRlcHRoK287bj1jLmVuY2xvc2VTcGFuKHIsdSxhLG8sdCl9dmFyIGg9bC5tYWtlVkxpc3QoW3t0eXBlOlwiZWxlbVwiLGVsZW06cixzaGlmdDowfSx7dHlwZTpcImVsZW1cIixlbGVtOm4sc2hpZnQ6c31dLFwiaW5kaXZpZHVhbFNoaWZ0XCIsbnVsbCx0KTtpZihuLmhlaWdodD5oLm1heEZvbnRTaXplKXtoLmNoaWxkcmVuWzFdLnN0eWxlLnRvcD0tKHIuaGVpZ2h0K28tLjkvaSkrXCJlbVwifWlmKC9jYW5jZWwvLnRlc3QoYSkpe3JldHVybiB2KFtcIm1vcmRcIixcImNhbmNlbC1sYXBcIl0sW2hdLHQpfWVsc2V7cmV0dXJuIHYoW1wibW9yZFwiXSxbaF0sdCl9fTtTLnhBcnJvdz1mdW5jdGlvbihlLHQpe3ZhciByPXQuc3R5bGU7dmFyIGE9dC5oYXZpbmdTdHlsZShyLnN1cCgpKTt2YXIgaT1xKGUudmFsdWUuYm9keSxhLHQpO3ZhciBuPXZvaWQgMDtpZihlLnZhbHVlLmJlbG93KXthPXQuaGF2aW5nU3R5bGUoci5zdWIoKSk7bj1xKGUudmFsdWUuYmVsb3csYSx0KX12YXIgbz1jLnN2Z1NwYW4oZSx0KTt2YXIgcz0tdC5mb250TWV0cmljcygpLmF4aXNIZWlnaHQrby5kZXB0aDt2YXIgdT0tdC5mb250TWV0cmljcygpLmF4aXNIZWlnaHQtby5oZWlnaHQtLjExMTt2YXIgaD12b2lkIDA7aWYoZS52YWx1ZS5iZWxvdyl7dmFyIHA9LXQuZm9udE1ldHJpY3MoKS5heGlzSGVpZ2h0K24uaGVpZ2h0K28uaGVpZ2h0Ky4xMTE7aD1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTppLHNoaWZ0OnV9LHt0eXBlOlwiZWxlbVwiLGVsZW06byxzaGlmdDpzfSx7dHlwZTpcImVsZW1cIixlbGVtOm4sc2hpZnQ6cH1dLFwiaW5kaXZpZHVhbFNoaWZ0XCIsbnVsbCx0KX1lbHNle2g9bC5tYWtlVkxpc3QoW3t0eXBlOlwiZWxlbVwiLGVsZW06aSxzaGlmdDp1fSx7dHlwZTpcImVsZW1cIixlbGVtOm8sc2hpZnQ6c31dLFwiaW5kaXZpZHVhbFNoaWZ0XCIsbnVsbCx0KX12YXIgZj12KFtcIm1yZWxcIixcIngtYXJyb3dcIl0sW2hdLHQpO2YuZGVwdGg9Zi5kZXB0aDtmLmhlaWdodD1mLmhlaWdodDtyZXR1cm4gZn07Uy5waGFudG9tPWZ1bmN0aW9uKGUsdCl7dmFyIHI9eChlLnZhbHVlLnZhbHVlLHQud2l0aFBoYW50b20oKSxmYWxzZSk7cmV0dXJuIG5ldyBsLm1ha2VGcmFnbWVudChyKX07Uy5tY2xhc3M9ZnVuY3Rpb24oZSx0KXt2YXIgcj14KGUudmFsdWUudmFsdWUsdCx0cnVlKTtyZXR1cm4gdihbZS52YWx1ZS5tY2xhc3NdLHIsdCl9O3ZhciBxPWZ1bmN0aW9uIGUodCxyLGEpe2lmKCF0KXtyZXR1cm4gdigpfWlmKFNbdC50eXBlXSl7dmFyIGk9U1t0LnR5cGVdKHQscik7aWYoYSYmci5zaXplIT09YS5zaXplKXtpPXYoci5zaXppbmdDbGFzc2VzKGEpLFtpXSxyKTt2YXIgbj1yLnNpemVNdWx0aXBsaWVyL2Euc2l6ZU11bHRpcGxpZXI7aS5oZWlnaHQqPW47aS5kZXB0aCo9bn1yZXR1cm4gaX1lbHNle3Rocm93IG5ldyBvKFwiR290IGdyb3VwIG9mIHVua25vd24gdHlwZTogJ1wiK3QudHlwZStcIidcIil9fTt2YXIgQz1mdW5jdGlvbiBlKHQscil7dD1KU09OLnBhcnNlKCgwLGkuZGVmYXVsdCkodCkpO3ZhciBhPXgodCxyLHRydWUpO3ZhciBuPXYoW1wiYmFzZVwiXSxhLHIpO3ZhciBvPXYoW1wic3RydXRcIl0pO3ZhciBzPXYoW1wic3RydXRcIixcImJvdHRvbVwiXSk7by5zdHlsZS5oZWlnaHQ9bi5oZWlnaHQrXCJlbVwiO3Muc3R5bGUuaGVpZ2h0PW4uaGVpZ2h0K24uZGVwdGgrXCJlbVwiO3Muc3R5bGUudmVydGljYWxBbGlnbj0tbi5kZXB0aCtcImVtXCI7dmFyIGw9dihbXCJrYXRleC1odG1sXCJdLFtvLHMsbl0pO2wuc2V0QXR0cmlidXRlKFwiYXJpYS1oaWRkZW5cIixcInRydWVcIik7cmV0dXJuIGx9O3QuZXhwb3J0cz1DfSx7XCIuL1BhcnNlRXJyb3JcIjoxMCxcIi4vU3R5bGVcIjoxMyxcIi4vYnVpbGRDb21tb25cIjoxNCxcIi4vZGVsaW1pdGVyXCI6MTgsXCIuL2RvbVRyZWVcIjoxOSxcIi4vc3RyZXRjaHlcIjoyOCxcIi4vdXRpbHNcIjozMSxcImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9qc29uL3N0cmluZ2lmeVwiOjJ9XSwxNjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL2J1aWxkQ29tbW9uXCIpO3ZhciBpPWUoXCIuL2ZvbnRNZXRyaWNzXCIpO3ZhciBuPWUoXCIuL21hdGhNTFRyZWVcIik7dmFyIG89ZShcIi4vUGFyc2VFcnJvclwiKTt2YXIgcz1lKFwiLi9zeW1ib2xzXCIpO3ZhciBsPWUoXCIuL3V0aWxzXCIpO3ZhciB1PWUoXCIuL3N0cmV0Y2h5XCIpO3ZhciBoPWEubWFrZVNwYW47dmFyIHA9YS5mb250TWFwO3ZhciBjPWZ1bmN0aW9uIGUodCxyKXtpZihzW3JdW3RdJiZzW3JdW3RdLnJlcGxhY2Upe3Q9c1tyXVt0XS5yZXBsYWNlfXJldHVybiBuZXcgbi5UZXh0Tm9kZSh0KX07dmFyIHY9ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPXIuZm9udDtpZighYSl7cmV0dXJuIG51bGx9dmFyIG49dC5tb2RlO2lmKGE9PT1cIm1hdGhpdFwiKXtyZXR1cm5cIml0YWxpY1wifXZhciBvPXQudmFsdWU7aWYobC5jb250YWlucyhbXCJcXFxcaW1hdGhcIixcIlxcXFxqbWF0aFwiXSxvKSl7cmV0dXJuIG51bGx9aWYoc1tuXVtvXSYmc1tuXVtvXS5yZXBsYWNlKXtvPXNbbl1bb10ucmVwbGFjZX12YXIgdT1wW2FdLmZvbnROYW1lO2lmKGkuZ2V0Q2hhcmFjdGVyTWV0cmljcyhvLHUpKXtyZXR1cm4gcFtyLmZvbnRdLnZhcmlhbnR9cmV0dXJuIG51bGx9O3ZhciBmPXt9O3ZhciBtPXttaTpcIml0YWxpY1wiLG1uOlwibm9ybWFsXCIsbXRleHQ6XCJub3JtYWxcIn07Zi5tYXRob3JkPWZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IG4uTWF0aE5vZGUoXCJtaVwiLFtjKGUudmFsdWUsZS5tb2RlKV0pO3ZhciBhPXYoZSx0KXx8XCJpdGFsaWNcIjtpZihhIT09bVtyLnR5cGVdKXtyLnNldEF0dHJpYnV0ZShcIm1hdGh2YXJpYW50XCIsYSl9cmV0dXJuIHJ9O2YudGV4dG9yZD1mdW5jdGlvbihlLHQpe3ZhciByPWMoZS52YWx1ZSxlLm1vZGUpO3ZhciBhPXYoZSx0KXx8XCJub3JtYWxcIjt2YXIgaT12b2lkIDA7aWYoZS5tb2RlPT09XCJ0ZXh0XCIpe2k9bmV3IG4uTWF0aE5vZGUoXCJtdGV4dFwiLFtyXSl9ZWxzZSBpZigvWzAtOV0vLnRlc3QoZS52YWx1ZSkpe2k9bmV3IG4uTWF0aE5vZGUoXCJtblwiLFtyXSl9ZWxzZXtpPW5ldyBuLk1hdGhOb2RlKFwibWlcIixbcl0pfWlmKGEhPT1tW2kudHlwZV0pe2kuc2V0QXR0cmlidXRlKFwibWF0aHZhcmlhbnRcIixhKX1yZXR1cm4gaX07Zi5iaW49ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtjKGUudmFsdWUsZS5tb2RlKV0pO3JldHVybiB0fTtmLnJlbD1mdW5jdGlvbihlKXt2YXIgdD1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW2MoZS52YWx1ZSxlLm1vZGUpXSk7cmV0dXJuIHR9O2Yub3Blbj1mdW5jdGlvbihlKXt2YXIgdD1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW2MoZS52YWx1ZSxlLm1vZGUpXSk7cmV0dXJuIHR9O2YuY2xvc2U9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtjKGUudmFsdWUsZS5tb2RlKV0pO3JldHVybiB0fTtmLmlubmVyPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBuLk1hdGhOb2RlKFwibW9cIixbYyhlLnZhbHVlLGUubW9kZSldKTtyZXR1cm4gdH07Zi5wdW5jdD1mdW5jdGlvbihlKXt2YXIgdD1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW2MoZS52YWx1ZSxlLm1vZGUpXSk7dC5zZXRBdHRyaWJ1dGUoXCJzZXBhcmF0b3JcIixcInRydWVcIik7cmV0dXJuIHR9O2Yub3JkZ3JvdXA9ZnVuY3Rpb24oZSx0KXt2YXIgcj1kKGUudmFsdWUsdCk7dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtcm93XCIscik7cmV0dXJuIGF9O2YudGV4dD1mdW5jdGlvbihlLHQpe3ZhciByPWUudmFsdWUuYm9keTt2YXIgYT1bXTt2YXIgaT1udWxsO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXt2YXIgcz1nKHJbb10sdCk7aWYocy50eXBlPT09XCJtdGV4dFwiJiZpIT1udWxsKXtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShpLmNoaWxkcmVuLHMuY2hpbGRyZW4pfWVsc2V7YS5wdXNoKHMpO2lmKHMudHlwZT09PVwibXRleHRcIil7aT1zfX19aWYoYS5sZW5ndGg9PT0xKXtyZXR1cm4gYVswXX1lbHNle3JldHVybiBuZXcgbi5NYXRoTm9kZShcIm1yb3dcIixhKX19O2YuY29sb3I9ZnVuY3Rpb24oZSx0KXt2YXIgcj1kKGUudmFsdWUudmFsdWUsdCk7dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtc3R5bGVcIixyKTthLnNldEF0dHJpYnV0ZShcIm1hdGhjb2xvclwiLGUudmFsdWUuY29sb3IpO3JldHVybiBhfTtmLnhtbENsYXNzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZChlLnZhbHVlLnZhbHVlLHQpO3ZhciBhPW5ldyBuLk1hdGhOb2RlKFwibXN0eWxlXCIscik7YS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLGUudmFsdWUuY2wpO3JldHVybiBhfTtmLnN1cHN1Yj1mdW5jdGlvbihlLHQpe3ZhciByPWZhbHNlO3ZhciBhPXZvaWQgMDt2YXIgaT12b2lkIDA7aWYoZS52YWx1ZS5iYXNlKXtpZihlLnZhbHVlLmJhc2UudmFsdWUudHlwZT09PVwiaG9yaXpCcmFjZVwiKXtpPWUudmFsdWUuc3VwP3RydWU6ZmFsc2U7aWYoaT09PWUudmFsdWUuYmFzZS52YWx1ZS5pc092ZXIpe3I9dHJ1ZTthPWUudmFsdWUuYmFzZS52YWx1ZS5pc092ZXJ9fX12YXIgbz1bZyhlLnZhbHVlLmJhc2UsdCldO2lmKGUudmFsdWUuc3ViKXtvLnB1c2goZyhlLnZhbHVlLnN1Yix0KSl9aWYoZS52YWx1ZS5zdXApe28ucHVzaChnKGUudmFsdWUuc3VwLHQpKX12YXIgcz12b2lkIDA7aWYocil7cz1hP1wibW92ZXJcIjpcIm11bmRlclwifWVsc2UgaWYoIWUudmFsdWUuc3ViKXtzPVwibXN1cFwifWVsc2UgaWYoIWUudmFsdWUuc3VwKXtzPVwibXN1YlwifWVsc2V7cz1cIm1zdWJzdXBcIn12YXIgbD1uZXcgbi5NYXRoTm9kZShzLG8pO3JldHVybiBsfTtmLmdlbmZyYWM9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgbi5NYXRoTm9kZShcIm1mcmFjXCIsW2coZS52YWx1ZS5udW1lcix0KSxnKGUudmFsdWUuZGVub20sdCldKTtpZighZS52YWx1ZS5oYXNCYXJMaW5lKXtyLnNldEF0dHJpYnV0ZShcImxpbmV0aGlja25lc3NcIixcIjBweFwiKX1pZihlLnZhbHVlLmxlZnREZWxpbSE9bnVsbHx8ZS52YWx1ZS5yaWdodERlbGltIT1udWxsKXt2YXIgYT1bXTtpZihlLnZhbHVlLmxlZnREZWxpbSE9bnVsbCl7dmFyIGk9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtuZXcgbi5UZXh0Tm9kZShlLnZhbHVlLmxlZnREZWxpbSldKTtpLnNldEF0dHJpYnV0ZShcImZlbmNlXCIsXCJ0cnVlXCIpO2EucHVzaChpKX1hLnB1c2gocik7aWYoZS52YWx1ZS5yaWdodERlbGltIT1udWxsKXt2YXIgbz1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW25ldyBuLlRleHROb2RlKGUudmFsdWUucmlnaHREZWxpbSldKTtvLnNldEF0dHJpYnV0ZShcImZlbmNlXCIsXCJ0cnVlXCIpO2EucHVzaChvKX12YXIgcz1uZXcgbi5NYXRoTm9kZShcIm1yb3dcIixhKTtyZXR1cm4gc31yZXR1cm4gcn07Zi5hcnJheT1mdW5jdGlvbihlLHQpe3JldHVybiBuZXcgbi5NYXRoTm9kZShcIm10YWJsZVwiLGUudmFsdWUuYm9keS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBuLk1hdGhOb2RlKFwibXRyXCIsZS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBuLk1hdGhOb2RlKFwibXRkXCIsW2coZSx0KV0pfSkpfSkpfTtmLnNxcnQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj12b2lkIDA7aWYoZS52YWx1ZS5pbmRleCl7cj1uZXcgbi5NYXRoTm9kZShcIm1yb290XCIsW2coZS52YWx1ZS5ib2R5LHQpLGcoZS52YWx1ZS5pbmRleCx0KV0pfWVsc2V7cj1uZXcgbi5NYXRoTm9kZShcIm1zcXJ0XCIsW2coZS52YWx1ZS5ib2R5LHQpXSl9cmV0dXJuIHJ9O2YubGVmdHJpZ2h0PWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZChlLnZhbHVlLmJvZHksdCk7aWYoZS52YWx1ZS5sZWZ0IT09XCIuXCIpe3ZhciBhPW5ldyBuLk1hdGhOb2RlKFwibW9cIixbYyhlLnZhbHVlLmxlZnQsZS5tb2RlKV0pO2Euc2V0QXR0cmlidXRlKFwiZmVuY2VcIixcInRydWVcIik7ci51bnNoaWZ0KGEpfWlmKGUudmFsdWUucmlnaHQhPT1cIi5cIil7dmFyIGk9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtjKGUudmFsdWUucmlnaHQsZS5tb2RlKV0pO2kuc2V0QXR0cmlidXRlKFwiZmVuY2VcIixcInRydWVcIik7ci5wdXNoKGkpfXZhciBvPW5ldyBuLk1hdGhOb2RlKFwibXJvd1wiLHIpO3JldHVybiBvfTtmLm1pZGRsZT1mdW5jdGlvbihlLHQpe3ZhciByPW5ldyBuLk1hdGhOb2RlKFwibW9cIixbYyhlLnZhbHVlLm1pZGRsZSxlLm1vZGUpXSk7ci5zZXRBdHRyaWJ1dGUoXCJmZW5jZVwiLFwidHJ1ZVwiKTtyZXR1cm4gcn07Zi5hY2NlbnQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj12b2lkIDA7aWYoZS52YWx1ZS5pc1N0cmV0Y2h5KXtyPXUubWF0aE1Mbm9kZShlLnZhbHVlLmxhYmVsKX1lbHNle3I9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtjKGUudmFsdWUubGFiZWwsZS5tb2RlKV0pfXZhciBhPW5ldyBuLk1hdGhOb2RlKFwibW92ZXJcIixbZyhlLnZhbHVlLmJhc2UsdCkscl0pO2Euc2V0QXR0cmlidXRlKFwiYWNjZW50XCIsXCJ0cnVlXCIpO3JldHVybiBhfTtmLnNwYWNpbmc9ZnVuY3Rpb24oZSl7dmFyIHQ9dm9pZCAwO2lmKGUudmFsdWU9PT1cIlxcXFwgXCJ8fGUudmFsdWU9PT1cIlxcXFxzcGFjZVwifHxlLnZhbHVlPT09XCIgXCJ8fGUudmFsdWU9PT1cIn5cIil7dD1uZXcgbi5NYXRoTm9kZShcIm10ZXh0XCIsW25ldyBuLlRleHROb2RlKFwiXFx4YTBcIildKX1lbHNle3Q9bmV3IG4uTWF0aE5vZGUoXCJtc3BhY2VcIik7dC5zZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiLGEuc3BhY2luZ0Z1bmN0aW9uc1tlLnZhbHVlXS5zaXplKX1yZXR1cm4gdH07Zi5vcD1mdW5jdGlvbihlLHQpe3ZhciByPXZvaWQgMDtpZihlLnZhbHVlLnN5bWJvbCl7cj1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW2MoZS52YWx1ZS5ib2R5LGUubW9kZSldKX1lbHNlIGlmKGUudmFsdWUudmFsdWUpe3I9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLGQoZS52YWx1ZS52YWx1ZSx0KSl9ZWxzZXtyPW5ldyBuLk1hdGhOb2RlKFwibWlcIixbbmV3IG4uVGV4dE5vZGUoZS52YWx1ZS5ib2R5LnNsaWNlKDEpKV0pfXJldHVybiByfTtmLmN1cnNvcj1mdW5jdGlvbihlKXt2YXIgdD1uZXcgbi5NYXRoTm9kZShcIm10ZXh0XCIsW25ldyBuLlRleHROb2RlKFwifFwiKV0pO3JldHVybiB0fTtmLm1vZD1mdW5jdGlvbihlLHQpe3ZhciByPVtdO2lmKGUudmFsdWUubW9kVHlwZT09PVwicG9kXCJ8fGUudmFsdWUubW9kVHlwZT09PVwicG1vZFwiKXtyLnB1c2gobmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtjKFwiKFwiLGUubW9kZSldKSl9aWYoZS52YWx1ZS5tb2RUeXBlIT09XCJwb2RcIil7ci5wdXNoKG5ldyBuLk1hdGhOb2RlKFwibW9cIixbYyhcIm1vZFwiLGUubW9kZSldKSl9aWYoZS52YWx1ZS52YWx1ZSl7dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtc3BhY2VcIik7YS5zZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiLFwiMC4zMzMzMzNlbVwiKTtyLnB1c2goYSk7cj1yLmNvbmNhdChkKGUudmFsdWUudmFsdWUsdCkpfWlmKGUudmFsdWUubW9kVHlwZT09PVwicG9kXCJ8fGUudmFsdWUubW9kVHlwZT09PVwicG1vZFwiKXtyLnB1c2gobmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtjKFwiKVwiLGUubW9kZSldKSl9cmV0dXJuIG5ldyBuLk1hdGhOb2RlKFwibW9cIixyKX07Zi5rYXRleD1mdW5jdGlvbihlKXt2YXIgdD1uZXcgbi5NYXRoTm9kZShcIm10ZXh0XCIsW25ldyBuLlRleHROb2RlKFwiS2FUZVhcIildKTtyZXR1cm4gdH07Zi5mb250PWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS52YWx1ZS5mb250O3JldHVybiBnKGUudmFsdWUuYm9keSx0LndpdGhGb250KHIpKX07Zi5kZWxpbXNpemluZz1mdW5jdGlvbihlKXt2YXIgdD1bXTtpZihlLnZhbHVlLnZhbHVlIT09XCIuXCIpe3QucHVzaChjKGUudmFsdWUudmFsdWUsZS5tb2RlKSl9dmFyIHI9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLHQpO2lmKGUudmFsdWUubWNsYXNzPT09XCJtb3BlblwifHxlLnZhbHVlLm1jbGFzcz09PVwibWNsb3NlXCIpe3Iuc2V0QXR0cmlidXRlKFwiZmVuY2VcIixcInRydWVcIil9ZWxzZXtyLnNldEF0dHJpYnV0ZShcImZlbmNlXCIsXCJmYWxzZVwiKX1yZXR1cm4gcn07Zi5zdHlsaW5nPWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZChlLnZhbHVlLnZhbHVlLHQpO3ZhciBhPW5ldyBuLk1hdGhOb2RlKFwibXN0eWxlXCIscik7dmFyIGk9e2Rpc3BsYXk6W1wiMFwiLFwidHJ1ZVwiXSx0ZXh0OltcIjBcIixcImZhbHNlXCJdLHNjcmlwdDpbXCIxXCIsXCJmYWxzZVwiXSxzY3JpcHRzY3JpcHQ6W1wiMlwiLFwiZmFsc2VcIl19O3ZhciBvPWlbZS52YWx1ZS5zdHlsZV07YS5zZXRBdHRyaWJ1dGUoXCJzY3JpcHRsZXZlbFwiLG9bMF0pO2Euc2V0QXR0cmlidXRlKFwiZGlzcGxheXN0eWxlXCIsb1sxXSk7cmV0dXJuIGF9O2Yuc2l6aW5nPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dC5oYXZpbmdTaXplKGUudmFsdWUuc2l6ZSk7dmFyIGE9ZChlLnZhbHVlLnZhbHVlLHIpO3ZhciBpPW5ldyBuLk1hdGhOb2RlKFwibXN0eWxlXCIsYSk7aS5zZXRBdHRyaWJ1dGUoXCJtYXRoc2l6ZVwiLHIuc2l6ZU11bHRpcGxpZXIrXCJlbVwiKTtyZXR1cm4gaX07Zi5vdmVybGluZT1mdW5jdGlvbihlLHQpe3ZhciByPW5ldyBuLk1hdGhOb2RlKFwibW9cIixbbmV3IG4uVGV4dE5vZGUoXCJcXHUyMDNlXCIpXSk7ci5zZXRBdHRyaWJ1dGUoXCJzdHJldGNoeVwiLFwidHJ1ZVwiKTt2YXIgYT1uZXcgbi5NYXRoTm9kZShcIm1vdmVyXCIsW2coZS52YWx1ZS5ib2R5LHQpLHJdKTthLnNldEF0dHJpYnV0ZShcImFjY2VudFwiLFwidHJ1ZVwiKTtyZXR1cm4gYX07Zi51bmRlcmxpbmU9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW25ldyBuLlRleHROb2RlKFwiXFx1MjAzZVwiKV0pO3Iuc2V0QXR0cmlidXRlKFwic3RyZXRjaHlcIixcInRydWVcIik7dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtdW5kZXJcIixbZyhlLnZhbHVlLmJvZHksdCkscl0pO2Euc2V0QXR0cmlidXRlKFwiYWNjZW50dW5kZXJcIixcInRydWVcIik7cmV0dXJuIGF9O2YuYWNjZW50VW5kZXI9ZnVuY3Rpb24oZSx0KXt2YXIgcj11Lm1hdGhNTG5vZGUoZS52YWx1ZS5sYWJlbCk7dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtdW5kZXJcIixbZyhlLnZhbHVlLmJvZHksdCkscl0pO2Euc2V0QXR0cmlidXRlKFwiYWNjZW50dW5kZXJcIixcInRydWVcIik7cmV0dXJuIGF9O2YuZW5jbG9zZT1mdW5jdGlvbihlLHQpe3ZhciByPW5ldyBuLk1hdGhOb2RlKFwibWVuY2xvc2VcIixbZyhlLnZhbHVlLmJvZHksdCldKTt2YXIgYT1cIlwiO3N3aXRjaChlLnZhbHVlLmxhYmVsKXtjYXNlXCJcXFxcYmNhbmNlbFwiOmE9XCJkb3duZGlhZ29uYWxzdHJpa2VcIjticmVhaztjYXNlXCJcXFxcc291dFwiOmE9XCJob3Jpem9udGFsc3RyaWtlXCI7YnJlYWs7Y2FzZVwiXFxcXGZib3hcIjphPVwiYm94XCI7YnJlYWs7ZGVmYXVsdDphPVwidXBkaWFnb25hbHN0cmlrZVwifXIuc2V0QXR0cmlidXRlKFwibm90YXRpb25cIixhKTtyZXR1cm4gcn07Zi5ob3JpekJyYWNlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dS5tYXRoTUxub2RlKGUudmFsdWUubGFiZWwpO3JldHVybiBuZXcgbi5NYXRoTm9kZShlLnZhbHVlLmlzT3Zlcj9cIm1vdmVyXCI6XCJtdW5kZXJcIixbZyhlLnZhbHVlLmJhc2UsdCkscl0pfTtmLnhBcnJvdz1mdW5jdGlvbihlLHQpe3ZhciByPXUubWF0aE1Mbm9kZShlLnZhbHVlLmxhYmVsKTt2YXIgYT12b2lkIDA7dmFyIGk9dm9pZCAwO2lmKGUudmFsdWUuYm9keSl7dmFyIG89ZyhlLnZhbHVlLmJvZHksdCk7aWYoZS52YWx1ZS5iZWxvdyl7aT1nKGUudmFsdWUuYmVsb3csdCk7YT1uZXcgbi5NYXRoTm9kZShcIm11bmRlcm92ZXJcIixbcixpLG9dKX1lbHNle2E9bmV3IG4uTWF0aE5vZGUoXCJtb3ZlclwiLFtyLG9dKX19ZWxzZSBpZihlLnZhbHVlLmJlbG93KXtpPWcoZS52YWx1ZS5iZWxvdyx0KTthPW5ldyBuLk1hdGhOb2RlKFwibXVuZGVyXCIsW3IsaV0pfWVsc2V7YT1uZXcgbi5NYXRoTm9kZShcIm1vdmVyXCIsW3JdKX1yZXR1cm4gYX07Zi5ydWxlPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBuLk1hdGhOb2RlKFwibXJvd1wiKTtyZXR1cm4gdH07Zi5rZXJuPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBuLk1hdGhOb2RlKFwibXJvd1wiKTtyZXR1cm4gdH07Zi5sbGFwPWZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IG4uTWF0aE5vZGUoXCJtcGFkZGVkXCIsW2coZS52YWx1ZS5ib2R5LHQpXSk7ci5zZXRBdHRyaWJ1dGUoXCJsc3BhY2VcIixcIi0xd2lkdGhcIik7ci5zZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiLFwiMHB4XCIpO3JldHVybiByfTtmLnJsYXA9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgbi5NYXRoTm9kZShcIm1wYWRkZWRcIixbZyhlLnZhbHVlLmJvZHksdCldKTtyLnNldEF0dHJpYnV0ZShcIndpZHRoXCIsXCIwcHhcIik7cmV0dXJuIHJ9O2YucGhhbnRvbT1mdW5jdGlvbihlLHQpe3ZhciByPWQoZS52YWx1ZS52YWx1ZSx0KTtyZXR1cm4gbmV3IG4uTWF0aE5vZGUoXCJtcGhhbnRvbVwiLHIpfTtmLm1jbGFzcz1mdW5jdGlvbihlLHQpe3ZhciByPWQoZS52YWx1ZS52YWx1ZSx0KTtyZXR1cm4gbmV3IG4uTWF0aE5vZGUoXCJtc3R5bGVcIixyKX07dmFyIGQ9ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPVtdO2Zvcih2YXIgaT0wO2k8dC5sZW5ndGg7aSsrKXt2YXIgbj10W2ldO2EucHVzaChnKG4scikpfXJldHVybiBhfTt2YXIgZz1mdW5jdGlvbiBlKHQscil7aWYoIXQpe3JldHVybiBuZXcgbi5NYXRoTm9kZShcIm1yb3dcIil9aWYoZlt0LnR5cGVdKXtyZXR1cm4gZlt0LnR5cGVdKHQscil9ZWxzZXt0aHJvdyBuZXcgbyhcIkdvdCBncm91cCBvZiB1bmtub3duIHR5cGU6ICdcIit0LnR5cGUrXCInXCIpfX07dmFyIHk9ZnVuY3Rpb24gZSh0LHIsYSl7dmFyIGk9ZCh0LGEpO3ZhciBvPW5ldyBuLk1hdGhOb2RlKFwibXJvd1wiLGkpO3ZhciBzPW5ldyBuLk1hdGhOb2RlKFwiYW5ub3RhdGlvblwiLFtuZXcgbi5UZXh0Tm9kZShyKV0pO3Muc2V0QXR0cmlidXRlKFwiZW5jb2RpbmdcIixcImFwcGxpY2F0aW9uL3gtdGV4XCIpO3ZhciBsPW5ldyBuLk1hdGhOb2RlKFwic2VtYW50aWNzXCIsW28sc10pO3ZhciB1PW5ldyBuLk1hdGhOb2RlKFwibWF0aFwiLFtsXSk7cmV0dXJuIGgoW1wia2F0ZXgtbWF0aG1sXCJdLFt1XSl9O3QuZXhwb3J0cz15fSx7XCIuL1BhcnNlRXJyb3JcIjoxMCxcIi4vYnVpbGRDb21tb25cIjoxNCxcIi4vZm9udE1ldHJpY3NcIjoyMSxcIi4vbWF0aE1MVHJlZVwiOjI1LFwiLi9zdHJldGNoeVwiOjI4LFwiLi9zeW1ib2xzXCI6MjksXCIuL3V0aWxzXCI6MzF9XSwxNzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL2J1aWxkSFRNTFwiKTt2YXIgaT1lKFwiLi9idWlsZE1hdGhNTFwiKTt2YXIgbj1lKFwiLi9idWlsZENvbW1vblwiKTt2YXIgbz1lKFwiLi9PcHRpb25zXCIpO3ZhciBzPWUoXCIuL1NldHRpbmdzXCIpO3ZhciBsPWUoXCIuL1N0eWxlXCIpO3ZhciB1PW4ubWFrZVNwYW47dmFyIGg9ZnVuY3Rpb24gZSh0LHIsbil7bj1ufHxuZXcgcyh7fSk7dmFyIGg9bC5URVhUO2lmKG4uZGlzcGxheU1vZGUpe2g9bC5ESVNQTEFZfXZhciBwPW5ldyBvKHtzdHlsZTpofSk7dmFyIGM9aSh0LHIscCk7dmFyIHY9YSh0LHApO3ZhciBmPXUoW1wia2F0ZXhcIl0sW2Msdl0pO2lmKG4uZGlzcGxheU1vZGUpe3JldHVybiB1KFtcImthdGV4LWRpc3BsYXlcIl0sW2ZdKX1lbHNle3JldHVybiBmfX07dC5leHBvcnRzPWh9LHtcIi4vT3B0aW9uc1wiOjksXCIuL1NldHRpbmdzXCI6MTIsXCIuL1N0eWxlXCI6MTMsXCIuL2J1aWxkQ29tbW9uXCI6MTQsXCIuL2J1aWxkSFRNTFwiOjE1LFwiLi9idWlsZE1hdGhNTFwiOjE2fV0sMTg6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi9QYXJzZUVycm9yXCIpO3ZhciBpPWUoXCIuL1N0eWxlXCIpO3ZhciBuPWUoXCIuL2J1aWxkQ29tbW9uXCIpO3ZhciBvPWUoXCIuL2ZvbnRNZXRyaWNzXCIpO3ZhciBzPWUoXCIuL3N5bWJvbHNcIik7dmFyIGw9ZShcIi4vdXRpbHNcIik7dmFyIHU9bi5tYWtlU3Bhbjt2YXIgaD1mdW5jdGlvbiBlKHQscil7aWYocy5tYXRoW3RdJiZzLm1hdGhbdF0ucmVwbGFjZSl7cmV0dXJuIG8uZ2V0Q2hhcmFjdGVyTWV0cmljcyhzLm1hdGhbdF0ucmVwbGFjZSxyKX1lbHNle3JldHVybiBvLmdldENoYXJhY3Rlck1ldHJpY3ModCxyKX19O3ZhciBwPWZ1bmN0aW9uIGUodCxyLGEsaSl7dmFyIG49YS5oYXZpbmdCYXNlU3R5bGUocik7dmFyIG89dSgoaXx8W10pLmNvbmNhdChuLnNpemluZ0NsYXNzZXMoYSkpLFt0XSxhKTtvLmhlaWdodCo9bi5zaXplTXVsdGlwbGllci9hLnNpemVNdWx0aXBsaWVyO28uZGVwdGgqPW4uc2l6ZU11bHRpcGxpZXIvYS5zaXplTXVsdGlwbGllcjtvLm1heEZvbnRTaXplPW4uc2l6ZU11bHRpcGxpZXI7cmV0dXJuIG99O3ZhciBjPWZ1bmN0aW9uIGUodCxyLGEpe3ZhciBpPXIuaGF2aW5nQmFzZVN0eWxlKGEpO3ZhciBuPSgxLXIuc2l6ZU11bHRpcGxpZXIvaS5zaXplTXVsdGlwbGllcikqci5mb250TWV0cmljcygpLmF4aXNIZWlnaHQ7dC5jbGFzc2VzLnB1c2goXCJkZWxpbWNlbnRlclwiKTt0LnN0eWxlLnRvcD1uK1wiZW1cIjt0LmhlaWdodC09bjt0LmRlcHRoKz1ufTt2YXIgdj1mdW5jdGlvbiBlKHQscixhLGksbyxzKXt2YXIgbD1uLm1ha2VTeW1ib2wodCxcIk1haW4tUmVndWxhclwiLG8saSk7dmFyIHU9cChsLHIsaSxzKTtpZihhKXtjKHUsaSxyKX1yZXR1cm4gdX07dmFyIGY9ZnVuY3Rpb24gZSh0LHIsYSxpKXtyZXR1cm4gbi5tYWtlU3ltYm9sKHQsXCJTaXplXCIrcitcIi1SZWd1bGFyXCIsYSxpKX07dmFyIG09ZnVuY3Rpb24gZSh0LHIsYSxuLG8scyl7dmFyIGw9Zih0LHIsbyxuKTt2YXIgaD1wKHUoW1wiZGVsaW1zaXppbmdcIixcInNpemVcIityXSxbbF0sbiksaS5URVhULG4scyk7aWYoYSl7YyhoLG4saS5URVhUKX1yZXR1cm4gaH07dmFyIGQ9ZnVuY3Rpb24gZSh0LHIsYSl7dmFyIGk9dm9pZCAwO2lmKHI9PT1cIlNpemUxLVJlZ3VsYXJcIil7aT1cImRlbGltLXNpemUxXCJ9ZWxzZSBpZihyPT09XCJTaXplNC1SZWd1bGFyXCIpe2k9XCJkZWxpbS1zaXplNFwifXZhciBvPXUoW1wiZGVsaW1zaXppbmdpbm5lclwiLGldLFt1KFtdLFtuLm1ha2VTeW1ib2wodCxyLGEpXSldKTtyZXR1cm57dHlwZTpcImVsZW1cIixlbGVtOm99fTt2YXIgZz1mdW5jdGlvbiBlKHQscixhLG8scyxsKXt2YXIgYz12b2lkIDA7dmFyIHY9dm9pZCAwO3ZhciBmPXZvaWQgMDt2YXIgbT12b2lkIDA7Yz1mPW09dDt2PW51bGw7dmFyIGc9XCJTaXplMS1SZWd1bGFyXCI7aWYodD09PVwiXFxcXHVwYXJyb3dcIil7Zj1tPVwiXFx1MjNkMFwifWVsc2UgaWYodD09PVwiXFxcXFVwYXJyb3dcIil7Zj1tPVwiXFx1MjAxNlwifWVsc2UgaWYodD09PVwiXFxcXGRvd25hcnJvd1wiKXtjPWY9XCJcXHUyM2QwXCJ9ZWxzZSBpZih0PT09XCJcXFxcRG93bmFycm93XCIpe2M9Zj1cIlxcdTIwMTZcIn1lbHNlIGlmKHQ9PT1cIlxcXFx1cGRvd25hcnJvd1wiKXtjPVwiXFxcXHVwYXJyb3dcIjtmPVwiXFx1MjNkMFwiO209XCJcXFxcZG93bmFycm93XCJ9ZWxzZSBpZih0PT09XCJcXFxcVXBkb3duYXJyb3dcIil7Yz1cIlxcXFxVcGFycm93XCI7Zj1cIlxcdTIwMTZcIjttPVwiXFxcXERvd25hcnJvd1wifWVsc2UgaWYodD09PVwiW1wifHx0PT09XCJcXFxcbGJyYWNrXCIpe2M9XCJcXHUyM2ExXCI7Zj1cIlxcdTIzYTJcIjttPVwiXFx1MjNhM1wiO2c9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCJdXCJ8fHQ9PT1cIlxcXFxyYnJhY2tcIil7Yz1cIlxcdTIzYTRcIjtmPVwiXFx1MjNhNVwiO209XCJcXHUyM2E2XCI7Zz1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIlxcXFxsZmxvb3JcIil7Zj1jPVwiXFx1MjNhMlwiO209XCJcXHUyM2EzXCI7Zz1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIlxcXFxsY2VpbFwiKXtjPVwiXFx1MjNhMVwiO2Y9bT1cIlxcdTIzYTJcIjtnPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXHJmbG9vclwiKXtmPWM9XCJcXHUyM2E1XCI7bT1cIlxcdTIzYTZcIjtnPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXHJjZWlsXCIpe2M9XCJcXHUyM2E0XCI7Zj1tPVwiXFx1MjNhNVwiO2c9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCIoXCIpe2M9XCJcXHUyMzliXCI7Zj1cIlxcdTIzOWNcIjttPVwiXFx1MjM5ZFwiO2c9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCIpXCIpe2M9XCJcXHUyMzllXCI7Zj1cIlxcdTIzOWZcIjttPVwiXFx1MjNhMFwiO2c9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCJcXFxce1wifHx0PT09XCJcXFxcbGJyYWNlXCIpe2M9XCJcXHUyM2E3XCI7dj1cIlxcdTIzYThcIjttPVwiXFx1MjNhOVwiO2Y9XCJcXHUyM2FhXCI7Zz1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIlxcXFx9XCJ8fHQ9PT1cIlxcXFxyYnJhY2VcIil7Yz1cIlxcdTIzYWJcIjt2PVwiXFx1MjNhY1wiO209XCJcXHUyM2FkXCI7Zj1cIlxcdTIzYWFcIjtnPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXGxncm91cFwiKXtjPVwiXFx1MjNhN1wiO209XCJcXHUyM2E5XCI7Zj1cIlxcdTIzYWFcIjtnPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXHJncm91cFwiKXtjPVwiXFx1MjNhYlwiO209XCJcXHUyM2FkXCI7Zj1cIlxcdTIzYWFcIjtnPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXGxtb3VzdGFjaGVcIil7Yz1cIlxcdTIzYTdcIjttPVwiXFx1MjNhZFwiO2Y9XCJcXHUyM2FhXCI7Zz1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIlxcXFxybW91c3RhY2hlXCIpe2M9XCJcXHUyM2FiXCI7bT1cIlxcdTIzYTlcIjtmPVwiXFx1MjNhYVwiO2c9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCJcXFxcc3VyZFwiKXtjPVwiXFx1ZTAwMVwiO209XCJcXHUyM2I3XCI7Zj1cIlxcdWUwMDBcIjtnPVwiU2l6ZTQtUmVndWxhclwifXZhciB5PWgoYyxnKTt2YXIgeD15LmhlaWdodCt5LmRlcHRoO3ZhciBiPWgoZixnKTt2YXIgdz1iLmhlaWdodCtiLmRlcHRoO3ZhciBrPWgobSxnKTt2YXIgej1rLmhlaWdodCtrLmRlcHRoO3ZhciBNPTA7dmFyIFM9MTtpZih2IT09bnVsbCl7dmFyIEE9aCh2LGcpO009QS5oZWlnaHQrQS5kZXB0aDtTPTJ9dmFyIE49eCt6K007dmFyIFQ9TWF0aC5jZWlsKChyLU4pLyhTKncpKTt2YXIgcT1OK1QqUyp3O3ZhciBDPW8uZm9udE1ldHJpY3MoKS5heGlzSGVpZ2h0O2lmKGEpe0MqPW8uc2l6ZU11bHRpcGxpZXJ9dmFyIEU9cS8yLUM7dmFyIE89W107Ty5wdXNoKGQobSxnLHMpKTtpZih2PT09bnVsbCl7Zm9yKHZhciBSPTA7UjxUO1IrKyl7Ty5wdXNoKGQoZixnLHMpKX19ZWxzZXtmb3IodmFyIEw9MDtMPFQ7TCsrKXtPLnB1c2goZChmLGcscykpfU8ucHVzaChkKHYsZyxzKSk7Zm9yKHZhciBEPTA7RDxUO0QrKyl7Ty5wdXNoKGQoZixnLHMpKX19Ty5wdXNoKGQoYyxnLHMpKTt2YXIgUD1vLmhhdmluZ0Jhc2VTdHlsZShpLlRFWFQpO3ZhciBCPW4ubWFrZVZMaXN0KE8sXCJib3R0b21cIixFLFApO3JldHVybiBwKHUoW1wiZGVsaW1zaXppbmdcIixcIm11bHRcIl0sW0JdLFApLGkuVEVYVCxvLGwpfTt2YXIgeT1bXCIoXCIsXCIpXCIsXCJbXCIsXCJcXFxcbGJyYWNrXCIsXCJdXCIsXCJcXFxccmJyYWNrXCIsXCJcXFxce1wiLFwiXFxcXGxicmFjZVwiLFwiXFxcXH1cIixcIlxcXFxyYnJhY2VcIixcIlxcXFxsZmxvb3JcIixcIlxcXFxyZmxvb3JcIixcIlxcXFxsY2VpbFwiLFwiXFxcXHJjZWlsXCIsXCJcXFxcc3VyZFwiXTt2YXIgeD1bXCJcXFxcdXBhcnJvd1wiLFwiXFxcXGRvd25hcnJvd1wiLFwiXFxcXHVwZG93bmFycm93XCIsXCJcXFxcVXBhcnJvd1wiLFwiXFxcXERvd25hcnJvd1wiLFwiXFxcXFVwZG93bmFycm93XCIsXCJ8XCIsXCJcXFxcfFwiLFwiXFxcXHZlcnRcIixcIlxcXFxWZXJ0XCIsXCJcXFxcbHZlcnRcIixcIlxcXFxydmVydFwiLFwiXFxcXGxWZXJ0XCIsXCJcXFxcclZlcnRcIixcIlxcXFxsZ3JvdXBcIixcIlxcXFxyZ3JvdXBcIixcIlxcXFxsbW91c3RhY2hlXCIsXCJcXFxccm1vdXN0YWNoZVwiXTt2YXIgYj1bXCI8XCIsXCI+XCIsXCJcXFxcbGFuZ2xlXCIsXCJcXFxccmFuZ2xlXCIsXCIvXCIsXCJcXFxcYmFja3NsYXNoXCIsXCJcXFxcbHRcIixcIlxcXFxndFwiXTt2YXIgdz1bMCwxLjIsMS44LDIuNCwzXTt2YXIgaz1mdW5jdGlvbiBlKHQscixpLG4sbyl7aWYodD09PVwiPFwifHx0PT09XCJcXFxcbHRcIil7dD1cIlxcXFxsYW5nbGVcIn1lbHNlIGlmKHQ9PT1cIj5cInx8dD09PVwiXFxcXGd0XCIpe3Q9XCJcXFxccmFuZ2xlXCJ9aWYobC5jb250YWlucyh5LHQpfHxsLmNvbnRhaW5zKGIsdCkpe3JldHVybiBtKHQscixmYWxzZSxpLG4sbyl9ZWxzZSBpZihsLmNvbnRhaW5zKHgsdCkpe3JldHVybiBnKHQsd1tyXSxmYWxzZSxpLG4sbyl9ZWxzZXt0aHJvdyBuZXcgYShcIklsbGVnYWwgZGVsaW1pdGVyOiAnXCIrdCtcIidcIil9fTt2YXIgej1be3R5cGU6XCJzbWFsbFwiLHN0eWxlOmkuU0NSSVBUU0NSSVBUfSx7dHlwZTpcInNtYWxsXCIsc3R5bGU6aS5TQ1JJUFR9LHt0eXBlOlwic21hbGxcIixzdHlsZTppLlRFWFR9LHt0eXBlOlwibGFyZ2VcIixzaXplOjF9LHt0eXBlOlwibGFyZ2VcIixzaXplOjJ9LHt0eXBlOlwibGFyZ2VcIixzaXplOjN9LHt0eXBlOlwibGFyZ2VcIixzaXplOjR9XTt2YXIgTT1be3R5cGU6XCJzbWFsbFwiLHN0eWxlOmkuU0NSSVBUU0NSSVBUfSx7dHlwZTpcInNtYWxsXCIsc3R5bGU6aS5TQ1JJUFR9LHt0eXBlOlwic21hbGxcIixzdHlsZTppLlRFWFR9LHt0eXBlOlwic3RhY2tcIn1dO3ZhciBTPVt7dHlwZTpcInNtYWxsXCIsc3R5bGU6aS5TQ1JJUFRTQ1JJUFR9LHt0eXBlOlwic21hbGxcIixzdHlsZTppLlNDUklQVH0se3R5cGU6XCJzbWFsbFwiLHN0eWxlOmkuVEVYVH0se3R5cGU6XCJsYXJnZVwiLHNpemU6MX0se3R5cGU6XCJsYXJnZVwiLHNpemU6Mn0se3R5cGU6XCJsYXJnZVwiLHNpemU6M30se3R5cGU6XCJsYXJnZVwiLHNpemU6NH0se3R5cGU6XCJzdGFja1wifV07dmFyIEE9ZnVuY3Rpb24gZSh0KXtpZih0LnR5cGU9PT1cInNtYWxsXCIpe3JldHVyblwiTWFpbi1SZWd1bGFyXCJ9ZWxzZSBpZih0LnR5cGU9PT1cImxhcmdlXCIpe3JldHVyblwiU2l6ZVwiK3Quc2l6ZStcIi1SZWd1bGFyXCJ9ZWxzZSBpZih0LnR5cGU9PT1cInN0YWNrXCIpe3JldHVyblwiU2l6ZTQtUmVndWxhclwifX07dmFyIE49ZnVuY3Rpb24gZSh0LHIsYSxpKXt2YXIgbj1NYXRoLm1pbigyLDMtaS5zdHlsZS5zaXplKTtmb3IodmFyIG89bjtvPGEubGVuZ3RoO28rKyl7aWYoYVtvXS50eXBlPT09XCJzdGFja1wiKXticmVha312YXIgcz1oKHQsQShhW29dKSk7dmFyIGw9cy5oZWlnaHQrcy5kZXB0aDtpZihhW29dLnR5cGU9PT1cInNtYWxsXCIpe3ZhciB1PWkuaGF2aW5nQmFzZVN0eWxlKGFbb10uc3R5bGUpO2wqPXUuc2l6ZU11bHRpcGxpZXJ9aWYobD5yKXtyZXR1cm4gYVtvXX19cmV0dXJuIGFbYS5sZW5ndGgtMV19O3ZhciBUPWZ1bmN0aW9uIGUodCxyLGEsaSxuLG8pe2lmKHQ9PT1cIjxcInx8dD09PVwiXFxcXGx0XCIpe3Q9XCJcXFxcbGFuZ2xlXCJ9ZWxzZSBpZih0PT09XCI+XCJ8fHQ9PT1cIlxcXFxndFwiKXt0PVwiXFxcXHJhbmdsZVwifXZhciBzPXZvaWQgMDtpZihsLmNvbnRhaW5zKGIsdCkpe3M9en1lbHNlIGlmKGwuY29udGFpbnMoeSx0KSl7cz1TfWVsc2V7cz1NfXZhciB1PU4odCxyLHMsaSk7aWYodS50eXBlPT09XCJzbWFsbFwiKXtyZXR1cm4gdih0LHUuc3R5bGUsYSxpLG4sbyl9ZWxzZSBpZih1LnR5cGU9PT1cImxhcmdlXCIpe3JldHVybiBtKHQsdS5zaXplLGEsaSxuLG8pfWVsc2UgaWYodS50eXBlPT09XCJzdGFja1wiKXtyZXR1cm4gZyh0LHIsYSxpLG4sbyl9fTt2YXIgcT1mdW5jdGlvbiBlKHQscixhLGksbixvKXt2YXIgcz1pLmZvbnRNZXRyaWNzKCkuYXhpc0hlaWdodCppLnNpemVNdWx0aXBsaWVyO3ZhciBsPTkwMTt2YXIgdT01L2kuZm9udE1ldHJpY3MoKS5wdFBlckVtO3ZhciBoPU1hdGgubWF4KHItcyxhK3MpO3ZhciBwPU1hdGgubWF4KGgvNTAwKmwsMipoLXUpO3JldHVybiBUKHQscCx0cnVlLGksbixvKX07dC5leHBvcnRzPXtzaXplZERlbGltOmssY3VzdG9tU2l6ZWREZWxpbTpULGxlZnRSaWdodERlbGltOnF9fSx7XCIuL1BhcnNlRXJyb3JcIjoxMCxcIi4vU3R5bGVcIjoxMyxcIi4vYnVpbGRDb21tb25cIjoxNCxcIi4vZm9udE1ldHJpY3NcIjoyMSxcIi4vc3ltYm9sc1wiOjI5LFwiLi91dGlsc1wiOjMxfV0sMTk6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi91bmljb2RlUmVnZXhlc1wiKTt2YXIgaT1lKFwiLi91dGlsc1wiKTt2YXIgbj1mdW5jdGlvbiBlKHQpe3Q9dC5zbGljZSgpO2Zvcih2YXIgcj10Lmxlbmd0aC0xO3I+PTA7ci0tKXtpZighdFtyXSl7dC5zcGxpY2UociwxKX19cmV0dXJuIHQuam9pbihcIiBcIil9O2Z1bmN0aW9uIG8oZSx0LHIpe3RoaXMuY2xhc3Nlcz1lfHxbXTt0aGlzLmNoaWxkcmVuPXR8fFtdO3RoaXMuaGVpZ2h0PTA7dGhpcy5kZXB0aD0wO3RoaXMubWF4Rm9udFNpemU9MDt0aGlzLnN0eWxlPXt9O3RoaXMuYXR0cmlidXRlcz17fTtpZihyKXtpZihyLnN0eWxlLmlzVGlnaHQoKSl7dGhpcy5jbGFzc2VzLnB1c2goXCJtdGlnaHRcIil9aWYoci5nZXRDb2xvcigpKXt0aGlzLnN0eWxlLmNvbG9yPXIuZ2V0Q29sb3IoKX19fW8ucHJvdG90eXBlLnNldEF0dHJpYnV0ZT1mdW5jdGlvbihlLHQpe3RoaXMuYXR0cmlidXRlc1tlXT10fTtvLnByb3RvdHlwZS50cnlDb21iaW5lPWZ1bmN0aW9uKGUpe3JldHVybiBmYWxzZX07by5wcm90b3R5cGUudG9Ob2RlPWZ1bmN0aW9uKCl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7ZS5jbGFzc05hbWU9bih0aGlzLmNsYXNzZXMpO2Zvcih2YXIgdCBpbiB0aGlzLnN0eWxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcy5zdHlsZSx0KSl7ZS5zdHlsZVt0XT10aGlzLnN0eWxlW3RdfX1mb3IodmFyIHIgaW4gdGhpcy5hdHRyaWJ1dGVzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcy5hdHRyaWJ1dGVzLHIpKXtlLnNldEF0dHJpYnV0ZShyLHRoaXMuYXR0cmlidXRlc1tyXSl9fWZvcih2YXIgYT0wO2E8dGhpcy5jaGlsZHJlbi5sZW5ndGg7YSsrKXtlLmFwcGVuZENoaWxkKHRoaXMuY2hpbGRyZW5bYV0udG9Ob2RlKCkpfXJldHVybiBlfTtvLnByb3RvdHlwZS50b01hcmt1cD1mdW5jdGlvbigpe3ZhciBlPVwiPHNwYW5cIjtpZih0aGlzLmNsYXNzZXMubGVuZ3RoKXtlKz0nIGNsYXNzPVwiJztlKz1pLmVzY2FwZShuKHRoaXMuY2xhc3NlcykpO2UrPSdcIid9dmFyIHQ9XCJcIjtmb3IodmFyIHIgaW4gdGhpcy5zdHlsZSl7aWYodGhpcy5zdHlsZS5oYXNPd25Qcm9wZXJ0eShyKSl7dCs9aS5oeXBoZW5hdGUocikrXCI6XCIrdGhpcy5zdHlsZVtyXStcIjtcIn19aWYodCl7ZSs9JyBzdHlsZT1cIicraS5lc2NhcGUodCkrJ1wiJ31mb3IodmFyIGEgaW4gdGhpcy5hdHRyaWJ1dGVzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcy5hdHRyaWJ1dGVzLGEpKXtlKz1cIiBcIithKyc9XCInO2UrPWkuZXNjYXBlKHRoaXMuYXR0cmlidXRlc1thXSk7ZSs9J1wiJ319ZSs9XCI+XCI7Zm9yKHZhciBvPTA7bzx0aGlzLmNoaWxkcmVuLmxlbmd0aDtvKyspe2UrPXRoaXMuY2hpbGRyZW5bb10udG9NYXJrdXAoKTtcclxufWUrPVwiPC9zcGFuPlwiO3JldHVybiBlfTtmdW5jdGlvbiBzKGUsdCl7dGhpcy5jaGlsZHJlbj1lfHxbXTt0aGlzLmhlaWdodD0wO3RoaXMuZGVwdGg9MDt0aGlzLm1heEZvbnRTaXplPTA7aWYodCl7Zm9yKHZhciByPTA7cjx0aGlzLmNoaWxkcmVuLmxlbmd0aDtyKyspe2Zvcih2YXIgYT0wO2E8dC5sZW5ndGg7YSsrKXt0aGlzLmNoaWxkcmVuW3JdLmNsYXNzZXMucHVzaCh0W2FdKX19fXRoaXMuY2xhc3Nlcz10fHxbXX1zLnByb3RvdHlwZS50b05vZGU9ZnVuY3Rpb24oKXt2YXIgZT1kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7Zm9yKHZhciB0PTA7dDx0aGlzLmNoaWxkcmVuLmxlbmd0aDt0Kyspe2UuYXBwZW5kQ2hpbGQodGhpcy5jaGlsZHJlblt0XS50b05vZGUoKSl9cmV0dXJuIGV9O3MucHJvdG90eXBlLnRvTWFya3VwPWZ1bmN0aW9uKCl7dmFyIGU9XCJcIjtmb3IodmFyIHQ9MDt0PHRoaXMuY2hpbGRyZW4ubGVuZ3RoO3QrKyl7ZSs9dGhpcy5jaGlsZHJlblt0XS50b01hcmt1cCgpfXJldHVybiBlfTt2YXIgbD17XCJcXHhlZVwiOlwiXFx1MDEzMVxcdTAzMDJcIixcIlxceGVmXCI6XCJcXHUwMTMxXFx1MDMwOFwiLFwiXFx4ZWRcIjpcIlxcdTAxMzFcXHUwMzAxXCIsXCJcXHhlY1wiOlwiXFx1MDEzMVxcdTAzMDBcIn07ZnVuY3Rpb24gdShlLHQscixpLG4sbyxzKXt0aGlzLnZhbHVlPWV8fFwiXCI7dGhpcy5oZWlnaHQ9dHx8MDt0aGlzLmRlcHRoPXJ8fDA7dGhpcy5pdGFsaWM9aXx8MDt0aGlzLnNrZXc9bnx8MDt0aGlzLmNsYXNzZXM9b3x8W107dGhpcy5zdHlsZT1zfHx7fTt0aGlzLm1heEZvbnRTaXplPTA7aWYoYS5jamtSZWdleC50ZXN0KGUpKXtpZihhLmhhbmd1bFJlZ2V4LnRlc3QoZSkpe3RoaXMuY2xhc3Nlcy5wdXNoKFwiaGFuZ3VsX2ZhbGxiYWNrXCIpfWVsc2V7dGhpcy5jbGFzc2VzLnB1c2goXCJjamtfZmFsbGJhY2tcIil9fWlmKC9bXFx4ZWVcXHhlZlxceGVkXFx4ZWNdLy50ZXN0KHRoaXMudmFsdWUpKXt0aGlzLnZhbHVlPWxbdGhpcy52YWx1ZV19fXUucHJvdG90eXBlLnRyeUNvbWJpbmU9ZnVuY3Rpb24oZSl7aWYoIWV8fCEoZSBpbnN0YW5jZW9mIHUpfHx0aGlzLml0YWxpYz4wfHxuKHRoaXMuY2xhc3NlcykhPT1uKGUuY2xhc3Nlcyl8fHRoaXMuc2tldyE9PWUuc2tld3x8dGhpcy5tYXhGb250U2l6ZSE9PWUubWF4Rm9udFNpemUpe3JldHVybiBmYWxzZX1mb3IodmFyIHQgaW4gdGhpcy5zdHlsZSl7aWYodGhpcy5zdHlsZS5oYXNPd25Qcm9wZXJ0eSh0KSYmdGhpcy5zdHlsZVt0XSE9PWUuc3R5bGVbdF0pe3JldHVybiBmYWxzZX19Zm9yKHZhciByIGluIGUuc3R5bGUpe2lmKGUuc3R5bGUuaGFzT3duUHJvcGVydHkocikmJnRoaXMuc3R5bGVbcl0hPT1lLnN0eWxlW3JdKXtyZXR1cm4gZmFsc2V9fXRoaXMudmFsdWUrPWUudmFsdWU7dGhpcy5oZWlnaHQ9TWF0aC5tYXgodGhpcy5oZWlnaHQsZS5oZWlnaHQpO3RoaXMuZGVwdGg9TWF0aC5tYXgodGhpcy5kZXB0aCxlLmRlcHRoKTt0aGlzLml0YWxpYz1lLml0YWxpYztyZXR1cm4gdHJ1ZX07dS5wcm90b3R5cGUudG9Ob2RlPWZ1bmN0aW9uKCl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodGhpcy52YWx1ZSk7dmFyIHQ9bnVsbDtpZih0aGlzLml0YWxpYz4wKXt0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO3Quc3R5bGUubWFyZ2luUmlnaHQ9dGhpcy5pdGFsaWMrXCJlbVwifWlmKHRoaXMuY2xhc3Nlcy5sZW5ndGg+MCl7dD10fHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTt0LmNsYXNzTmFtZT1uKHRoaXMuY2xhc3Nlcyl9Zm9yKHZhciByIGluIHRoaXMuc3R5bGUpe2lmKHRoaXMuc3R5bGUuaGFzT3duUHJvcGVydHkocikpe3Q9dHx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7dC5zdHlsZVtyXT10aGlzLnN0eWxlW3JdfX1pZih0KXt0LmFwcGVuZENoaWxkKGUpO3JldHVybiB0fWVsc2V7cmV0dXJuIGV9fTt1LnByb3RvdHlwZS50b01hcmt1cD1mdW5jdGlvbigpe3ZhciBlPWZhbHNlO3ZhciB0PVwiPHNwYW5cIjtpZih0aGlzLmNsYXNzZXMubGVuZ3RoKXtlPXRydWU7dCs9JyBjbGFzcz1cIic7dCs9aS5lc2NhcGUobih0aGlzLmNsYXNzZXMpKTt0Kz0nXCInfXZhciByPVwiXCI7aWYodGhpcy5pdGFsaWM+MCl7cis9XCJtYXJnaW4tcmlnaHQ6XCIrdGhpcy5pdGFsaWMrXCJlbTtcIn1mb3IodmFyIGEgaW4gdGhpcy5zdHlsZSl7aWYodGhpcy5zdHlsZS5oYXNPd25Qcm9wZXJ0eShhKSl7cis9aS5oeXBoZW5hdGUoYSkrXCI6XCIrdGhpcy5zdHlsZVthXStcIjtcIn19aWYocil7ZT10cnVlO3QrPScgc3R5bGU9XCInK2kuZXNjYXBlKHIpKydcIid9dmFyIG89aS5lc2NhcGUodGhpcy52YWx1ZSk7aWYoZSl7dCs9XCI+XCI7dCs9bzt0Kz1cIjwvc3Bhbj5cIjtyZXR1cm4gdH1lbHNle3JldHVybiBvfX07dC5leHBvcnRzPXtzcGFuOm8sZG9jdW1lbnRGcmFnbWVudDpzLHN5bWJvbE5vZGU6dX19LHtcIi4vdW5pY29kZVJlZ2V4ZXNcIjozMCxcIi4vdXRpbHNcIjozMX1dLDIwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4vcGFyc2VEYXRhXCIpO3ZhciBpPWUoXCIuL1BhcnNlRXJyb3JcIik7dmFyIG49YS5QYXJzZU5vZGU7ZnVuY3Rpb24gbyhlLHQscil7dmFyIGE9W107dmFyIG89W2FdO3ZhciBzPVtdO3doaWxlKHRydWUpe3ZhciBsPWUucGFyc2VFeHByZXNzaW9uKGZhbHNlLG51bGwpO2w9bmV3IG4oXCJvcmRncm91cFwiLGwsZS5tb2RlKTtpZihyKXtsPW5ldyBuKFwic3R5bGluZ1wiLHtzdHlsZTpyLHZhbHVlOltsXX0sZS5tb2RlKX1hLnB1c2gobCk7dmFyIHU9ZS5uZXh0VG9rZW4udGV4dDtpZih1PT09XCImXCIpe2UuY29uc3VtZSgpfWVsc2UgaWYodT09PVwiXFxcXGVuZFwiKXticmVha31lbHNlIGlmKHU9PT1cIlxcXFxcXFxcXCJ8fHU9PT1cIlxcXFxjclwiKXt2YXIgaD1lLnBhcnNlRnVuY3Rpb24oKTtzLnB1c2goaC52YWx1ZS5zaXplKTthPVtdO28ucHVzaChhKX1lbHNle3Rocm93IG5ldyBpKFwiRXhwZWN0ZWQgJiBvciBcXFxcXFxcXCBvciBcXFxcZW5kXCIsZS5uZXh0VG9rZW4pfX10LmJvZHk9bzt0LnJvd0dhcHM9cztyZXR1cm4gbmV3IG4odC50eXBlLHQsZS5tb2RlKX1mdW5jdGlvbiBzKGUscixhKXtpZih0eXBlb2YgZT09PVwic3RyaW5nXCIpe2U9W2VdfWlmKHR5cGVvZiByPT09XCJudW1iZXJcIil7cj17bnVtQXJnczpyfX12YXIgaT17bnVtQXJnczpyLm51bUFyZ3N8fDAsYXJnVHlwZXM6ci5hcmdUeXBlcyxncmVlZGluZXNzOjEsYWxsb3dlZEluVGV4dDohIXIuYWxsb3dlZEluVGV4dCxudW1PcHRpb25hbEFyZ3M6ci5udW1PcHRpb25hbEFyZ3N8fDAsaGFuZGxlcjphfTtmb3IodmFyIG49MDtuPGUubGVuZ3RoOysrbil7dC5leHBvcnRzW2Vbbl1dPWl9fWZ1bmN0aW9uIGwoZSl7aWYoZS5zdWJzdHIoMCwxKT09PVwiZFwiKXtyZXR1cm5cImRpc3BsYXlcIn1lbHNle3JldHVyblwidGV4dFwifX1zKFtcImFycmF5XCIsXCJkYXJyYXlcIl0se251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3I9ci52YWx1ZS5tYXA/ci52YWx1ZTpbcl07dmFyIGE9ci5tYXAoZnVuY3Rpb24oZSl7dmFyIHQ9ZS52YWx1ZTtpZihcImxjclwiLmluZGV4T2YodCkhPT0tMSl7cmV0dXJue3R5cGU6XCJhbGlnblwiLGFsaWduOnR9fWVsc2UgaWYodD09PVwifFwiKXtyZXR1cm57dHlwZTpcInNlcGFyYXRvclwiLHNlcGFyYXRvcjpcInxcIn19dGhyb3cgbmV3IGkoXCJVbmtub3duIGNvbHVtbiBhbGlnbm1lbnQ6IFwiK2UudmFsdWUsZSl9KTt2YXIgbj17dHlwZTpcImFycmF5XCIsY29sczphLGhza2lwQmVmb3JlQW5kQWZ0ZXI6dHJ1ZX07bj1vKGUucGFyc2VyLG4sbChlLmVudk5hbWUpKTtyZXR1cm4gbn0pO3MoW1wibWF0cml4XCIsXCJwbWF0cml4XCIsXCJibWF0cml4XCIsXCJCbWF0cml4XCIsXCJ2bWF0cml4XCIsXCJWbWF0cml4XCJdLHt9LGZ1bmN0aW9uKGUpe3ZhciB0PXttYXRyaXg6bnVsbCxwbWF0cml4OltcIihcIixcIilcIl0sYm1hdHJpeDpbXCJbXCIsXCJdXCJdLEJtYXRyaXg6W1wiXFxcXHtcIixcIlxcXFx9XCJdLHZtYXRyaXg6W1wifFwiLFwifFwiXSxWbWF0cml4OltcIlxcXFxWZXJ0XCIsXCJcXFxcVmVydFwiXX1bZS5lbnZOYW1lXTt2YXIgcj17dHlwZTpcImFycmF5XCIsaHNraXBCZWZvcmVBbmRBZnRlcjpmYWxzZX07cj1vKGUucGFyc2VyLHIsbChlLmVudk5hbWUpKTtpZih0KXtyPW5ldyBuKFwibGVmdHJpZ2h0XCIse2JvZHk6W3JdLGxlZnQ6dFswXSxyaWdodDp0WzFdfSxlLm1vZGUpfXJldHVybiByfSk7cyhbXCJjYXNlc1wiLFwiZGNhc2VzXCJdLHt9LGZ1bmN0aW9uKGUpe3ZhciB0PXt0eXBlOlwiYXJyYXlcIixhcnJheXN0cmV0Y2g6MS4yLGNvbHM6W3t0eXBlOlwiYWxpZ25cIixhbGlnbjpcImxcIixwcmVnYXA6MCxwb3N0Z2FwOjF9LHt0eXBlOlwiYWxpZ25cIixhbGlnbjpcImxcIixwcmVnYXA6MCxwb3N0Z2FwOjB9XX07dD1vKGUucGFyc2VyLHQsbChlLmVudk5hbWUpKTt0PW5ldyBuKFwibGVmdHJpZ2h0XCIse2JvZHk6W3RdLGxlZnQ6XCJcXFxce1wiLHJpZ2h0OlwiLlwifSxlLm1vZGUpO3JldHVybiB0fSk7cyhcImFsaWduZWRcIix7fSxmdW5jdGlvbihlKXt2YXIgdD17dHlwZTpcImFycmF5XCIsY29sczpbXSxhZGRKb3Q6dHJ1ZX07dD1vKGUucGFyc2VyLHQsXCJkaXNwbGF5XCIpO3ZhciByPW5ldyBuKFwib3JkZ3JvdXBcIixbXSxlLm1vZGUpO3ZhciBhPTA7dC52YWx1ZS5ib2R5LmZvckVhY2goZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxlLmxlbmd0aDt0Kz0yKXt2YXIgaT1lW3RdLnZhbHVlLnZhbHVlWzBdO2kudmFsdWUudW5zaGlmdChyKX1pZihhPGUubGVuZ3RoKXthPWUubGVuZ3RofX0pO2Zvcih2YXIgaT0wO2k8YTsrK2kpe3ZhciBzPVwiclwiO3ZhciBsPTA7aWYoaSUyPT09MSl7cz1cImxcIn1lbHNlIGlmKGk+MCl7bD0yfXQudmFsdWUuY29sc1tpXT17dHlwZTpcImFsaWduXCIsYWxpZ246cyxwcmVnYXA6bCxwb3N0Z2FwOjB9fXJldHVybiB0fSk7cyhcImdhdGhlcmVkXCIse30sZnVuY3Rpb24oZSl7dmFyIHQ9e3R5cGU6XCJhcnJheVwiLGNvbHM6W3t0eXBlOlwiYWxpZ25cIixhbGlnbjpcImNcIn1dLGFkZEpvdDp0cnVlfTt0PW8oZS5wYXJzZXIsdCxcImRpc3BsYXlcIik7cmV0dXJuIHR9KX0se1wiLi9QYXJzZUVycm9yXCI6MTAsXCIuL3BhcnNlRGF0YVwiOjI2fV0sMjE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi91bmljb2RlUmVnZXhlc1wiKS5jamtSZWdleDt2YXIgaT17c2xhbnQ6Wy4yNSwuMjUsLjI1XSxzcGFjZTpbMCwwLDBdLHN0cmV0Y2g6WzAsMCwwXSxzaHJpbms6WzAsMCwwXSx4SGVpZ2h0OlsuNDMxLC40MzEsLjQzMV0scXVhZDpbMSwxLjE3MSwxLjQ3Ml0sZXh0cmFTcGFjZTpbMCwwLDBdLG51bTE6Wy42NzcsLjczMiwuOTI1XSxudW0yOlsuMzk0LC4zODQsLjM4N10sbnVtMzpbLjQ0NCwuNDcxLC41MDRdLGRlbm9tMTpbLjY4NiwuNzUyLDEuMDI1XSxkZW5vbTI6Wy4zNDUsLjM0NCwuNTMyXSxzdXAxOlsuNDEzLC41MDMsLjUwNF0sc3VwMjpbLjM2MywuNDMxLC40MDRdLHN1cDM6Wy4yODksLjI4NiwuMjk0XSxzdWIxOlsuMTUsLjE0MywuMl0sc3ViMjpbLjI0NywuMjg2LC40XSxzdXBEcm9wOlsuMzg2LC4zNTMsLjQ5NF0sc3ViRHJvcDpbLjA1LC4wNzEsLjFdLGRlbGltMTpbMi4zOSwxLjcsMS45OF0sZGVsaW0yOlsxLjAxLDEuMTU3LDEuNDJdLGF4aXNIZWlnaHQ6Wy4yNSwuMjUsLjI1XSxkZWZhdWx0UnVsZVRoaWNrbmVzczpbLjA0LC4wNCwuMDRdLGJpZ09wU3BhY2luZzE6Wy4xMTEsLjExMSwuMTExXSxiaWdPcFNwYWNpbmcyOlsuMTY2LC4xNjYsLjE2Nl0sYmlnT3BTcGFjaW5nMzpbLjIsLjIsLjJdLGJpZ09wU3BhY2luZzQ6Wy42LC42LC42XSxiaWdPcFNwYWNpbmc1OlsuMSwuMSwuMV0scHRQZXJFbTpbMTAsMTAsMTBdLGRvdWJsZVJ1bGVTZXA6Wy4yLC4yLC4yXX07dmFyIG49ZShcIi4vZm9udE1ldHJpY3NEYXRhXCIpO3ZhciBvPXtcIlxceGMwXCI6XCJBXCIsXCJcXHhjMVwiOlwiQVwiLFwiXFx4YzJcIjpcIkFcIixcIlxceGMzXCI6XCJBXCIsXCJcXHhjNFwiOlwiQVwiLFwiXFx4YzVcIjpcIkFcIixcIlxceGM2XCI6XCJBXCIsXCJcXHhjN1wiOlwiQ1wiLFwiXFx4YzhcIjpcIkVcIixcIlxceGM5XCI6XCJFXCIsXCJcXHhjYVwiOlwiRVwiLFwiXFx4Y2JcIjpcIkVcIixcIlxceGNjXCI6XCJJXCIsXCJcXHhjZFwiOlwiSVwiLFwiXFx4Y2VcIjpcIklcIixcIlxceGNmXCI6XCJJXCIsXCJcXHhkMFwiOlwiRFwiLFwiXFx4ZDFcIjpcIk5cIixcIlxceGQyXCI6XCJPXCIsXCJcXHhkM1wiOlwiT1wiLFwiXFx4ZDRcIjpcIk9cIixcIlxceGQ1XCI6XCJPXCIsXCJcXHhkNlwiOlwiT1wiLFwiXFx4ZDhcIjpcIk9cIixcIlxceGQ5XCI6XCJVXCIsXCJcXHhkYVwiOlwiVVwiLFwiXFx4ZGJcIjpcIlVcIixcIlxceGRjXCI6XCJVXCIsXCJcXHhkZFwiOlwiWVwiLFwiXFx4ZGVcIjpcIm9cIixcIlxceGRmXCI6XCJCXCIsXCJcXHhlMFwiOlwiYVwiLFwiXFx4ZTFcIjpcImFcIixcIlxceGUyXCI6XCJhXCIsXCJcXHhlM1wiOlwiYVwiLFwiXFx4ZTRcIjpcImFcIixcIlxceGU1XCI6XCJhXCIsXCJcXHhlNlwiOlwiYVwiLFwiXFx4ZTdcIjpcImNcIixcIlxceGU4XCI6XCJlXCIsXCJcXHhlOVwiOlwiZVwiLFwiXFx4ZWFcIjpcImVcIixcIlxceGViXCI6XCJlXCIsXCJcXHhlY1wiOlwiaVwiLFwiXFx4ZWRcIjpcImlcIixcIlxceGVlXCI6XCJpXCIsXCJcXHhlZlwiOlwiaVwiLFwiXFx4ZjBcIjpcImRcIixcIlxceGYxXCI6XCJuXCIsXCJcXHhmMlwiOlwib1wiLFwiXFx4ZjNcIjpcIm9cIixcIlxceGY0XCI6XCJvXCIsXCJcXHhmNVwiOlwib1wiLFwiXFx4ZjZcIjpcIm9cIixcIlxceGY4XCI6XCJvXCIsXCJcXHhmOVwiOlwidVwiLFwiXFx4ZmFcIjpcInVcIixcIlxceGZiXCI6XCJ1XCIsXCJcXHhmY1wiOlwidVwiLFwiXFx4ZmRcIjpcInlcIixcIlxceGZlXCI6XCJvXCIsXCJcXHhmZlwiOlwieVwiLFwiXFx1MDQxMFwiOlwiQVwiLFwiXFx1MDQxMVwiOlwiQlwiLFwiXFx1MDQxMlwiOlwiQlwiLFwiXFx1MDQxM1wiOlwiRlwiLFwiXFx1MDQxNFwiOlwiQVwiLFwiXFx1MDQxNVwiOlwiRVwiLFwiXFx1MDQxNlwiOlwiS1wiLFwiXFx1MDQxN1wiOlwiM1wiLFwiXFx1MDQxOFwiOlwiTlwiLFwiXFx1MDQxOVwiOlwiTlwiLFwiXFx1MDQxYVwiOlwiS1wiLFwiXFx1MDQxYlwiOlwiTlwiLFwiXFx1MDQxY1wiOlwiTVwiLFwiXFx1MDQxZFwiOlwiSFwiLFwiXFx1MDQxZVwiOlwiT1wiLFwiXFx1MDQxZlwiOlwiTlwiLFwiXFx1MDQyMFwiOlwiUFwiLFwiXFx1MDQyMVwiOlwiQ1wiLFwiXFx1MDQyMlwiOlwiVFwiLFwiXFx1MDQyM1wiOlwieVwiLFwiXFx1MDQyNFwiOlwiT1wiLFwiXFx1MDQyNVwiOlwiWFwiLFwiXFx1MDQyNlwiOlwiVVwiLFwiXFx1MDQyN1wiOlwiaFwiLFwiXFx1MDQyOFwiOlwiV1wiLFwiXFx1MDQyOVwiOlwiV1wiLFwiXFx1MDQyYVwiOlwiQlwiLFwiXFx1MDQyYlwiOlwiWFwiLFwiXFx1MDQyY1wiOlwiQlwiLFwiXFx1MDQyZFwiOlwiM1wiLFwiXFx1MDQyZVwiOlwiWFwiLFwiXFx1MDQyZlwiOlwiUlwiLFwiXFx1MDQzMFwiOlwiYVwiLFwiXFx1MDQzMVwiOlwiYlwiLFwiXFx1MDQzMlwiOlwiYVwiLFwiXFx1MDQzM1wiOlwiclwiLFwiXFx1MDQzNFwiOlwieVwiLFwiXFx1MDQzNVwiOlwiZVwiLFwiXFx1MDQzNlwiOlwibVwiLFwiXFx1MDQzN1wiOlwiZVwiLFwiXFx1MDQzOFwiOlwiblwiLFwiXFx1MDQzOVwiOlwiblwiLFwiXFx1MDQzYVwiOlwiblwiLFwiXFx1MDQzYlwiOlwiblwiLFwiXFx1MDQzY1wiOlwibVwiLFwiXFx1MDQzZFwiOlwiblwiLFwiXFx1MDQzZVwiOlwib1wiLFwiXFx1MDQzZlwiOlwiblwiLFwiXFx1MDQ0MFwiOlwicFwiLFwiXFx1MDQ0MVwiOlwiY1wiLFwiXFx1MDQ0MlwiOlwib1wiLFwiXFx1MDQ0M1wiOlwieVwiLFwiXFx1MDQ0NFwiOlwiYlwiLFwiXFx1MDQ0NVwiOlwieFwiLFwiXFx1MDQ0NlwiOlwiblwiLFwiXFx1MDQ0N1wiOlwiblwiLFwiXFx1MDQ0OFwiOlwid1wiLFwiXFx1MDQ0OVwiOlwid1wiLFwiXFx1MDQ0YVwiOlwiYVwiLFwiXFx1MDQ0YlwiOlwibVwiLFwiXFx1MDQ0Y1wiOlwiYVwiLFwiXFx1MDQ0ZFwiOlwiZVwiLFwiXFx1MDQ0ZVwiOlwibVwiLFwiXFx1MDQ0ZlwiOlwiclwifTt2YXIgcz1mdW5jdGlvbiBlKHQscil7dmFyIGk9dC5jaGFyQ29kZUF0KDApO2lmKHRbMF1pbiBvKXtpPW9bdFswXV0uY2hhckNvZGVBdCgwKX1lbHNlIGlmKGEudGVzdCh0WzBdKSl7aT1cIk1cIi5jaGFyQ29kZUF0KDApfXZhciBzPW5bcl1baV07aWYocyl7cmV0dXJue2RlcHRoOnNbMF0saGVpZ2h0OnNbMV0saXRhbGljOnNbMl0sc2tldzpzWzNdLHdpZHRoOnNbNF19fX07dmFyIGw9e307dmFyIHU9ZnVuY3Rpb24gZSh0KXt2YXIgcj12b2lkIDA7aWYodD49NSl7cj0wfWVsc2UgaWYodD49Myl7cj0xfWVsc2V7cj0yfWlmKCFsW3JdKXt2YXIgYT1sW3JdPXt9O2Zvcih2YXIgbiBpbiBpKXtpZihpLmhhc093blByb3BlcnR5KG4pKXthW25dPWlbbl1bcl19fWEuZW1QZXJFeD1hLnhIZWlnaHQvYS5xdWFkfXJldHVybiBsW3JdfTt0LmV4cG9ydHM9e2dldEZvbnRNZXRyaWNzOnUsZ2V0Q2hhcmFjdGVyTWV0cmljczpzfX0se1wiLi9mb250TWV0cmljc0RhdGFcIjoyMixcIi4vdW5pY29kZVJlZ2V4ZXNcIjozMH1dLDIyOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dC5leHBvcnRzPXtcIkFNUy1SZWd1bGFyXCI6ezY1OlswLC42ODg4OSwwLDBdLDY2OlswLC42ODg4OSwwLDBdLDY3OlswLC42ODg4OSwwLDBdLDY4OlswLC42ODg4OSwwLDBdLDY5OlswLC42ODg4OSwwLDBdLDcwOlswLC42ODg4OSwwLDBdLDcxOlswLC42ODg4OSwwLDBdLDcyOlswLC42ODg4OSwwLDBdLDczOlswLC42ODg4OSwwLDBdLDc0OlsuMTY2NjcsLjY4ODg5LDAsMF0sNzU6WzAsLjY4ODg5LDAsMF0sNzY6WzAsLjY4ODg5LDAsMF0sNzc6WzAsLjY4ODg5LDAsMF0sNzg6WzAsLjY4ODg5LDAsMF0sNzk6Wy4xNjY2NywuNjg4ODksMCwwXSw4MDpbMCwuNjg4ODksMCwwXSw4MTpbLjE2NjY3LC42ODg4OSwwLDBdLDgyOlswLC42ODg4OSwwLDBdLDgzOlswLC42ODg4OSwwLDBdLDg0OlswLC42ODg4OSwwLDBdLDg1OlswLC42ODg4OSwwLDBdLDg2OlswLC42ODg4OSwwLDBdLDg3OlswLC42ODg4OSwwLDBdLDg4OlswLC42ODg4OSwwLDBdLDg5OlswLC42ODg4OSwwLDBdLDkwOlswLC42ODg4OSwwLDBdLDEwNzpbMCwuNjg4ODksMCwwXSwxNjU6WzAsLjY3NSwuMDI1LDBdLDE3NDpbLjE1NTU5LC42OTIyNCwwLDBdLDI0MDpbMCwuNjg4ODksMCwwXSwyOTU6WzAsLjY4ODg5LDAsMF0sNzEwOlswLC44MjUsMCwwXSw3MzI6WzAsLjksMCwwXSw3NzA6WzAsLjgyNSwwLDBdLDc3MTpbMCwuOSwwLDBdLDk4OTpbLjA4MTY3LC41ODE2NywwLDBdLDEwMDg6WzAsLjQzMDU2LC4wNDAyOCwwXSw4MjQ1OlswLC41NDk4NiwwLDBdLDg0NjM6WzAsLjY4ODg5LDAsMF0sODQ4NzpbMCwuNjg4ODksMCwwXSw4NDk4OlswLC42ODg4OSwwLDBdLDg1MDI6WzAsLjY4ODg5LDAsMF0sODUwMzpbMCwuNjg4ODksMCwwXSw4NTA0OlswLC42ODg4OSwwLDBdLDg1MTM6WzAsLjY4ODg5LDAsMF0sODU5MjpbLS4wMzU5OCwuNDY0MDIsMCwwXSw4NTk0OlstLjAzNTk4LC40NjQwMiwwLDBdLDg2MDI6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODYwMzpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjA2OlsuMDEzNTQsLjUyMjM5LDAsMF0sODYwODpbLjAxMzU0LC41MjIzOSwwLDBdLDg2MTA6Wy4wMTM1NCwuNTIyMzksMCwwXSw4NjExOlsuMDEzNTQsLjUyMjM5LDAsMF0sODYxOTpbMCwuNTQ5ODYsMCwwXSw4NjIwOlswLC41NDk4NiwwLDBdLDg2MjE6Wy0uMTMzMTMsLjM3Nzg4LDAsMF0sODYyMjpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjI0OlswLC42OTIyNCwwLDBdLDg2MjU6WzAsLjY5MjI0LDAsMF0sODYzMDpbMCwuNDMwNTYsMCwwXSw4NjMxOlswLC40MzA1NiwwLDBdLDg2MzQ6Wy4wODE5OCwuNTgxOTgsMCwwXSw4NjM1OlsuMDgxOTgsLjU4MTk4LDAsMF0sODYzODpbLjE5NDQ0LC42OTIyNCwwLDBdLDg2Mzk6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4NjQyOlsuMTk0NDQsLjY5MjI0LDAsMF0sODY0MzpbLjE5NDQ0LC42OTIyNCwwLDBdLDg2NDQ6Wy4xODA4LC42NzUsMCwwXSw4NjQ2OlsuMTgwOCwuNjc1LDAsMF0sODY0NzpbLjE4MDgsLjY3NSwwLDBdLDg2NDg6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4NjQ5OlsuMTgwOCwuNjc1LDAsMF0sODY1MDpbLjE5NDQ0LC42OTIyNCwwLDBdLDg2NTE6Wy4wMTM1NCwuNTIyMzksMCwwXSw4NjUyOlsuMDEzNTQsLjUyMjM5LDAsMF0sODY1MzpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjU0OlstLjEzMzEzLC4zNjY4NywwLDBdLDg2NTU6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODY2NjpbLjEzNjY3LC42MzY2NywwLDBdLDg2Njc6Wy4xMzY2NywuNjM2NjcsMCwwXSw4NjY5OlstLjEzMzEzLC4zNzc4OCwwLDBdLDg2NzI6Wy0uMDY0LC40MzcsMCwwXSw4Njc0OlstLjA2NCwuNDM3LDAsMF0sODcwNTpbMCwuODI1LDAsMF0sODcwODpbMCwuNjg4ODksMCwwXSw4NzA5OlsuMDgxNjcsLjU4MTY3LDAsMF0sODcxNzpbMCwuNDMwNTYsMCwwXSw4NzIyOlstLjAzNTk4LC40NjQwMiwwLDBdLDg3MjQ6Wy4wODE5OCwuNjkyMjQsMCwwXSw4NzI2OlsuMDgxNjcsLjU4MTY3LDAsMF0sODczMzpbMCwuNjkyMjQsMCwwXSw4NzM2OlswLC42OTIyNCwwLDBdLDg3Mzc6WzAsLjY5MjI0LDAsMF0sODczODpbLjAzNTE3LC41MjIzOSwwLDBdLDg3Mzk6Wy4wODE2NywuNTgxNjcsMCwwXSw4NzQwOlsuMjUxNDIsLjc0MTExLDAsMF0sODc0MTpbLjA4MTY3LC41ODE2NywwLDBdLDg3NDI6Wy4yNTE0MiwuNzQxMTEsMCwwXSw4NzU2OlswLC42OTIyNCwwLDBdLDg3NTc6WzAsLjY5MjI0LDAsMF0sODc2NDpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NzY1OlstLjEzMzEzLC4zNzc4OCwwLDBdLDg3Njk6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODc3MDpbLS4wMzYyNSwuNDYzNzUsMCwwXSw4Nzc0OlsuMzAyNzQsLjc5MzgzLDAsMF0sODc3NjpbLS4wMTY4OCwuNDgzMTIsMCwwXSw4Nzc4OlsuMDgxNjcsLjU4MTY3LDAsMF0sODc4MjpbLjA2MDYyLC41NDk4NiwwLDBdLDg3ODM6Wy4wNjA2MiwuNTQ5ODYsMCwwXSw4Nzg1OlsuMDgxOTgsLjU4MTk4LDAsMF0sODc4NjpbLjA4MTk4LC41ODE5OCwwLDBdLDg3ODc6Wy4wODE5OCwuNTgxOTgsMCwwXSw4NzkwOlswLC42OTIyNCwwLDBdLDg3OTE6Wy4yMjk1OCwuNzI5NTgsMCwwXSw4Nzk2OlsuMDgxOTgsLjkxNjY3LDAsMF0sODgwNjpbLjI1NTgzLC43NTU4MywwLDBdLDg4MDc6Wy4yNTU4MywuNzU1ODMsMCwwXSw4ODA4OlsuMjUxNDIsLjc1NzI2LDAsMF0sODgwOTpbLjI1MTQyLC43NTcyNiwwLDBdLDg4MTI6Wy4yNTU4MywuNzU1ODMsMCwwXSw4ODE0OlsuMjA1NzYsLjcwNTc2LDAsMF0sODgxNTpbLjIwNTc2LC43MDU3NiwwLDBdLDg4MTY6Wy4zMDI3NCwuNzkzODMsMCwwXSw4ODE3OlsuMzAyNzQsLjc5MzgzLDAsMF0sODgxODpbLjIyOTU4LC43Mjk1OCwwLDBdLDg4MTk6Wy4yMjk1OCwuNzI5NTgsMCwwXSw4ODIyOlsuMTgwOCwuNjc1LDAsMF0sODgyMzpbLjE4MDgsLjY3NSwwLDBdLDg4Mjg6Wy4xMzY2NywuNjM2NjcsMCwwXSw4ODI5OlsuMTM2NjcsLjYzNjY3LDAsMF0sODgzMDpbLjIyOTU4LC43Mjk1OCwwLDBdLDg4MzE6Wy4yMjk1OCwuNzI5NTgsMCwwXSw4ODMyOlsuMjA1NzYsLjcwNTc2LDAsMF0sODgzMzpbLjIwNTc2LC43MDU3NiwwLDBdLDg4NDA6Wy4zMDI3NCwuNzkzODMsMCwwXSw4ODQxOlsuMzAyNzQsLjc5MzgzLDAsMF0sODg0MjpbLjEzNTk3LC42MzU5NywwLDBdLDg4NDM6Wy4xMzU5NywuNjM1OTcsMCwwXSw4ODQ3OlsuMDM1MTcsLjU0OTg2LDAsMF0sODg0ODpbLjAzNTE3LC41NDk4NiwwLDBdLDg4NTg6Wy4wODE5OCwuNTgxOTgsMCwwXSw4ODU5OlsuMDgxOTgsLjU4MTk4LDAsMF0sODg2MTpbLjA4MTk4LC41ODE5OCwwLDBdLDg4NjI6WzAsLjY3NSwwLDBdLDg4NjM6WzAsLjY3NSwwLDBdLDg4NjQ6WzAsLjY3NSwwLDBdLDg4NjU6WzAsLjY3NSwwLDBdLDg4NzI6WzAsLjY5MjI0LDAsMF0sODg3MzpbMCwuNjkyMjQsMCwwXSw4ODc0OlswLC42OTIyNCwwLDBdLDg4NzY6WzAsLjY4ODg5LDAsMF0sODg3NzpbMCwuNjg4ODksMCwwXSw4ODc4OlswLC42ODg4OSwwLDBdLDg4Nzk6WzAsLjY4ODg5LDAsMF0sODg4MjpbLjAzNTE3LC41NDk4NiwwLDBdLDg4ODM6Wy4wMzUxNywuNTQ5ODYsMCwwXSw4ODg0OlsuMTM2NjcsLjYzNjY3LDAsMF0sODg4NTpbLjEzNjY3LC42MzY2NywwLDBdLDg4ODg6WzAsLjU0OTg2LDAsMF0sODg5MDpbLjE5NDQ0LC40MzA1NiwwLDBdLDg4OTE6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4ODkyOlsuMTk0NDQsLjY5MjI0LDAsMF0sODkwMTpbMCwuNTQ5ODYsMCwwXSw4OTAzOlsuMDgxNjcsLjU4MTY3LDAsMF0sODkwNTpbLjA4MTY3LC41ODE2NywwLDBdLDg5MDY6Wy4wODE2NywuNTgxNjcsMCwwXSw4OTA3OlswLC42OTIyNCwwLDBdLDg5MDg6WzAsLjY5MjI0LDAsMF0sODkwOTpbLS4wMzU5OCwuNDY0MDIsMCwwXSw4OTEwOlswLC41NDk4NiwwLDBdLDg5MTE6WzAsLjU0OTg2LDAsMF0sODkxMjpbLjAzNTE3LC41NDk4NiwwLDBdLDg5MTM6Wy4wMzUxNywuNTQ5ODYsMCwwXSw4OTE0OlswLC41NDk4NiwwLDBdLDg5MTU6WzAsLjU0OTg2LDAsMF0sODkxNjpbMCwuNjkyMjQsMCwwXSw4OTE4OlsuMDM5MSwuNTM5MSwwLDBdLDg5MTk6Wy4wMzkxLC41MzkxLDAsMF0sODkyMDpbLjAzNTE3LC41NDk4NiwwLDBdLDg5MjE6Wy4wMzUxNywuNTQ5ODYsMCwwXSw4OTIyOlsuMzg1NjksLjg4NTY5LDAsMF0sODkyMzpbLjM4NTY5LC44ODU2OSwwLDBdLDg5MjY6Wy4xMzY2NywuNjM2NjcsMCwwXSw4OTI3OlsuMTM2NjcsLjYzNjY3LDAsMF0sODkyODpbLjMwMjc0LC43OTM4MywwLDBdLDg5Mjk6Wy4zMDI3NCwuNzkzODMsMCwwXSw4OTM0OlsuMjMyMjIsLjc0MTExLDAsMF0sODkzNTpbLjIzMjIyLC43NDExMSwwLDBdLDg5MzY6Wy4yMzIyMiwuNzQxMTEsMCwwXSw4OTM3OlsuMjMyMjIsLjc0MTExLDAsMF0sODkzODpbLjIwNTc2LC43MDU3NiwwLDBdLDg5Mzk6Wy4yMDU3NiwuNzA1NzYsMCwwXSw4OTQwOlsuMzAyNzQsLjc5MzgzLDAsMF0sODk0MTpbLjMwMjc0LC43OTM4MywwLDBdLDg5OTQ6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4OTk1OlsuMTk0NDQsLjY5MjI0LDAsMF0sOTQxNjpbLjE1NTU5LC42OTIyNCwwLDBdLDk0ODQ6WzAsLjY5MjI0LDAsMF0sOTQ4ODpbMCwuNjkyMjQsMCwwXSw5NDkyOlswLC4zNzc4OCwwLDBdLDk0OTY6WzAsLjM3Nzg4LDAsMF0sOTU4NTpbLjE5NDQ0LC42ODg4OSwwLDBdLDk1ODY6Wy4xOTQ0NCwuNzQxMTEsMCwwXSw5NjMyOlswLC42NzUsMCwwXSw5NjMzOlswLC42NzUsMCwwXSw5NjUwOlswLC41NDk4NiwwLDBdLDk2NTE6WzAsLjU0OTg2LDAsMF0sOTY1NDpbLjAzNTE3LC41NDk4NiwwLDBdLDk2NjA6WzAsLjU0OTg2LDAsMF0sOTY2MTpbMCwuNTQ5ODYsMCwwXSw5NjY0OlsuMDM1MTcsLjU0OTg2LDAsMF0sOTY3NDpbLjExMTExLC42OTIyNCwwLDBdLDk3MzM6Wy4xOTQ0NCwuNjkyMjQsMCwwXSwxMDAwMzpbMCwuNjkyMjQsMCwwXSwxMDAxNjpbMCwuNjkyMjQsMCwwXSwxMDczMTpbLjExMTExLC42OTIyNCwwLDBdLDEwODQ2OlsuMTk0NDQsLjc1NTgzLDAsMF0sMTA4Nzc6Wy4xMzY2NywuNjM2NjcsMCwwXSwxMDg3ODpbLjEzNjY3LC42MzY2NywwLDBdLDEwODg1OlsuMjU1ODMsLjc1NTgzLDAsMF0sMTA4ODY6Wy4yNTU4MywuNzU1ODMsMCwwXSwxMDg4NzpbLjEzNTk3LC42MzU5NywwLDBdLDEwODg4OlsuMTM1OTcsLjYzNTk3LDAsMF0sMTA4ODk6Wy4yNjE2NywuNzU3MjYsMCwwXSwxMDg5MDpbLjI2MTY3LC43NTcyNiwwLDBdLDEwODkxOlsuNDgyNTYsLjk4MjU2LDAsMF0sMTA4OTI6Wy40ODI1NiwuOTgyNTYsMCwwXSwxMDkwMTpbLjEzNjY3LC42MzY2NywwLDBdLDEwOTAyOlsuMTM2NjcsLjYzNjY3LDAsMF0sMTA5MzM6Wy4yNTE0MiwuNzU3MjYsMCwwXSwxMDkzNDpbLjI1MTQyLC43NTcyNiwwLDBdLDEwOTM1OlsuMjYxNjcsLjc1NzI2LDAsMF0sMTA5MzY6Wy4yNjE2NywuNzU3MjYsMCwwXSwxMDkzNzpbLjI2MTY3LC43NTcyNiwwLDBdLDEwOTM4OlsuMjYxNjcsLjc1NzI2LDAsMF0sMTA5NDk6Wy4yNTU4MywuNzU1ODMsMCwwXSwxMDk1MDpbLjI1NTgzLC43NTU4MywwLDBdLDEwOTU1OlsuMjg0ODEsLjc5MzgzLDAsMF0sMTA5NTY6Wy4yODQ4MSwuNzkzODMsMCwwXSw1NzM1MDpbLjA4MTY3LC41ODE2NywwLDBdLDU3MzUxOlsuMDgxNjcsLjU4MTY3LDAsMF0sNTczNTI6Wy4wODE2NywuNTgxNjcsMCwwXSw1NzM1MzpbMCwuNDMwNTYsLjA0MDI4LDBdLDU3MzU2OlsuMjUxNDIsLjc1NzI2LDAsMF0sNTczNTc6Wy4yNTE0MiwuNzU3MjYsMCwwXSw1NzM1ODpbLjQxOTUxLC45MTk1MSwwLDBdLDU3MzU5OlsuMzAyNzQsLjc5MzgzLDAsMF0sNTczNjA6Wy4zMDI3NCwuNzkzODMsMCwwXSw1NzM2MTpbLjQxOTUxLC45MTk1MSwwLDBdLDU3MzY2OlsuMjUxNDIsLjc1NzI2LDAsMF0sNTczNjc6Wy4yNTE0MiwuNzU3MjYsMCwwXSw1NzM2ODpbLjI1MTQyLC43NTcyNiwwLDBdLDU3MzY5OlsuMjUxNDIsLjc1NzI2LDAsMF0sNTczNzA6Wy4xMzU5NywuNjM1OTcsMCwwXSw1NzM3MTpbLjEzNTk3LC42MzU5NywwLDBdfSxcIkNhbGlncmFwaGljLVJlZ3VsYXJcIjp7NDg6WzAsLjQzMDU2LDAsMF0sNDk6WzAsLjQzMDU2LDAsMF0sNTA6WzAsLjQzMDU2LDAsMF0sNTE6Wy4xOTQ0NCwuNDMwNTYsMCwwXSw1MjpbLjE5NDQ0LC40MzA1NiwwLDBdLDUzOlsuMTk0NDQsLjQzMDU2LDAsMF0sNTQ6WzAsLjY0NDQ0LDAsMF0sNTU6Wy4xOTQ0NCwuNDMwNTYsMCwwXSw1NjpbMCwuNjQ0NDQsMCwwXSw1NzpbLjE5NDQ0LC40MzA1NiwwLDBdLDY1OlswLC42ODMzMywwLC4xOTQ0NV0sNjY6WzAsLjY4MzMzLC4wMzA0MSwuMTM4ODldLDY3OlswLC42ODMzMywuMDU4MzQsLjEzODg5XSw2ODpbMCwuNjgzMzMsLjAyNzc4LC4wODMzNF0sNjk6WzAsLjY4MzMzLC4wODk0NCwuMTExMTFdLDcwOlswLC42ODMzMywuMDk5MzEsLjExMTExXSw3MTpbLjA5NzIyLC42ODMzMywuMDU5MywuMTExMTFdLDcyOlswLC42ODMzMywuMDA5NjUsLjExMTExXSw3MzpbMCwuNjgzMzMsLjA3MzgyLDBdLDc0OlsuMDk3MjIsLjY4MzMzLC4xODQ3MiwuMTY2NjddLDc1OlswLC42ODMzMywuMDE0NDUsLjA1NTU2XSw3NjpbMCwuNjgzMzMsMCwuMTM4ODldLDc3OlswLC42ODMzMywwLC4xMzg4OV0sNzg6WzAsLjY4MzMzLC4xNDczNiwuMDgzMzRdLDc5OlswLC42ODMzMywuMDI3NzgsLjExMTExXSw4MDpbMCwuNjgzMzMsLjA4MjIyLC4wODMzNF0sODE6Wy4wOTcyMiwuNjgzMzMsMCwuMTExMTFdLDgyOlswLC42ODMzMywwLC4wODMzNF0sODM6WzAsLjY4MzMzLC4wNzUsLjEzODg5XSw4NDpbMCwuNjgzMzMsLjI1NDE3LDBdLDg1OlswLC42ODMzMywuMDk5MzEsLjA4MzM0XSw4NjpbMCwuNjgzMzMsLjA4MjIyLDBdLDg3OlswLC42ODMzMywuMDgyMjIsLjA4MzM0XSw4ODpbMCwuNjgzMzMsLjE0NjQzLC4xMzg4OV0sODk6Wy4wOTcyMiwuNjgzMzMsLjA4MjIyLC4wODMzNF0sOTA6WzAsLjY4MzMzLC4wNzk0NCwuMTM4ODldfSxcIkZyYWt0dXItUmVndWxhclwiOnszMzpbMCwuNjkxNDEsMCwwXSwzNDpbMCwuNjkxNDEsMCwwXSwzODpbMCwuNjkxNDEsMCwwXSwzOTpbMCwuNjkxNDEsMCwwXSw0MDpbLjI0OTgyLC43NDk0NywwLDBdLDQxOlsuMjQ5ODIsLjc0OTQ3LDAsMF0sNDI6WzAsLjYyMTE5LDAsMF0sNDM6Wy4wODMxOSwuNTgyODMsMCwwXSw0NDpbMCwuMTA4MDMsMCwwXSw0NTpbLjA4MzE5LC41ODI4MywwLDBdLDQ2OlswLC4xMDgwMywwLDBdLDQ3OlsuMjQ5ODIsLjc0OTQ3LDAsMF0sNDg6WzAsLjQ3NTM0LDAsMF0sNDk6WzAsLjQ3NTM0LDAsMF0sNTA6WzAsLjQ3NTM0LDAsMF0sNTE6Wy4xODkwNiwuNDc1MzQsMCwwXSw1MjpbLjE4OTA2LC40NzUzNCwwLDBdLDUzOlsuMTg5MDYsLjQ3NTM0LDAsMF0sNTQ6WzAsLjY5MTQxLDAsMF0sNTU6Wy4xODkwNiwuNDc1MzQsMCwwXSw1NjpbMCwuNjkxNDEsMCwwXSw1NzpbLjE4OTA2LC40NzUzNCwwLDBdLDU4OlswLC40NzUzNCwwLDBdLDU5OlsuMTI2MDQsLjQ3NTM0LDAsMF0sNjE6Wy0uMTMwOTksLjM2ODY2LDAsMF0sNjM6WzAsLjY5MTQxLDAsMF0sNjU6WzAsLjY5MTQxLDAsMF0sNjY6WzAsLjY5MTQxLDAsMF0sNjc6WzAsLjY5MTQxLDAsMF0sNjg6WzAsLjY5MTQxLDAsMF0sNjk6WzAsLjY5MTQxLDAsMF0sNzA6Wy4xMjYwNCwuNjkxNDEsMCwwXSw3MTpbMCwuNjkxNDEsMCwwXSw3MjpbLjA2MzAyLC42OTE0MSwwLDBdLDczOlswLC42OTE0MSwwLDBdLDc0OlsuMTI2MDQsLjY5MTQxLDAsMF0sNzU6WzAsLjY5MTQxLDAsMF0sNzY6WzAsLjY5MTQxLDAsMF0sNzc6WzAsLjY5MTQxLDAsMF0sNzg6WzAsLjY5MTQxLDAsMF0sNzk6WzAsLjY5MTQxLDAsMF0sODA6Wy4xODkwNiwuNjkxNDEsMCwwXSw4MTpbLjAzNzgxLC42OTE0MSwwLDBdLDgyOlswLC42OTE0MSwwLDBdLDgzOlswLC42OTE0MSwwLDBdLDg0OlswLC42OTE0MSwwLDBdLDg1OlswLC42OTE0MSwwLDBdLDg2OlswLC42OTE0MSwwLDBdLDg3OlswLC42OTE0MSwwLDBdLDg4OlswLC42OTE0MSwwLDBdLDg5OlsuMTg5MDYsLjY5MTQxLDAsMF0sOTA6Wy4xMjYwNCwuNjkxNDEsMCwwXSw5MTpbLjI0OTgyLC43NDk0NywwLDBdLDkzOlsuMjQ5ODIsLjc0OTQ3LDAsMF0sOTQ6WzAsLjY5MTQxLDAsMF0sOTc6WzAsLjQ3NTM0LDAsMF0sOTg6WzAsLjY5MTQxLDAsMF0sOTk6WzAsLjQ3NTM0LDAsMF0sMTAwOlswLC42MjExOSwwLDBdLDEwMTpbMCwuNDc1MzQsMCwwXSwxMDI6Wy4xODkwNiwuNjkxNDEsMCwwXSwxMDM6Wy4xODkwNiwuNDc1MzQsMCwwXSwxMDQ6Wy4xODkwNiwuNjkxNDEsMCwwXSwxMDU6WzAsLjY5MTQxLDAsMF0sMTA2OlswLC42OTE0MSwwLDBdLDEwNzpbMCwuNjkxNDEsMCwwXSwxMDg6WzAsLjY5MTQxLDAsMF0sMTA5OlswLC40NzUzNCwwLDBdLDExMDpbMCwuNDc1MzQsMCwwXSwxMTE6WzAsLjQ3NTM0LDAsMF0sMTEyOlsuMTg5MDYsLjUyMzk2LDAsMF0sMTEzOlsuMTg5MDYsLjQ3NTM0LDAsMF0sMTE0OlswLC40NzUzNCwwLDBdLDExNTpbMCwuNDc1MzQsMCwwXSwxMTY6WzAsLjYyMTE5LDAsMF0sMTE3OlswLC40NzUzNCwwLDBdLDExODpbMCwuNTIzOTYsMCwwXSwxMTk6WzAsLjUyMzk2LDAsMF0sMTIwOlsuMTg5MDYsLjQ3NTM0LDAsMF0sMTIxOlsuMTg5MDYsLjQ3NTM0LDAsMF0sMTIyOlsuMTg5MDYsLjQ3NTM0LDAsMF0sODIxNjpbMCwuNjkxNDEsMCwwXSw4MjE3OlswLC42OTE0MSwwLDBdLDU4MTEyOlswLC42MjExOSwwLDBdLDU4MTEzOlswLC42MjExOSwwLDBdLDU4MTE0OlsuMTg5MDYsLjY5MTQxLDAsMF0sNTgxMTU6Wy4xODkwNiwuNjkxNDEsMCwwXSw1ODExNjpbLjE4OTA2LC40NzUzNCwwLDBdLDU4MTE3OlswLC42OTE0MSwwLDBdLDU4MTE4OlswLC42MjExOSwwLDBdLDU4MTE5OlswLC40NzUzNCwwLDBdfSxcIk1haW4tQm9sZFwiOnszMzpbMCwuNjk0NDQsMCwwXSwzNDpbMCwuNjk0NDQsMCwwXSwzNTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDM2OlsuMDU1NTYsLjc1LDAsMF0sMzc6Wy4wNTU1NiwuNzUsMCwwXSwzODpbMCwuNjk0NDQsMCwwXSwzOTpbMCwuNjk0NDQsMCwwXSw0MDpbLjI1LC43NSwwLDBdLDQxOlsuMjUsLjc1LDAsMF0sNDI6WzAsLjc1LDAsMF0sNDM6Wy4xMzMzMywuNjMzMzMsMCwwXSw0NDpbLjE5NDQ0LC4xNTU1NiwwLDBdLDQ1OlswLC40NDQ0NCwwLDBdLDQ2OlswLC4xNTU1NiwwLDBdLDQ3OlsuMjUsLjc1LDAsMF0sNDg6WzAsLjY0NDQ0LDAsMF0sNDk6WzAsLjY0NDQ0LDAsMF0sNTA6WzAsLjY0NDQ0LDAsMF0sNTE6WzAsLjY0NDQ0LDAsMF0sNTI6WzAsLjY0NDQ0LDAsMF0sNTM6WzAsLjY0NDQ0LDAsMF0sNTQ6WzAsLjY0NDQ0LDAsMF0sNTU6WzAsLjY0NDQ0LDAsMF0sNTY6WzAsLjY0NDQ0LDAsMF0sNTc6WzAsLjY0NDQ0LDAsMF0sNTg6WzAsLjQ0NDQ0LDAsMF0sNTk6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSw2MDpbLjA4NTU2LC41ODU1NiwwLDBdLDYxOlstLjEwODg5LC4zOTExMSwwLDBdLDYyOlsuMDg1NTYsLjU4NTU2LDAsMF0sNjM6WzAsLjY5NDQ0LDAsMF0sNjQ6WzAsLjY5NDQ0LDAsMF0sNjU6WzAsLjY4NjExLDAsMF0sNjY6WzAsLjY4NjExLDAsMF0sNjc6WzAsLjY4NjExLDAsMF0sNjg6WzAsLjY4NjExLDAsMF0sNjk6WzAsLjY4NjExLDAsMF0sNzA6WzAsLjY4NjExLDAsMF0sNzE6WzAsLjY4NjExLDAsMF0sNzI6WzAsLjY4NjExLDAsMF0sNzM6WzAsLjY4NjExLDAsMF0sNzQ6WzAsLjY4NjExLDAsMF0sNzU6WzAsLjY4NjExLDAsMF0sNzY6WzAsLjY4NjExLDAsMF0sNzc6WzAsLjY4NjExLDAsMF0sNzg6WzAsLjY4NjExLDAsMF0sNzk6WzAsLjY4NjExLDAsMF0sODA6WzAsLjY4NjExLDAsMF0sODE6Wy4xOTQ0NCwuNjg2MTEsMCwwXSw4MjpbMCwuNjg2MTEsMCwwXSw4MzpbMCwuNjg2MTEsMCwwXSw4NDpbMCwuNjg2MTEsMCwwXSw4NTpbMCwuNjg2MTEsMCwwXSw4NjpbMCwuNjg2MTEsLjAxNTk3LDBdLDg3OlswLC42ODYxMSwuMDE1OTcsMF0sODg6WzAsLjY4NjExLDAsMF0sODk6WzAsLjY4NjExLC4wMjg3NSwwXSw5MDpbMCwuNjg2MTEsMCwwXSw5MTpbLjI1LC43NSwwLDBdLDkyOlsuMjUsLjc1LDAsMF0sOTM6Wy4yNSwuNzUsMCwwXSw5NDpbMCwuNjk0NDQsMCwwXSw5NTpbLjMxLC4xMzQ0NCwuMDMxOTQsMF0sOTY6WzAsLjY5NDQ0LDAsMF0sOTc6WzAsLjQ0NDQ0LDAsMF0sOTg6WzAsLjY5NDQ0LDAsMF0sOTk6WzAsLjQ0NDQ0LDAsMF0sMTAwOlswLC42OTQ0NCwwLDBdLDEwMTpbMCwuNDQ0NDQsMCwwXSwxMDI6WzAsLjY5NDQ0LC4xMDkwMywwXSwxMDM6Wy4xOTQ0NCwuNDQ0NDQsLjAxNTk3LDBdLDEwNDpbMCwuNjk0NDQsMCwwXSwxMDU6WzAsLjY5NDQ0LDAsMF0sMTA2OlsuMTk0NDQsLjY5NDQ0LDAsMF0sMTA3OlswLC42OTQ0NCwwLDBdLDEwODpbMCwuNjk0NDQsMCwwXSwxMDk6WzAsLjQ0NDQ0LDAsMF0sMTEwOlswLC40NDQ0NCwwLDBdLDExMTpbMCwuNDQ0NDQsMCwwXSwxMTI6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSwxMTM6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSwxMTQ6WzAsLjQ0NDQ0LDAsMF0sMTE1OlswLC40NDQ0NCwwLDBdLDExNjpbMCwuNjM0OTIsMCwwXSwxMTc6WzAsLjQ0NDQ0LDAsMF0sMTE4OlswLC40NDQ0NCwuMDE1OTcsMF0sMTE5OlswLC40NDQ0NCwuMDE1OTcsMF0sMTIwOlswLC40NDQ0NCwwLDBdLDEyMTpbLjE5NDQ0LC40NDQ0NCwuMDE1OTcsMF0sMTIyOlswLC40NDQ0NCwwLDBdLDEyMzpbLjI1LC43NSwwLDBdLDEyNDpbLjI1LC43NSwwLDBdLDEyNTpbLjI1LC43NSwwLDBdLDEyNjpbLjM1LC4zNDQ0NCwwLDBdLDE2ODpbMCwuNjk0NDQsMCwwXSwxNzI6WzAsLjQ0NDQ0LDAsMF0sMTc1OlswLC41OTYxMSwwLDBdLDE3NjpbMCwuNjk0NDQsMCwwXSwxNzc6Wy4xMzMzMywuNjMzMzMsMCwwXSwxODA6WzAsLjY5NDQ0LDAsMF0sMjE1OlsuMTMzMzMsLjYzMzMzLDAsMF0sMjQ3OlsuMTMzMzMsLjYzMzMzLDAsMF0sMzA1OlswLC40NDQ0NCwwLDBdLDU2NzpbLjE5NDQ0LC40NDQ0NCwwLDBdLDcxMDpbMCwuNjk0NDQsMCwwXSw3MTE6WzAsLjYzMTk0LDAsMF0sNzEzOlswLC41OTYxMSwwLDBdLDcxNDpbMCwuNjk0NDQsMCwwXSw3MTU6WzAsLjY5NDQ0LDAsMF0sNzI4OlswLC42OTQ0NCwwLDBdLDcyOTpbMCwuNjk0NDQsMCwwXSw3MzA6WzAsLjY5NDQ0LDAsMF0sNzMyOlswLC42OTQ0NCwwLDBdLDc2ODpbMCwuNjk0NDQsMCwwXSw3Njk6WzAsLjY5NDQ0LDAsMF0sNzcwOlswLC42OTQ0NCwwLDBdLDc3MTpbMCwuNjk0NDQsMCwwXSw3NzI6WzAsLjU5NjExLDAsMF0sNzc0OlswLC42OTQ0NCwwLDBdLDc3NTpbMCwuNjk0NDQsMCwwXSw3NzY6WzAsLjY5NDQ0LDAsMF0sNzc4OlswLC42OTQ0NCwwLDBdLDc3OTpbMCwuNjk0NDQsMCwwXSw3ODA6WzAsLjYzMTk0LDAsMF0sODI0OlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTE1OlswLC42ODYxMSwwLDBdLDkxNjpbMCwuNjg2MTEsMCwwXSw5MjA6WzAsLjY4NjExLDAsMF0sOTIzOlswLC42ODYxMSwwLDBdLDkyNjpbMCwuNjg2MTEsMCwwXSw5Mjg6WzAsLjY4NjExLDAsMF0sOTMxOlswLC42ODYxMSwwLDBdLDkzMzpbMCwuNjg2MTEsMCwwXSw5MzQ6WzAsLjY4NjExLDAsMF0sOTM2OlswLC42ODYxMSwwLDBdLDkzNzpbMCwuNjg2MTEsMCwwXSw4MjExOlswLC40NDQ0NCwuMDMxOTQsMF0sODIxMjpbMCwuNDQ0NDQsLjAzMTk0LDBdLDgyMTY6WzAsLjY5NDQ0LDAsMF0sODIxNzpbMCwuNjk0NDQsMCwwXSw4MjIwOlswLC42OTQ0NCwwLDBdLDgyMjE6WzAsLjY5NDQ0LDAsMF0sODIyNDpbLjE5NDQ0LC42OTQ0NCwwLDBdLDgyMjU6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4MjQyOlswLC41NTU1NiwwLDBdLDg0MDc6WzAsLjcyNDQ0LC4xNTQ4NiwwXSw4NDYzOlswLC42OTQ0NCwwLDBdLDg0NjU6WzAsLjY5NDQ0LDAsMF0sODQ2NzpbMCwuNjk0NDQsMCwwXSw4NDcyOlsuMTk0NDQsLjQ0NDQ0LDAsMF0sODQ3NjpbMCwuNjk0NDQsMCwwXSw4NTAxOlswLC42OTQ0NCwwLDBdLDg1OTI6Wy0uMTA4ODksLjM5MTExLDAsMF0sODU5MzpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg1OTQ6Wy0uMTA4ODksLjM5MTExLDAsMF0sODU5NTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg1OTY6Wy0uMTA4ODksLjM5MTExLDAsMF0sODU5NzpbLjI1LC43NSwwLDBdLDg1OTg6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NTk5OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODYwMDpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2MDE6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NjM2OlstLjEwODg5LC4zOTExMSwwLDBdLDg2Mzc6Wy0uMTA4ODksLjM5MTExLDAsMF0sODY0MDpbLS4xMDg4OSwuMzkxMTEsMCwwXSw4NjQxOlstLjEwODg5LC4zOTExMSwwLDBdLDg2NTY6Wy0uMTA4ODksLjM5MTExLDAsMF0sODY1NzpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2NTg6Wy0uMTA4ODksLjM5MTExLDAsMF0sODY1OTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2NjA6Wy0uMTA4ODksLjM5MTExLDAsMF0sODY2MTpbLjI1LC43NSwwLDBdLDg3MDQ6WzAsLjY5NDQ0LDAsMF0sODcwNjpbMCwuNjk0NDQsLjA2Mzg5LDBdLDg3MDc6WzAsLjY5NDQ0LDAsMF0sODcwOTpbLjA1NTU2LC43NSwwLDBdLDg3MTE6WzAsLjY4NjExLDAsMF0sODcxMjpbLjA4NTU2LC41ODU1NiwwLDBdLDg3MTU6Wy4wODU1NiwuNTg1NTYsMCwwXSw4NzIyOlsuMTMzMzMsLjYzMzMzLDAsMF0sODcyMzpbLjEzMzMzLC42MzMzMywwLDBdLDg3MjU6Wy4yNSwuNzUsMCwwXSw4NzI2OlsuMjUsLjc1LDAsMF0sODcyNzpbLS4wMjc3OCwuNDcyMjIsMCwwXSw4NzI4OlstLjAyNjM5LC40NzM2MSwwLDBdLDg3Mjk6Wy0uMDI2MzksLjQ3MzYxLDAsMF0sODczMDpbLjE4LC44MiwwLDBdLDg3MzM6WzAsLjQ0NDQ0LDAsMF0sODczNDpbMCwuNDQ0NDQsMCwwXSw4NzM2OlswLC42OTIyNCwwLDBdLDg3Mzk6Wy4yNSwuNzUsMCwwXSw4NzQxOlsuMjUsLjc1LDAsMF0sODc0MzpbMCwuNTU1NTYsMCwwXSw4NzQ0OlswLC41NTU1NiwwLDBdLDg3NDU6WzAsLjU1NTU2LDAsMF0sODc0NjpbMCwuNTU1NTYsMCwwXSw4NzQ3OlsuMTk0NDQsLjY5NDQ0LC4xMjc3OCwwXSw4NzY0OlstLjEwODg5LC4zOTExMSwwLDBdLDg3Njg6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NzcxOlsuMDAyMjIsLjUwMjIyLDAsMF0sODc3NjpbLjAyNDQ0LC41MjQ0NCwwLDBdLDg3ODE6Wy4wMDIyMiwuNTAyMjIsMCwwXSw4ODAxOlsuMDAyMjIsLjUwMjIyLDAsMF0sODgwNDpbLjE5NjY3LC42OTY2NywwLDBdLDg4MDU6Wy4xOTY2NywuNjk2NjcsMCwwXSw4ODEwOlsuMDg1NTYsLjU4NTU2LDAsMF0sODgxMTpbLjA4NTU2LC41ODU1NiwwLDBdLDg4MjY6Wy4wODU1NiwuNTg1NTYsMCwwXSw4ODI3OlsuMDg1NTYsLjU4NTU2LDAsMF0sODgzNDpbLjA4NTU2LC41ODU1NiwwLDBdLDg4MzU6Wy4wODU1NiwuNTg1NTYsMCwwXSw4ODM4OlsuMTk2NjcsLjY5NjY3LDAsMF0sODgzOTpbLjE5NjY3LC42OTY2NywwLDBdLDg4NDY6WzAsLjU1NTU2LDAsMF0sODg0OTpbLjE5NjY3LC42OTY2NywwLDBdLDg4NTA6Wy4xOTY2NywuNjk2NjcsMCwwXSw4ODUxOlswLC41NTU1NiwwLDBdLDg4NTI6WzAsLjU1NTU2LDAsMF0sODg1MzpbLjEzMzMzLC42MzMzMywwLDBdLDg4NTQ6Wy4xMzMzMywuNjMzMzMsMCwwXSw4ODU1OlsuMTMzMzMsLjYzMzMzLDAsMF0sODg1NjpbLjEzMzMzLC42MzMzMywwLDBdLDg4NTc6Wy4xMzMzMywuNjMzMzMsMCwwXSw4ODY2OlswLC42OTQ0NCwwLDBdLDg4Njc6WzAsLjY5NDQ0LDAsMF0sODg2ODpbMCwuNjk0NDQsMCwwXSw4ODY5OlswLC42OTQ0NCwwLDBdLDg5MDA6Wy0uMDI2MzksLjQ3MzYxLDAsMF0sODkwMTpbLS4wMjYzOSwuNDczNjEsMCwwXSw4OTAyOlstLjAyNzc4LC40NzIyMiwwLDBdLDg5Njg6Wy4yNSwuNzUsMCwwXSw4OTY5OlsuMjUsLjc1LDAsMF0sODk3MDpbLjI1LC43NSwwLDBdLDg5NzE6Wy4yNSwuNzUsMCwwXSw4OTk0OlstLjEzODg5LC4zNjExMSwwLDBdLDg5OTU6Wy0uMTM4ODksLjM2MTExLDAsMF0sOTY1MTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk2NTc6Wy0uMDI3NzgsLjQ3MjIyLDAsMF0sOTY2MTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk2Njc6Wy0uMDI3NzgsLjQ3MjIyLDAsMF0sOTcxMTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk4MjQ6Wy4xMjk2MywuNjk0NDQsMCwwXSw5ODI1OlsuMTI5NjMsLjY5NDQ0LDAsMF0sOTgyNjpbLjEyOTYzLC42OTQ0NCwwLDBdLDk4Mjc6Wy4xMjk2MywuNjk0NDQsMCwwXSw5ODM3OlswLC43NSwwLDBdLDk4Mzg6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5ODM5OlsuMTk0NDQsLjY5NDQ0LDAsMF0sMTAyMTY6Wy4yNSwuNzUsMCwwXSwxMDIxNzpbLjI1LC43NSwwLDBdLDEwODE1OlswLC42ODYxMSwwLDBdLDEwOTI3OlsuMTk2NjcsLjY5NjY3LDAsMF0sMTA5Mjg6Wy4xOTY2NywuNjk2NjcsMCwwXX0sXCJNYWluLUl0YWxpY1wiOnszMzpbMCwuNjk0NDQsLjEyNDE3LDBdLDM0OlswLC42OTQ0NCwuMDY5NjEsMF0sMzU6Wy4xOTQ0NCwuNjk0NDQsLjA2NjE2LDBdLDM3OlsuMDU1NTYsLjc1LC4xMzYzOSwwXSwzODpbMCwuNjk0NDQsLjA5Njk0LDBdLDM5OlswLC42OTQ0NCwuMTI0MTcsMF0sNDA6Wy4yNSwuNzUsLjE2MTk0LDBdLDQxOlsuMjUsLjc1LC4wMzY5NCwwXSw0MjpbMCwuNzUsLjE0OTE3LDBdLDQzOlsuMDU2NjcsLjU2MTY3LC4wMzY5NCwwXSw0NDpbLjE5NDQ0LC4xMDU1NiwwLDBdLDQ1OlswLC40MzA1NiwuMDI4MjYsMF0sNDY6WzAsLjEwNTU2LDAsMF0sNDc6Wy4yNSwuNzUsLjE2MTk0LDBdLDQ4OlswLC42NDQ0NCwuMTM1NTYsMF0sNDk6WzAsLjY0NDQ0LC4xMzU1NiwwXSw1MDpbMCwuNjQ0NDQsLjEzNTU2LDBdLDUxOlswLC42NDQ0NCwuMTM1NTYsMF0sNTI6Wy4xOTQ0NCwuNjQ0NDQsLjEzNTU2LDBdLDUzOlswLC42NDQ0NCwuMTM1NTYsMF0sNTQ6WzAsLjY0NDQ0LC4xMzU1NiwwXSw1NTpbLjE5NDQ0LC42NDQ0NCwuMTM1NTYsMF0sNTY6WzAsLjY0NDQ0LC4xMzU1NiwwXSw1NzpbMCwuNjQ0NDQsLjEzNTU2LDBdLDU4OlswLC40MzA1NiwuMDU4MiwwXSw1OTpbLjE5NDQ0LC40MzA1NiwuMDU4MiwwXSw2MTpbLS4xMzMxMywuMzY2ODcsLjA2NjE2LDBdLDYzOlswLC42OTQ0NCwuMTIyNSwwXSw2NDpbMCwuNjk0NDQsLjA5NTk3LDBdLDY1OlswLC42ODMzMywwLDBdLDY2OlswLC42ODMzMywuMTAyNTcsMF0sNjc6WzAsLjY4MzMzLC4xNDUyOCwwXSw2ODpbMCwuNjgzMzMsLjA5NDAzLDBdLDY5OlswLC42ODMzMywuMTIwMjgsMF0sNzA6WzAsLjY4MzMzLC4xMzMwNSwwXSw3MTpbMCwuNjgzMzMsLjA4NzIyLDBdLDcyOlswLC42ODMzMywuMTYzODksMF0sNzM6WzAsLjY4MzMzLC4xNTgwNiwwXSw3NDpbMCwuNjgzMzMsLjE0MDI4LDBdLDc1OlswLC42ODMzMywuMTQ1MjgsMF0sNzY6WzAsLjY4MzMzLDAsMF0sNzc6WzAsLjY4MzMzLC4xNjM4OSwwXSw3ODpbMCwuNjgzMzMsLjE2Mzg5LDBdLDc5OlswLC42ODMzMywuMDk0MDMsMF0sODA6WzAsLjY4MzMzLC4xMDI1NywwXSw4MTpbLjE5NDQ0LC42ODMzMywuMDk0MDMsMF0sODI6WzAsLjY4MzMzLC4wMzg2OCwwXSw4MzpbMCwuNjgzMzMsLjExOTcyLDBdLDg0OlswLC42ODMzMywuMTMzMDUsMF0sODU6WzAsLjY4MzMzLC4xNjM4OSwwXSw4NjpbMCwuNjgzMzMsLjE4MzYxLDBdLDg3OlswLC42ODMzMywuMTgzNjEsMF0sODg6WzAsLjY4MzMzLC4xNTgwNiwwXSw4OTpbMCwuNjgzMzMsLjE5MzgzLDBdLDkwOlswLC42ODMzMywuMTQ1MjgsMF0sOTE6Wy4yNSwuNzUsLjE4NzUsMF0sOTM6Wy4yNSwuNzUsLjEwNTI4LDBdLDk0OlswLC42OTQ0NCwuMDY2NDYsMF0sOTU6Wy4zMSwuMTIwNTYsLjA5MjA4LDBdLDk3OlswLC40MzA1NiwuMDc2NzEsMF0sOTg6WzAsLjY5NDQ0LC4wNjMxMiwwXSw5OTpbMCwuNDMwNTYsLjA1NjUzLDBdLDEwMDpbMCwuNjk0NDQsLjEwMzMzLDBdLDEwMTpbMCwuNDMwNTYsLjA3NTE0LDBdLDEwMjpbLjE5NDQ0LC42OTQ0NCwuMjExOTQsMF0sMTAzOlsuMTk0NDQsLjQzMDU2LC4wODg0NywwXSwxMDQ6WzAsLjY5NDQ0LC4wNzY3MSwwXSwxMDU6WzAsLjY1NTM2LC4xMDE5LDBdLDEwNjpbLjE5NDQ0LC42NTUzNiwuMTQ0NjcsMF0sMTA3OlswLC42OTQ0NCwuMTA3NjQsMF0sMTA4OlswLC42OTQ0NCwuMTAzMzMsMF0sMTA5OlswLC40MzA1NiwuMDc2NzEsMF0sMTEwOlswLC40MzA1NiwuMDc2NzEsMF0sMTExOlswLC40MzA1NiwuMDYzMTIsMF0sMTEyOlsuMTk0NDQsLjQzMDU2LC4wNjMxMiwwXSwxMTM6Wy4xOTQ0NCwuNDMwNTYsLjA4ODQ3LDBdLDExNDpbMCwuNDMwNTYsLjEwNzY0LDBdLDExNTpbMCwuNDMwNTYsLjA4MjA4LDBdLDExNjpbMCwuNjE1MDgsLjA5NDg2LDBdLDExNzpbMCwuNDMwNTYsLjA3NjcxLDBdLDExODpbMCwuNDMwNTYsLjEwNzY0LDBdLDExOTpbMCwuNDMwNTYsLjEwNzY0LDBdLDEyMDpbMCwuNDMwNTYsLjEyMDQyLDBdLDEyMTpbLjE5NDQ0LC40MzA1NiwuMDg4NDcsMF0sMTIyOlswLC40MzA1NiwuMTIyOTIsMF0sMTI2OlsuMzUsLjMxNzg2LC4xMTU4NSwwXSwxNjM6WzAsLjY5NDQ0LDAsMF0sMzA1OlswLC40MzA1NiwwLC4wMjc3OF0sNTY3OlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSw3Njg6WzAsLjY5NDQ0LDAsMF0sNzY5OlswLC42OTQ0NCwuMDk2OTQsMF0sNzcwOlswLC42OTQ0NCwuMDY2NDYsMF0sNzcxOlswLC42Njc4NiwuMTE1ODUsMF0sNzcyOlswLC41NjE2NywuMTAzMzMsMF0sNzc0OlswLC42OTQ0NCwuMTA4MDYsMF0sNzc1OlswLC42Njc4NiwuMTE3NTIsMF0sNzc2OlswLC42Njc4NiwuMTA0NzQsMF0sNzc4OlswLC42OTQ0NCwwLDBdLDc3OTpbMCwuNjk0NDQsLjEyMjUsMF0sNzgwOlswLC42Mjg0NywuMDgyOTUsMF0sOTE1OlswLC42ODMzMywuMTMzMDUsMF0sOTE2OlswLC42ODMzMywwLDBdLDkyMDpbMCwuNjgzMzMsLjA5NDAzLDBdLDkyMzpbMCwuNjgzMzMsMCwwXSw5MjY6WzAsLjY4MzMzLC4xNTI5NCwwXSw5Mjg6WzAsLjY4MzMzLC4xNjM4OSwwXSw5MzE6WzAsLjY4MzMzLC4xMjAyOCwwXSw5MzM6WzAsLjY4MzMzLC4xMTExMSwwXSw5MzQ6WzAsLjY4MzMzLC4wNTk4NiwwXSw5MzY6WzAsLjY4MzMzLC4xMTExMSwwXSw5Mzc6WzAsLjY4MzMzLC4xMDI1NywwXSw4MjExOlswLC40MzA1NiwuMDkyMDgsMF0sODIxMjpbMCwuNDMwNTYsLjA5MjA4LDBdLDgyMTY6WzAsLjY5NDQ0LC4xMjQxNywwXSw4MjE3OlswLC42OTQ0NCwuMTI0MTcsMF0sODIyMDpbMCwuNjk0NDQsLjE2ODUsMF0sODIyMTpbMCwuNjk0NDQsLjA2OTYxLDBdLDg0NjM6WzAsLjY4ODg5LDAsMF19LFwiTWFpbi1SZWd1bGFyXCI6ezMyOlswLDAsMCwwXSwzMzpbMCwuNjk0NDQsMCwwXSwzNDpbMCwuNjk0NDQsMCwwXSwzNTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDM2OlsuMDU1NTYsLjc1LDAsMF0sMzc6Wy4wNTU1NiwuNzUsMCwwXSwzODpbMCwuNjk0NDQsMCwwXSwzOTpbMCwuNjk0NDQsMCwwXSw0MDpbLjI1LC43NSwwLDBdLDQxOlsuMjUsLjc1LDAsMF0sNDI6WzAsLjc1LDAsMF0sNDM6Wy4wODMzMywuNTgzMzMsMCwwXSw0NDpbLjE5NDQ0LC4xMDU1NiwwLDBdLDQ1OlswLC40MzA1NiwwLDBdLDQ2OlswLC4xMDU1NiwwLDBdLDQ3OlsuMjUsLjc1LDAsMF0sNDg6WzAsLjY0NDQ0LDAsMF0sNDk6WzAsLjY0NDQ0LDAsMF0sNTA6WzAsLjY0NDQ0LDAsMF0sNTE6WzAsLjY0NDQ0LDAsMF0sNTI6WzAsLjY0NDQ0LDAsMF0sNTM6WzAsLjY0NDQ0LDAsMF0sNTQ6WzAsLjY0NDQ0LDAsMF0sNTU6WzAsLjY0NDQ0LDAsMF0sNTY6WzAsLjY0NDQ0LDAsMF0sNTc6WzAsLjY0NDQ0LDAsMF0sNTg6WzAsLjQzMDU2LDAsMF0sNTk6Wy4xOTQ0NCwuNDMwNTYsMCwwXSw2MDpbLjAzOTEsLjUzOTEsMCwwXSw2MTpbLS4xMzMxMywuMzY2ODcsMCwwXSw2MjpbLjAzOTEsLjUzOTEsMCwwXSw2MzpbMCwuNjk0NDQsMCwwXSw2NDpbMCwuNjk0NDQsMCwwXSw2NTpbMCwuNjgzMzMsMCwwXSw2NjpbMCwuNjgzMzMsMCwwXSw2NzpbMCwuNjgzMzMsMCwwXSw2ODpbMCwuNjgzMzMsMCwwXSw2OTpbMCwuNjgzMzMsMCwwXSw3MDpbMCwuNjgzMzMsMCwwXSw3MTpbMCwuNjgzMzMsMCwwXSw3MjpbMCwuNjgzMzMsMCwwXSw3MzpbMCwuNjgzMzMsMCwwXSw3NDpbMCwuNjgzMzMsMCwwXSw3NTpbMCwuNjgzMzMsMCwwXSw3NjpbMCwuNjgzMzMsMCwwXSw3NzpbMCwuNjgzMzMsMCwwXSw3ODpbMCwuNjgzMzMsMCwwXSw3OTpbMCwuNjgzMzMsMCwwXSw4MDpbMCwuNjgzMzMsMCwwXSw4MTpbLjE5NDQ0LC42ODMzMywwLDBdLDgyOlswLC42ODMzMywwLDBdLDgzOlswLC42ODMzMywwLDBdLDg0OlswLC42ODMzMywwLDBdLDg1OlswLC42ODMzMywwLDBdLDg2OlswLC42ODMzMywuMDEzODksMF0sODc6WzAsLjY4MzMzLC4wMTM4OSwwXSw4ODpbMCwuNjgzMzMsMCwwXSw4OTpbMCwuNjgzMzMsLjAyNSwwXSw5MDpbMCwuNjgzMzMsMCwwXSw5MTpbLjI1LC43NSwwLDBdLDkyOlsuMjUsLjc1LDAsMF0sOTM6Wy4yNSwuNzUsMCwwXSw5NDpbMCwuNjk0NDQsMCwwXSw5NTpbLjMxLC4xMjA1NiwuMDI3NzgsMF0sOTY6WzAsLjY5NDQ0LDAsMF0sOTc6WzAsLjQzMDU2LDAsMF0sOTg6WzAsLjY5NDQ0LDAsMF0sOTk6WzAsLjQzMDU2LDAsMF0sMTAwOlswLC42OTQ0NCwwLDBdLDEwMTpbMCwuNDMwNTYsMCwwXSwxMDI6WzAsLjY5NDQ0LC4wNzc3OCwwXSwxMDM6Wy4xOTQ0NCwuNDMwNTYsLjAxMzg5LDBdLDEwNDpbMCwuNjk0NDQsMCwwXSwxMDU6WzAsLjY2Nzg2LDAsMF0sMTA2OlsuMTk0NDQsLjY2Nzg2LDAsMF0sMTA3OlswLC42OTQ0NCwwLDBdLDEwODpbMCwuNjk0NDQsMCwwXSwxMDk6WzAsLjQzMDU2LDAsMF0sMTEwOlswLC40MzA1NiwwLDBdLDExMTpbMCwuNDMwNTYsMCwwXSwxMTI6Wy4xOTQ0NCwuNDMwNTYsMCwwXSwxMTM6Wy4xOTQ0NCwuNDMwNTYsMCwwXSwxMTQ6WzAsLjQzMDU2LDAsMF0sMTE1OlswLC40MzA1NiwwLDBdLDExNjpbMCwuNjE1MDgsMCwwXSwxMTc6WzAsLjQzMDU2LDAsMF0sMTE4OlswLC40MzA1NiwuMDEzODksMF0sMTE5OlswLC40MzA1NiwuMDEzODksMF0sMTIwOlswLC40MzA1NiwwLDBdLDEyMTpbLjE5NDQ0LC40MzA1NiwuMDEzODksMF0sMTIyOlswLC40MzA1NiwwLDBdLDEyMzpbLjI1LC43NSwwLDBdLDEyNDpbLjI1LC43NSwwLDBdLDEyNTpbLjI1LC43NSwwLDBdLDEyNjpbLjM1LC4zMTc4NiwwLDBdLDE2MDpbMCwwLDAsMF0sMTY4OlswLC42Njc4NiwwLDBdLDE3MjpbMCwuNDMwNTYsMCwwXSwxNzU6WzAsLjU2Nzc4LDAsMF0sMTc2OlswLC42OTQ0NCwwLDBdLDE3NzpbLjA4MzMzLC41ODMzMywwLDBdLDE4MDpbMCwuNjk0NDQsMCwwXSwyMTU6Wy4wODMzMywuNTgzMzMsMCwwXSwyNDc6Wy4wODMzMywuNTgzMzMsMCwwXSwzMDU6WzAsLjQzMDU2LDAsMF0sNTY3OlsuMTk0NDQsLjQzMDU2LDAsMF0sNzEwOlswLC42OTQ0NCwwLDBdLDcxMTpbMCwuNjI4NDcsMCwwXSw3MTM6WzAsLjU2Nzc4LDAsMF0sNzE0OlswLC42OTQ0NCwwLDBdLDcxNTpbMCwuNjk0NDQsMCwwXSw3Mjg6WzAsLjY5NDQ0LDAsMF0sNzI5OlswLC42Njc4NiwwLDBdLDczMDpbMCwuNjk0NDQsMCwwXSw3MzI6WzAsLjY2Nzg2LDAsMF0sNzY4OlswLC42OTQ0NCwwLDBdLDc2OTpbMCwuNjk0NDQsMCwwXSw3NzA6WzAsLjY5NDQ0LDAsMF0sNzcxOlswLC42Njc4NiwwLDBdLDc3MjpbMCwuNTY3NzgsMCwwXSw3NzQ6WzAsLjY5NDQ0LDAsMF0sNzc1OlswLC42Njc4NiwwLDBdLDc3NjpbMCwuNjY3ODYsMCwwXSw3Nzg6WzAsLjY5NDQ0LDAsMF0sNzc5OlswLC42OTQ0NCwwLDBdLDc4MDpbMCwuNjI4NDcsMCwwXSw4MjQ6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5MTU6WzAsLjY4MzMzLDAsMF0sOTE2OlswLC42ODMzMywwLDBdLDkyMDpbMCwuNjgzMzMsMCwwXSw5MjM6WzAsLjY4MzMzLDAsMF0sOTI2OlswLC42ODMzMywwLDBdLDkyODpbMCwuNjgzMzMsMCwwXSw5MzE6WzAsLjY4MzMzLDAsMF0sOTMzOlswLC42ODMzMywwLDBdLDkzNDpbMCwuNjgzMzMsMCwwXSw5MzY6WzAsLjY4MzMzLDAsMF0sOTM3OlswLC42ODMzMywwLDBdLDgyMTE6WzAsLjQzMDU2LC4wMjc3OCwwXSw4MjEyOlswLC40MzA1NiwuMDI3NzgsMF0sODIxNjpbMCwuNjk0NDQsMCwwXSw4MjE3OlswLC42OTQ0NCwwLDBdLDgyMjA6WzAsLjY5NDQ0LDAsMF0sODIyMTpbMCwuNjk0NDQsMCwwXSw4MjI0OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODIyNTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDgyMzA6WzAsLjEyLDAsMF0sODI0MjpbMCwuNTU1NTYsMCwwXSw4NDA3OlswLC43MTQ0NCwuMTUzODIsMF0sODQ2MzpbMCwuNjg4ODksMCwwXSw4NDY1OlswLC42OTQ0NCwwLDBdLDg0Njc6WzAsLjY5NDQ0LDAsLjExMTExXSw4NDcyOlsuMTk0NDQsLjQzMDU2LDAsLjExMTExXSw4NDc2OlswLC42OTQ0NCwwLDBdLDg1MDE6WzAsLjY5NDQ0LDAsMF0sODU5MjpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NTkzOlsuMTk0NDQsLjY5NDQ0LDAsMF0sODU5NDpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NTk1OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODU5NjpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NTk3OlsuMjUsLjc1LDAsMF0sODU5ODpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg1OTk6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NjAwOlsuMTk0NDQsLjY5NDQ0LDAsMF0sODYwMTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2MTQ6Wy4wMTEsLjUxMSwwLDBdLDg2MTc6Wy4wMTEsLjUxMSwwLDBdLDg2MTg6Wy4wMTEsLjUxMSwwLDBdLDg2MzY6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODYzNzpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjQwOlstLjEzMzEzLC4zNjY4NywwLDBdLDg2NDE6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODY1MjpbLjAxMSwuNjcxLDAsMF0sODY1NjpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjU3OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODY1ODpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjU5OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODY2MDpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjYxOlsuMjUsLjc1LDAsMF0sODcwNDpbMCwuNjk0NDQsMCwwXSw4NzA2OlswLC42OTQ0NCwuMDU1NTYsLjA4MzM0XSw4NzA3OlswLC42OTQ0NCwwLDBdLDg3MDk6Wy4wNTU1NiwuNzUsMCwwXSw4NzExOlswLC42ODMzMywwLDBdLDg3MTI6Wy4wMzkxLC41MzkxLDAsMF0sODcxNTpbLjAzOTEsLjUzOTEsMCwwXSw4NzIyOlsuMDgzMzMsLjU4MzMzLDAsMF0sODcyMzpbLjA4MzMzLC41ODMzMywwLDBdLDg3MjU6Wy4yNSwuNzUsMCwwXSw4NzI2OlsuMjUsLjc1LDAsMF0sODcyNzpbLS4wMzQ3MiwuNDY1MjgsMCwwXSw4NzI4OlstLjA1NTU1LC40NDQ0NSwwLDBdLDg3Mjk6Wy0uMDU1NTUsLjQ0NDQ1LDAsMF0sODczMDpbLjIsLjgsMCwwXSw4NzMzOlswLC40MzA1NiwwLDBdLDg3MzQ6WzAsLjQzMDU2LDAsMF0sODczNjpbMCwuNjkyMjQsMCwwXSw4NzM5OlsuMjUsLjc1LDAsMF0sODc0MTpbLjI1LC43NSwwLDBdLDg3NDM6WzAsLjU1NTU2LDAsMF0sODc0NDpbMCwuNTU1NTYsMCwwXSw4NzQ1OlswLC41NTU1NiwwLDBdLDg3NDY6WzAsLjU1NTU2LDAsMF0sODc0NzpbLjE5NDQ0LC42OTQ0NCwuMTExMTEsMF0sODc2NDpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NzY4OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODc3MTpbLS4wMzYyNSwuNDYzNzUsMCwwXSw4NzczOlstLjAyMiwuNTg5LDAsMF0sODc3NjpbLS4wMTY4OCwuNDgzMTIsMCwwXSw4NzgxOlstLjAzNjI1LC40NjM3NSwwLDBdLDg3ODQ6Wy0uMTMzLC42NywwLDBdLDg4MDA6Wy4yMTUsLjcxNiwwLDBdLDg4MDE6Wy0uMDM2MjUsLjQ2Mzc1LDAsMF0sODgwNDpbLjEzNTk3LC42MzU5NywwLDBdLDg4MDU6Wy4xMzU5NywuNjM1OTcsMCwwXSw4ODEwOlsuMDM5MSwuNTM5MSwwLDBdLDg4MTE6Wy4wMzkxLC41MzkxLDAsMF0sODgyNjpbLjAzOTEsLjUzOTEsMCwwXSw4ODI3OlsuMDM5MSwuNTM5MSwwLDBdLDg4MzQ6Wy4wMzkxLC41MzkxLDAsMF0sODgzNTpbLjAzOTEsLjUzOTEsMCwwXSw4ODM4OlsuMTM1OTcsLjYzNTk3LDAsMF0sODgzOTpbLjEzNTk3LC42MzU5NywwLDBdLDg4NDY6WzAsLjU1NTU2LDAsMF0sODg0OTpbLjEzNTk3LC42MzU5NywwLDBdLDg4NTA6Wy4xMzU5NywuNjM1OTcsMCwwXSw4ODUxOlswLC41NTU1NiwwLDBdLDg4NTI6WzAsLjU1NTU2LDAsMF0sODg1MzpbLjA4MzMzLC41ODMzMywwLDBdLDg4NTQ6Wy4wODMzMywuNTgzMzMsMCwwXSw4ODU1OlsuMDgzMzMsLjU4MzMzLDAsMF0sODg1NjpbLjA4MzMzLC41ODMzMywwLDBdLDg4NTc6Wy4wODMzMywuNTgzMzMsMCwwXSw4ODY2OlswLC42OTQ0NCwwLDBdLDg4Njc6WzAsLjY5NDQ0LDAsMF0sODg2ODpbMCwuNjk0NDQsMCwwXSw4ODY5OlswLC42OTQ0NCwwLDBdLDg4NzI6Wy4yNDksLjc1LDAsMF0sODkwMDpbLS4wNTU1NSwuNDQ0NDUsMCwwXSw4OTAxOlstLjA1NTU1LC40NDQ0NSwwLDBdLDg5MDI6Wy0uMDM0NzIsLjQ2NTI4LDAsMF0sODkwNDpbLjAwNSwuNTA1LDAsMF0sODk0MjpbLjAzLC45LDAsMF0sODk0MzpbLS4xOSwuMzEsMCwwXSw4OTQ1OlstLjEsLjgyLDAsMF0sODk2ODpbLjI1LC43NSwwLDBdLDg5Njk6Wy4yNSwuNzUsMCwwXSw4OTcwOlsuMjUsLjc1LDAsMF0sODk3MTpbLjI1LC43NSwwLDBdLDg5OTQ6Wy0uMTQyMzYsLjM1NzY0LDAsMF0sODk5NTpbLS4xNDIzNiwuMzU3NjQsMCwwXSw5MTM2OlsuMjQ0LC43NDQsMCwwXSw5MTM3OlsuMjQ0LC43NDQsMCwwXSw5NjUxOlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTY1NzpbLS4wMzQ3MiwuNDY1MjgsMCwwXSw5NjYxOlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTY2NzpbLS4wMzQ3MiwuNDY1MjgsMCwwXSw5NzExOlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTgyNDpbLjEyOTYzLC42OTQ0NCwwLDBdLDk4MjU6Wy4xMjk2MywuNjk0NDQsMCwwXSw5ODI2OlsuMTI5NjMsLjY5NDQ0LDAsMF0sOTgyNzpbLjEyOTYzLC42OTQ0NCwwLDBdLDk4Mzc6WzAsLjc1LDAsMF0sOTgzODpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk4Mzk6Wy4xOTQ0NCwuNjk0NDQsMCwwXSwxMDIxNjpbLjI1LC43NSwwLDBdLDEwMjE3OlsuMjUsLjc1LDAsMF0sMTAyMjI6Wy4yNDQsLjc0NCwwLDBdLDEwMjIzOlsuMjQ0LC43NDQsMCwwXSwxMDIyOTpbLjAxMSwuNTExLDAsMF0sMTAyMzA6Wy4wMTEsLjUxMSwwLDBdLDEwMjMxOlsuMDExLC41MTEsMCwwXSwxMDIzMjpbLjAyNCwuNTI1LDAsMF0sMTAyMzM6Wy4wMjQsLjUyNSwwLDBdLDEwMjM0OlsuMDI0LC41MjUsMCwwXSwxMDIzNjpbLjAxMSwuNTExLDAsMF0sMTA4MTU6WzAsLjY4MzMzLDAsMF0sMTA5Mjc6Wy4xMzU5NywuNjM1OTcsMCwwXSwxMDkyODpbLjEzNTk3LC42MzU5NywwLDBdfSxcIk1hdGgtQm9sZEl0YWxpY1wiOns0NzpbLjE5NDQ0LC42OTQ0NCwwLDBdLDY1OlswLC42ODYxMSwwLDBdLDY2OlswLC42ODYxMSwuMDQ4MzUsMF0sNjc6WzAsLjY4NjExLC4wNjk3OSwwXSw2ODpbMCwuNjg2MTEsLjAzMTk0LDBdLDY5OlswLC42ODYxMSwuMDU0NTEsMF0sNzA6WzAsLjY4NjExLC4xNTk3MiwwXSw3MTpbMCwuNjg2MTEsMCwwXSw3MjpbMCwuNjg2MTEsLjA4MjI5LDBdLDczOlswLC42ODYxMSwuMDc3NzgsMF0sNzQ6WzAsLjY4NjExLC4xMDA2OSwwXSw3NTpbMCwuNjg2MTEsLjA2OTc5LDBdLDc2OlswLC42ODYxMSwwLDBdLDc3OlswLC42ODYxMSwuMTE0MjQsMF0sNzg6WzAsLjY4NjExLC4xMTQyNCwwXSw3OTpbMCwuNjg2MTEsLjAzMTk0LDBdLDgwOlswLC42ODYxMSwuMTU5NzIsMF0sODE6Wy4xOTQ0NCwuNjg2MTEsMCwwXSw4MjpbMCwuNjg2MTEsLjAwNDIxLDBdLDgzOlswLC42ODYxMSwuMDUzODIsMF0sODQ6WzAsLjY4NjExLC4xNTk3MiwwXSw4NTpbMCwuNjg2MTEsLjExNDI0LDBdLDg2OlswLC42ODYxMSwuMjU1NTUsMF0sODc6WzAsLjY4NjExLC4xNTk3MiwwXSw4ODpbMCwuNjg2MTEsLjA3Nzc4LDBdLDg5OlswLC42ODYxMSwuMjU1NTUsMF0sOTA6WzAsLjY4NjExLC4wNjk3OSwwXSw5NzpbMCwuNDQ0NDQsMCwwXSw5ODpbMCwuNjk0NDQsMCwwXSw5OTpbMCwuNDQ0NDQsMCwwXSwxMDA6WzAsLjY5NDQ0LDAsMF0sMTAxOlswLC40NDQ0NCwwLDBdLDEwMjpbLjE5NDQ0LC42OTQ0NCwuMTEwNDIsMF0sMTAzOlsuMTk0NDQsLjQ0NDQ0LC4wMzcwNCwwXSwxMDQ6WzAsLjY5NDQ0LDAsMF0sMTA1OlswLC42OTMyNiwwLDBdLDEwNjpbLjE5NDQ0LC42OTMyNiwuMDYyMiwwXSwxMDc6WzAsLjY5NDQ0LC4wMTg1MiwwXSwxMDg6WzAsLjY5NDQ0LC4wMDg4LDBdLDEwOTpbMCwuNDQ0NDQsMCwwXSwxMTA6WzAsLjQ0NDQ0LDAsMF0sMTExOlswLC40NDQ0NCwwLDBdLDExMjpbLjE5NDQ0LC40NDQ0NCwwLDBdLDExMzpbLjE5NDQ0LC40NDQ0NCwuMDM3MDQsMF0sMTE0OlswLC40NDQ0NCwuMDMxOTQsMF0sMTE1OlswLC40NDQ0NCwwLDBdLDExNjpbMCwuNjM0OTIsMCwwXSwxMTc6WzAsLjQ0NDQ0LDAsMF0sMTE4OlswLC40NDQ0NCwuMDM3MDQsMF0sMTE5OlswLC40NDQ0NCwuMDI3NzgsMF0sMTIwOlswLC40NDQ0NCwwLDBdLDEyMTpbLjE5NDQ0LC40NDQ0NCwuMDM3MDQsMF0sMTIyOlswLC40NDQ0NCwuMDQyMTMsMF0sOTE1OlswLC42ODYxMSwuMTU5NzIsMF0sOTE2OlswLC42ODYxMSwwLDBdLDkyMDpbMCwuNjg2MTEsLjAzMTk0LDBdLDkyMzpbMCwuNjg2MTEsMCwwXSw5MjY6WzAsLjY4NjExLC4wNzQ1OCwwXSw5Mjg6WzAsLjY4NjExLC4wODIyOSwwXSw5MzE6WzAsLjY4NjExLC4wNTQ1MSwwXSw5MzM6WzAsLjY4NjExLC4xNTk3MiwwXSxcclxuOTM0OlswLC42ODYxMSwwLDBdLDkzNjpbMCwuNjg2MTEsLjExNjUzLDBdLDkzNzpbMCwuNjg2MTEsLjA0ODM1LDBdLDk0NTpbMCwuNDQ0NDQsMCwwXSw5NDY6Wy4xOTQ0NCwuNjk0NDQsLjAzNDAzLDBdLDk0NzpbLjE5NDQ0LC40NDQ0NCwuMDYzODksMF0sOTQ4OlswLC42OTQ0NCwuMDM4MTksMF0sOTQ5OlswLC40NDQ0NCwwLDBdLDk1MDpbLjE5NDQ0LC42OTQ0NCwuMDYyMTUsMF0sOTUxOlsuMTk0NDQsLjQ0NDQ0LC4wMzcwNCwwXSw5NTI6WzAsLjY5NDQ0LC4wMzE5NCwwXSw5NTM6WzAsLjQ0NDQ0LDAsMF0sOTU0OlswLC40NDQ0NCwwLDBdLDk1NTpbMCwuNjk0NDQsMCwwXSw5NTY6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSw5NTc6WzAsLjQ0NDQ0LC4wNjg5OCwwXSw5NTg6Wy4xOTQ0NCwuNjk0NDQsLjAzMDIxLDBdLDk1OTpbMCwuNDQ0NDQsMCwwXSw5NjA6WzAsLjQ0NDQ0LC4wMzcwNCwwXSw5NjE6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSw5NjI6Wy4wOTcyMiwuNDQ0NDQsLjA3OTE3LDBdLDk2MzpbMCwuNDQ0NDQsLjAzNzA0LDBdLDk2NDpbMCwuNDQ0NDQsLjEzNDcyLDBdLDk2NTpbMCwuNDQ0NDQsLjAzNzA0LDBdLDk2NjpbLjE5NDQ0LC40NDQ0NCwwLDBdLDk2NzpbLjE5NDQ0LC40NDQ0NCwwLDBdLDk2ODpbLjE5NDQ0LC42OTQ0NCwuMDM3MDQsMF0sOTY5OlswLC40NDQ0NCwuMDM3MDQsMF0sOTc3OlswLC42OTQ0NCwwLDBdLDk4MTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk4MjpbMCwuNDQ0NDQsLjAzMTk0LDBdLDEwMDk6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSwxMDEzOlswLC40NDQ0NCwwLDBdfSxcIk1hdGgtSXRhbGljXCI6ezQ3OlsuMTk0NDQsLjY5NDQ0LDAsMF0sNjU6WzAsLjY4MzMzLDAsLjEzODg5XSw2NjpbMCwuNjgzMzMsLjA1MDE3LC4wODMzNF0sNjc6WzAsLjY4MzMzLC4wNzE1MywuMDgzMzRdLDY4OlswLC42ODMzMywuMDI3NzgsLjA1NTU2XSw2OTpbMCwuNjgzMzMsLjA1NzY0LC4wODMzNF0sNzA6WzAsLjY4MzMzLC4xMzg4OSwuMDgzMzRdLDcxOlswLC42ODMzMywwLC4wODMzNF0sNzI6WzAsLjY4MzMzLC4wODEyNSwuMDU1NTZdLDczOlswLC42ODMzMywuMDc4NDcsLjExMTExXSw3NDpbMCwuNjgzMzMsLjA5NjE4LC4xNjY2N10sNzU6WzAsLjY4MzMzLC4wNzE1MywuMDU1NTZdLDc2OlswLC42ODMzMywwLC4wMjc3OF0sNzc6WzAsLjY4MzMzLC4xMDkwMywuMDgzMzRdLDc4OlswLC42ODMzMywuMTA5MDMsLjA4MzM0XSw3OTpbMCwuNjgzMzMsLjAyNzc4LC4wODMzNF0sODA6WzAsLjY4MzMzLC4xMzg4OSwuMDgzMzRdLDgxOlsuMTk0NDQsLjY4MzMzLDAsLjA4MzM0XSw4MjpbMCwuNjgzMzMsLjAwNzczLC4wODMzNF0sODM6WzAsLjY4MzMzLC4wNTc2NCwuMDgzMzRdLDg0OlswLC42ODMzMywuMTM4ODksLjA4MzM0XSw4NTpbMCwuNjgzMzMsLjEwOTAzLC4wMjc3OF0sODY6WzAsLjY4MzMzLC4yMjIyMiwwXSw4NzpbMCwuNjgzMzMsLjEzODg5LDBdLDg4OlswLC42ODMzMywuMDc4NDcsLjA4MzM0XSw4OTpbMCwuNjgzMzMsLjIyMjIyLDBdLDkwOlswLC42ODMzMywuMDcxNTMsLjA4MzM0XSw5NzpbMCwuNDMwNTYsMCwwXSw5ODpbMCwuNjk0NDQsMCwwXSw5OTpbMCwuNDMwNTYsMCwuMDU1NTZdLDEwMDpbMCwuNjk0NDQsMCwuMTY2NjddLDEwMTpbMCwuNDMwNTYsMCwuMDU1NTZdLDEwMjpbLjE5NDQ0LC42OTQ0NCwuMTA3NjQsLjE2NjY3XSwxMDM6Wy4xOTQ0NCwuNDMwNTYsLjAzNTg4LC4wMjc3OF0sMTA0OlswLC42OTQ0NCwwLDBdLDEwNTpbMCwuNjU5NTIsMCwwXSwxMDY6Wy4xOTQ0NCwuNjU5NTIsLjA1NzI0LDBdLDEwNzpbMCwuNjk0NDQsLjAzMTQ4LDBdLDEwODpbMCwuNjk0NDQsLjAxOTY4LC4wODMzNF0sMTA5OlswLC40MzA1NiwwLDBdLDExMDpbMCwuNDMwNTYsMCwwXSwxMTE6WzAsLjQzMDU2LDAsLjA1NTU2XSwxMTI6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDExMzpbLjE5NDQ0LC40MzA1NiwuMDM1ODgsLjA4MzM0XSwxMTQ6WzAsLjQzMDU2LC4wMjc3OCwuMDU1NTZdLDExNTpbMCwuNDMwNTYsMCwuMDU1NTZdLDExNjpbMCwuNjE1MDgsMCwuMDgzMzRdLDExNzpbMCwuNDMwNTYsMCwuMDI3NzhdLDExODpbMCwuNDMwNTYsLjAzNTg4LC4wMjc3OF0sMTE5OlswLC40MzA1NiwuMDI2OTEsLjA4MzM0XSwxMjA6WzAsLjQzMDU2LDAsLjAyNzc4XSwxMjE6Wy4xOTQ0NCwuNDMwNTYsLjAzNTg4LC4wNTU1Nl0sMTIyOlswLC40MzA1NiwuMDQzOTgsLjA1NTU2XSw5MTU6WzAsLjY4MzMzLC4xMzg4OSwuMDgzMzRdLDkxNjpbMCwuNjgzMzMsMCwuMTY2NjddLDkyMDpbMCwuNjgzMzMsLjAyNzc4LC4wODMzNF0sOTIzOlswLC42ODMzMywwLC4xNjY2N10sOTI2OlswLC42ODMzMywuMDc1NjksLjA4MzM0XSw5Mjg6WzAsLjY4MzMzLC4wODEyNSwuMDU1NTZdLDkzMTpbMCwuNjgzMzMsLjA1NzY0LC4wODMzNF0sOTMzOlswLC42ODMzMywuMTM4ODksLjA1NTU2XSw5MzQ6WzAsLjY4MzMzLDAsLjA4MzM0XSw5MzY6WzAsLjY4MzMzLC4xMSwuMDU1NTZdLDkzNzpbMCwuNjgzMzMsLjA1MDE3LC4wODMzNF0sOTQ1OlswLC40MzA1NiwuMDAzNywuMDI3NzhdLDk0NjpbLjE5NDQ0LC42OTQ0NCwuMDUyNzgsLjA4MzM0XSw5NDc6Wy4xOTQ0NCwuNDMwNTYsLjA1NTU2LDBdLDk0ODpbMCwuNjk0NDQsLjAzNzg1LC4wNTU1Nl0sOTQ5OlswLC40MzA1NiwwLC4wODMzNF0sOTUwOlsuMTk0NDQsLjY5NDQ0LC4wNzM3OCwuMDgzMzRdLDk1MTpbLjE5NDQ0LC40MzA1NiwuMDM1ODgsLjA1NTU2XSw5NTI6WzAsLjY5NDQ0LC4wMjc3OCwuMDgzMzRdLDk1MzpbMCwuNDMwNTYsMCwuMDU1NTZdLDk1NDpbMCwuNDMwNTYsMCwwXSw5NTU6WzAsLjY5NDQ0LDAsMF0sOTU2OlsuMTk0NDQsLjQzMDU2LDAsLjAyNzc4XSw5NTc6WzAsLjQzMDU2LC4wNjM2NiwuMDI3NzhdLDk1ODpbLjE5NDQ0LC42OTQ0NCwuMDQ2MDEsLjExMTExXSw5NTk6WzAsLjQzMDU2LDAsLjA1NTU2XSw5NjA6WzAsLjQzMDU2LC4wMzU4OCwwXSw5NjE6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDk2MjpbLjA5NzIyLC40MzA1NiwuMDc5ODYsLjA4MzM0XSw5NjM6WzAsLjQzMDU2LC4wMzU4OCwwXSw5NjQ6WzAsLjQzMDU2LC4xMTMyLC4wMjc3OF0sOTY1OlswLC40MzA1NiwuMDM1ODgsLjAyNzc4XSw5NjY6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDk2NzpbLjE5NDQ0LC40MzA1NiwwLC4wNTU1Nl0sOTY4OlsuMTk0NDQsLjY5NDQ0LC4wMzU4OCwuMTExMTFdLDk2OTpbMCwuNDMwNTYsLjAzNTg4LDBdLDk3NzpbMCwuNjk0NDQsMCwuMDgzMzRdLDk4MTpbLjE5NDQ0LC42OTQ0NCwwLC4wODMzNF0sOTgyOlswLC40MzA1NiwuMDI3NzgsMF0sMTAwOTpbLjE5NDQ0LC40MzA1NiwwLC4wODMzNF0sMTAxMzpbMCwuNDMwNTYsMCwuMDU1NTZdfSxcIk1hdGgtUmVndWxhclwiOns2NTpbMCwuNjgzMzMsMCwuMTM4ODldLDY2OlswLC42ODMzMywuMDUwMTcsLjA4MzM0XSw2NzpbMCwuNjgzMzMsLjA3MTUzLC4wODMzNF0sNjg6WzAsLjY4MzMzLC4wMjc3OCwuMDU1NTZdLDY5OlswLC42ODMzMywuMDU3NjQsLjA4MzM0XSw3MDpbMCwuNjgzMzMsLjEzODg5LC4wODMzNF0sNzE6WzAsLjY4MzMzLDAsLjA4MzM0XSw3MjpbMCwuNjgzMzMsLjA4MTI1LC4wNTU1Nl0sNzM6WzAsLjY4MzMzLC4wNzg0NywuMTExMTFdLDc0OlswLC42ODMzMywuMDk2MTgsLjE2NjY3XSw3NTpbMCwuNjgzMzMsLjA3MTUzLC4wNTU1Nl0sNzY6WzAsLjY4MzMzLDAsLjAyNzc4XSw3NzpbMCwuNjgzMzMsLjEwOTAzLC4wODMzNF0sNzg6WzAsLjY4MzMzLC4xMDkwMywuMDgzMzRdLDc5OlswLC42ODMzMywuMDI3NzgsLjA4MzM0XSw4MDpbMCwuNjgzMzMsLjEzODg5LC4wODMzNF0sODE6Wy4xOTQ0NCwuNjgzMzMsMCwuMDgzMzRdLDgyOlswLC42ODMzMywuMDA3NzMsLjA4MzM0XSw4MzpbMCwuNjgzMzMsLjA1NzY0LC4wODMzNF0sODQ6WzAsLjY4MzMzLC4xMzg4OSwuMDgzMzRdLDg1OlswLC42ODMzMywuMTA5MDMsLjAyNzc4XSw4NjpbMCwuNjgzMzMsLjIyMjIyLDBdLDg3OlswLC42ODMzMywuMTM4ODksMF0sODg6WzAsLjY4MzMzLC4wNzg0NywuMDgzMzRdLDg5OlswLC42ODMzMywuMjIyMjIsMF0sOTA6WzAsLjY4MzMzLC4wNzE1MywuMDgzMzRdLDk3OlswLC40MzA1NiwwLDBdLDk4OlswLC42OTQ0NCwwLDBdLDk5OlswLC40MzA1NiwwLC4wNTU1Nl0sMTAwOlswLC42OTQ0NCwwLC4xNjY2N10sMTAxOlswLC40MzA1NiwwLC4wNTU1Nl0sMTAyOlsuMTk0NDQsLjY5NDQ0LC4xMDc2NCwuMTY2NjddLDEwMzpbLjE5NDQ0LC40MzA1NiwuMDM1ODgsLjAyNzc4XSwxMDQ6WzAsLjY5NDQ0LDAsMF0sMTA1OlswLC42NTk1MiwwLDBdLDEwNjpbLjE5NDQ0LC42NTk1MiwuMDU3MjQsMF0sMTA3OlswLC42OTQ0NCwuMDMxNDgsMF0sMTA4OlswLC42OTQ0NCwuMDE5NjgsLjA4MzM0XSwxMDk6WzAsLjQzMDU2LDAsMF0sMTEwOlswLC40MzA1NiwwLDBdLDExMTpbMCwuNDMwNTYsMCwuMDU1NTZdLDExMjpbLjE5NDQ0LC40MzA1NiwwLC4wODMzNF0sMTEzOlsuMTk0NDQsLjQzMDU2LC4wMzU4OCwuMDgzMzRdLDExNDpbMCwuNDMwNTYsLjAyNzc4LC4wNTU1Nl0sMTE1OlswLC40MzA1NiwwLC4wNTU1Nl0sMTE2OlswLC42MTUwOCwwLC4wODMzNF0sMTE3OlswLC40MzA1NiwwLC4wMjc3OF0sMTE4OlswLC40MzA1NiwuMDM1ODgsLjAyNzc4XSwxMTk6WzAsLjQzMDU2LC4wMjY5MSwuMDgzMzRdLDEyMDpbMCwuNDMwNTYsMCwuMDI3NzhdLDEyMTpbLjE5NDQ0LC40MzA1NiwuMDM1ODgsLjA1NTU2XSwxMjI6WzAsLjQzMDU2LC4wNDM5OCwuMDU1NTZdLDkxNTpbMCwuNjgzMzMsLjEzODg5LC4wODMzNF0sOTE2OlswLC42ODMzMywwLC4xNjY2N10sOTIwOlswLC42ODMzMywuMDI3NzgsLjA4MzM0XSw5MjM6WzAsLjY4MzMzLDAsLjE2NjY3XSw5MjY6WzAsLjY4MzMzLC4wNzU2OSwuMDgzMzRdLDkyODpbMCwuNjgzMzMsLjA4MTI1LC4wNTU1Nl0sOTMxOlswLC42ODMzMywuMDU3NjQsLjA4MzM0XSw5MzM6WzAsLjY4MzMzLC4xMzg4OSwuMDU1NTZdLDkzNDpbMCwuNjgzMzMsMCwuMDgzMzRdLDkzNjpbMCwuNjgzMzMsLjExLC4wNTU1Nl0sOTM3OlswLC42ODMzMywuMDUwMTcsLjA4MzM0XSw5NDU6WzAsLjQzMDU2LC4wMDM3LC4wMjc3OF0sOTQ2OlsuMTk0NDQsLjY5NDQ0LC4wNTI3OCwuMDgzMzRdLDk0NzpbLjE5NDQ0LC40MzA1NiwuMDU1NTYsMF0sOTQ4OlswLC42OTQ0NCwuMDM3ODUsLjA1NTU2XSw5NDk6WzAsLjQzMDU2LDAsLjA4MzM0XSw5NTA6Wy4xOTQ0NCwuNjk0NDQsLjA3Mzc4LC4wODMzNF0sOTUxOlsuMTk0NDQsLjQzMDU2LC4wMzU4OCwuMDU1NTZdLDk1MjpbMCwuNjk0NDQsLjAyNzc4LC4wODMzNF0sOTUzOlswLC40MzA1NiwwLC4wNTU1Nl0sOTU0OlswLC40MzA1NiwwLDBdLDk1NTpbMCwuNjk0NDQsMCwwXSw5NTY6Wy4xOTQ0NCwuNDMwNTYsMCwuMDI3NzhdLDk1NzpbMCwuNDMwNTYsLjA2MzY2LC4wMjc3OF0sOTU4OlsuMTk0NDQsLjY5NDQ0LC4wNDYwMSwuMTExMTFdLDk1OTpbMCwuNDMwNTYsMCwuMDU1NTZdLDk2MDpbMCwuNDMwNTYsLjAzNTg4LDBdLDk2MTpbLjE5NDQ0LC40MzA1NiwwLC4wODMzNF0sOTYyOlsuMDk3MjIsLjQzMDU2LC4wNzk4NiwuMDgzMzRdLDk2MzpbMCwuNDMwNTYsLjAzNTg4LDBdLDk2NDpbMCwuNDMwNTYsLjExMzIsLjAyNzc4XSw5NjU6WzAsLjQzMDU2LC4wMzU4OCwuMDI3NzhdLDk2NjpbLjE5NDQ0LC40MzA1NiwwLC4wODMzNF0sOTY3OlsuMTk0NDQsLjQzMDU2LDAsLjA1NTU2XSw5Njg6Wy4xOTQ0NCwuNjk0NDQsLjAzNTg4LC4xMTExMV0sOTY5OlswLC40MzA1NiwuMDM1ODgsMF0sOTc3OlswLC42OTQ0NCwwLC4wODMzNF0sOTgxOlsuMTk0NDQsLjY5NDQ0LDAsLjA4MzM0XSw5ODI6WzAsLjQzMDU2LC4wMjc3OCwwXSwxMDA5OlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSwxMDEzOlswLC40MzA1NiwwLC4wNTU1Nl19LFwiU2Fuc1NlcmlmLVJlZ3VsYXJcIjp7MzM6WzAsLjY5NDQ0LDAsMF0sMzQ6WzAsLjY5NDQ0LDAsMF0sMzU6Wy4xOTQ0NCwuNjk0NDQsMCwwXSwzNjpbLjA1NTU2LC43NSwwLDBdLDM3OlsuMDU1NTYsLjc1LDAsMF0sMzg6WzAsLjY5NDQ0LDAsMF0sMzk6WzAsLjY5NDQ0LDAsMF0sNDA6Wy4yNSwuNzUsMCwwXSw0MTpbLjI1LC43NSwwLDBdLDQyOlswLC43NSwwLDBdLDQzOlsuMDgzMzMsLjU4MzMzLDAsMF0sNDQ6Wy4xMjUsLjA4MzMzLDAsMF0sNDU6WzAsLjQ0NDQ0LDAsMF0sNDY6WzAsLjA4MzMzLDAsMF0sNDc6Wy4yNSwuNzUsMCwwXSw0ODpbMCwuNjU1NTYsMCwwXSw0OTpbMCwuNjU1NTYsMCwwXSw1MDpbMCwuNjU1NTYsMCwwXSw1MTpbMCwuNjU1NTYsMCwwXSw1MjpbMCwuNjU1NTYsMCwwXSw1MzpbMCwuNjU1NTYsMCwwXSw1NDpbMCwuNjU1NTYsMCwwXSw1NTpbMCwuNjU1NTYsMCwwXSw1NjpbMCwuNjU1NTYsMCwwXSw1NzpbMCwuNjU1NTYsMCwwXSw1ODpbMCwuNDQ0NDQsMCwwXSw1OTpbLjEyNSwuNDQ0NDQsMCwwXSw2MTpbLS4xMywuMzcsMCwwXSw2MzpbMCwuNjk0NDQsMCwwXSw2NDpbMCwuNjk0NDQsMCwwXSw2NTpbMCwuNjk0NDQsMCwwXSw2NjpbMCwuNjk0NDQsMCwwXSw2NzpbMCwuNjk0NDQsMCwwXSw2ODpbMCwuNjk0NDQsMCwwXSw2OTpbMCwuNjk0NDQsMCwwXSw3MDpbMCwuNjk0NDQsMCwwXSw3MTpbMCwuNjk0NDQsMCwwXSw3MjpbMCwuNjk0NDQsMCwwXSw3MzpbMCwuNjk0NDQsMCwwXSw3NDpbMCwuNjk0NDQsMCwwXSw3NTpbMCwuNjk0NDQsMCwwXSw3NjpbMCwuNjk0NDQsMCwwXSw3NzpbMCwuNjk0NDQsMCwwXSw3ODpbMCwuNjk0NDQsMCwwXSw3OTpbMCwuNjk0NDQsMCwwXSw4MDpbMCwuNjk0NDQsMCwwXSw4MTpbLjEyNSwuNjk0NDQsMCwwXSw4MjpbMCwuNjk0NDQsMCwwXSw4MzpbMCwuNjk0NDQsMCwwXSw4NDpbMCwuNjk0NDQsMCwwXSw4NTpbMCwuNjk0NDQsMCwwXSw4NjpbMCwuNjk0NDQsLjAxMzg5LDBdLDg3OlswLC42OTQ0NCwuMDEzODksMF0sODg6WzAsLjY5NDQ0LDAsMF0sODk6WzAsLjY5NDQ0LC4wMjUsMF0sOTA6WzAsLjY5NDQ0LDAsMF0sOTE6Wy4yNSwuNzUsMCwwXSw5MzpbLjI1LC43NSwwLDBdLDk0OlswLC42OTQ0NCwwLDBdLDk1OlsuMzUsLjA5NDQ0LC4wMjc3OCwwXSw5NzpbMCwuNDQ0NDQsMCwwXSw5ODpbMCwuNjk0NDQsMCwwXSw5OTpbMCwuNDQ0NDQsMCwwXSwxMDA6WzAsLjY5NDQ0LDAsMF0sMTAxOlswLC40NDQ0NCwwLDBdLDEwMjpbMCwuNjk0NDQsLjA2OTQ0LDBdLDEwMzpbLjE5NDQ0LC40NDQ0NCwuMDEzODksMF0sMTA0OlswLC42OTQ0NCwwLDBdLDEwNTpbMCwuNjc5MzcsMCwwXSwxMDY6Wy4xOTQ0NCwuNjc5MzcsMCwwXSwxMDc6WzAsLjY5NDQ0LDAsMF0sMTA4OlswLC42OTQ0NCwwLDBdLDEwOTpbMCwuNDQ0NDQsMCwwXSwxMTA6WzAsLjQ0NDQ0LDAsMF0sMTExOlswLC40NDQ0NCwwLDBdLDExMjpbLjE5NDQ0LC40NDQ0NCwwLDBdLDExMzpbLjE5NDQ0LC40NDQ0NCwwLDBdLDExNDpbMCwuNDQ0NDQsLjAxMzg5LDBdLDExNTpbMCwuNDQ0NDQsMCwwXSwxMTY6WzAsLjU3MTQzLDAsMF0sMTE3OlswLC40NDQ0NCwwLDBdLDExODpbMCwuNDQ0NDQsLjAxMzg5LDBdLDExOTpbMCwuNDQ0NDQsLjAxMzg5LDBdLDEyMDpbMCwuNDQ0NDQsMCwwXSwxMjE6Wy4xOTQ0NCwuNDQ0NDQsLjAxMzg5LDBdLDEyMjpbMCwuNDQ0NDQsMCwwXSwxMjY6Wy4zNSwuMzI2NTksMCwwXSwzMDU6WzAsLjQ0NDQ0LDAsMF0sNTY3OlsuMTk0NDQsLjQ0NDQ0LDAsMF0sNzY4OlswLC42OTQ0NCwwLDBdLDc2OTpbMCwuNjk0NDQsMCwwXSw3NzA6WzAsLjY5NDQ0LDAsMF0sNzcxOlswLC42NzY1OSwwLDBdLDc3MjpbMCwuNjA4ODksMCwwXSw3NzQ6WzAsLjY5NDQ0LDAsMF0sNzc1OlswLC42NzkzNywwLDBdLDc3NjpbMCwuNjc5MzcsMCwwXSw3Nzg6WzAsLjY5NDQ0LDAsMF0sNzc5OlswLC42OTQ0NCwwLDBdLDc4MDpbMCwuNjMxOTQsMCwwXSw5MTU6WzAsLjY5NDQ0LDAsMF0sOTE2OlswLC42OTQ0NCwwLDBdLDkyMDpbMCwuNjk0NDQsMCwwXSw5MjM6WzAsLjY5NDQ0LDAsMF0sOTI2OlswLC42OTQ0NCwwLDBdLDkyODpbMCwuNjk0NDQsMCwwXSw5MzE6WzAsLjY5NDQ0LDAsMF0sOTMzOlswLC42OTQ0NCwwLDBdLDkzNDpbMCwuNjk0NDQsMCwwXSw5MzY6WzAsLjY5NDQ0LDAsMF0sOTM3OlswLC42OTQ0NCwwLDBdLDgyMTE6WzAsLjQ0NDQ0LC4wMjc3OCwwXSw4MjEyOlswLC40NDQ0NCwuMDI3NzgsMF0sODIxNjpbMCwuNjk0NDQsMCwwXSw4MjE3OlswLC42OTQ0NCwwLDBdLDgyMjA6WzAsLjY5NDQ0LDAsMF0sODIyMTpbMCwuNjk0NDQsMCwwXX0sXCJTY3JpcHQtUmVndWxhclwiOns2NTpbMCwuNywuMjI5MjUsMF0sNjY6WzAsLjcsLjA0MDg3LDBdLDY3OlswLC43LC4xNjg5LDBdLDY4OlswLC43LC4wOTM3MSwwXSw2OTpbMCwuNywuMTg1ODMsMF0sNzA6WzAsLjcsLjEzNjM0LDBdLDcxOlswLC43LC4xNzMyMiwwXSw3MjpbMCwuNywuMjk2OTQsMF0sNzM6WzAsLjcsLjE5MTg5LDBdLDc0OlsuMjc3NzgsLjcsLjE5MTg5LDBdLDc1OlswLC43LC4zMTI1OSwwXSw3NjpbMCwuNywuMTkxODksMF0sNzc6WzAsLjcsLjE1OTgxLDBdLDc4OlswLC43LC4zNTI1LDBdLDc5OlswLC43LC4wODA3OCwwXSw4MDpbMCwuNywuMDgwNzgsMF0sODE6WzAsLjcsLjAzMzA1LDBdLDgyOlswLC43LC4wNjI1OSwwXSw4MzpbMCwuNywuMTkxODksMF0sODQ6WzAsLjcsLjI5MDg3LDBdLDg1OlswLC43LC4yNTgxNSwwXSw4NjpbMCwuNywuMjc1MjMsMF0sODc6WzAsLjcsLjI3NTIzLDBdLDg4OlswLC43LC4yNjAwNiwwXSw4OTpbMCwuNywuMjkzOSwwXSw5MDpbMCwuNywuMjQwMzcsMF19LFwiU2l6ZTEtUmVndWxhclwiOns0MDpbLjM1MDAxLC44NSwwLDBdLDQxOlsuMzUwMDEsLjg1LDAsMF0sNDc6Wy4zNTAwMSwuODUsMCwwXSw5MTpbLjM1MDAxLC44NSwwLDBdLDkyOlsuMzUwMDEsLjg1LDAsMF0sOTM6Wy4zNTAwMSwuODUsMCwwXSwxMjM6Wy4zNTAwMSwuODUsMCwwXSwxMjU6Wy4zNTAwMSwuODUsMCwwXSw3MTA6WzAsLjcyMjIyLDAsMF0sNzMyOlswLC43MjIyMiwwLDBdLDc3MDpbMCwuNzIyMjIsMCwwXSw3NzE6WzAsLjcyMjIyLDAsMF0sODIxNDpbLTk5ZS01LC42MDEsMCwwXSw4NTkzOlsxZS01LC42LDAsMF0sODU5NTpbMWUtNSwuNiwwLDBdLDg2NTc6WzFlLTUsLjYsMCwwXSw4NjU5OlsxZS01LC42LDAsMF0sODcxOTpbLjI1MDAxLC43NSwwLDBdLDg3MjA6Wy4yNTAwMSwuNzUsMCwwXSw4NzIxOlsuMjUwMDEsLjc1LDAsMF0sODczMDpbLjM1MDAxLC44NSwwLDBdLDg3Mzk6Wy0uMDA1OTksLjYwNiwwLDBdLDg3NDE6Wy0uMDA1OTksLjYwNiwwLDBdLDg3NDc6Wy4zMDYxMiwuODA1LC4xOTQ0NSwwXSw4NzQ4OlsuMzA2LC44MDUsLjE5NDQ1LDBdLDg3NDk6Wy4zMDYsLjgwNSwuMTk0NDUsMF0sODc1MDpbLjMwNjEyLC44MDUsLjE5NDQ1LDBdLDg4OTY6Wy4yNTAwMSwuNzUsMCwwXSw4ODk3OlsuMjUwMDEsLjc1LDAsMF0sODg5ODpbLjI1MDAxLC43NSwwLDBdLDg4OTk6Wy4yNTAwMSwuNzUsMCwwXSw4OTY4OlsuMzUwMDEsLjg1LDAsMF0sODk2OTpbLjM1MDAxLC44NSwwLDBdLDg5NzA6Wy4zNTAwMSwuODUsMCwwXSw4OTcxOlsuMzUwMDEsLjg1LDAsMF0sOTE2ODpbLTk5ZS01LC42MDEsMCwwXSwxMDIxNjpbLjM1MDAxLC44NSwwLDBdLDEwMjE3OlsuMzUwMDEsLjg1LDAsMF0sMTA3NTI6Wy4yNTAwMSwuNzUsMCwwXSwxMDc1MzpbLjI1MDAxLC43NSwwLDBdLDEwNzU0OlsuMjUwMDEsLjc1LDAsMF0sMTA3NTY6Wy4yNTAwMSwuNzUsMCwwXSwxMDc1ODpbLjI1MDAxLC43NSwwLDBdfSxcIlNpemUyLVJlZ3VsYXJcIjp7NDA6Wy42NTAwMiwxLjE1LDAsMF0sNDE6Wy42NTAwMiwxLjE1LDAsMF0sNDc6Wy42NTAwMiwxLjE1LDAsMF0sOTE6Wy42NTAwMiwxLjE1LDAsMF0sOTI6Wy42NTAwMiwxLjE1LDAsMF0sOTM6Wy42NTAwMiwxLjE1LDAsMF0sMTIzOlsuNjUwMDIsMS4xNSwwLDBdLDEyNTpbLjY1MDAyLDEuMTUsMCwwXSw3MTA6WzAsLjc1LDAsMF0sNzMyOlswLC43NSwwLDBdLDc3MDpbMCwuNzUsMCwwXSw3NzE6WzAsLjc1LDAsMF0sODcxOTpbLjU1MDAxLDEuMDUsMCwwXSw4NzIwOlsuNTUwMDEsMS4wNSwwLDBdLDg3MjE6Wy41NTAwMSwxLjA1LDAsMF0sODczMDpbLjY1MDAyLDEuMTUsMCwwXSw4NzQ3OlsuODYyMjUsMS4zNiwuNDQ0NDUsMF0sODc0ODpbLjg2MiwxLjM2LC40NDQ0NSwwXSw4NzQ5OlsuODYyLDEuMzYsLjQ0NDQ1LDBdLDg3NTA6Wy44NjIyNSwxLjM2LC40NDQ0NSwwXSw4ODk2OlsuNTUwMDEsMS4wNSwwLDBdLDg4OTc6Wy41NTAwMSwxLjA1LDAsMF0sODg5ODpbLjU1MDAxLDEuMDUsMCwwXSw4ODk5OlsuNTUwMDEsMS4wNSwwLDBdLDg5Njg6Wy42NTAwMiwxLjE1LDAsMF0sODk2OTpbLjY1MDAyLDEuMTUsMCwwXSw4OTcwOlsuNjUwMDIsMS4xNSwwLDBdLDg5NzE6Wy42NTAwMiwxLjE1LDAsMF0sMTAyMTY6Wy42NTAwMiwxLjE1LDAsMF0sMTAyMTc6Wy42NTAwMiwxLjE1LDAsMF0sMTA3NTI6Wy41NTAwMSwxLjA1LDAsMF0sMTA3NTM6Wy41NTAwMSwxLjA1LDAsMF0sMTA3NTQ6Wy41NTAwMSwxLjA1LDAsMF0sMTA3NTY6Wy41NTAwMSwxLjA1LDAsMF0sMTA3NTg6Wy41NTAwMSwxLjA1LDAsMF19LFwiU2l6ZTMtUmVndWxhclwiOns0MDpbLjk1MDAzLDEuNDUsMCwwXSw0MTpbLjk1MDAzLDEuNDUsMCwwXSw0NzpbLjk1MDAzLDEuNDUsMCwwXSw5MTpbLjk1MDAzLDEuNDUsMCwwXSw5MjpbLjk1MDAzLDEuNDUsMCwwXSw5MzpbLjk1MDAzLDEuNDUsMCwwXSwxMjM6Wy45NTAwMywxLjQ1LDAsMF0sMTI1OlsuOTUwMDMsMS40NSwwLDBdLDcxMDpbMCwuNzUsMCwwXSw3MzI6WzAsLjc1LDAsMF0sNzcwOlswLC43NSwwLDBdLDc3MTpbMCwuNzUsMCwwXSw4NzMwOlsuOTUwMDMsMS40NSwwLDBdLDg5Njg6Wy45NTAwMywxLjQ1LDAsMF0sODk2OTpbLjk1MDAzLDEuNDUsMCwwXSw4OTcwOlsuOTUwMDMsMS40NSwwLDBdLDg5NzE6Wy45NTAwMywxLjQ1LDAsMF0sMTAyMTY6Wy45NTAwMywxLjQ1LDAsMF0sMTAyMTc6Wy45NTAwMywxLjQ1LDAsMF19LFwiU2l6ZTQtUmVndWxhclwiOns0MDpbMS4yNTAwMywxLjc1LDAsMF0sNDE6WzEuMjUwMDMsMS43NSwwLDBdLDQ3OlsxLjI1MDAzLDEuNzUsMCwwXSw5MTpbMS4yNTAwMywxLjc1LDAsMF0sOTI6WzEuMjUwMDMsMS43NSwwLDBdLDkzOlsxLjI1MDAzLDEuNzUsMCwwXSwxMjM6WzEuMjUwMDMsMS43NSwwLDBdLDEyNTpbMS4yNTAwMywxLjc1LDAsMF0sNzEwOlswLC44MjUsMCwwXSw3MzI6WzAsLjgyNSwwLDBdLDc3MDpbMCwuODI1LDAsMF0sNzcxOlswLC44MjUsMCwwXSw4NzMwOlsxLjI1MDAzLDEuNzUsMCwwXSw4OTY4OlsxLjI1MDAzLDEuNzUsMCwwXSw4OTY5OlsxLjI1MDAzLDEuNzUsMCwwXSw4OTcwOlsxLjI1MDAzLDEuNzUsMCwwXSw4OTcxOlsxLjI1MDAzLDEuNzUsMCwwXSw5MTE1OlsuNjQ1MDIsMS4xNTUsMCwwXSw5MTE2OlsxZS01LC42LDAsMF0sOTExNzpbLjY0NTAyLDEuMTU1LDAsMF0sOTExODpbLjY0NTAyLDEuMTU1LDAsMF0sOTExOTpbMWUtNSwuNiwwLDBdLDkxMjA6Wy42NDUwMiwxLjE1NSwwLDBdLDkxMjE6Wy42NDUwMiwxLjE1NSwwLDBdLDkxMjI6Wy05OWUtNSwuNjAxLDAsMF0sOTEyMzpbLjY0NTAyLDEuMTU1LDAsMF0sOTEyNDpbLjY0NTAyLDEuMTU1LDAsMF0sOTEyNTpbLTk5ZS01LC42MDEsMCwwXSw5MTI2OlsuNjQ1MDIsMS4xNTUsMCwwXSw5MTI3OlsxZS01LC45LDAsMF0sOTEyODpbLjY1MDAyLDEuMTUsMCwwXSw5MTI5OlsuOTAwMDEsMCwwLDBdLDkxMzA6WzAsLjMsMCwwXSw5MTMxOlsxZS01LC45LDAsMF0sOTEzMjpbLjY1MDAyLDEuMTUsMCwwXSw5MTMzOlsuOTAwMDEsMCwwLDBdLDkxNDM6Wy44ODUwMiwuOTE1LDAsMF0sMTAyMTY6WzEuMjUwMDMsMS43NSwwLDBdLDEwMjE3OlsxLjI1MDAzLDEuNzUsMCwwXSw1NzM0NDpbLS4wMDQ5OSwuNjA1LDAsMF0sNTczNDU6Wy0uMDA0OTksLjYwNSwwLDBdLDU3NjgwOlswLC4xMiwwLDBdLDU3NjgxOlswLC4xMiwwLDBdLDU3NjgyOlswLC4xMiwwLDBdLDU3NjgzOlswLC4xMiwwLDBdfSxcIlR5cGV3cml0ZXItUmVndWxhclwiOnszMzpbMCwuNjExMTEsMCwwXSwzNDpbMCwuNjExMTEsMCwwXSwzNTpbMCwuNjExMTEsMCwwXSwzNjpbLjA4MzMzLC42OTQ0NCwwLDBdLDM3OlsuMDgzMzMsLjY5NDQ0LDAsMF0sMzg6WzAsLjYxMTExLDAsMF0sMzk6WzAsLjYxMTExLDAsMF0sNDA6Wy4wODMzMywuNjk0NDQsMCwwXSw0MTpbLjA4MzMzLC42OTQ0NCwwLDBdLDQyOlswLC41MjA4MywwLDBdLDQzOlstLjA4MDU2LC41MzA1NSwwLDBdLDQ0OlsuMTM4ODksLjEyNSwwLDBdLDQ1OlstLjA4MDU2LC41MzA1NSwwLDBdLDQ2OlswLC4xMjUsMCwwXSw0NzpbLjA4MzMzLC42OTQ0NCwwLDBdLDQ4OlswLC42MTExMSwwLDBdLDQ5OlswLC42MTExMSwwLDBdLDUwOlswLC42MTExMSwwLDBdLDUxOlswLC42MTExMSwwLDBdLDUyOlswLC42MTExMSwwLDBdLDUzOlswLC42MTExMSwwLDBdLDU0OlswLC42MTExMSwwLDBdLDU1OlswLC42MTExMSwwLDBdLDU2OlswLC42MTExMSwwLDBdLDU3OlswLC42MTExMSwwLDBdLDU4OlswLC40MzA1NiwwLDBdLDU5OlsuMTM4ODksLjQzMDU2LDAsMF0sNjA6Wy0uMDU1NTYsLjU1NTU2LDAsMF0sNjE6Wy0uMTk1NDksLjQxNTYyLDAsMF0sNjI6Wy0uMDU1NTYsLjU1NTU2LDAsMF0sNjM6WzAsLjYxMTExLDAsMF0sNjQ6WzAsLjYxMTExLDAsMF0sNjU6WzAsLjYxMTExLDAsMF0sNjY6WzAsLjYxMTExLDAsMF0sNjc6WzAsLjYxMTExLDAsMF0sNjg6WzAsLjYxMTExLDAsMF0sNjk6WzAsLjYxMTExLDAsMF0sNzA6WzAsLjYxMTExLDAsMF0sNzE6WzAsLjYxMTExLDAsMF0sNzI6WzAsLjYxMTExLDAsMF0sNzM6WzAsLjYxMTExLDAsMF0sNzQ6WzAsLjYxMTExLDAsMF0sNzU6WzAsLjYxMTExLDAsMF0sNzY6WzAsLjYxMTExLDAsMF0sNzc6WzAsLjYxMTExLDAsMF0sNzg6WzAsLjYxMTExLDAsMF0sNzk6WzAsLjYxMTExLDAsMF0sODA6WzAsLjYxMTExLDAsMF0sODE6Wy4xMzg4OSwuNjExMTEsMCwwXSw4MjpbMCwuNjExMTEsMCwwXSw4MzpbMCwuNjExMTEsMCwwXSw4NDpbMCwuNjExMTEsMCwwXSw4NTpbMCwuNjExMTEsMCwwXSw4NjpbMCwuNjExMTEsMCwwXSw4NzpbMCwuNjExMTEsMCwwXSw4ODpbMCwuNjExMTEsMCwwXSw4OTpbMCwuNjExMTEsMCwwXSw5MDpbMCwuNjExMTEsMCwwXSw5MTpbLjA4MzMzLC42OTQ0NCwwLDBdLDkyOlsuMDgzMzMsLjY5NDQ0LDAsMF0sOTM6Wy4wODMzMywuNjk0NDQsMCwwXSw5NDpbMCwuNjExMTEsMCwwXSw5NTpbLjA5NTE0LDAsMCwwXSw5NjpbMCwuNjExMTEsMCwwXSw5NzpbMCwuNDMwNTYsMCwwXSw5ODpbMCwuNjExMTEsMCwwXSw5OTpbMCwuNDMwNTYsMCwwXSwxMDA6WzAsLjYxMTExLDAsMF0sMTAxOlswLC40MzA1NiwwLDBdLDEwMjpbMCwuNjExMTEsMCwwXSwxMDM6Wy4yMjIyMiwuNDMwNTYsMCwwXSwxMDQ6WzAsLjYxMTExLDAsMF0sMTA1OlswLC42MTExMSwwLDBdLDEwNjpbLjIyMjIyLC42MTExMSwwLDBdLDEwNzpbMCwuNjExMTEsMCwwXSwxMDg6WzAsLjYxMTExLDAsMF0sMTA5OlswLC40MzA1NiwwLDBdLDExMDpbMCwuNDMwNTYsMCwwXSwxMTE6WzAsLjQzMDU2LDAsMF0sMTEyOlsuMjIyMjIsLjQzMDU2LDAsMF0sMTEzOlsuMjIyMjIsLjQzMDU2LDAsMF0sMTE0OlswLC40MzA1NiwwLDBdLDExNTpbMCwuNDMwNTYsMCwwXSwxMTY6WzAsLjU1MzU4LDAsMF0sMTE3OlswLC40MzA1NiwwLDBdLDExODpbMCwuNDMwNTYsMCwwXSwxMTk6WzAsLjQzMDU2LDAsMF0sMTIwOlswLC40MzA1NiwwLDBdLDEyMTpbLjIyMjIyLC40MzA1NiwwLDBdLDEyMjpbMCwuNDMwNTYsMCwwXSwxMjM6Wy4wODMzMywuNjk0NDQsMCwwXSwxMjQ6Wy4wODMzMywuNjk0NDQsMCwwXSwxMjU6Wy4wODMzMywuNjk0NDQsMCwwXSwxMjY6WzAsLjYxMTExLDAsMF0sMTI3OlswLC42MTExMSwwLDBdLDMwNTpbMCwuNDMwNTYsMCwwXSw1Njc6Wy4yMjIyMiwuNDMwNTYsMCwwXSw3Njg6WzAsLjYxMTExLDAsMF0sNzY5OlswLC42MTExMSwwLDBdLDc3MDpbMCwuNjExMTEsMCwwXSw3NzE6WzAsLjYxMTExLDAsMF0sNzcyOlswLC41NjU1NSwwLDBdLDc3NDpbMCwuNjExMTEsMCwwXSw3NzY6WzAsLjYxMTExLDAsMF0sNzc4OlswLC42MTExMSwwLDBdLDc4MDpbMCwuNTY1OTcsMCwwXSw5MTU6WzAsLjYxMTExLDAsMF0sOTE2OlswLC42MTExMSwwLDBdLDkyMDpbMCwuNjExMTEsMCwwXSw5MjM6WzAsLjYxMTExLDAsMF0sOTI2OlswLC42MTExMSwwLDBdLDkyODpbMCwuNjExMTEsMCwwXSw5MzE6WzAsLjYxMTExLDAsMF0sOTMzOlswLC42MTExMSwwLDBdLDkzNDpbMCwuNjExMTEsMCwwXSw5MzY6WzAsLjYxMTExLDAsMF0sOTM3OlswLC42MTExMSwwLDBdLDIwMTg6WzAsLjYxMTExLDAsMF0sMjAxOTpbMCwuNjExMTEsMCwwXSw4MjQyOlswLC42MTExMSwwLDBdfX19LHt9XSwyMzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL3V0aWxzXCIpO3ZhciBpPWUoXCIuL1BhcnNlRXJyb3JcIik7dmFyIG49ZShcIi4vcGFyc2VEYXRhXCIpO3ZhciBvPW4uUGFyc2VOb2RlO2Z1bmN0aW9uIHMoZSxyLGEpe2lmKHR5cGVvZiBlPT09XCJzdHJpbmdcIil7ZT1bZV19aWYodHlwZW9mIHI9PT1cIm51bWJlclwiKXtyPXtudW1BcmdzOnJ9fXZhciBpPXtudW1BcmdzOnIubnVtQXJncyxhcmdUeXBlczpyLmFyZ1R5cGVzLGdyZWVkaW5lc3M6ci5ncmVlZGluZXNzPT09dW5kZWZpbmVkPzE6ci5ncmVlZGluZXNzLGFsbG93ZWRJblRleHQ6ISFyLmFsbG93ZWRJblRleHQsbnVtT3B0aW9uYWxBcmdzOnIubnVtT3B0aW9uYWxBcmdzfHwwLGluZml4OiEhci5pbmZpeCxoYW5kbGVyOmF9O2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7KytuKXt0LmV4cG9ydHNbZVtuXV09aX19dmFyIGw9ZnVuY3Rpb24gZSh0KXtpZih0LnR5cGU9PT1cIm9yZGdyb3VwXCIpe3JldHVybiB0LnZhbHVlfWVsc2V7cmV0dXJuW3RdfX07cyhcIlxcXFxzcXJ0XCIse251bUFyZ3M6MSxudW1PcHRpb25hbEFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3ZhciBhPXRbMV07cmV0dXJue3R5cGU6XCJzcXJ0XCIsYm9keTphLGluZGV4OnJ9fSk7dmFyIHU9e1wiXFxcXHRleHRcIjp1bmRlZmluZWQsXCJcXFxcdGV4dHJtXCI6XCJtYXRocm1cIixcIlxcXFx0ZXh0c2ZcIjpcIm1hdGhzZlwiLFwiXFxcXHRleHR0dFwiOlwibWF0aHR0XCIsXCJcXFxcdGV4dG5vcm1hbFwiOlwibWF0aHJtXCIsXCJcXFxcdGV4dGJmXCI6XCJtYXRoYmZcIixcIlxcXFx0ZXh0aXRcIjpcInRleHRpdFwifTtzKFtcIlxcXFx0ZXh0XCIsXCJcXFxcdGV4dHJtXCIsXCJcXFxcdGV4dHNmXCIsXCJcXFxcdGV4dHR0XCIsXCJcXFxcdGV4dG5vcm1hbFwiLFwiXFxcXHRleHRiZlwiLFwiXFxcXHRleHRpdFwiXSx7bnVtQXJnczoxLGFyZ1R5cGVzOltcInRleHRcIl0sZ3JlZWRpbmVzczoyLGFsbG93ZWRJblRleHQ6dHJ1ZX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwidGV4dFwiLGJvZHk6bChyKSxzdHlsZTp1W2UuZnVuY05hbWVdfX0pO3MoXCJcXFxceG1sQ2xhc3NcIix7bnVtQXJnczoyLGFsbG93ZWRJblRleHQ6dHJ1ZSxncmVlZGluZXNzOjMsYXJnVHlwZXM6W1wic3RyaW5nXCIsXCJvcmlnaW5hbFwiXX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3ZhciBhPXRbMV07dmFyIGk9dm9pZCAwO2lmKGEudHlwZT09PVwib3JkZ3JvdXBcIil7aT1hLnZhbHVlfWVsc2V7aT1bYV19cmV0dXJue3R5cGU6XCJ4bWxDbGFzc1wiLGNsOnIsdmFsdWU6aX19KTtzKFwiXFxcXHRleHRjb2xvclwiLHtudW1BcmdzOjIsYWxsb3dlZEluVGV4dDp0cnVlLGdyZWVkaW5lc3M6MyxhcmdUeXBlczpbXCJjb2xvclwiLFwib3JpZ2luYWxcIl19LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgYT10WzFdO3JldHVybnt0eXBlOlwiY29sb3JcIixjb2xvcjpyLnZhbHVlLHZhbHVlOmwoYSl9fSk7cyhcIlxcXFxjb2xvclwiLHtudW1BcmdzOjEsYWxsb3dlZEluVGV4dDp0cnVlLGdyZWVkaW5lc3M6MyxhcmdUeXBlczpbXCJjb2xvclwiXX0sbnVsbCk7cyhcIlxcXFxvdmVybGluZVwiLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyZXR1cm57dHlwZTpcIm92ZXJsaW5lXCIsYm9keTpyfX0pO3MoXCJcXFxcdW5kZXJsaW5lXCIse251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwidW5kZXJsaW5lXCIsYm9keTpyfX0pO3MoXCJcXFxccnVsZVwiLHtudW1BcmdzOjIsbnVtT3B0aW9uYWxBcmdzOjEsYXJnVHlwZXM6W1wic2l6ZVwiLFwic2l6ZVwiLFwic2l6ZVwiXX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3ZhciBhPXRbMV07dmFyIGk9dFsyXTtyZXR1cm57dHlwZTpcInJ1bGVcIixzaGlmdDpyJiZyLnZhbHVlLHdpZHRoOmEudmFsdWUsaGVpZ2h0OmkudmFsdWV9fSk7cyhcIlxcXFxjdXJzb3JcIix7bnVtQXJnczoxLG51bU9wdGlvbmFsQXJnczoxLGFyZ1R5cGVzOltcInNpemVcIixcInNpemVcIl19LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgYT10WzFdO3JldHVybnt0eXBlOlwiY3Vyc29yXCIsc2hpZnQ6ciYmci52YWx1ZSxoZWlnaHQ6YS52YWx1ZX19KTtzKFtcIlxcXFxrZXJuXCIsXCJcXFxcbWtlcm5cIl0se251bUFyZ3M6MSxhcmdUeXBlczpbXCJzaXplXCJdfSxmdW5jdGlvbihlLHQpe3JldHVybnt0eXBlOlwia2VyblwiLGRpbWVuc2lvbjp0WzBdLnZhbHVlfX0pO3MoXCJcXFxcS2FUZVhcIix7bnVtQXJnczowfSxmdW5jdGlvbihlKXtyZXR1cm57dHlwZTpcImthdGV4XCJ9fSk7cyhcIlxcXFxwaGFudG9tXCIse251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwicGhhbnRvbVwiLHZhbHVlOmwocil9fSk7cyhbXCJcXFxcbWF0aG9yZFwiLFwiXFxcXG1hdGhiaW5cIixcIlxcXFxtYXRocmVsXCIsXCJcXFxcbWF0aG9wZW5cIixcIlxcXFxtYXRoY2xvc2VcIixcIlxcXFxtYXRocHVuY3RcIixcIlxcXFxtYXRoaW5uZXJcIl0se251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwibWNsYXNzXCIsbWNsYXNzOlwibVwiK2UuZnVuY05hbWUuc3Vic3RyKDUpLHZhbHVlOmwocil9fSk7cyhcIlxcXFxzdGFja3JlbFwiLHtudW1BcmdzOjJ9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgYT10WzFdO3ZhciBpPW5ldyBvKFwib3BcIix7dHlwZTpcIm9wXCIsbGltaXRzOnRydWUsYWx3YXlzSGFuZGxlU3VwU3ViOnRydWUsc3ltYm9sOmZhbHNlLHZhbHVlOmwoYSl9LGEubW9kZSk7dmFyIG49bmV3IG8oXCJzdXBzdWJcIix7YmFzZTppLHN1cDpyLHN1YjpudWxsfSxyLm1vZGUpO3JldHVybnt0eXBlOlwibWNsYXNzXCIsbWNsYXNzOlwibXJlbFwiLHZhbHVlOltuXX19KTtzKFwiXFxcXGJtb2RcIix7bnVtQXJnczowfSxmdW5jdGlvbihlLHQpe3JldHVybnt0eXBlOlwibW9kXCIsbW9kVHlwZTpcImJtb2RcIix2YWx1ZTpudWxsfX0pO3MoW1wiXFxcXHBvZFwiLFwiXFxcXHBtb2RcIixcIlxcXFxtb2RcIl0se251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwibW9kXCIsbW9kVHlwZTplLmZ1bmNOYW1lLnN1YnN0cigxKSx2YWx1ZTpsKHIpfX0pO3ZhciBoPXtcIlxcXFxiaWdsXCI6e21jbGFzczpcIm1vcGVuXCIsc2l6ZToxfSxcIlxcXFxCaWdsXCI6e21jbGFzczpcIm1vcGVuXCIsc2l6ZToyfSxcIlxcXFxiaWdnbFwiOnttY2xhc3M6XCJtb3BlblwiLHNpemU6M30sXCJcXFxcQmlnZ2xcIjp7bWNsYXNzOlwibW9wZW5cIixzaXplOjR9LFwiXFxcXGJpZ3JcIjp7bWNsYXNzOlwibWNsb3NlXCIsc2l6ZToxfSxcIlxcXFxCaWdyXCI6e21jbGFzczpcIm1jbG9zZVwiLHNpemU6Mn0sXCJcXFxcYmlnZ3JcIjp7bWNsYXNzOlwibWNsb3NlXCIsc2l6ZTozfSxcIlxcXFxCaWdnclwiOnttY2xhc3M6XCJtY2xvc2VcIixzaXplOjR9LFwiXFxcXGJpZ21cIjp7bWNsYXNzOlwibXJlbFwiLHNpemU6MX0sXCJcXFxcQmlnbVwiOnttY2xhc3M6XCJtcmVsXCIsc2l6ZToyfSxcIlxcXFxiaWdnbVwiOnttY2xhc3M6XCJtcmVsXCIsc2l6ZTozfSxcIlxcXFxCaWdnbVwiOnttY2xhc3M6XCJtcmVsXCIsc2l6ZTo0fSxcIlxcXFxiaWdcIjp7bWNsYXNzOlwibW9yZFwiLHNpemU6MX0sXCJcXFxcQmlnXCI6e21jbGFzczpcIm1vcmRcIixzaXplOjJ9LFwiXFxcXGJpZ2dcIjp7bWNsYXNzOlwibW9yZFwiLHNpemU6M30sXCJcXFxcQmlnZ1wiOnttY2xhc3M6XCJtb3JkXCIsc2l6ZTo0fX07dmFyIHA9W1wiKFwiLFwiKVwiLFwiW1wiLFwiXFxcXGxicmFja1wiLFwiXVwiLFwiXFxcXHJicmFja1wiLFwiXFxcXHtcIixcIlxcXFxsYnJhY2VcIixcIlxcXFx9XCIsXCJcXFxccmJyYWNlXCIsXCJcXFxcbGZsb29yXCIsXCJcXFxccmZsb29yXCIsXCJcXFxcbGNlaWxcIixcIlxcXFxyY2VpbFwiLFwiPFwiLFwiPlwiLFwiXFxcXGxhbmdsZVwiLFwiXFxcXHJhbmdsZVwiLFwiXFxcXGx0XCIsXCJcXFxcZ3RcIixcIlxcXFxsdmVydFwiLFwiXFxcXHJ2ZXJ0XCIsXCJcXFxcbFZlcnRcIixcIlxcXFxyVmVydFwiLFwiXFxcXGxncm91cFwiLFwiXFxcXHJncm91cFwiLFwiXFxcXGxtb3VzdGFjaGVcIixcIlxcXFxybW91c3RhY2hlXCIsXCIvXCIsXCJcXFxcYmFja3NsYXNoXCIsXCJ8XCIsXCJcXFxcdmVydFwiLFwiXFxcXHxcIixcIlxcXFxWZXJ0XCIsXCJcXFxcdXBhcnJvd1wiLFwiXFxcXFVwYXJyb3dcIixcIlxcXFxkb3duYXJyb3dcIixcIlxcXFxEb3duYXJyb3dcIixcIlxcXFx1cGRvd25hcnJvd1wiLFwiXFxcXFVwZG93bmFycm93XCIsXCIuXCJdO3ZhciBjPXtcIlxcXFxCYmJcIjpcIlxcXFxtYXRoYmJcIixcIlxcXFxib2xkXCI6XCJcXFxcbWF0aGJmXCIsXCJcXFxcZnJha1wiOlwiXFxcXG1hdGhmcmFrXCJ9O3MoW1wiXFxcXGJsdWVcIixcIlxcXFxvcmFuZ2VcIixcIlxcXFxwaW5rXCIsXCJcXFxccmVkXCIsXCJcXFxcZ3JlZW5cIixcIlxcXFxncmF5XCIsXCJcXFxccHVycGxlXCIsXCJcXFxcYmx1ZUFcIixcIlxcXFxibHVlQlwiLFwiXFxcXGJsdWVDXCIsXCJcXFxcYmx1ZURcIixcIlxcXFxibHVlRVwiLFwiXFxcXHRlYWxBXCIsXCJcXFxcdGVhbEJcIixcIlxcXFx0ZWFsQ1wiLFwiXFxcXHRlYWxEXCIsXCJcXFxcdGVhbEVcIixcIlxcXFxncmVlbkFcIixcIlxcXFxncmVlbkJcIixcIlxcXFxncmVlbkNcIixcIlxcXFxncmVlbkRcIixcIlxcXFxncmVlbkVcIixcIlxcXFxnb2xkQVwiLFwiXFxcXGdvbGRCXCIsXCJcXFxcZ29sZENcIixcIlxcXFxnb2xkRFwiLFwiXFxcXGdvbGRFXCIsXCJcXFxccmVkQVwiLFwiXFxcXHJlZEJcIixcIlxcXFxyZWRDXCIsXCJcXFxccmVkRFwiLFwiXFxcXHJlZEVcIixcIlxcXFxtYXJvb25BXCIsXCJcXFxcbWFyb29uQlwiLFwiXFxcXG1hcm9vbkNcIixcIlxcXFxtYXJvb25EXCIsXCJcXFxcbWFyb29uRVwiLFwiXFxcXHB1cnBsZUFcIixcIlxcXFxwdXJwbGVCXCIsXCJcXFxccHVycGxlQ1wiLFwiXFxcXHB1cnBsZURcIixcIlxcXFxwdXJwbGVFXCIsXCJcXFxcbWludEFcIixcIlxcXFxtaW50QlwiLFwiXFxcXG1pbnRDXCIsXCJcXFxcZ3JheUFcIixcIlxcXFxncmF5QlwiLFwiXFxcXGdyYXlDXCIsXCJcXFxcZ3JheURcIixcIlxcXFxncmF5RVwiLFwiXFxcXGdyYXlGXCIsXCJcXFxcZ3JheUdcIixcIlxcXFxncmF5SFwiLFwiXFxcXGdyYXlJXCIsXCJcXFxca2FCbHVlXCIsXCJcXFxca2FHcmVlblwiXSx7bnVtQXJnczoxLGFsbG93ZWRJblRleHQ6dHJ1ZSxncmVlZGluZXNzOjN9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyZXR1cm57dHlwZTpcImNvbG9yXCIsY29sb3I6XCJrYXRleC1cIitlLmZ1bmNOYW1lLnNsaWNlKDEpLHZhbHVlOmwocil9fSk7cyhbXCJcXFxcYXJjc2luXCIsXCJcXFxcYXJjY29zXCIsXCJcXFxcYXJjdGFuXCIsXCJcXFxcYXJjdGdcIixcIlxcXFxhcmNjdGdcIixcIlxcXFxhcmdcIixcIlxcXFxjaFwiLFwiXFxcXGNvc1wiLFwiXFxcXGNvc2VjXCIsXCJcXFxcY29zaFwiLFwiXFxcXGNvdFwiLFwiXFxcXGNvdGdcIixcIlxcXFxjb3RoXCIsXCJcXFxcY3NjXCIsXCJcXFxcY3RnXCIsXCJcXFxcY3RoXCIsXCJcXFxcZGVnXCIsXCJcXFxcZGltXCIsXCJcXFxcZXhwXCIsXCJcXFxcaG9tXCIsXCJcXFxca2VyXCIsXCJcXFxcbGdcIixcIlxcXFxsblwiLFwiXFxcXGxvZ1wiLFwiXFxcXHNlY1wiLFwiXFxcXHNpblwiLFwiXFxcXHNpbmhcIixcIlxcXFxzaFwiLFwiXFxcXHRhblwiLFwiXFxcXHRhbmhcIixcIlxcXFx0Z1wiLFwiXFxcXHRoXCJdLHtudW1BcmdzOjB9LGZ1bmN0aW9uKGUpe3JldHVybnt0eXBlOlwib3BcIixsaW1pdHM6ZmFsc2Usc3ltYm9sOmZhbHNlLGJvZHk6ZS5mdW5jTmFtZX19KTtzKFtcIlxcXFxkZXRcIixcIlxcXFxnY2RcIixcIlxcXFxpbmZcIixcIlxcXFxsaW1cIixcIlxcXFxsaW1pbmZcIixcIlxcXFxsaW1zdXBcIixcIlxcXFxtYXhcIixcIlxcXFxtaW5cIixcIlxcXFxQclwiLFwiXFxcXHN1cFwiXSx7bnVtQXJnczowfSxmdW5jdGlvbihlKXtyZXR1cm57dHlwZTpcIm9wXCIsbGltaXRzOnRydWUsc3ltYm9sOmZhbHNlLGJvZHk6ZS5mdW5jTmFtZX19KTtzKFtcIlxcXFxpbnRcIixcIlxcXFxpaW50XCIsXCJcXFxcaWlpbnRcIixcIlxcXFxvaW50XCJdLHtudW1BcmdzOjB9LGZ1bmN0aW9uKGUpe3JldHVybnt0eXBlOlwib3BcIixsaW1pdHM6ZmFsc2Usc3ltYm9sOnRydWUsYm9keTplLmZ1bmNOYW1lfX0pO3MoW1wiXFxcXGNvcHJvZFwiLFwiXFxcXGJpZ3ZlZVwiLFwiXFxcXGJpZ3dlZGdlXCIsXCJcXFxcYmlndXBsdXNcIixcIlxcXFxiaWdjYXBcIixcIlxcXFxiaWdjdXBcIixcIlxcXFxpbnRvcFwiLFwiXFxcXHByb2RcIixcIlxcXFxzdW1cIixcIlxcXFxiaWdvdGltZXNcIixcIlxcXFxiaWdvcGx1c1wiLFwiXFxcXGJpZ29kb3RcIixcIlxcXFxiaWdzcWN1cFwiLFwiXFxcXHNtYWxsaW50XCJdLHtudW1BcmdzOjB9LGZ1bmN0aW9uKGUpe3JldHVybnt0eXBlOlwib3BcIixsaW1pdHM6dHJ1ZSxzeW1ib2w6dHJ1ZSxib2R5OmUuZnVuY05hbWV9fSk7cyhcIlxcXFxtYXRob3BcIix7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJvcFwiLGxpbWl0czpmYWxzZSxzeW1ib2w6ZmFsc2UsdmFsdWU6bChyKX19KTtzKFtcIlxcXFxkZnJhY1wiLFwiXFxcXGZyYWNcIixcIlxcXFx0ZnJhY1wiLFwiXFxcXGRiaW5vbVwiLFwiXFxcXGJpbm9tXCIsXCJcXFxcdGJpbm9tXCIsXCJcXFxcXFxcXGF0b3BmcmFjXCJdLHtudW1BcmdzOjIsZ3JlZWRpbmVzczoyfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07dmFyIGE9dFsxXTt2YXIgaT12b2lkIDA7dmFyIG49bnVsbDt2YXIgbz1udWxsO3ZhciBzPVwiYXV0b1wiO3N3aXRjaChlLmZ1bmNOYW1lKXtjYXNlXCJcXFxcZGZyYWNcIjpjYXNlXCJcXFxcZnJhY1wiOmNhc2VcIlxcXFx0ZnJhY1wiOmk9dHJ1ZTticmVhaztjYXNlXCJcXFxcXFxcXGF0b3BmcmFjXCI6aT1mYWxzZTticmVhaztjYXNlXCJcXFxcZGJpbm9tXCI6Y2FzZVwiXFxcXGJpbm9tXCI6Y2FzZVwiXFxcXHRiaW5vbVwiOmk9ZmFsc2U7bj1cIihcIjtvPVwiKVwiO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiVW5yZWNvZ25pemVkIGdlbmZyYWMgY29tbWFuZFwiKX1zd2l0Y2goZS5mdW5jTmFtZSl7Y2FzZVwiXFxcXGRmcmFjXCI6Y2FzZVwiXFxcXGRiaW5vbVwiOnM9XCJkaXNwbGF5XCI7YnJlYWs7Y2FzZVwiXFxcXHRmcmFjXCI6Y2FzZVwiXFxcXHRiaW5vbVwiOnM9XCJ0ZXh0XCI7YnJlYWt9cmV0dXJue3R5cGU6XCJnZW5mcmFjXCIsbnVtZXI6cixkZW5vbTphLGhhc0JhckxpbmU6aSxsZWZ0RGVsaW06bixyaWdodERlbGltOm8sc2l6ZTpzfX0pO3MoW1wiXFxcXGxsYXBcIixcIlxcXFxybGFwXCJdLHtudW1BcmdzOjEsYWxsb3dlZEluVGV4dDp0cnVlfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6ZS5mdW5jTmFtZS5zbGljZSgxKSxib2R5OnJ9fSk7dmFyIHY9ZnVuY3Rpb24gZSh0LHIpe2lmKGEuY29udGFpbnMocCx0LnZhbHVlKSl7cmV0dXJuIHR9ZWxzZXt0aHJvdyBuZXcgaShcIkludmFsaWQgZGVsaW1pdGVyOiAnXCIrdC52YWx1ZStcIicgYWZ0ZXIgJ1wiK3IuZnVuY05hbWUrXCInXCIsdCl9fTtzKFtcIlxcXFxiaWdsXCIsXCJcXFxcQmlnbFwiLFwiXFxcXGJpZ2dsXCIsXCJcXFxcQmlnZ2xcIixcIlxcXFxiaWdyXCIsXCJcXFxcQmlnclwiLFwiXFxcXGJpZ2dyXCIsXCJcXFxcQmlnZ3JcIixcIlxcXFxiaWdtXCIsXCJcXFxcQmlnbVwiLFwiXFxcXGJpZ2dtXCIsXCJcXFxcQmlnZ21cIixcIlxcXFxiaWdcIixcIlxcXFxCaWdcIixcIlxcXFxiaWdnXCIsXCJcXFxcQmlnZ1wiXSx7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXYodFswXSxlKTtyZXR1cm57dHlwZTpcImRlbGltc2l6aW5nXCIsc2l6ZTpoW2UuZnVuY05hbWVdLnNpemUsbWNsYXNzOmhbZS5mdW5jTmFtZV0ubWNsYXNzLHZhbHVlOnIudmFsdWV9fSk7cyhbXCJcXFxcbGVmdFwiLFwiXFxcXHJpZ2h0XCJdLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dih0WzBdLGUpO3JldHVybnt0eXBlOlwibGVmdHJpZ2h0XCIsdmFsdWU6ci52YWx1ZX19KTtzKFwiXFxcXG1pZGRsZVwiLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dih0WzBdLGUpO2lmKCFlLnBhcnNlci5sZWZ0cmlnaHREZXB0aCl7dGhyb3cgbmV3IGkoXCJcXFxcbWlkZGxlIHdpdGhvdXQgcHJlY2VkaW5nIFxcXFxsZWZ0XCIscil9cmV0dXJue3R5cGU6XCJtaWRkbGVcIix2YWx1ZTpyLnZhbHVlfX0pO3MoW1wiXFxcXHRpbnlcIixcIlxcXFxzY3JpcHRzaXplXCIsXCJcXFxcZm9vdG5vdGVzaXplXCIsXCJcXFxcc21hbGxcIixcIlxcXFxub3JtYWxzaXplXCIsXCJcXFxcbGFyZ2VcIixcIlxcXFxMYXJnZVwiLFwiXFxcXExBUkdFXCIsXCJcXFxcaHVnZVwiLFwiXFxcXEh1Z2VcIl0sMCxudWxsKTtzKFtcIlxcXFxkaXNwbGF5c3R5bGVcIixcIlxcXFx0ZXh0c3R5bGVcIixcIlxcXFxzY3JpcHRzdHlsZVwiLFwiXFxcXHNjcmlwdHNjcmlwdHN0eWxlXCJdLDAsbnVsbCk7cyhbXCJcXFxccm1cIixcIlxcXFxzZlwiLFwiXFxcXHR0XCIsXCJcXFxcYmZcIixcIlxcXFxpdFwiXSwwLG51bGwpO3MoW1wiXFxcXG1hdGhybVwiLFwiXFxcXG1hdGhpdFwiLFwiXFxcXG1hdGhiZlwiLFwiXFxcXG1hdGhiYlwiLFwiXFxcXG1hdGhjYWxcIixcIlxcXFxtYXRoZnJha1wiLFwiXFxcXG1hdGhzY3JcIixcIlxcXFxtYXRoc2ZcIixcIlxcXFxtYXRodHRcIixcIlxcXFxCYmJcIixcIlxcXFxib2xkXCIsXCJcXFxcZnJha1wiXSx7bnVtQXJnczoxLGdyZWVkaW5lc3M6Mn0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3ZhciBhPWUuZnVuY05hbWU7aWYoYSBpbiBjKXthPWNbYV19cmV0dXJue3R5cGU6XCJmb250XCIsZm9udDphLnNsaWNlKDEpLGJvZHk6cn19KTtzKFtcIlxcXFxhY3V0ZVwiLFwiXFxcXGdyYXZlXCIsXCJcXFxcZGRvdFwiLFwiXFxcXHRpbGRlXCIsXCJcXFxcYmFyXCIsXCJcXFxcYnJldmVcIixcIlxcXFxjaGVja1wiLFwiXFxcXGhhdFwiLFwiXFxcXHZlY1wiLFwiXFxcXGRvdFwiLFwiXFxcXHdpZGVoYXRcIixcIlxcXFx3aWRldGlsZGVcIixcIlxcXFxvdmVycmlnaHRhcnJvd1wiLFwiXFxcXG92ZXJsZWZ0YXJyb3dcIixcIlxcXFxPdmVycmlnaHRhcnJvd1wiLFwiXFxcXG92ZXJsZWZ0cmlnaHRhcnJvd1wiLFwiXFxcXG92ZXJncm91cFwiLFwiXFxcXG92ZXJsaW5lc2VnbWVudFwiLFwiXFxcXG92ZXJsZWZ0aGFycG9vblwiLFwiXFxcXG92ZXJyaWdodGhhcnBvb25cIl0se251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3ZhciBpPSFhLmNvbnRhaW5zKFtcIlxcXFxhY3V0ZVwiLFwiXFxcXGdyYXZlXCIsXCJcXFxcZGRvdFwiLFwiXFxcXHRpbGRlXCIsXCJcXFxcYmFyXCIsXCJcXFxcYnJldmVcIixcIlxcXFxjaGVja1wiLFwiXFxcXGhhdFwiLFwiXFxcXHZlY1wiLFwiXFxcXGRvdFwiXSxlLmZ1bmNOYW1lKTt2YXIgbj0haXx8YS5jb250YWlucyhbXCJcXFxcd2lkZWhhdFwiLFwiXFxcXHdpZGV0aWxkZVwiXSxlLmZ1bmNOYW1lKTtyZXR1cm57dHlwZTpcImFjY2VudFwiLGxhYmVsOmUuZnVuY05hbWUsaXNTdHJldGNoeTppLGlzU2hpZnR5Om4sdmFsdWU6bChyKSxiYXNlOnJ9fSk7cyhbXCJcXFxcb3ZlcmJyYWNlXCIsXCJcXFxcdW5kZXJicmFjZVwiXSx7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJob3JpekJyYWNlXCIsbGFiZWw6ZS5mdW5jTmFtZSxpc092ZXI6L15cXFxcb3Zlci8udGVzdChlLmZ1bmNOYW1lKSxiYXNlOnJ9fSk7cyhbXCJcXFxcdW5kZXJsZWZ0YXJyb3dcIixcIlxcXFx1bmRlcnJpZ2h0YXJyb3dcIixcIlxcXFx1bmRlcmxlZnRyaWdodGFycm93XCIsXCJcXFxcdW5kZXJncm91cFwiLFwiXFxcXHVuZGVybGluZXNlZ21lbnRcIixcIlxcXFx1bmRlcnRpbGRlXCJdLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyZXR1cm57dHlwZTpcImFjY2VudFVuZGVyXCIsbGFiZWw6ZS5mdW5jTmFtZSx2YWx1ZTpsKHIpLGJvZHk6cn19KTtzKFtcIlxcXFx4bGVmdGFycm93XCIsXCJcXFxceHJpZ2h0YXJyb3dcIixcIlxcXFx4TGVmdGFycm93XCIsXCJcXFxceFJpZ2h0YXJyb3dcIixcIlxcXFx4bGVmdHJpZ2h0YXJyb3dcIixcIlxcXFx4TGVmdHJpZ2h0YXJyb3dcIixcIlxcXFx4aG9va2xlZnRhcnJvd1wiLFwiXFxcXHhob29rcmlnaHRhcnJvd1wiLFwiXFxcXHhtYXBzdG9cIixcIlxcXFx4cmlnaHRoYXJwb29uZG93blwiLFwiXFxcXHhyaWdodGhhcnBvb251cFwiLFwiXFxcXHhsZWZ0aGFycG9vbmRvd25cIixcIlxcXFx4bGVmdGhhcnBvb251cFwiLFwiXFxcXHhyaWdodGxlZnRoYXJwb29uc1wiLFwiXFxcXHhsZWZ0cmlnaHRoYXJwb29uc1wiLFwiXFxcXHhMb25nZXF1YWxcIixcIlxcXFx4dHdvaGVhZHJpZ2h0YXJyb3dcIixcIlxcXFx4dHdvaGVhZGxlZnRhcnJvd1wiLFwiXFxcXHhMb25nZXF1YWxcIixcIlxcXFx4dG9mcm9tXCJdLHtudW1BcmdzOjEsbnVtT3B0aW9uYWxBcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgYT10WzFdO3JldHVybnt0eXBlOlwieEFycm93XCIsbGFiZWw6ZS5mdW5jTmFtZSxib2R5OmEsYmVsb3c6cn19KTtzKFtcIlxcXFxjYW5jZWxcIixcIlxcXFxiY2FuY2VsXCIsXCJcXFxceGNhbmNlbFwiLFwiXFxcXHNvdXRcIixcIlxcXFxmYm94XCJdLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyZXR1cm57dHlwZTpcImVuY2xvc2VcIixsYWJlbDplLmZ1bmNOYW1lLGJvZHk6cn19KTtzKFtcIlxcXFxvdmVyXCIsXCJcXFxcY2hvb3NlXCIsXCJcXFxcYXRvcFwiXSx7bnVtQXJnczowLGluZml4OnRydWV9LGZ1bmN0aW9uKGUpe3ZhciB0PXZvaWQgMDtzd2l0Y2goZS5mdW5jTmFtZSl7Y2FzZVwiXFxcXG92ZXJcIjp0PVwiXFxcXGZyYWNcIjticmVhaztjYXNlXCJcXFxcY2hvb3NlXCI6dD1cIlxcXFxiaW5vbVwiO2JyZWFrO2Nhc2VcIlxcXFxhdG9wXCI6dD1cIlxcXFxcXFxcYXRvcGZyYWNcIjticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIlVucmVjb2duaXplZCBpbmZpeCBnZW5mcmFjIGNvbW1hbmRcIil9cmV0dXJue3R5cGU6XCJpbmZpeFwiLHJlcGxhY2VXaXRoOnQsdG9rZW46ZS50b2tlbn19KTtzKFtcIlxcXFxcXFxcXCIsXCJcXFxcY3JcIl0se251bUFyZ3M6MCxudW1PcHRpb25hbEFyZ3M6MSxhcmdUeXBlczpbXCJzaXplXCJdfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJjclwiLHNpemU6cn19KTtzKFtcIlxcXFxiZWdpblwiLFwiXFxcXGVuZFwiXSx7bnVtQXJnczoxLGFyZ1R5cGVzOltcInRleHRcIl19LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtpZihyLnR5cGUhPT1cIm9yZGdyb3VwXCIpe3Rocm93IG5ldyBpKFwiSW52YWxpZCBlbnZpcm9ubWVudCBuYW1lXCIscil9dmFyIGE9XCJcIjtmb3IodmFyIG49MDtuPHIudmFsdWUubGVuZ3RoOysrbil7YSs9ci52YWx1ZVtuXS52YWx1ZX1yZXR1cm57dHlwZTpcImVudmlyb25tZW50XCIsbmFtZTphLG5hbWVHcm91cDpyfX0pfSx7XCIuL1BhcnNlRXJyb3JcIjoxMCxcIi4vcGFyc2VEYXRhXCI6MjYsXCIuL3V0aWxzXCI6MzF9XSwyNDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGEoZSxyKXt0LmV4cG9ydHNbZV09cn1hKFwiXFxcXGJncm91cFwiLFwie1wiKTthKFwiXFxcXGVncm91cFwiLFwifVwiKTthKFwiXFxcXGJlZ2luZ3JvdXBcIixcIntcIik7YShcIlxcXFxlbmRncm91cFwiLFwifVwiKTthKFwiXFxcXG92ZXJzZXRcIixcIlxcXFxtYXRob3B7IzJ9XFxcXGxpbWl0c157IzF9XCIpO2EoXCJcXFxcdW5kZXJzZXRcIixcIlxcXFxtYXRob3B7IzJ9XFxcXGxpbWl0c197IzF9XCIpO2EoXCJcXFxcYm94ZWRcIixcIlxcXFxmYm94e1xcXFxkaXNwbGF5c3R5bGV7IzF9fVwiKTthKFwiXFxcXGlmZlwiLFwiXFxcXDtcXFxcTG9uZ2xlZnRyaWdodGFycm93XFxcXDtcIik7YShcIlxcXFxpbXBsaWVzXCIsXCJcXFxcO1xcXFxMb25ncmlnaHRhcnJvd1xcXFw7XCIpO2EoXCJcXFxcaW1wbGllZGJ5XCIsXCJcXFxcO1xcXFxMb25nbGVmdGFycm93XFxcXDtcIik7YShcIlxcXFxvcmRpbmFyeWNvbG9uXCIsXCI6XCIpO2EoXCJcXFxcdmNlbnRjb2xvblwiLFwiXFxcXG1hdGhyZWx7XFxcXG1hdGhvcFxcXFxvcmRpbmFyeWNvbG9ufVwiKTthKFwiXFxcXGRibGNvbG9uXCIsXCJcXFxcdmNlbnRjb2xvblxcXFxtYXRocmVse1xcXFxta2Vybi0uOW11fVxcXFx2Y2VudGNvbG9uXCIpO2EoXCJcXFxcY29sb25lcXFcIixcIlxcXFx2Y2VudGNvbG9uXFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fT1cIik7YShcIlxcXFxDb2xvbmVxcVwiLFwiXFxcXGRibGNvbG9uXFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fT1cIik7YShcIlxcXFxjb2xvbmVxXCIsXCJcXFxcdmNlbnRjb2xvblxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcbWF0aHJlbHstfVwiKTthKFwiXFxcXENvbG9uZXFcIixcIlxcXFxkYmxjb2xvblxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcbWF0aHJlbHstfVwiKTthKFwiXFxcXGVxcWNvbG9uXCIsXCI9XFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fVxcXFx2Y2VudGNvbG9uXCIpO2EoXCJcXFxcRXFxY29sb25cIixcIj1cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXGRibGNvbG9uXCIpO2EoXCJcXFxcZXFjb2xvblwiLFwiXFxcXG1hdGhyZWx7LX1cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXHZjZW50Y29sb25cIik7YShcIlxcXFxFcWNvbG9uXCIsXCJcXFxcbWF0aHJlbHstfVxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcZGJsY29sb25cIik7YShcIlxcXFxjb2xvbmFwcHJveFwiLFwiXFxcXHZjZW50Y29sb25cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXGFwcHJveFwiKTthKFwiXFxcXENvbG9uYXBwcm94XCIsXCJcXFxcZGJsY29sb25cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXGFwcHJveFwiKTthKFwiXFxcXGNvbG9uc2ltXCIsXCJcXFxcdmNlbnRjb2xvblxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcc2ltXCIpO2EoXCJcXFxcQ29sb25zaW1cIixcIlxcXFxkYmxjb2xvblxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcc2ltXCIpO2EoXCJcXFxccmF0aW9cIixcIlxcXFx2Y2VudGNvbG9uXCIpO2EoXCJcXFxcY29sb25jb2xvblwiLFwiXFxcXGRibGNvbG9uXCIpO2EoXCJcXFxcY29sb25lcXVhbHNcIixcIlxcXFxjb2xvbmVxcVwiKTthKFwiXFxcXGNvbG9uY29sb25lcXVhbHNcIixcIlxcXFxDb2xvbmVxcVwiKTthKFwiXFxcXGVxdWFsc2NvbG9uXCIsXCJcXFxcZXFxY29sb25cIik7YShcIlxcXFxlcXVhbHNjb2xvbmNvbG9uXCIsXCJcXFxcRXFxY29sb25cIik7YShcIlxcXFxjb2xvbm1pbnVzXCIsXCJcXFxcY29sb25lcVwiKTthKFwiXFxcXGNvbG9uY29sb25taW51c1wiLFwiXFxcXENvbG9uZXFcIik7YShcIlxcXFxtaW51c2NvbG9uXCIsXCJcXFxcZXFjb2xvblwiKTthKFwiXFxcXG1pbnVzY29sb25jb2xvblwiLFwiXFxcXEVxY29sb25cIik7YShcIlxcXFxjb2xvbmNvbG9uYXBwcm94XCIsXCJcXFxcQ29sb25hcHByb3hcIik7YShcIlxcXFxjb2xvbmNvbG9uc2ltXCIsXCJcXFxcQ29sb25zaW1cIik7YShcIlxcXFxzaW1jb2xvblwiLFwiXFxcXHNpbVxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcdmNlbnRjb2xvblwiKTthKFwiXFxcXHNpbWNvbG9uY29sb25cIixcIlxcXFxzaW1cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXGRibGNvbG9uXCIpO2EoXCJcXFxcYXBwcm94Y29sb25cIixcIlxcXFxhcHByb3hcXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXHZjZW50Y29sb25cIik7YShcIlxcXFxhcHByb3hjb2xvbmNvbG9uXCIsXCJcXFxcYXBwcm94XFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fVxcXFxkYmxjb2xvblwiKX0se31dLDI1OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4vdXRpbHNcIik7ZnVuY3Rpb24gaShlLHQpe3RoaXMudHlwZT1lO3RoaXMuYXR0cmlidXRlcz17fTt0aGlzLmNoaWxkcmVuPXR8fFtdfWkucHJvdG90eXBlLnNldEF0dHJpYnV0ZT1mdW5jdGlvbihlLHQpe3RoaXMuYXR0cmlidXRlc1tlXT10fTtpLnByb3RvdHlwZS50b05vZGU9ZnVuY3Rpb24oKXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsdGhpcy50eXBlKTtmb3IodmFyIHQgaW4gdGhpcy5hdHRyaWJ1dGVzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcy5hdHRyaWJ1dGVzLHQpKXtlLnNldEF0dHJpYnV0ZSh0LHRoaXMuYXR0cmlidXRlc1t0XSl9fWZvcih2YXIgcj0wO3I8dGhpcy5jaGlsZHJlbi5sZW5ndGg7cisrKXtlLmFwcGVuZENoaWxkKHRoaXMuY2hpbGRyZW5bcl0udG9Ob2RlKCkpfXJldHVybiBlfTtpLnByb3RvdHlwZS50b01hcmt1cD1mdW5jdGlvbigpe3ZhciBlPVwiPFwiK3RoaXMudHlwZTtmb3IodmFyIHQgaW4gdGhpcy5hdHRyaWJ1dGVzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcy5hdHRyaWJ1dGVzLHQpKXtlKz1cIiBcIit0Kyc9XCInO2UrPWEuZXNjYXBlKHRoaXMuYXR0cmlidXRlc1t0XSk7ZSs9J1wiJ319ZSs9XCI+XCI7Zm9yKHZhciByPTA7cjx0aGlzLmNoaWxkcmVuLmxlbmd0aDtyKyspe2UrPXRoaXMuY2hpbGRyZW5bcl0udG9NYXJrdXAoKX1lKz1cIjwvXCIrdGhpcy50eXBlK1wiPlwiO3JldHVybiBlfTtmdW5jdGlvbiBuKGUpe3RoaXMudGV4dD1lfW4ucHJvdG90eXBlLnRvTm9kZT1mdW5jdGlvbigpe3JldHVybiBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh0aGlzLnRleHQpfTtuLnByb3RvdHlwZS50b01hcmt1cD1mdW5jdGlvbigpe3JldHVybiBhLmVzY2FwZSh0aGlzLnRleHQpfTt0LmV4cG9ydHM9e01hdGhOb2RlOmksVGV4dE5vZGU6bn19LHtcIi4vdXRpbHNcIjozMX1dLDI2OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYShlLHQscixhLGkpe3RoaXMudHlwZT1lO3RoaXMudmFsdWU9dDt0aGlzLm1vZGU9cjtpZihhJiYoIWl8fGkubGV4ZXI9PT1hLmxleGVyKSl7dGhpcy5sZXhlcj1hLmxleGVyO3RoaXMuc3RhcnQ9YS5zdGFydDt0aGlzLmVuZD0oaXx8YSkuZW5kfX10LmV4cG9ydHM9e1BhcnNlTm9kZTphfX0se31dLDI3OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4vUGFyc2VyXCIpO3ZhciBpPWZ1bmN0aW9uIGUodCxyKXtpZighKHR5cGVvZiB0PT09XCJzdHJpbmdcInx8dCBpbnN0YW5jZW9mIFN0cmluZykpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJLYVRlWCBjYW4gb25seSBwYXJzZSBzdHJpbmcgdHlwZWQgZXhwcmVzc2lvblwiKX12YXIgaT1uZXcgYSh0LHIpO3JldHVybiBpLnBhcnNlKCl9O3QuZXhwb3J0cz1pfSx7XCIuL1BhcnNlclwiOjExfV0sMjg6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi9idWlsZENvbW1vblwiKTt2YXIgaT1lKFwiLi9tYXRoTUxUcmVlXCIpO3ZhciBuPWUoXCIuL3V0aWxzXCIpO3ZhciBvPXt3aWRlaGF0OlwiXlwiLHdpZGV0aWxkZTpcIn5cIix1bmRlcnRpbGRlOlwiflwiLG92ZXJsZWZ0YXJyb3c6XCJcXHUyMTkwXCIsdW5kZXJsZWZ0YXJyb3c6XCJcXHUyMTkwXCIseGxlZnRhcnJvdzpcIlxcdTIxOTBcIixvdmVycmlnaHRhcnJvdzpcIlxcdTIxOTJcIix1bmRlcnJpZ2h0YXJyb3c6XCJcXHUyMTkyXCIseHJpZ2h0YXJyb3c6XCJcXHUyMTkyXCIsdW5kZXJicmFjZTpcIlxcdTIzYjVcIixvdmVyYnJhY2U6XCJcXHUyM2RlXCIsb3ZlcmxlZnRyaWdodGFycm93OlwiXFx1MjE5NFwiLHVuZGVybGVmdHJpZ2h0YXJyb3c6XCJcXHUyMTk0XCIseGxlZnRyaWdodGFycm93OlwiXFx1MjE5NFwiLE92ZXJyaWdodGFycm93OlwiXFx1MjFkMlwiLHhSaWdodGFycm93OlwiXFx1MjFkMlwiLG92ZXJsZWZ0aGFycG9vbjpcIlxcdTIxYmNcIix4bGVmdGhhcnBvb251cDpcIlxcdTIxYmNcIixvdmVycmlnaHRoYXJwb29uOlwiXFx1MjFjMFwiLHhyaWdodGhhcnBvb251cDpcIlxcdTIxYzBcIix4TGVmdGFycm93OlwiXFx1MjFkMFwiLHhMZWZ0cmlnaHRhcnJvdzpcIlxcdTIxZDRcIix4aG9va2xlZnRhcnJvdzpcIlxcdTIxYTlcIix4aG9va3JpZ2h0YXJyb3c6XCJcXHUyMWFhXCIseG1hcHN0bzpcIlxcdTIxYTZcIix4cmlnaHRoYXJwb29uZG93bjpcIlxcdTIxYzFcIix4bGVmdGhhcnBvb25kb3duOlwiXFx1MjFiZFwiLHhyaWdodGxlZnRoYXJwb29uczpcIlxcdTIxY2NcIix4bGVmdHJpZ2h0aGFycG9vbnM6XCJcXHUyMWNiXCIseHR3b2hlYWRsZWZ0YXJyb3c6XCJcXHUyMTllXCIseHR3b2hlYWRyaWdodGFycm93OlwiXFx1MjFhMFwiLHhMb25nZXF1YWw6XCI9XCIseHRvZnJvbTpcIlxcdTIxYzRcIn07dmFyIHM9ZnVuY3Rpb24gZSh0KXt2YXIgcj1uZXcgaS5NYXRoTm9kZShcIm1vXCIsW25ldyBpLlRleHROb2RlKG9bdC5zdWJzdHIoMSldKV0pO3Iuc2V0QXR0cmlidXRlKFwic3RyZXRjaHlcIixcInRydWVcIik7cmV0dXJuIHJ9O3ZhciBsPXtvdmVybGVmdGFycm93OlsuNTIyLDAsXCJsZWZ0YXJyb3dcIl0sdW5kZXJsZWZ0YXJyb3c6Wy41MjIsMCxcImxlZnRhcnJvd1wiXSx4bGVmdGFycm93OlsuMjYxLC4yNjEsXCJsZWZ0YXJyb3dcIl0sb3ZlcnJpZ2h0YXJyb3c6Wy41MjIsMCxcInJpZ2h0YXJyb3dcIl0sdW5kZXJyaWdodGFycm93OlsuNTIyLDAsXCJyaWdodGFycm93XCJdLHhyaWdodGFycm93OlsuMjYxLC4yNjEsXCJyaWdodGFycm93XCJdLG92ZXJicmFjZTpbLjU0OCwwLFwib3ZlcmJyYWNlXCJdLHVuZGVyYnJhY2U6Wy41NDgsMCxcInVuZGVyYnJhY2VcIl0sb3ZlcmxlZnRyaWdodGFycm93OlsuNTIyLDAsXCJsZWZ0cmlnaHRhcnJvd1wiXSx1bmRlcmxlZnRyaWdodGFycm93OlsuNTIyLDAsXCJsZWZ0cmlnaHRhcnJvd1wiXSx4bGVmdHJpZ2h0YXJyb3c6Wy4yNjEsLjI2MSxcImxlZnRyaWdodGFycm93XCJdLE92ZXJyaWdodGFycm93OlsuNTYsMCxcImRvdWJsZXJpZ2h0YXJyb3dcIl0seExlZnRhcnJvdzpbLjI4LC4yOCxcImRvdWJsZWxlZnRhcnJvd1wiXSx4UmlnaHRhcnJvdzpbLjI4LC4yOCxcImRvdWJsZXJpZ2h0YXJyb3dcIl0seExlZnRyaWdodGFycm93OlsuMjgsLjI4LFwiZG91YmxlbGVmdHJpZ2h0YXJyb3dcIl0sb3ZlcmxlZnRoYXJwb29uOlsuNTIyLDAsXCJsZWZ0aGFycG9vblwiXSxvdmVycmlnaHRoYXJwb29uOlsuNTIyLDAsXCJyaWdodGhhcnBvb25cIl0seGxlZnRoYXJwb29udXA6Wy4yNjEsLjI2MSxcImxlZnRoYXJwb29uXCJdLHhyaWdodGhhcnBvb251cDpbLjI2MSwuMjYxLFwicmlnaHRoYXJwb29uXCJdLHhob29rbGVmdGFycm93OlsuMjYxLC4yNjEsXCJob29rbGVmdGFycm93XCJdLHhob29rcmlnaHRhcnJvdzpbLjI2MSwuMjYxLFwiaG9va3JpZ2h0YXJyb3dcIl0sb3ZlcmxpbmVzZWdtZW50OlsuNDE0LDAsXCJsaW5lc2VnbWVudFwiXSx1bmRlcmxpbmVzZWdtZW50OlsuNDE0LDAsXCJsaW5lc2VnbWVudFwiXSx4bWFwc3RvOlsuMjYxLC4yNjEsXCJtYXBzdG9cIl0seHJpZ2h0aGFycG9vbmRvd246Wy4yNjEsLjI2MSxcInJpZ2h0aGFycG9vbmRvd25cIl0seGxlZnRoYXJwb29uZG93bjpbLjI2MSwuMjYxLFwibGVmdGhhcnBvb25kb3duXCJdLHhyaWdodGxlZnRoYXJwb29uczpbLjM1OCwuMzU4LFwicmlnaHRsZWZ0aGFycG9vbnNcIl0seGxlZnRyaWdodGhhcnBvb25zOlsuMzU4LC4zNTgsXCJsZWZ0cmlnaHRoYXJwb29uc1wiXSxvdmVyZ3JvdXA6Wy4zNDIsMCxcIm92ZXJncm91cFwiXSx1bmRlcmdyb3VwOlsuMzQyLDAsXCJ1bmRlcmdyb3VwXCJdLHh0d29oZWFkbGVmdGFycm93OlsuMTY3LC4xNjcsXCJ0d29oZWFkbGVmdGFycm93XCJdLHh0d29oZWFkcmlnaHRhcnJvdzpbLjE2NywuMTY3LFwidHdvaGVhZHJpZ2h0YXJyb3dcIl0seExvbmdlcXVhbDpbLjE2NywuMTY3LFwibG9uZ2VxdWFsXCJdLHh0b2Zyb206Wy4yNjQsLjI2NCxcInRvZnJvbVwiXX07dmFyIHU9ZnVuY3Rpb24gZSh0LHIpe3ZhciBpPXQudmFsdWUubGFiZWwuc3Vic3RyKDEpO3ZhciBvPTA7dmFyIHM9MDt2YXIgdT1bXCJzdHJldGNoeVwiXTt2YXIgaD1cIlwiO2lmKG4uY29udGFpbnMoW1wid2lkZWhhdFwiLFwid2lkZXRpbGRlXCIsXCJ1bmRlcnRpbGRlXCJdLGkpKXt2YXIgcD10LnZhbHVlLnZhbHVlLmxlbmd0aDtpZihwPjUpe289LjMxMjtoPShpPT09XCJ3aWRlaGF0XCI/XCJ3aWRlaGF0XCI6XCJ0aWxkZVwiKStcIjRcIn1lbHNle3ZhciBjPVsxLDEsMiwyLDMsM11bcF07aWYoaT09PVwid2lkZWhhdFwiKXtvPVswLC4yNCwuMywuMywuMzYsLjM2XVtwXTtoPVwid2lkZWhhdFwiK2N9ZWxzZXtvPVswLC4yNiwuMywuMywuMzQsLjM0XVtwXTtoPVwidGlsZGVcIitjfX19ZWxzZXt2YXIgdj1sW2ldO289dlswXTtzPXZbMV07aD12WzJdO2lmKGkuc3Vic3RyKDAsMSk9PT1cInhcIil7dS5wdXNoKFwieC1hcnJvd1wiKX19dmFyIGY9dm9pZCAwO2lmKHIuY29sb3Ipe3UucHVzaChoKTt1LnB1c2goXCJtYXNrXCIpO3UucHVzaChoK1wiLW1hc2tcIik7Zj1hLm1ha2VTcGFuKHUsW10scik7Zi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3I9ci5jb2xvcn1lbHNle3UucHVzaChoKTtmPWEubWFrZVNwYW4odSxbXSxyKX1mLmhlaWdodD1vO2YuZGVwdGg9cztmLm1heEZvbnRTaXplPTE7cmV0dXJuIGZ9O3ZhciBoPWZ1bmN0aW9uIGUodCxyLGksbixvKXt2YXIgcz1hLm1ha2VTcGFuKFtcInN0cmV0Y2h5XCIsaV0sW10sbyk7aWYoby5jb2xvcil7aWYoaT09PVwiZmJveFwiKXtzLnN0eWxlLmJvcmRlckNvbG9yPW8uY29sb3J9ZWxzZXtzLmNsYXNzZXNbMl09aStcIi1tYXNrXCI7cy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3I9by5jb2xvcn19cy5oZWlnaHQ9dC5oZWlnaHQrdC5kZXB0aCsyKm47cy5zdHlsZS5oZWlnaHQ9cy5oZWlnaHQrXCJlbVwiO2lmKC9jYW5jZWwvLnRlc3QoaSkmJnIpe3MubWF4Rm9udFNpemU9MS4yfWVsc2V7cy5tYXhGb250U2l6ZT0xfXJldHVybiBzfTt0LmV4cG9ydHM9e2VuY2xvc2VTcGFuOmgsbWF0aE1Mbm9kZTpzLHN2Z1NwYW46dX19LHtcIi4vYnVpbGRDb21tb25cIjoxNCxcIi4vbWF0aE1MVHJlZVwiOjI1LFwiLi91dGlsc1wiOjMxfV0sMjk6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt0LmV4cG9ydHM9e21hdGg6e30sdGV4dDp7fX07ZnVuY3Rpb24gYShlLHIsYSxpLG4pe3QuZXhwb3J0c1tlXVtuXT17Zm9udDpyLGdyb3VwOmEscmVwbGFjZTppfX12YXIgaT1cIm1hdGhcIjt2YXIgbj1cInRleHRcIjt2YXIgbz1cIm1haW5cIjt2YXIgcz1cImFtc1wiO3ZhciBsPVwiYWNjZW50XCI7dmFyIHU9XCJiaW5cIjt2YXIgaD1cImNsb3NlXCI7dmFyIHA9XCJpbm5lclwiO3ZhciBjPVwibWF0aG9yZFwiO3ZhciB2PVwib3BcIjt2YXIgZj1cIm9wZW5cIjt2YXIgbT1cInB1bmN0XCI7dmFyIGQ9XCJyZWxcIjt2YXIgZz1cInNwYWNpbmdcIjt2YXIgeT1cInRleHRvcmRcIjthKGksbyxkLFwiXFx1MjI2MVwiLFwiXFxcXGVxdWl2XCIpO2EoaSxvLGQsXCJcXHUyMjdhXCIsXCJcXFxccHJlY1wiKTthKGksbyxkLFwiXFx1MjI3YlwiLFwiXFxcXHN1Y2NcIik7YShpLG8sZCxcIlxcdTIyM2NcIixcIlxcXFxzaW1cIik7YShpLG8sZCxcIlxcdTIyYTVcIixcIlxcXFxwZXJwXCIpO2EoaSxvLGQsXCJcXHUyYWFmXCIsXCJcXFxccHJlY2VxXCIpO2EoaSxvLGQsXCJcXHUyYWIwXCIsXCJcXFxcc3VjY2VxXCIpO2EoaSxvLGQsXCJcXHUyMjQzXCIsXCJcXFxcc2ltZXFcIik7YShpLG8sZCxcIlxcdTIyMjNcIixcIlxcXFxtaWRcIik7YShpLG8sZCxcIlxcdTIyNmFcIixcIlxcXFxsbFwiKTthKGksbyxkLFwiXFx1MjI2YlwiLFwiXFxcXGdnXCIpO2EoaSxvLGQsXCJcXHUyMjRkXCIsXCJcXFxcYXN5bXBcIik7YShpLG8sZCxcIlxcdTIyMjVcIixcIlxcXFxwYXJhbGxlbFwiKTthKGksbyxkLFwiXFx1MjJjOFwiLFwiXFxcXGJvd3RpZVwiKTthKGksbyxkLFwiXFx1MjMyM1wiLFwiXFxcXHNtaWxlXCIpO2EoaSxvLGQsXCJcXHUyMjkxXCIsXCJcXFxcc3FzdWJzZXRlcVwiKTthKGksbyxkLFwiXFx1MjI5MlwiLFwiXFxcXHNxc3Vwc2V0ZXFcIik7YShpLG8sZCxcIlxcdTIyNTBcIixcIlxcXFxkb3RlcVwiKTthKGksbyxkLFwiXFx1MjMyMlwiLFwiXFxcXGZyb3duXCIpO2EoaSxvLGQsXCJcXHUyMjBiXCIsXCJcXFxcbmlcIik7YShpLG8sZCxcIlxcdTIyMWRcIixcIlxcXFxwcm9wdG9cIik7YShpLG8sZCxcIlxcdTIyYTJcIixcIlxcXFx2ZGFzaFwiKTthKGksbyxkLFwiXFx1MjJhM1wiLFwiXFxcXGRhc2h2XCIpO2EoaSxvLGQsXCJcXHUyMjBiXCIsXCJcXFxcb3duc1wiKTtcclxuYShpLG8sbSxcIi5cIixcIlxcXFxsZG90cFwiKTthKGksbyxtLFwiXFx1MjJjNVwiLFwiXFxcXGNkb3RwXCIpO2EoaSxvLHksXCIjXCIsXCJcXFxcI1wiKTthKG4sbyx5LFwiI1wiLFwiXFxcXCNcIik7YShpLG8seSxcIiZcIixcIlxcXFwmXCIpO2EobixvLHksXCImXCIsXCJcXFxcJlwiKTthKGksbyx5LFwiXFx1MjEzNVwiLFwiXFxcXGFsZXBoXCIpO2EoaSxvLHksXCJcXHUyMjAwXCIsXCJcXFxcZm9yYWxsXCIpO2EoaSxvLHksXCJcXHUyMTBmXCIsXCJcXFxcaGJhclwiKTthKGksbyx5LFwiXFx1MjIwM1wiLFwiXFxcXGV4aXN0c1wiKTthKGksbyx5LFwiXFx1MjIwN1wiLFwiXFxcXG5hYmxhXCIpO2EoaSxvLHksXCJcXHUyNjZkXCIsXCJcXFxcZmxhdFwiKTthKGksbyx5LFwiXFx1MjExM1wiLFwiXFxcXGVsbFwiKTthKGksbyx5LFwiXFx1MjY2ZVwiLFwiXFxcXG5hdHVyYWxcIik7YShpLG8seSxcIlxcdTI2NjNcIixcIlxcXFxjbHVic3VpdFwiKTthKGksbyx5LFwiXFx1MjExOFwiLFwiXFxcXHdwXCIpO2EoaSxvLHksXCJcXHUyNjZmXCIsXCJcXFxcc2hhcnBcIik7YShpLG8seSxcIlxcdTI2NjJcIixcIlxcXFxkaWFtb25kc3VpdFwiKTthKGksbyx5LFwiXFx1MjExY1wiLFwiXFxcXFJlXCIpO2EoaSxvLHksXCJcXHUyNjYxXCIsXCJcXFxcaGVhcnRzdWl0XCIpO2EoaSxvLHksXCJcXHUyMTExXCIsXCJcXFxcSW1cIik7YShpLG8seSxcIlxcdTI2NjBcIixcIlxcXFxzcGFkZXN1aXRcIik7YShpLG8seSxcIlxcdTIwMjBcIixcIlxcXFxkYWdcIik7YShuLG8seSxcIlxcdTIwMjBcIixcIlxcXFxkYWdcIik7YShuLG8seSxcIlxcdTIwMjBcIixcIlxcXFx0ZXh0ZGFnZ2VyXCIpO2EoaSxvLHksXCJcXHUyMDIxXCIsXCJcXFxcZGRhZ1wiKTthKG4sbyx5LFwiXFx1MjAyMVwiLFwiXFxcXGRkYWdcIik7YShuLG8seSxcIlxcdTIwMjBcIixcIlxcXFx0ZXh0ZGFnZ2VyZGJsXCIpO2EoaSxvLGgsXCJcXHUyM2IxXCIsXCJcXFxccm1vdXN0YWNoZVwiKTthKGksbyxmLFwiXFx1MjNiMFwiLFwiXFxcXGxtb3VzdGFjaGVcIik7YShpLG8saCxcIlxcdTI3ZWZcIixcIlxcXFxyZ3JvdXBcIik7YShpLG8sZixcIlxcdTI3ZWVcIixcIlxcXFxsZ3JvdXBcIik7YShpLG8sdSxcIlxcdTIyMTNcIixcIlxcXFxtcFwiKTthKGksbyx1LFwiXFx1MjI5NlwiLFwiXFxcXG9taW51c1wiKTthKGksbyx1LFwiXFx1MjI4ZVwiLFwiXFxcXHVwbHVzXCIpO2EoaSxvLHUsXCJcXHUyMjkzXCIsXCJcXFxcc3FjYXBcIik7YShpLG8sdSxcIlxcdTIyMTdcIixcIlxcXFxhc3RcIik7YShpLG8sdSxcIlxcdTIyOTRcIixcIlxcXFxzcWN1cFwiKTthKGksbyx1LFwiXFx1MjVlZlwiLFwiXFxcXGJpZ2NpcmNcIik7YShpLG8sdSxcIlxcdTIyMTlcIixcIlxcXFxidWxsZXRcIik7YShpLG8sdSxcIlxcdTIwMjFcIixcIlxcXFxkZGFnZ2VyXCIpO2EoaSxvLHUsXCJcXHUyMjQwXCIsXCJcXFxcd3JcIik7YShpLG8sdSxcIlxcdTJhM2ZcIixcIlxcXFxhbWFsZ1wiKTthKGksbyxkLFwiXFx1MjdmNVwiLFwiXFxcXGxvbmdsZWZ0YXJyb3dcIik7YShpLG8sZCxcIlxcdTIxZDBcIixcIlxcXFxMZWZ0YXJyb3dcIik7YShpLG8sZCxcIlxcdTI3ZjhcIixcIlxcXFxMb25nbGVmdGFycm93XCIpO2EoaSxvLGQsXCJcXHUyN2Y2XCIsXCJcXFxcbG9uZ3JpZ2h0YXJyb3dcIik7YShpLG8sZCxcIlxcdTIxZDJcIixcIlxcXFxSaWdodGFycm93XCIpO2EoaSxvLGQsXCJcXHUyN2Y5XCIsXCJcXFxcTG9uZ3JpZ2h0YXJyb3dcIik7YShpLG8sZCxcIlxcdTIxOTRcIixcIlxcXFxsZWZ0cmlnaHRhcnJvd1wiKTthKGksbyxkLFwiXFx1MjdmN1wiLFwiXFxcXGxvbmdsZWZ0cmlnaHRhcnJvd1wiKTthKGksbyxkLFwiXFx1MjFkNFwiLFwiXFxcXExlZnRyaWdodGFycm93XCIpO2EoaSxvLGQsXCJcXHUyN2ZhXCIsXCJcXFxcTG9uZ2xlZnRyaWdodGFycm93XCIpO2EoaSxvLGQsXCJcXHUyMWE2XCIsXCJcXFxcbWFwc3RvXCIpO2EoaSxvLGQsXCJcXHUyN2ZjXCIsXCJcXFxcbG9uZ21hcHN0b1wiKTthKGksbyxkLFwiXFx1MjE5N1wiLFwiXFxcXG5lYXJyb3dcIik7YShpLG8sZCxcIlxcdTIxYTlcIixcIlxcXFxob29rbGVmdGFycm93XCIpO2EoaSxvLGQsXCJcXHUyMWFhXCIsXCJcXFxcaG9va3JpZ2h0YXJyb3dcIik7YShpLG8sZCxcIlxcdTIxOThcIixcIlxcXFxzZWFycm93XCIpO2EoaSxvLGQsXCJcXHUyMWJjXCIsXCJcXFxcbGVmdGhhcnBvb251cFwiKTthKGksbyxkLFwiXFx1MjFjMFwiLFwiXFxcXHJpZ2h0aGFycG9vbnVwXCIpO2EoaSxvLGQsXCJcXHUyMTk5XCIsXCJcXFxcc3dhcnJvd1wiKTthKGksbyxkLFwiXFx1MjFiZFwiLFwiXFxcXGxlZnRoYXJwb29uZG93blwiKTthKGksbyxkLFwiXFx1MjFjMVwiLFwiXFxcXHJpZ2h0aGFycG9vbmRvd25cIik7YShpLG8sZCxcIlxcdTIxOTZcIixcIlxcXFxud2Fycm93XCIpO2EoaSxvLGQsXCJcXHUyMWNjXCIsXCJcXFxccmlnaHRsZWZ0aGFycG9vbnNcIik7YShpLHMsZCxcIlxcdTIyNmVcIixcIlxcXFxubGVzc1wiKTthKGkscyxkLFwiXFx1ZTAxMFwiLFwiXFxcXG5sZXFzbGFudFwiKTthKGkscyxkLFwiXFx1ZTAxMVwiLFwiXFxcXG5sZXFxXCIpO2EoaSxzLGQsXCJcXHUyYTg3XCIsXCJcXFxcbG5lcVwiKTthKGkscyxkLFwiXFx1MjI2OFwiLFwiXFxcXGxuZXFxXCIpO2EoaSxzLGQsXCJcXHVlMDBjXCIsXCJcXFxcbHZlcnRuZXFxXCIpO2EoaSxzLGQsXCJcXHUyMmU2XCIsXCJcXFxcbG5zaW1cIik7YShpLHMsZCxcIlxcdTJhODlcIixcIlxcXFxsbmFwcHJveFwiKTthKGkscyxkLFwiXFx1MjI4MFwiLFwiXFxcXG5wcmVjXCIpO2EoaSxzLGQsXCJcXHUyMmUwXCIsXCJcXFxcbnByZWNlcVwiKTthKGkscyxkLFwiXFx1MjJlOFwiLFwiXFxcXHByZWNuc2ltXCIpO2EoaSxzLGQsXCJcXHUyYWI5XCIsXCJcXFxccHJlY25hcHByb3hcIik7YShpLHMsZCxcIlxcdTIyNDFcIixcIlxcXFxuc2ltXCIpO2EoaSxzLGQsXCJcXHVlMDA2XCIsXCJcXFxcbnNob3J0bWlkXCIpO2EoaSxzLGQsXCJcXHUyMjI0XCIsXCJcXFxcbm1pZFwiKTthKGkscyxkLFwiXFx1MjJhY1wiLFwiXFxcXG52ZGFzaFwiKTthKGkscyxkLFwiXFx1MjJhZFwiLFwiXFxcXG52RGFzaFwiKTthKGkscyxkLFwiXFx1MjJlYVwiLFwiXFxcXG50cmlhbmdsZWxlZnRcIik7YShpLHMsZCxcIlxcdTIyZWNcIixcIlxcXFxudHJpYW5nbGVsZWZ0ZXFcIik7YShpLHMsZCxcIlxcdTIyOGFcIixcIlxcXFxzdWJzZXRuZXFcIik7YShpLHMsZCxcIlxcdWUwMWFcIixcIlxcXFx2YXJzdWJzZXRuZXFcIik7YShpLHMsZCxcIlxcdTJhY2JcIixcIlxcXFxzdWJzZXRuZXFxXCIpO2EoaSxzLGQsXCJcXHVlMDE3XCIsXCJcXFxcdmFyc3Vic2V0bmVxcVwiKTthKGkscyxkLFwiXFx1MjI2ZlwiLFwiXFxcXG5ndHJcIik7YShpLHMsZCxcIlxcdWUwMGZcIixcIlxcXFxuZ2Vxc2xhbnRcIik7YShpLHMsZCxcIlxcdWUwMGVcIixcIlxcXFxuZ2VxcVwiKTthKGkscyxkLFwiXFx1MmE4OFwiLFwiXFxcXGduZXFcIik7YShpLHMsZCxcIlxcdTIyNjlcIixcIlxcXFxnbmVxcVwiKTthKGkscyxkLFwiXFx1ZTAwZFwiLFwiXFxcXGd2ZXJ0bmVxcVwiKTthKGkscyxkLFwiXFx1MjJlN1wiLFwiXFxcXGduc2ltXCIpO2EoaSxzLGQsXCJcXHUyYThhXCIsXCJcXFxcZ25hcHByb3hcIik7YShpLHMsZCxcIlxcdTIyODFcIixcIlxcXFxuc3VjY1wiKTthKGkscyxkLFwiXFx1MjJlMVwiLFwiXFxcXG5zdWNjZXFcIik7YShpLHMsZCxcIlxcdTIyZTlcIixcIlxcXFxzdWNjbnNpbVwiKTthKGkscyxkLFwiXFx1MmFiYVwiLFwiXFxcXHN1Y2NuYXBwcm94XCIpO2EoaSxzLGQsXCJcXHUyMjQ2XCIsXCJcXFxcbmNvbmdcIik7YShpLHMsZCxcIlxcdWUwMDdcIixcIlxcXFxuc2hvcnRwYXJhbGxlbFwiKTthKGkscyxkLFwiXFx1MjIyNlwiLFwiXFxcXG5wYXJhbGxlbFwiKTthKGkscyxkLFwiXFx1MjJhZlwiLFwiXFxcXG5WRGFzaFwiKTthKGkscyxkLFwiXFx1MjJlYlwiLFwiXFxcXG50cmlhbmdsZXJpZ2h0XCIpO2EoaSxzLGQsXCJcXHUyMmVkXCIsXCJcXFxcbnRyaWFuZ2xlcmlnaHRlcVwiKTthKGkscyxkLFwiXFx1ZTAxOFwiLFwiXFxcXG5zdXBzZXRlcXFcIik7YShpLHMsZCxcIlxcdTIyOGJcIixcIlxcXFxzdXBzZXRuZXFcIik7YShpLHMsZCxcIlxcdWUwMWJcIixcIlxcXFx2YXJzdXBzZXRuZXFcIik7YShpLHMsZCxcIlxcdTJhY2NcIixcIlxcXFxzdXBzZXRuZXFxXCIpO2EoaSxzLGQsXCJcXHVlMDE5XCIsXCJcXFxcdmFyc3Vwc2V0bmVxcVwiKTthKGkscyxkLFwiXFx1MjJhZVwiLFwiXFxcXG5WZGFzaFwiKTthKGkscyxkLFwiXFx1MmFiNVwiLFwiXFxcXHByZWNuZXFxXCIpO2EoaSxzLGQsXCJcXHUyYWI2XCIsXCJcXFxcc3VjY25lcXFcIik7YShpLHMsZCxcIlxcdWUwMTZcIixcIlxcXFxuc3Vic2V0ZXFxXCIpO2EoaSxzLHUsXCJcXHUyMmI0XCIsXCJcXFxcdW5saGRcIik7YShpLHMsdSxcIlxcdTIyYjVcIixcIlxcXFx1bnJoZFwiKTthKGkscyxkLFwiXFx1MjE5YVwiLFwiXFxcXG5sZWZ0YXJyb3dcIik7YShpLHMsZCxcIlxcdTIxOWJcIixcIlxcXFxucmlnaHRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjFjZFwiLFwiXFxcXG5MZWZ0YXJyb3dcIik7YShpLHMsZCxcIlxcdTIxY2ZcIixcIlxcXFxuUmlnaHRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjFhZVwiLFwiXFxcXG5sZWZ0cmlnaHRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjFjZVwiLFwiXFxcXG5MZWZ0cmlnaHRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjViM1wiLFwiXFxcXHZhcnRyaWFuZ2xlXCIpO2EoaSxzLHksXCJcXHUyMTBmXCIsXCJcXFxcaHNsYXNoXCIpO2EoaSxzLHksXCJcXHUyNWJkXCIsXCJcXFxcdHJpYW5nbGVkb3duXCIpO2EoaSxzLHksXCJcXHUyNWNhXCIsXCJcXFxcbG96ZW5nZVwiKTthKGkscyx5LFwiXFx1MjRjOFwiLFwiXFxcXGNpcmNsZWRTXCIpO2EoaSxzLHksXCJcXHhhZVwiLFwiXFxcXGNpcmNsZWRSXCIpO2EobixzLHksXCJcXHhhZVwiLFwiXFxcXGNpcmNsZWRSXCIpO2EoaSxzLHksXCJcXHUyMjIxXCIsXCJcXFxcbWVhc3VyZWRhbmdsZVwiKTthKGkscyx5LFwiXFx1MjIwNFwiLFwiXFxcXG5leGlzdHNcIik7YShpLHMseSxcIlxcdTIxMjdcIixcIlxcXFxtaG9cIik7YShpLHMseSxcIlxcdTIxMzJcIixcIlxcXFxGaW52XCIpO2EoaSxzLHksXCJcXHUyMTQxXCIsXCJcXFxcR2FtZVwiKTthKGkscyx5LFwia1wiLFwiXFxcXEJiYmtcIik7YShpLHMseSxcIlxcdTIwMzVcIixcIlxcXFxiYWNrcHJpbWVcIik7YShpLHMseSxcIlxcdTI1YjJcIixcIlxcXFxibGFja3RyaWFuZ2xlXCIpO2EoaSxzLHksXCJcXHUyNWJjXCIsXCJcXFxcYmxhY2t0cmlhbmdsZWRvd25cIik7YShpLHMseSxcIlxcdTI1YTBcIixcIlxcXFxibGFja3NxdWFyZVwiKTthKGkscyx5LFwiXFx1MjllYlwiLFwiXFxcXGJsYWNrbG96ZW5nZVwiKTthKGkscyx5LFwiXFx1MjYwNVwiLFwiXFxcXGJpZ3N0YXJcIik7YShpLHMseSxcIlxcdTIyMjJcIixcIlxcXFxzcGhlcmljYWxhbmdsZVwiKTthKGkscyx5LFwiXFx1MjIwMVwiLFwiXFxcXGNvbXBsZW1lbnRcIik7YShpLHMseSxcIlxceGYwXCIsXCJcXFxcZXRoXCIpO2EoaSxzLHksXCJcXHUyNTcxXCIsXCJcXFxcZGlhZ3VwXCIpO2EoaSxzLHksXCJcXHUyNTcyXCIsXCJcXFxcZGlhZ2Rvd25cIik7YShpLHMseSxcIlxcdTI1YTFcIixcIlxcXFxzcXVhcmVcIik7YShpLHMseSxcIlxcdTI1YTFcIixcIlxcXFxCb3hcIik7YShpLHMseSxcIlxcdTI1Y2FcIixcIlxcXFxEaWFtb25kXCIpO2EoaSxzLHksXCJcXHhhNVwiLFwiXFxcXHllblwiKTthKGkscyx5LFwiXFx1MjcxM1wiLFwiXFxcXGNoZWNrbWFya1wiKTthKG4scyx5LFwiXFx1MjcxM1wiLFwiXFxcXGNoZWNrbWFya1wiKTthKGkscyx5LFwiXFx1MjEzNlwiLFwiXFxcXGJldGhcIik7YShpLHMseSxcIlxcdTIxMzhcIixcIlxcXFxkYWxldGhcIik7YShpLHMseSxcIlxcdTIxMzdcIixcIlxcXFxnaW1lbFwiKTthKGkscyx5LFwiXFx1MDNkZFwiLFwiXFxcXGRpZ2FtbWFcIik7YShpLHMseSxcIlxcdTAzZjBcIixcIlxcXFx2YXJrYXBwYVwiKTthKGkscyxmLFwiXFx1MjUwY1wiLFwiXFxcXHVsY29ybmVyXCIpO2EoaSxzLGgsXCJcXHUyNTEwXCIsXCJcXFxcdXJjb3JuZXJcIik7YShpLHMsZixcIlxcdTI1MTRcIixcIlxcXFxsbGNvcm5lclwiKTthKGkscyxoLFwiXFx1MjUxOFwiLFwiXFxcXGxyY29ybmVyXCIpO2EoaSxzLGQsXCJcXHUyMjY2XCIsXCJcXFxcbGVxcVwiKTthKGkscyxkLFwiXFx1MmE3ZFwiLFwiXFxcXGxlcXNsYW50XCIpO2EoaSxzLGQsXCJcXHUyYTk1XCIsXCJcXFxcZXFzbGFudGxlc3NcIik7YShpLHMsZCxcIlxcdTIyNzJcIixcIlxcXFxsZXNzc2ltXCIpO2EoaSxzLGQsXCJcXHUyYTg1XCIsXCJcXFxcbGVzc2FwcHJveFwiKTthKGkscyxkLFwiXFx1MjI0YVwiLFwiXFxcXGFwcHJveGVxXCIpO2EoaSxzLHUsXCJcXHUyMmQ2XCIsXCJcXFxcbGVzc2RvdFwiKTthKGkscyxkLFwiXFx1MjJkOFwiLFwiXFxcXGxsbFwiKTthKGkscyxkLFwiXFx1MjI3NlwiLFwiXFxcXGxlc3NndHJcIik7YShpLHMsZCxcIlxcdTIyZGFcIixcIlxcXFxsZXNzZXFndHJcIik7YShpLHMsZCxcIlxcdTJhOGJcIixcIlxcXFxsZXNzZXFxZ3RyXCIpO2EoaSxzLGQsXCJcXHUyMjUxXCIsXCJcXFxcZG90ZXFkb3RcIik7YShpLHMsZCxcIlxcdTIyNTNcIixcIlxcXFxyaXNpbmdkb3RzZXFcIik7YShpLHMsZCxcIlxcdTIyNTJcIixcIlxcXFxmYWxsaW5nZG90c2VxXCIpO2EoaSxzLGQsXCJcXHUyMjNkXCIsXCJcXFxcYmFja3NpbVwiKTthKGkscyxkLFwiXFx1MjJjZFwiLFwiXFxcXGJhY2tzaW1lcVwiKTthKGkscyxkLFwiXFx1MmFjNVwiLFwiXFxcXHN1YnNldGVxcVwiKTthKGkscyxkLFwiXFx1MjJkMFwiLFwiXFxcXFN1YnNldFwiKTthKGkscyxkLFwiXFx1MjI4ZlwiLFwiXFxcXHNxc3Vic2V0XCIpO2EoaSxzLGQsXCJcXHUyMjdjXCIsXCJcXFxccHJlY2N1cmx5ZXFcIik7YShpLHMsZCxcIlxcdTIyZGVcIixcIlxcXFxjdXJseWVxcHJlY1wiKTthKGkscyxkLFwiXFx1MjI3ZVwiLFwiXFxcXHByZWNzaW1cIik7YShpLHMsZCxcIlxcdTJhYjdcIixcIlxcXFxwcmVjYXBwcm94XCIpO2EoaSxzLGQsXCJcXHUyMmIyXCIsXCJcXFxcdmFydHJpYW5nbGVsZWZ0XCIpO2EoaSxzLGQsXCJcXHUyMmI0XCIsXCJcXFxcdHJpYW5nbGVsZWZ0ZXFcIik7YShpLHMsZCxcIlxcdTIyYThcIixcIlxcXFx2RGFzaFwiKTthKGkscyxkLFwiXFx1MjJhYVwiLFwiXFxcXFZ2ZGFzaFwiKTthKGkscyxkLFwiXFx1MjMyM1wiLFwiXFxcXHNtYWxsc21pbGVcIik7YShpLHMsZCxcIlxcdTIzMjJcIixcIlxcXFxzbWFsbGZyb3duXCIpO2EoaSxzLGQsXCJcXHUyMjRmXCIsXCJcXFxcYnVtcGVxXCIpO2EoaSxzLGQsXCJcXHUyMjRlXCIsXCJcXFxcQnVtcGVxXCIpO2EoaSxzLGQsXCJcXHUyMjY3XCIsXCJcXFxcZ2VxcVwiKTthKGkscyxkLFwiXFx1MmE3ZVwiLFwiXFxcXGdlcXNsYW50XCIpO2EoaSxzLGQsXCJcXHUyYTk2XCIsXCJcXFxcZXFzbGFudGd0clwiKTthKGkscyxkLFwiXFx1MjI3M1wiLFwiXFxcXGd0cnNpbVwiKTthKGkscyxkLFwiXFx1MmE4NlwiLFwiXFxcXGd0cmFwcHJveFwiKTthKGkscyx1LFwiXFx1MjJkN1wiLFwiXFxcXGd0cmRvdFwiKTthKGkscyxkLFwiXFx1MjJkOVwiLFwiXFxcXGdnZ1wiKTthKGkscyxkLFwiXFx1MjI3N1wiLFwiXFxcXGd0cmxlc3NcIik7YShpLHMsZCxcIlxcdTIyZGJcIixcIlxcXFxndHJlcWxlc3NcIik7YShpLHMsZCxcIlxcdTJhOGNcIixcIlxcXFxndHJlcXFsZXNzXCIpO2EoaSxzLGQsXCJcXHUyMjU2XCIsXCJcXFxcZXFjaXJjXCIpO2EoaSxzLGQsXCJcXHUyMjU3XCIsXCJcXFxcY2lyY2VxXCIpO2EoaSxzLGQsXCJcXHUyMjVjXCIsXCJcXFxcdHJpYW5nbGVxXCIpO2EoaSxzLGQsXCJcXHUyMjNjXCIsXCJcXFxcdGhpY2tzaW1cIik7YShpLHMsZCxcIlxcdTIyNDhcIixcIlxcXFx0aGlja2FwcHJveFwiKTthKGkscyxkLFwiXFx1MmFjNlwiLFwiXFxcXHN1cHNldGVxcVwiKTthKGkscyxkLFwiXFx1MjJkMVwiLFwiXFxcXFN1cHNldFwiKTthKGkscyxkLFwiXFx1MjI5MFwiLFwiXFxcXHNxc3Vwc2V0XCIpO2EoaSxzLGQsXCJcXHUyMjdkXCIsXCJcXFxcc3VjY2N1cmx5ZXFcIik7YShpLHMsZCxcIlxcdTIyZGZcIixcIlxcXFxjdXJseWVxc3VjY1wiKTthKGkscyxkLFwiXFx1MjI3ZlwiLFwiXFxcXHN1Y2NzaW1cIik7YShpLHMsZCxcIlxcdTJhYjhcIixcIlxcXFxzdWNjYXBwcm94XCIpO2EoaSxzLGQsXCJcXHUyMmIzXCIsXCJcXFxcdmFydHJpYW5nbGVyaWdodFwiKTthKGkscyxkLFwiXFx1MjJiNVwiLFwiXFxcXHRyaWFuZ2xlcmlnaHRlcVwiKTthKGkscyxkLFwiXFx1MjJhOVwiLFwiXFxcXFZkYXNoXCIpO2EoaSxzLGQsXCJcXHUyMjIzXCIsXCJcXFxcc2hvcnRtaWRcIik7YShpLHMsZCxcIlxcdTIyMjVcIixcIlxcXFxzaG9ydHBhcmFsbGVsXCIpO2EoaSxzLGQsXCJcXHUyMjZjXCIsXCJcXFxcYmV0d2VlblwiKTthKGkscyxkLFwiXFx1MjJkNFwiLFwiXFxcXHBpdGNoZm9ya1wiKTthKGkscyxkLFwiXFx1MjIxZFwiLFwiXFxcXHZhcnByb3B0b1wiKTthKGkscyxkLFwiXFx1MjVjMFwiLFwiXFxcXGJsYWNrdHJpYW5nbGVsZWZ0XCIpO2EoaSxzLGQsXCJcXHUyMjM0XCIsXCJcXFxcdGhlcmVmb3JlXCIpO2EoaSxzLGQsXCJcXHUyMjBkXCIsXCJcXFxcYmFja2Vwc2lsb25cIik7YShpLHMsZCxcIlxcdTI1YjZcIixcIlxcXFxibGFja3RyaWFuZ2xlcmlnaHRcIik7YShpLHMsZCxcIlxcdTIyMzVcIixcIlxcXFxiZWNhdXNlXCIpO2EoaSxzLGQsXCJcXHUyMmQ4XCIsXCJcXFxcbGxsZXNzXCIpO2EoaSxzLGQsXCJcXHUyMmQ5XCIsXCJcXFxcZ2dndHJcIik7YShpLHMsdSxcIlxcdTIyYjJcIixcIlxcXFxsaGRcIik7YShpLHMsdSxcIlxcdTIyYjNcIixcIlxcXFxyaGRcIik7YShpLHMsZCxcIlxcdTIyNDJcIixcIlxcXFxlcXNpbVwiKTthKGksbyxkLFwiXFx1MjJjOFwiLFwiXFxcXEpvaW5cIik7YShpLHMsZCxcIlxcdTIyNTFcIixcIlxcXFxEb3RlcVwiKTthKGkscyx1LFwiXFx1MjIxNFwiLFwiXFxcXGRvdHBsdXNcIik7YShpLHMsdSxcIlxcdTIyMTZcIixcIlxcXFxzbWFsbHNldG1pbnVzXCIpO2EoaSxzLHUsXCJcXHUyMmQyXCIsXCJcXFxcQ2FwXCIpO2EoaSxzLHUsXCJcXHUyMmQzXCIsXCJcXFxcQ3VwXCIpO2EoaSxzLHUsXCJcXHUyYTVlXCIsXCJcXFxcZG91YmxlYmFyd2VkZ2VcIik7YShpLHMsdSxcIlxcdTIyOWZcIixcIlxcXFxib3htaW51c1wiKTthKGkscyx1LFwiXFx1MjI5ZVwiLFwiXFxcXGJveHBsdXNcIik7YShpLHMsdSxcIlxcdTIyYzdcIixcIlxcXFxkaXZpZGVvbnRpbWVzXCIpO2EoaSxzLHUsXCJcXHUyMmM5XCIsXCJcXFxcbHRpbWVzXCIpO2EoaSxzLHUsXCJcXHUyMmNhXCIsXCJcXFxccnRpbWVzXCIpO2EoaSxzLHUsXCJcXHUyMmNiXCIsXCJcXFxcbGVmdHRocmVldGltZXNcIik7YShpLHMsdSxcIlxcdTIyY2NcIixcIlxcXFxyaWdodHRocmVldGltZXNcIik7YShpLHMsdSxcIlxcdTIyY2ZcIixcIlxcXFxjdXJseXdlZGdlXCIpO2EoaSxzLHUsXCJcXHUyMmNlXCIsXCJcXFxcY3VybHl2ZWVcIik7YShpLHMsdSxcIlxcdTIyOWRcIixcIlxcXFxjaXJjbGVkZGFzaFwiKTthKGkscyx1LFwiXFx1MjI5YlwiLFwiXFxcXGNpcmNsZWRhc3RcIik7YShpLHMsdSxcIlxcdTIyYzVcIixcIlxcXFxjZW50ZXJkb3RcIik7YShpLHMsdSxcIlxcdTIyYmFcIixcIlxcXFxpbnRlcmNhbFwiKTthKGkscyx1LFwiXFx1MjJkMlwiLFwiXFxcXGRvdWJsZWNhcFwiKTthKGkscyx1LFwiXFx1MjJkM1wiLFwiXFxcXGRvdWJsZWN1cFwiKTthKGkscyx1LFwiXFx1MjJhMFwiLFwiXFxcXGJveHRpbWVzXCIpO2EoaSxzLGQsXCJcXHUyMWUyXCIsXCJcXFxcZGFzaHJpZ2h0YXJyb3dcIik7YShpLHMsZCxcIlxcdTIxZTBcIixcIlxcXFxkYXNobGVmdGFycm93XCIpO2EoaSxzLGQsXCJcXHUyMWM3XCIsXCJcXFxcbGVmdGxlZnRhcnJvd3NcIik7YShpLHMsZCxcIlxcdTIxYzZcIixcIlxcXFxsZWZ0cmlnaHRhcnJvd3NcIik7YShpLHMsZCxcIlxcdTIxZGFcIixcIlxcXFxMbGVmdGFycm93XCIpO2EoaSxzLGQsXCJcXHUyMTllXCIsXCJcXFxcdHdvaGVhZGxlZnRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjFhMlwiLFwiXFxcXGxlZnRhcnJvd3RhaWxcIik7YShpLHMsZCxcIlxcdTIxYWJcIixcIlxcXFxsb29wYXJyb3dsZWZ0XCIpO2EoaSxzLGQsXCJcXHUyMWNiXCIsXCJcXFxcbGVmdHJpZ2h0aGFycG9vbnNcIik7YShpLHMsZCxcIlxcdTIxYjZcIixcIlxcXFxjdXJ2ZWFycm93bGVmdFwiKTthKGkscyxkLFwiXFx1MjFiYVwiLFwiXFxcXGNpcmNsZWFycm93bGVmdFwiKTthKGkscyxkLFwiXFx1MjFiMFwiLFwiXFxcXExzaFwiKTthKGkscyxkLFwiXFx1MjFjOFwiLFwiXFxcXHVwdXBhcnJvd3NcIik7YShpLHMsZCxcIlxcdTIxYmZcIixcIlxcXFx1cGhhcnBvb25sZWZ0XCIpO2EoaSxzLGQsXCJcXHUyMWMzXCIsXCJcXFxcZG93bmhhcnBvb25sZWZ0XCIpO2EoaSxzLGQsXCJcXHUyMmI4XCIsXCJcXFxcbXVsdGltYXBcIik7YShpLHMsZCxcIlxcdTIxYWRcIixcIlxcXFxsZWZ0cmlnaHRzcXVpZ2Fycm93XCIpO2EoaSxzLGQsXCJcXHUyMWM5XCIsXCJcXFxccmlnaHRyaWdodGFycm93c1wiKTthKGkscyxkLFwiXFx1MjFjNFwiLFwiXFxcXHJpZ2h0bGVmdGFycm93c1wiKTthKGkscyxkLFwiXFx1MjFhMFwiLFwiXFxcXHR3b2hlYWRyaWdodGFycm93XCIpO2EoaSxzLGQsXCJcXHUyMWEzXCIsXCJcXFxccmlnaHRhcnJvd3RhaWxcIik7YShpLHMsZCxcIlxcdTIxYWNcIixcIlxcXFxsb29wYXJyb3dyaWdodFwiKTthKGkscyxkLFwiXFx1MjFiN1wiLFwiXFxcXGN1cnZlYXJyb3dyaWdodFwiKTthKGkscyxkLFwiXFx1MjFiYlwiLFwiXFxcXGNpcmNsZWFycm93cmlnaHRcIik7YShpLHMsZCxcIlxcdTIxYjFcIixcIlxcXFxSc2hcIik7YShpLHMsZCxcIlxcdTIxY2FcIixcIlxcXFxkb3duZG93bmFycm93c1wiKTthKGkscyxkLFwiXFx1MjFiZVwiLFwiXFxcXHVwaGFycG9vbnJpZ2h0XCIpO2EoaSxzLGQsXCJcXHUyMWMyXCIsXCJcXFxcZG93bmhhcnBvb25yaWdodFwiKTthKGkscyxkLFwiXFx1MjFkZFwiLFwiXFxcXHJpZ2h0c3F1aWdhcnJvd1wiKTthKGkscyxkLFwiXFx1MjFkZFwiLFwiXFxcXGxlYWRzdG9cIik7YShpLHMsZCxcIlxcdTIxZGJcIixcIlxcXFxScmlnaHRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjFiZVwiLFwiXFxcXHJlc3RyaWN0aW9uXCIpO2EoaSxvLHksXCJcXHUyMDE4XCIsXCJgXCIpO2EoaSxvLHksXCIkXCIsXCJcXFxcJFwiKTthKG4sbyx5LFwiJFwiLFwiXFxcXCRcIik7YShuLG8seSxcIiRcIixcIlxcXFx0ZXh0ZG9sbGFyXCIpO2EoaSxvLHksXCIlXCIsXCJcXFxcJVwiKTthKG4sbyx5LFwiJVwiLFwiXFxcXCVcIik7YShpLG8seSxcIl9cIixcIlxcXFxfXCIpO2EobixvLHksXCJfXCIsXCJcXFxcX1wiKTthKG4sbyx5LFwiX1wiLFwiXFxcXHRleHR1bmRlcnNjb3JlXCIpO2EoaSxvLHksXCJcXHUyMjIwXCIsXCJcXFxcYW5nbGVcIik7YShpLG8seSxcIlxcdTIyMWVcIixcIlxcXFxpbmZ0eVwiKTthKGksbyx5LFwiXFx1MjAzMlwiLFwiXFxcXHByaW1lXCIpO2EoaSxvLHksXCJcXHUyNWIzXCIsXCJcXFxcdHJpYW5nbGVcIik7YShpLG8seSxcIlxcdTAzOTNcIixcIlxcXFxHYW1tYVwiKTthKGksbyx5LFwiXFx1MDM5NFwiLFwiXFxcXERlbHRhXCIpO2EoaSxvLHksXCJcXHUwMzk4XCIsXCJcXFxcVGhldGFcIik7YShpLG8seSxcIlxcdTAzOWJcIixcIlxcXFxMYW1iZGFcIik7YShpLG8seSxcIlxcdTAzOWVcIixcIlxcXFxYaVwiKTthKGksbyx5LFwiXFx1MDNhMFwiLFwiXFxcXFBpXCIpO2EoaSxvLHksXCJcXHUwM2EzXCIsXCJcXFxcU2lnbWFcIik7YShpLG8seSxcIlxcdTAzYTVcIixcIlxcXFxVcHNpbG9uXCIpO2EoaSxvLHksXCJcXHUwM2E2XCIsXCJcXFxcUGhpXCIpO2EoaSxvLHksXCJcXHUwM2E4XCIsXCJcXFxcUHNpXCIpO2EoaSxvLHksXCJcXHUwM2E5XCIsXCJcXFxcT21lZ2FcIik7YShpLG8seSxcIlxceGFjXCIsXCJcXFxcbmVnXCIpO2EoaSxvLHksXCJcXHhhY1wiLFwiXFxcXGxub3RcIik7YShpLG8seSxcIlxcdTIyYTRcIixcIlxcXFx0b3BcIik7YShpLG8seSxcIlxcdTIyYTVcIixcIlxcXFxib3RcIik7YShpLG8seSxcIlxcdTIyMDVcIixcIlxcXFxlbXB0eXNldFwiKTthKGkscyx5LFwiXFx1MjIwNVwiLFwiXFxcXHZhcm5vdGhpbmdcIik7YShpLG8sYyxcIlxcdTAzYjFcIixcIlxcXFxhbHBoYVwiKTthKGksbyxjLFwiXFx1MDNiMlwiLFwiXFxcXGJldGFcIik7YShpLG8sYyxcIlxcdTAzYjNcIixcIlxcXFxnYW1tYVwiKTthKGksbyxjLFwiXFx1MDNiNFwiLFwiXFxcXGRlbHRhXCIpO2EoaSxvLGMsXCJcXHUwM2Y1XCIsXCJcXFxcZXBzaWxvblwiKTthKGksbyxjLFwiXFx1MDNiNlwiLFwiXFxcXHpldGFcIik7YShpLG8sYyxcIlxcdTAzYjdcIixcIlxcXFxldGFcIik7YShpLG8sYyxcIlxcdTAzYjhcIixcIlxcXFx0aGV0YVwiKTthKGksbyxjLFwiXFx1MDNiOVwiLFwiXFxcXGlvdGFcIik7YShpLG8sYyxcIlxcdTAzYmFcIixcIlxcXFxrYXBwYVwiKTthKGksbyxjLFwiXFx1MDNiYlwiLFwiXFxcXGxhbWJkYVwiKTthKGksbyxjLFwiXFx1MDNiY1wiLFwiXFxcXG11XCIpO2EoaSxvLGMsXCJcXHUwM2JkXCIsXCJcXFxcbnVcIik7YShpLG8sYyxcIlxcdTAzYmVcIixcIlxcXFx4aVwiKTthKGksbyxjLFwib1wiLFwiXFxcXG9taWNyb25cIik7YShpLG8sYyxcIlxcdTAzYzBcIixcIlxcXFxwaVwiKTthKGksbyxjLFwiXFx1MDNjMVwiLFwiXFxcXHJob1wiKTthKGksbyxjLFwiXFx1MDNjM1wiLFwiXFxcXHNpZ21hXCIpO2EoaSxvLGMsXCJcXHUwM2M0XCIsXCJcXFxcdGF1XCIpO2EoaSxvLGMsXCJcXHUwM2M1XCIsXCJcXFxcdXBzaWxvblwiKTthKGksbyxjLFwiXFx1MDNkNVwiLFwiXFxcXHBoaVwiKTthKGksbyxjLFwiXFx1MDNjN1wiLFwiXFxcXGNoaVwiKTthKGksbyxjLFwiXFx1MDNjOFwiLFwiXFxcXHBzaVwiKTthKGksbyxjLFwiXFx1MDNjOVwiLFwiXFxcXG9tZWdhXCIpO2EoaSxvLGMsXCJcXHUwM2I1XCIsXCJcXFxcdmFyZXBzaWxvblwiKTthKGksbyxjLFwiXFx1MDNkMVwiLFwiXFxcXHZhcnRoZXRhXCIpO2EoaSxvLGMsXCJcXHUwM2Q2XCIsXCJcXFxcdmFycGlcIik7YShpLG8sYyxcIlxcdTAzZjFcIixcIlxcXFx2YXJyaG9cIik7YShpLG8sYyxcIlxcdTAzYzJcIixcIlxcXFx2YXJzaWdtYVwiKTthKGksbyxjLFwiXFx1MDNjNlwiLFwiXFxcXHZhcnBoaVwiKTthKGksbyx1LFwiXFx1MjIxN1wiLFwiKlwiKTthKGksbyx1LFwiK1wiLFwiK1wiKTthKGksbyx1LFwiXFx1MjIxMlwiLFwiLVwiKTthKGksbyx1LFwiXFx1MjJjNVwiLFwiXFxcXGNkb3RcIik7YShpLG8sdSxcIlxcdTIyMThcIixcIlxcXFxjaXJjXCIpO2EoaSxvLHUsXCJcXHhmN1wiLFwiXFxcXGRpdlwiKTthKGksbyx1LFwiXFx4YjFcIixcIlxcXFxwbVwiKTthKGksbyx1LFwiXFx4ZDdcIixcIlxcXFx0aW1lc1wiKTthKGksbyx1LFwiXFx1MjIyOVwiLFwiXFxcXGNhcFwiKTthKGksbyx1LFwiXFx1MjIyYVwiLFwiXFxcXGN1cFwiKTthKGksbyx1LFwiXFx1MjIxNlwiLFwiXFxcXHNldG1pbnVzXCIpO2EoaSxvLHUsXCJcXHUyMjI3XCIsXCJcXFxcbGFuZFwiKTthKGksbyx1LFwiXFx1MjIyOFwiLFwiXFxcXGxvclwiKTthKGksbyx1LFwiXFx1MjIyN1wiLFwiXFxcXHdlZGdlXCIpO2EoaSxvLHUsXCJcXHUyMjI4XCIsXCJcXFxcdmVlXCIpO2EoaSxvLHksXCJcXHUyMjFhXCIsXCJcXFxcc3VyZFwiKTthKGksbyxmLFwiKFwiLFwiKFwiKTthKGksbyxmLFwiW1wiLFwiW1wiKTthKGksbyxmLFwiXFx1MjdlOFwiLFwiXFxcXGxhbmdsZVwiKTthKGksbyxmLFwiXFx1MjIyM1wiLFwiXFxcXGx2ZXJ0XCIpO2EoaSxvLGYsXCJcXHUyMjI1XCIsXCJcXFxcbFZlcnRcIik7YShpLG8saCxcIilcIixcIilcIik7YShpLG8saCxcIl1cIixcIl1cIik7YShpLG8saCxcIj9cIixcIj9cIik7YShpLG8saCxcIiFcIixcIiFcIik7YShpLG8saCxcIlxcdTI3ZTlcIixcIlxcXFxyYW5nbGVcIik7YShpLG8saCxcIlxcdTIyMjNcIixcIlxcXFxydmVydFwiKTthKGksbyxoLFwiXFx1MjIyNVwiLFwiXFxcXHJWZXJ0XCIpO2EoaSxvLGQsXCI9XCIsXCI9XCIpO2EoaSxvLGQsXCI8XCIsXCI8XCIpO2EoaSxvLGQsXCI+XCIsXCI+XCIpO2EoaSxvLGQsXCI6XCIsXCI6XCIpO2EoaSxvLGQsXCJcXHUyMjQ4XCIsXCJcXFxcYXBwcm94XCIpO2EoaSxvLGQsXCJcXHUyMjQ1XCIsXCJcXFxcY29uZ1wiKTthKGksbyxkLFwiXFx1MjI2NVwiLFwiXFxcXGdlXCIpO2EoaSxvLGQsXCJcXHUyMjY1XCIsXCJcXFxcZ2VxXCIpO2EoaSxvLGQsXCJcXHUyMTkwXCIsXCJcXFxcZ2V0c1wiKTthKGksbyxkLFwiPlwiLFwiXFxcXGd0XCIpO2EoaSxvLGQsXCJcXHUyMjA4XCIsXCJcXFxcaW5cIik7YShpLG8sZCxcIlxcdTIyMDlcIixcIlxcXFxub3RpblwiKTthKGksbyxkLFwiXFx1MjI4MlwiLFwiXFxcXHN1YnNldFwiKTthKGksbyxkLFwiXFx1MjI4M1wiLFwiXFxcXHN1cHNldFwiKTthKGksbyxkLFwiXFx1MjI4NlwiLFwiXFxcXHN1YnNldGVxXCIpO2EoaSxvLGQsXCJcXHUyMjg3XCIsXCJcXFxcc3Vwc2V0ZXFcIik7YShpLHMsZCxcIlxcdTIyODhcIixcIlxcXFxuc3Vic2V0ZXFcIik7YShpLHMsZCxcIlxcdTIyODlcIixcIlxcXFxuc3Vwc2V0ZXFcIik7YShpLG8sZCxcIlxcdTIyYThcIixcIlxcXFxtb2RlbHNcIik7YShpLG8sZCxcIlxcdTIxOTBcIixcIlxcXFxsZWZ0YXJyb3dcIik7YShpLG8sZCxcIlxcdTIyNjRcIixcIlxcXFxsZVwiKTthKGksbyxkLFwiXFx1MjI2NFwiLFwiXFxcXGxlcVwiKTthKGksbyxkLFwiPFwiLFwiXFxcXGx0XCIpO2EoaSxvLGQsXCJcXHUyMjYwXCIsXCJcXFxcbmVcIik7YShpLG8sZCxcIlxcdTIyNjBcIixcIlxcXFxuZXFcIik7YShpLG8sZCxcIlxcdTIxOTJcIixcIlxcXFxyaWdodGFycm93XCIpO2EoaSxvLGQsXCJcXHUyMTkyXCIsXCJcXFxcdG9cIik7YShpLHMsZCxcIlxcdTIyNzFcIixcIlxcXFxuZ2VxXCIpO2EoaSxzLGQsXCJcXHUyMjcwXCIsXCJcXFxcbmxlcVwiKTthKGksbyxnLG51bGwsXCJcXFxcIVwiKTthKGksbyxnLFwiXFx4YTBcIixcIlxcXFwgXCIpO2EoaSxvLGcsXCJcXHhhMFwiLFwiflwiKTthKGksbyxnLG51bGwsXCJcXFxcLFwiKTthKGksbyxnLG51bGwsXCJcXFxcOlwiKTthKGksbyxnLG51bGwsXCJcXFxcO1wiKTthKGksbyxnLG51bGwsXCJcXFxcZW5zcGFjZVwiKTthKGksbyxnLG51bGwsXCJcXFxccXF1YWRcIik7YShpLG8sZyxudWxsLFwiXFxcXHF1YWRcIik7YShpLG8sZyxcIlxceGEwXCIsXCJcXFxcc3BhY2VcIik7YShpLG8sbSxcIixcIixcIixcIik7YShpLG8sbSxcIjtcIixcIjtcIik7YShpLG8sbSxcIjpcIixcIlxcXFxjb2xvblwiKTthKGkscyx1LFwiXFx1MjJiY1wiLFwiXFxcXGJhcndlZGdlXCIpO2EoaSxzLHUsXCJcXHUyMmJiXCIsXCJcXFxcdmVlYmFyXCIpO2EoaSxvLHUsXCJcXHUyMjk5XCIsXCJcXFxcb2RvdFwiKTthKGksbyx1LFwiXFx1MjI5NVwiLFwiXFxcXG9wbHVzXCIpO2EoaSxvLHUsXCJcXHUyMjk3XCIsXCJcXFxcb3RpbWVzXCIpO2EoaSxvLHksXCJcXHUyMjAyXCIsXCJcXFxccGFydGlhbFwiKTthKGksbyx1LFwiXFx1MjI5OFwiLFwiXFxcXG9zbGFzaFwiKTthKGkscyx1LFwiXFx1MjI5YVwiLFwiXFxcXGNpcmNsZWRjaXJjXCIpO2EoaSxzLHUsXCJcXHUyMmExXCIsXCJcXFxcYm94ZG90XCIpO2EoaSxvLHUsXCJcXHUyNWIzXCIsXCJcXFxcYmlndHJpYW5nbGV1cFwiKTthKGksbyx1LFwiXFx1MjViZFwiLFwiXFxcXGJpZ3RyaWFuZ2xlZG93blwiKTthKGksbyx1LFwiXFx1MjAyMFwiLFwiXFxcXGRhZ2dlclwiKTthKGksbyx1LFwiXFx1MjJjNFwiLFwiXFxcXGRpYW1vbmRcIik7YShpLG8sdSxcIlxcdTIyYzZcIixcIlxcXFxzdGFyXCIpO2EoaSxvLHUsXCJcXHUyNWMzXCIsXCJcXFxcdHJpYW5nbGVsZWZ0XCIpO2EoaSxvLHUsXCJcXHUyNWI5XCIsXCJcXFxcdHJpYW5nbGVyaWdodFwiKTthKGksbyxmLFwie1wiLFwiXFxcXHtcIik7YShuLG8seSxcIntcIixcIlxcXFx7XCIpO2EobixvLHksXCJ7XCIsXCJcXFxcdGV4dGJyYWNlbGVmdFwiKTthKGksbyxoLFwifVwiLFwiXFxcXH1cIik7YShuLG8seSxcIn1cIixcIlxcXFx9XCIpO2EobixvLHksXCJ9XCIsXCJcXFxcdGV4dGJyYWNlcmlnaHRcIik7YShpLG8sZixcIntcIixcIlxcXFxsYnJhY2VcIik7YShpLG8saCxcIn1cIixcIlxcXFxyYnJhY2VcIik7YShpLG8sZixcIltcIixcIlxcXFxsYnJhY2tcIik7YShpLG8saCxcIl1cIixcIlxcXFxyYnJhY2tcIik7YShuLG8seSxcIjxcIixcIlxcXFx0ZXh0bGVzc1wiKTthKG4sbyx5LFwiPlwiLFwiXFxcXHRleHRncmVhdGVyXCIpO2EoaSxvLGYsXCJcXHUyMzBhXCIsXCJcXFxcbGZsb29yXCIpO2EoaSxvLGgsXCJcXHUyMzBiXCIsXCJcXFxccmZsb29yXCIpO2EoaSxvLGYsXCJcXHUyMzA4XCIsXCJcXFxcbGNlaWxcIik7YShpLG8saCxcIlxcdTIzMDlcIixcIlxcXFxyY2VpbFwiKTthKGksbyx5LFwiXFxcXFwiLFwiXFxcXGJhY2tzbGFzaFwiKTthKGksbyx5LFwiXFx1MjIyM1wiLFwifFwiKTthKGksbyx5LFwiXFx1MjIyM1wiLFwiXFxcXHZlcnRcIik7YShuLG8seSxcInxcIixcIlxcXFx0ZXh0YmFyXCIpO2EoaSxvLHksXCJcXHUyMjI1XCIsXCJcXFxcfFwiKTthKGksbyx5LFwiXFx1MjIyNVwiLFwiXFxcXFZlcnRcIik7YShuLG8seSxcIlxcdTIyMjVcIixcIlxcXFx0ZXh0YmFyZGJsXCIpO2EoaSxvLGQsXCJcXHUyMTkxXCIsXCJcXFxcdXBhcnJvd1wiKTthKGksbyxkLFwiXFx1MjFkMVwiLFwiXFxcXFVwYXJyb3dcIik7YShpLG8sZCxcIlxcdTIxOTNcIixcIlxcXFxkb3duYXJyb3dcIik7YShpLG8sZCxcIlxcdTIxZDNcIixcIlxcXFxEb3duYXJyb3dcIik7YShpLG8sZCxcIlxcdTIxOTVcIixcIlxcXFx1cGRvd25hcnJvd1wiKTthKGksbyxkLFwiXFx1MjFkNVwiLFwiXFxcXFVwZG93bmFycm93XCIpO2EoaSxvLHYsXCJcXHUyMjEwXCIsXCJcXFxcY29wcm9kXCIpO2EoaSxvLHYsXCJcXHUyMmMxXCIsXCJcXFxcYmlndmVlXCIpO2EoaSxvLHYsXCJcXHUyMmMwXCIsXCJcXFxcYmlnd2VkZ2VcIik7YShpLG8sdixcIlxcdTJhMDRcIixcIlxcXFxiaWd1cGx1c1wiKTthKGksbyx2LFwiXFx1MjJjMlwiLFwiXFxcXGJpZ2NhcFwiKTthKGksbyx2LFwiXFx1MjJjM1wiLFwiXFxcXGJpZ2N1cFwiKTthKGksbyx2LFwiXFx1MjIyYlwiLFwiXFxcXGludFwiKTthKGksbyx2LFwiXFx1MjIyYlwiLFwiXFxcXGludG9wXCIpO2EoaSxvLHYsXCJcXHUyMjJjXCIsXCJcXFxcaWludFwiKTthKGksbyx2LFwiXFx1MjIyZFwiLFwiXFxcXGlpaW50XCIpO2EoaSxvLHYsXCJcXHUyMjBmXCIsXCJcXFxccHJvZFwiKTthKGksbyx2LFwiXFx1MjIxMVwiLFwiXFxcXHN1bVwiKTthKGksbyx2LFwiXFx1MmEwMlwiLFwiXFxcXGJpZ290aW1lc1wiKTthKGksbyx2LFwiXFx1MmEwMVwiLFwiXFxcXGJpZ29wbHVzXCIpO2EoaSxvLHYsXCJcXHUyYTAwXCIsXCJcXFxcYmlnb2RvdFwiKTthKGksbyx2LFwiXFx1MjIyZVwiLFwiXFxcXG9pbnRcIik7YShpLG8sdixcIlxcdTJhMDZcIixcIlxcXFxiaWdzcWN1cFwiKTthKGksbyx2LFwiXFx1MjIyYlwiLFwiXFxcXHNtYWxsaW50XCIpO2EobixvLHAsXCJcXHUyMDI2XCIsXCJcXFxcdGV4dGVsbGlwc2lzXCIpO2EoaSxvLHAsXCJcXHUyMDI2XCIsXCJcXFxcbWF0aGVsbGlwc2lzXCIpO2EobixvLHAsXCJcXHUyMDI2XCIsXCJcXFxcbGRvdHNcIik7YShpLG8scCxcIlxcdTIwMjZcIixcIlxcXFxsZG90c1wiKTthKGksbyxwLFwiXFx1MjJlZlwiLFwiXFxcXGNkb3RzXCIpO2EoaSxvLHAsXCJcXHUyMmYxXCIsXCJcXFxcZGRvdHNcIik7YShpLG8seSxcIlxcdTIyZWVcIixcIlxcXFx2ZG90c1wiKTthKGksbyxsLFwiXFx4YjRcIixcIlxcXFxhY3V0ZVwiKTthKGksbyxsLFwiYFwiLFwiXFxcXGdyYXZlXCIpO2EoaSxvLGwsXCJcXHhhOFwiLFwiXFxcXGRkb3RcIik7YShpLG8sbCxcIn5cIixcIlxcXFx0aWxkZVwiKTthKGksbyxsLFwiXFx4YWZcIixcIlxcXFxiYXJcIik7YShpLG8sbCxcIlxcdTAyZDhcIixcIlxcXFxicmV2ZVwiKTthKGksbyxsLFwiXFx1MDJjN1wiLFwiXFxcXGNoZWNrXCIpO2EoaSxvLGwsXCJeXCIsXCJcXFxcaGF0XCIpO2EoaSxvLGwsXCJcXHUyMGQ3XCIsXCJcXFxcdmVjXCIpO2EoaSxvLGwsXCJcXHUwMmQ5XCIsXCJcXFxcZG90XCIpO2EoaSxvLGMsXCJcXHUwMTMxXCIsXCJcXFxcaW1hdGhcIik7YShpLG8sYyxcIlxcdTAyMzdcIixcIlxcXFxqbWF0aFwiKTthKG4sbyx5LFwiXFx1MjAxM1wiLFwiLS1cIik7YShuLG8seSxcIlxcdTIwMTNcIixcIlxcXFx0ZXh0ZW5kYXNoXCIpO2EobixvLHksXCJcXHUyMDE0XCIsXCItLS1cIik7YShuLG8seSxcIlxcdTIwMTRcIixcIlxcXFx0ZXh0ZW1kYXNoXCIpO2EobixvLHksXCJcXHUyMDE4XCIsXCJgXCIpO2EobixvLHksXCJcXHUyMDE4XCIsXCJcXFxcdGV4dHF1b3RlbGVmdFwiKTthKG4sbyx5LFwiXFx1MjAxOVwiLFwiJ1wiKTthKG4sbyx5LFwiXFx1MjAxOVwiLFwiXFxcXHRleHRxdW90ZXJpZ2h0XCIpO2EobixvLHksXCJcXHUyMDFjXCIsXCJgYFwiKTthKG4sbyx5LFwiXFx1MjAxY1wiLFwiXFxcXHRleHRxdW90ZWRibGxlZnRcIik7YShuLG8seSxcIlxcdTIwMWRcIixcIicnXCIpO2EobixvLHksXCJcXHUyMDFkXCIsXCJcXFxcdGV4dHF1b3RlZGJscmlnaHRcIik7YShpLG8seSxcIlxceGIwXCIsXCJcXFxcZGVncmVlXCIpO2EobixvLHksXCJcXHhiMFwiLFwiXFxcXGRlZ3JlZVwiKTthKGksbyxjLFwiXFx4YTNcIixcIlxcXFxwb3VuZHNcIik7YShpLG8sYyxcIlxceGEzXCIsXCJcXFxcbWF0aHN0ZXJsaW5nXCIpO2EobixvLGMsXCJcXHhhM1wiLFwiXFxcXHBvdW5kc1wiKTthKG4sbyxjLFwiXFx4YTNcIixcIlxcXFx0ZXh0c3RlcmxpbmdcIik7YShpLHMseSxcIlxcdTI3MjBcIixcIlxcXFxtYWx0ZXNlXCIpO2EobixzLHksXCJcXHUyNzIwXCIsXCJcXFxcbWFsdGVzZVwiKTthKG4sbyxnLFwiXFx4YTBcIixcIlxcXFwgXCIpO2EobixvLGcsXCJcXHhhMFwiLFwiIFwiKTthKG4sbyxnLFwiXFx4YTBcIixcIn5cIik7dmFyIHg9JzAxMjM0NTY3ODkvQC5cIic7Zm9yKHZhciBiPTA7Yjx4Lmxlbmd0aDtiKyspe3ZhciB3PXguY2hhckF0KGIpO2EoaSxvLHksdyx3KX12YXIgaz0nMDEyMzQ1Njc4OSFAKigpLT0rW108PnxcIjs6Py8uLCc7Zm9yKHZhciB6PTA7ejxrLmxlbmd0aDt6Kyspe3ZhciBNPWsuY2hhckF0KHopO2EobixvLHksTSxNKX12YXIgUz1cImFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpcIjtmb3IodmFyIEE9MDtBPFMubGVuZ3RoO0ErKyl7dmFyIE49Uy5jaGFyQXQoQSk7YShpLG8sYyxOLE4pO2EobixvLHksTixOKX1mb3IodmFyIFQ9MTkyO1Q8PTIxNDtUKyspe3ZhciBxPVN0cmluZy5mcm9tQ2hhckNvZGUoVCk7YShuLG8seSxxLHEpfWZvcih2YXIgQz0yMTY7Qzw9MjQ2O0MrKyl7dmFyIEU9U3RyaW5nLmZyb21DaGFyQ29kZShDKTthKG4sbyx5LEUsRSl9Zm9yKHZhciBPPTI0ODtPPD0yNTU7TysrKXt2YXIgUj1TdHJpbmcuZnJvbUNoYXJDb2RlKE8pO2EobixvLHksUixSKX1mb3IodmFyIEw9MTA0MDtMPD0xMTAzO0wrKyl7dmFyIEQ9U3RyaW5nLmZyb21DaGFyQ29kZShMKTthKG4sbyx5LEQsRCl9YShuLG8seSxcIlxcdTIwMTNcIixcIlxcdTIwMTNcIik7YShuLG8seSxcIlxcdTIwMTRcIixcIlxcdTIwMTRcIik7YShuLG8seSxcIlxcdTIwMThcIixcIlxcdTIwMThcIik7YShuLG8seSxcIlxcdTIwMTlcIixcIlxcdTIwMTlcIik7YShuLG8seSxcIlxcdTIwMWNcIixcIlxcdTIwMWNcIik7YShuLG8seSxcIlxcdTIwMWRcIixcIlxcdTIwMWRcIil9LHt9XSwzMDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPS9bXFx1QUMwMC1cXHVEN0FGXS87dmFyIGk9L1tcXHUzMDQwLVxcdTMwOUZdfFtcXHUzMEEwLVxcdTMwRkZdfFtcXHU0RTAwLVxcdTlGQUZdfFtcXHVBQzAwLVxcdUQ3QUZdLzt0LmV4cG9ydHM9e2Nqa1JlZ2V4OmksaGFuZ3VsUmVnZXg6YX19LHt9XSwzMTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPUFycmF5LnByb3RvdHlwZS5pbmRleE9mO3ZhciBpPWZ1bmN0aW9uIGUodCxyKXtpZih0PT1udWxsKXtyZXR1cm4tMX1pZihhJiZ0LmluZGV4T2Y9PT1hKXtyZXR1cm4gdC5pbmRleE9mKHIpfXZhciBpPXQubGVuZ3RoO2Zvcih2YXIgbj0wO248aTtuKyspe2lmKHRbbl09PT1yKXtyZXR1cm4gbn19cmV0dXJuLTF9O3ZhciBuPWZ1bmN0aW9uIGUodCxyKXtyZXR1cm4gaSh0LHIpIT09LTF9O3ZhciBvPWZ1bmN0aW9uIGUodCxyKXtyZXR1cm4gdD09PXVuZGVmaW5lZD9yOnR9O3ZhciBzPS8oW0EtWl0pL2c7dmFyIGw9ZnVuY3Rpb24gZSh0KXtyZXR1cm4gdC5yZXBsYWNlKHMsXCItJDFcIikudG9Mb3dlckNhc2UoKX07dmFyIHU9e1wiJlwiOlwiJmFtcDtcIixcIj5cIjpcIiZndDtcIixcIjxcIjpcIiZsdDtcIiwnXCInOlwiJnF1b3Q7XCIsXCInXCI6XCImI3gyNztcIn07dmFyIGg9L1smPjxcIiddL2c7ZnVuY3Rpb24gcChlKXtyZXR1cm4gdVtlXX1mdW5jdGlvbiBjKGUpe3JldHVybihcIlwiK2UpLnJlcGxhY2UoaCxwKX12YXIgdj12b2lkIDA7aWYodHlwZW9mIGRvY3VtZW50IT09XCJ1bmRlZmluZWRcIil7dmFyIGY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7aWYoXCJ0ZXh0Q29udGVudFwiaW4gZil7dj1mdW5jdGlvbiBlKHQscil7dC50ZXh0Q29udGVudD1yfX1lbHNle3Y9ZnVuY3Rpb24gZSh0LHIpe3QuaW5uZXJUZXh0PXJ9fX1mdW5jdGlvbiBtKGUpe3YoZSxcIlwiKX10LmV4cG9ydHM9e2NvbnRhaW5zOm4sZGVmbHQ6byxlc2NhcGU6YyxoeXBoZW5hdGU6bCxpbmRleE9mOmksc2V0VGV4dENvbnRlbnQ6dixjbGVhck5vZGU6bX19LHt9XX0se30sWzFdKSgxKX0pO1xyXG4iLCIvKmdsb2JhbCBkZWZpbmU6ZmFsc2UgKi9cbi8qKlxuICogQ29weXJpZ2h0IDIwMTItMjAxNyBDcmFpZyBDYW1wYmVsbFxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICpcbiAqIE1vdXNldHJhcCBpcyBhIHNpbXBsZSBrZXlib2FyZCBzaG9ydGN1dCBsaWJyYXJ5IGZvciBKYXZhc2NyaXB0IHdpdGhcbiAqIG5vIGV4dGVybmFsIGRlcGVuZGVuY2llc1xuICpcbiAqIEB2ZXJzaW9uIDEuNi4xXG4gKiBAdXJsIGNyYWlnLmlzL2tpbGxpbmcvbWljZVxuICovXG4oZnVuY3Rpb24od2luZG93LCBkb2N1bWVudCwgdW5kZWZpbmVkKSB7XG5cbiAgICAvLyBDaGVjayBpZiBtb3VzZXRyYXAgaXMgdXNlZCBpbnNpZGUgYnJvd3NlciwgaWYgbm90LCByZXR1cm5cbiAgICBpZiAoIXdpbmRvdykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogbWFwcGluZyBvZiBzcGVjaWFsIGtleWNvZGVzIHRvIHRoZWlyIGNvcnJlc3BvbmRpbmcga2V5c1xuICAgICAqXG4gICAgICogZXZlcnl0aGluZyBpbiB0aGlzIGRpY3Rpb25hcnkgY2Fubm90IHVzZSBrZXlwcmVzcyBldmVudHNcbiAgICAgKiBzbyBpdCBoYXMgdG8gYmUgaGVyZSB0byBtYXAgdG8gdGhlIGNvcnJlY3Qga2V5Y29kZXMgZm9yXG4gICAgICoga2V5dXAva2V5ZG93biBldmVudHNcbiAgICAgKlxuICAgICAqIEB0eXBlIHtPYmplY3R9XG4gICAgICovXG4gICAgdmFyIF9NQVAgPSB7XG4gICAgICAgIDg6ICdiYWNrc3BhY2UnLFxuICAgICAgICA5OiAndGFiJyxcbiAgICAgICAgMTM6ICdlbnRlcicsXG4gICAgICAgIDE2OiAnc2hpZnQnLFxuICAgICAgICAxNzogJ2N0cmwnLFxuICAgICAgICAxODogJ2FsdCcsXG4gICAgICAgIDIwOiAnY2Fwc2xvY2snLFxuICAgICAgICAyNzogJ2VzYycsXG4gICAgICAgIDMyOiAnc3BhY2UnLFxuICAgICAgICAzMzogJ3BhZ2V1cCcsXG4gICAgICAgIDM0OiAncGFnZWRvd24nLFxuICAgICAgICAzNTogJ2VuZCcsXG4gICAgICAgIDM2OiAnaG9tZScsXG4gICAgICAgIDM3OiAnbGVmdCcsXG4gICAgICAgIDM4OiAndXAnLFxuICAgICAgICAzOTogJ3JpZ2h0JyxcbiAgICAgICAgNDA6ICdkb3duJyxcbiAgICAgICAgNDU6ICdpbnMnLFxuICAgICAgICA0NjogJ2RlbCcsXG4gICAgICAgIDkxOiAnbWV0YScsXG4gICAgICAgIDkzOiAnbWV0YScsXG4gICAgICAgIDIyNDogJ21ldGEnXG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIG1hcHBpbmcgZm9yIHNwZWNpYWwgY2hhcmFjdGVycyBzbyB0aGV5IGNhbiBzdXBwb3J0XG4gICAgICpcbiAgICAgKiB0aGlzIGRpY3Rpb25hcnkgaXMgb25seSB1c2VkIGluY2FzZSB5b3Ugd2FudCB0byBiaW5kIGFcbiAgICAgKiBrZXl1cCBvciBrZXlkb3duIGV2ZW50IHRvIG9uZSBvZiB0aGVzZSBrZXlzXG4gICAgICpcbiAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAqL1xuICAgIHZhciBfS0VZQ09ERV9NQVAgPSB7XG4gICAgICAgIDEwNjogJyonLFxuICAgICAgICAxMDc6ICcrJyxcbiAgICAgICAgMTA5OiAnLScsXG4gICAgICAgIDExMDogJy4nLFxuICAgICAgICAxMTEgOiAnLycsXG4gICAgICAgIDE4NjogJzsnLFxuICAgICAgICAxODc6ICc9JyxcbiAgICAgICAgMTg4OiAnLCcsXG4gICAgICAgIDE4OTogJy0nLFxuICAgICAgICAxOTA6ICcuJyxcbiAgICAgICAgMTkxOiAnLycsXG4gICAgICAgIDE5MjogJ2AnLFxuICAgICAgICAyMTk6ICdbJyxcbiAgICAgICAgMjIwOiAnXFxcXCcsXG4gICAgICAgIDIyMTogJ10nLFxuICAgICAgICAyMjI6ICdcXCcnXG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIHRoaXMgaXMgYSBtYXBwaW5nIG9mIGtleXMgdGhhdCByZXF1aXJlIHNoaWZ0IG9uIGEgVVMga2V5cGFkXG4gICAgICogYmFjayB0byB0aGUgbm9uIHNoaWZ0IGVxdWl2ZWxlbnRzXG4gICAgICpcbiAgICAgKiB0aGlzIGlzIHNvIHlvdSBjYW4gdXNlIGtleXVwIGV2ZW50cyB3aXRoIHRoZXNlIGtleXNcbiAgICAgKlxuICAgICAqIG5vdGUgdGhhdCB0aGlzIHdpbGwgb25seSB3b3JrIHJlbGlhYmx5IG9uIFVTIGtleWJvYXJkc1xuICAgICAqXG4gICAgICogQHR5cGUge09iamVjdH1cbiAgICAgKi9cbiAgICB2YXIgX1NISUZUX01BUCA9IHtcbiAgICAgICAgJ34nOiAnYCcsXG4gICAgICAgICchJzogJzEnLFxuICAgICAgICAnQCc6ICcyJyxcbiAgICAgICAgJyMnOiAnMycsXG4gICAgICAgICckJzogJzQnLFxuICAgICAgICAnJSc6ICc1JyxcbiAgICAgICAgJ14nOiAnNicsXG4gICAgICAgICcmJzogJzcnLFxuICAgICAgICAnKic6ICc4JyxcbiAgICAgICAgJygnOiAnOScsXG4gICAgICAgICcpJzogJzAnLFxuICAgICAgICAnXyc6ICctJyxcbiAgICAgICAgJysnOiAnPScsXG4gICAgICAgICc6JzogJzsnLFxuICAgICAgICAnXFxcIic6ICdcXCcnLFxuICAgICAgICAnPCc6ICcsJyxcbiAgICAgICAgJz4nOiAnLicsXG4gICAgICAgICc/JzogJy8nLFxuICAgICAgICAnfCc6ICdcXFxcJ1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiB0aGlzIGlzIGEgbGlzdCBvZiBzcGVjaWFsIHN0cmluZ3MgeW91IGNhbiB1c2UgdG8gbWFwXG4gICAgICogdG8gbW9kaWZpZXIga2V5cyB3aGVuIHlvdSBzcGVjaWZ5IHlvdXIga2V5Ym9hcmQgc2hvcnRjdXRzXG4gICAgICpcbiAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAqL1xuICAgIHZhciBfU1BFQ0lBTF9BTElBU0VTID0ge1xuICAgICAgICAnb3B0aW9uJzogJ2FsdCcsXG4gICAgICAgICdjb21tYW5kJzogJ21ldGEnLFxuICAgICAgICAncmV0dXJuJzogJ2VudGVyJyxcbiAgICAgICAgJ2VzY2FwZSc6ICdlc2MnLFxuICAgICAgICAncGx1cyc6ICcrJyxcbiAgICAgICAgJ21vZCc6IC9NYWN8aVBvZHxpUGhvbmV8aVBhZC8udGVzdChuYXZpZ2F0b3IucGxhdGZvcm0pID8gJ21ldGEnIDogJ2N0cmwnXG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIHZhcmlhYmxlIHRvIHN0b3JlIHRoZSBmbGlwcGVkIHZlcnNpb24gb2YgX01BUCBmcm9tIGFib3ZlXG4gICAgICogbmVlZGVkIHRvIGNoZWNrIGlmIHdlIHNob3VsZCB1c2Uga2V5cHJlc3Mgb3Igbm90IHdoZW4gbm8gYWN0aW9uXG4gICAgICogaXMgc3BlY2lmaWVkXG4gICAgICpcbiAgICAgKiBAdHlwZSB7T2JqZWN0fHVuZGVmaW5lZH1cbiAgICAgKi9cbiAgICB2YXIgX1JFVkVSU0VfTUFQO1xuXG4gICAgLyoqXG4gICAgICogbG9vcCB0aHJvdWdoIHRoZSBmIGtleXMsIGYxIHRvIGYxOSBhbmQgYWRkIHRoZW0gdG8gdGhlIG1hcFxuICAgICAqIHByb2dyYW1hdGljYWxseVxuICAgICAqL1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgMjA7ICsraSkge1xuICAgICAgICBfTUFQWzExMSArIGldID0gJ2YnICsgaTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBsb29wIHRocm91Z2ggdG8gbWFwIG51bWJlcnMgb24gdGhlIG51bWVyaWMga2V5cGFkXG4gICAgICovXG4gICAgZm9yIChpID0gMDsgaSA8PSA5OyArK2kpIHtcblxuICAgICAgICAvLyBUaGlzIG5lZWRzIHRvIHVzZSBhIHN0cmluZyBjYXVzZSBvdGhlcndpc2Ugc2luY2UgMCBpcyBmYWxzZXlcbiAgICAgICAgLy8gbW91c2V0cmFwIHdpbGwgbmV2ZXIgZmlyZSBmb3IgbnVtcGFkIDAgcHJlc3NlZCBhcyBwYXJ0IG9mIGEga2V5ZG93blxuICAgICAgICAvLyBldmVudC5cbiAgICAgICAgLy9cbiAgICAgICAgLy8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vY2NhbXBiZWxsL21vdXNldHJhcC9wdWxsLzI1OFxuICAgICAgICBfTUFQW2kgKyA5Nl0gPSBpLnRvU3RyaW5nKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogY3Jvc3MgYnJvd3NlciBhZGQgZXZlbnQgbWV0aG9kXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0VsZW1lbnR8SFRNTERvY3VtZW50fSBvYmplY3RcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9hZGRFdmVudChvYmplY3QsIHR5cGUsIGNhbGxiYWNrKSB7XG4gICAgICAgIGlmIChvYmplY3QuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICAgICAgb2JqZWN0LmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgY2FsbGJhY2ssIGZhbHNlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIG9iamVjdC5hdHRhY2hFdmVudCgnb24nICsgdHlwZSwgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHRha2VzIHRoZSBldmVudCBhbmQgcmV0dXJucyB0aGUga2V5IGNoYXJhY3RlclxuICAgICAqXG4gICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAqIEByZXR1cm4ge3N0cmluZ31cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfY2hhcmFjdGVyRnJvbUV2ZW50KGUpIHtcblxuICAgICAgICAvLyBmb3Iga2V5cHJlc3MgZXZlbnRzIHdlIHNob3VsZCByZXR1cm4gdGhlIGNoYXJhY3RlciBhcyBpc1xuICAgICAgICBpZiAoZS50eXBlID09ICdrZXlwcmVzcycpIHtcbiAgICAgICAgICAgIHZhciBjaGFyYWN0ZXIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGUud2hpY2gpO1xuXG4gICAgICAgICAgICAvLyBpZiB0aGUgc2hpZnQga2V5IGlzIG5vdCBwcmVzc2VkIHRoZW4gaXQgaXMgc2FmZSB0byBhc3N1bWVcbiAgICAgICAgICAgIC8vIHRoYXQgd2Ugd2FudCB0aGUgY2hhcmFjdGVyIHRvIGJlIGxvd2VyY2FzZS4gIHRoaXMgbWVhbnMgaWZcbiAgICAgICAgICAgIC8vIHlvdSBhY2NpZGVudGFsbHkgaGF2ZSBjYXBzIGxvY2sgb24gdGhlbiB5b3VyIGtleSBiaW5kaW5nc1xuICAgICAgICAgICAgLy8gd2lsbCBjb250aW51ZSB0byB3b3JrXG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gdGhlIG9ubHkgc2lkZSBlZmZlY3QgdGhhdCBtaWdodCBub3QgYmUgZGVzaXJlZCBpcyBpZiB5b3VcbiAgICAgICAgICAgIC8vIGJpbmQgc29tZXRoaW5nIGxpa2UgJ0EnIGNhdXNlIHlvdSB3YW50IHRvIHRyaWdnZXIgYW5cbiAgICAgICAgICAgIC8vIGV2ZW50IHdoZW4gY2FwaXRhbCBBIGlzIHByZXNzZWQgY2FwcyBsb2NrIHdpbGwgbm8gbG9uZ2VyXG4gICAgICAgICAgICAvLyB0cmlnZ2VyIHRoZSBldmVudC4gIHNoaWZ0K2Egd2lsbCB0aG91Z2guXG4gICAgICAgICAgICBpZiAoIWUuc2hpZnRLZXkpIHtcbiAgICAgICAgICAgICAgICBjaGFyYWN0ZXIgPSBjaGFyYWN0ZXIudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGNoYXJhY3RlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGZvciBub24ga2V5cHJlc3MgZXZlbnRzIHRoZSBzcGVjaWFsIG1hcHMgYXJlIG5lZWRlZFxuICAgICAgICBpZiAoX01BUFtlLndoaWNoXSkge1xuICAgICAgICAgICAgcmV0dXJuIF9NQVBbZS53aGljaF07XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoX0tFWUNPREVfTUFQW2Uud2hpY2hdKSB7XG4gICAgICAgICAgICByZXR1cm4gX0tFWUNPREVfTUFQW2Uud2hpY2hdO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaWYgaXQgaXMgbm90IGluIHRoZSBzcGVjaWFsIG1hcFxuXG4gICAgICAgIC8vIHdpdGgga2V5ZG93biBhbmQga2V5dXAgZXZlbnRzIHRoZSBjaGFyYWN0ZXIgc2VlbXMgdG8gYWx3YXlzXG4gICAgICAgIC8vIGNvbWUgaW4gYXMgYW4gdXBwZXJjYXNlIGNoYXJhY3RlciB3aGV0aGVyIHlvdSBhcmUgcHJlc3Npbmcgc2hpZnRcbiAgICAgICAgLy8gb3Igbm90LiAgd2Ugc2hvdWxkIG1ha2Ugc3VyZSBpdCBpcyBhbHdheXMgbG93ZXJjYXNlIGZvciBjb21wYXJpc29uc1xuICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShlLndoaWNoKS50b0xvd2VyQ2FzZSgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGNoZWNrcyBpZiB0d28gYXJyYXlzIGFyZSBlcXVhbFxuICAgICAqXG4gICAgICogQHBhcmFtIHtBcnJheX0gbW9kaWZpZXJzMVxuICAgICAqIEBwYXJhbSB7QXJyYXl9IG1vZGlmaWVyczJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfbW9kaWZpZXJzTWF0Y2gobW9kaWZpZXJzMSwgbW9kaWZpZXJzMikge1xuICAgICAgICByZXR1cm4gbW9kaWZpZXJzMS5zb3J0KCkuam9pbignLCcpID09PSBtb2RpZmllcnMyLnNvcnQoKS5qb2luKCcsJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogdGFrZXMgYSBrZXkgZXZlbnQgYW5kIGZpZ3VyZXMgb3V0IHdoYXQgdGhlIG1vZGlmaWVycyBhcmVcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7RXZlbnR9IGVcbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9XG4gICAgICovXG4gICAgZnVuY3Rpb24gX2V2ZW50TW9kaWZpZXJzKGUpIHtcbiAgICAgICAgdmFyIG1vZGlmaWVycyA9IFtdO1xuXG4gICAgICAgIGlmIChlLnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICBtb2RpZmllcnMucHVzaCgnc2hpZnQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlLmFsdEtleSkge1xuICAgICAgICAgICAgbW9kaWZpZXJzLnB1c2goJ2FsdCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGUuY3RybEtleSkge1xuICAgICAgICAgICAgbW9kaWZpZXJzLnB1c2goJ2N0cmwnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlLm1ldGFLZXkpIHtcbiAgICAgICAgICAgIG1vZGlmaWVycy5wdXNoKCdtZXRhJyk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbW9kaWZpZXJzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHByZXZlbnRzIGRlZmF1bHQgZm9yIHRoaXMgZXZlbnRcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7RXZlbnR9IGVcbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgZnVuY3Rpb24gX3ByZXZlbnREZWZhdWx0KGUpIHtcbiAgICAgICAgaWYgKGUucHJldmVudERlZmF1bHQpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBzdG9wcyBwcm9wb2dhdGlvbiBmb3IgdGhpcyBldmVudFxuICAgICAqXG4gICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfc3RvcFByb3BhZ2F0aW9uKGUpIHtcbiAgICAgICAgaWYgKGUuc3RvcFByb3BhZ2F0aW9uKSB7XG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgZS5jYW5jZWxCdWJibGUgPSB0cnVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGRldGVybWluZXMgaWYgdGhlIGtleWNvZGUgc3BlY2lmaWVkIGlzIGEgbW9kaWZpZXIga2V5IG9yIG5vdFxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9pc01vZGlmaWVyKGtleSkge1xuICAgICAgICByZXR1cm4ga2V5ID09ICdzaGlmdCcgfHwga2V5ID09ICdjdHJsJyB8fCBrZXkgPT0gJ2FsdCcgfHwga2V5ID09ICdtZXRhJztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiByZXZlcnNlcyB0aGUgbWFwIGxvb2t1cCBzbyB0aGF0IHdlIGNhbiBsb29rIGZvciBzcGVjaWZpYyBrZXlzXG4gICAgICogdG8gc2VlIHdoYXQgY2FuIGFuZCBjYW4ndCB1c2Uga2V5cHJlc3NcbiAgICAgKlxuICAgICAqIEByZXR1cm4ge09iamVjdH1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfZ2V0UmV2ZXJzZU1hcCgpIHtcbiAgICAgICAgaWYgKCFfUkVWRVJTRV9NQVApIHtcbiAgICAgICAgICAgIF9SRVZFUlNFX01BUCA9IHt9O1xuICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIF9NQVApIHtcblxuICAgICAgICAgICAgICAgIC8vIHB1bGwgb3V0IHRoZSBudW1lcmljIGtleXBhZCBmcm9tIGhlcmUgY2F1c2Uga2V5cHJlc3Mgc2hvdWxkXG4gICAgICAgICAgICAgICAgLy8gYmUgYWJsZSB0byBkZXRlY3QgdGhlIGtleXMgZnJvbSB0aGUgY2hhcmFjdGVyXG4gICAgICAgICAgICAgICAgaWYgKGtleSA+IDk1ICYmIGtleSA8IDExMikge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoX01BUC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIF9SRVZFUlNFX01BUFtfTUFQW2tleV1dID0ga2V5O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX1JFVkVSU0VfTUFQO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHBpY2tzIHRoZSBiZXN0IGFjdGlvbiBiYXNlZCBvbiB0aGUga2V5IGNvbWJpbmF0aW9uXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IC0gY2hhcmFjdGVyIGZvciBrZXlcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBtb2RpZmllcnNcbiAgICAgKiBAcGFyYW0ge3N0cmluZz19IGFjdGlvbiBwYXNzZWQgaW5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfcGlja0Jlc3RBY3Rpb24oa2V5LCBtb2RpZmllcnMsIGFjdGlvbikge1xuXG4gICAgICAgIC8vIGlmIG5vIGFjdGlvbiB3YXMgcGlja2VkIGluIHdlIHNob3VsZCB0cnkgdG8gcGljayB0aGUgb25lXG4gICAgICAgIC8vIHRoYXQgd2UgdGhpbmsgd291bGQgd29yayBiZXN0IGZvciB0aGlzIGtleVxuICAgICAgICBpZiAoIWFjdGlvbikge1xuICAgICAgICAgICAgYWN0aW9uID0gX2dldFJldmVyc2VNYXAoKVtrZXldID8gJ2tleWRvd24nIDogJ2tleXByZXNzJztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIG1vZGlmaWVyIGtleXMgZG9uJ3Qgd29yayBhcyBleHBlY3RlZCB3aXRoIGtleXByZXNzLFxuICAgICAgICAvLyBzd2l0Y2ggdG8ga2V5ZG93blxuICAgICAgICBpZiAoYWN0aW9uID09ICdrZXlwcmVzcycgJiYgbW9kaWZpZXJzLmxlbmd0aCkge1xuICAgICAgICAgICAgYWN0aW9uID0gJ2tleWRvd24nO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGFjdGlvbjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDb252ZXJ0cyBmcm9tIGEgc3RyaW5nIGtleSBjb21iaW5hdGlvbiB0byBhbiBhcnJheVxuICAgICAqXG4gICAgICogQHBhcmFtICB7c3RyaW5nfSBjb21iaW5hdGlvbiBsaWtlIFwiY29tbWFuZCtzaGlmdCtsXCJcbiAgICAgKiBAcmV0dXJuIHtBcnJheX1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfa2V5c0Zyb21TdHJpbmcoY29tYmluYXRpb24pIHtcbiAgICAgICAgaWYgKGNvbWJpbmF0aW9uID09PSAnKycpIHtcbiAgICAgICAgICAgIHJldHVybiBbJysnXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbWJpbmF0aW9uID0gY29tYmluYXRpb24ucmVwbGFjZSgvXFwrezJ9L2csICcrcGx1cycpO1xuICAgICAgICByZXR1cm4gY29tYmluYXRpb24uc3BsaXQoJysnKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXRzIGluZm8gZm9yIGEgc3BlY2lmaWMga2V5IGNvbWJpbmF0aW9uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gIHtzdHJpbmd9IGNvbWJpbmF0aW9uIGtleSBjb21iaW5hdGlvbiAoXCJjb21tYW5kK3NcIiBvciBcImFcIiBvciBcIipcIilcbiAgICAgKiBAcGFyYW0gIHtzdHJpbmc9fSBhY3Rpb25cbiAgICAgKiBAcmV0dXJucyB7T2JqZWN0fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9nZXRLZXlJbmZvKGNvbWJpbmF0aW9uLCBhY3Rpb24pIHtcbiAgICAgICAgdmFyIGtleXM7XG4gICAgICAgIHZhciBrZXk7XG4gICAgICAgIHZhciBpO1xuICAgICAgICB2YXIgbW9kaWZpZXJzID0gW107XG5cbiAgICAgICAgLy8gdGFrZSB0aGUga2V5cyBmcm9tIHRoaXMgcGF0dGVybiBhbmQgZmlndXJlIG91dCB3aGF0IHRoZSBhY3R1YWxcbiAgICAgICAgLy8gcGF0dGVybiBpcyBhbGwgYWJvdXRcbiAgICAgICAga2V5cyA9IF9rZXlzRnJvbVN0cmluZyhjb21iaW5hdGlvbik7XG5cbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIGtleSA9IGtleXNbaV07XG5cbiAgICAgICAgICAgIC8vIG5vcm1hbGl6ZSBrZXkgbmFtZXNcbiAgICAgICAgICAgIGlmIChfU1BFQ0lBTF9BTElBU0VTW2tleV0pIHtcbiAgICAgICAgICAgICAgICBrZXkgPSBfU1BFQ0lBTF9BTElBU0VTW2tleV07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGlmIHRoaXMgaXMgbm90IGEga2V5cHJlc3MgZXZlbnQgdGhlbiB3ZSBzaG91bGRcbiAgICAgICAgICAgIC8vIGJlIHNtYXJ0IGFib3V0IHVzaW5nIHNoaWZ0IGtleXNcbiAgICAgICAgICAgIC8vIHRoaXMgd2lsbCBvbmx5IHdvcmsgZm9yIFVTIGtleWJvYXJkcyBob3dldmVyXG4gICAgICAgICAgICBpZiAoYWN0aW9uICYmIGFjdGlvbiAhPSAna2V5cHJlc3MnICYmIF9TSElGVF9NQVBba2V5XSkge1xuICAgICAgICAgICAgICAgIGtleSA9IF9TSElGVF9NQVBba2V5XTtcbiAgICAgICAgICAgICAgICBtb2RpZmllcnMucHVzaCgnc2hpZnQnKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gaWYgdGhpcyBrZXkgaXMgYSBtb2RpZmllciB0aGVuIGFkZCBpdCB0byB0aGUgbGlzdCBvZiBtb2RpZmllcnNcbiAgICAgICAgICAgIGlmIChfaXNNb2RpZmllcihrZXkpKSB7XG4gICAgICAgICAgICAgICAgbW9kaWZpZXJzLnB1c2goa2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGRlcGVuZGluZyBvbiB3aGF0IHRoZSBrZXkgY29tYmluYXRpb24gaXNcbiAgICAgICAgLy8gd2Ugd2lsbCB0cnkgdG8gcGljayB0aGUgYmVzdCBldmVudCBmb3IgaXRcbiAgICAgICAgYWN0aW9uID0gX3BpY2tCZXN0QWN0aW9uKGtleSwgbW9kaWZpZXJzLCBhY3Rpb24pO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgIG1vZGlmaWVyczogbW9kaWZpZXJzLFxuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb25cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBfYmVsb25nc1RvKGVsZW1lbnQsIGFuY2VzdG9yKSB7XG4gICAgICAgIGlmIChlbGVtZW50ID09PSBudWxsIHx8IGVsZW1lbnQgPT09IGRvY3VtZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZWxlbWVudCA9PT0gYW5jZXN0b3IpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIF9iZWxvbmdzVG8oZWxlbWVudC5wYXJlbnROb2RlLCBhbmNlc3Rvcik7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gTW91c2V0cmFwKHRhcmdldEVsZW1lbnQpIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgICAgIHRhcmdldEVsZW1lbnQgPSB0YXJnZXRFbGVtZW50IHx8IGRvY3VtZW50O1xuXG4gICAgICAgIGlmICghKHNlbGYgaW5zdGFuY2VvZiBNb3VzZXRyYXApKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IE1vdXNldHJhcCh0YXJnZXRFbGVtZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBlbGVtZW50IHRvIGF0dGFjaCBrZXkgZXZlbnRzIHRvXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtFbGVtZW50fVxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi50YXJnZXQgPSB0YXJnZXRFbGVtZW50O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBhIGxpc3Qgb2YgYWxsIHRoZSBjYWxsYmFja3Mgc2V0dXAgdmlhIE1vdXNldHJhcC5iaW5kKClcbiAgICAgICAgICpcbiAgICAgICAgICogQHR5cGUge09iamVjdH1cbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuX2NhbGxiYWNrcyA9IHt9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBkaXJlY3QgbWFwIG9mIHN0cmluZyBjb21iaW5hdGlvbnMgdG8gY2FsbGJhY2tzIHVzZWQgZm9yIHRyaWdnZXIoKVxuICAgICAgICAgKlxuICAgICAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi5fZGlyZWN0TWFwID0ge307XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGtlZXBzIHRyYWNrIG9mIHdoYXQgbGV2ZWwgZWFjaCBzZXF1ZW5jZSBpcyBhdCBzaW5jZSBtdWx0aXBsZVxuICAgICAgICAgKiBzZXF1ZW5jZXMgY2FuIHN0YXJ0IG91dCB3aXRoIHRoZSBzYW1lIHNlcXVlbmNlXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtPYmplY3R9XG4gICAgICAgICAqL1xuICAgICAgICB2YXIgX3NlcXVlbmNlTGV2ZWxzID0ge307XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIHZhcmlhYmxlIHRvIHN0b3JlIHRoZSBzZXRUaW1lb3V0IGNhbGxcbiAgICAgICAgICpcbiAgICAgICAgICogQHR5cGUge251bGx8bnVtYmVyfVxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIF9yZXNldFRpbWVyO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiB0ZW1wb3Jhcnkgc3RhdGUgd2hlcmUgd2Ugd2lsbCBpZ25vcmUgdGhlIG5leHQga2V5dXBcbiAgICAgICAgICpcbiAgICAgICAgICogQHR5cGUge2Jvb2xlYW58c3RyaW5nfVxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIF9pZ25vcmVOZXh0S2V5dXAgPSBmYWxzZTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogdGVtcG9yYXJ5IHN0YXRlIHdoZXJlIHdlIHdpbGwgaWdub3JlIHRoZSBuZXh0IGtleXByZXNzXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIF9pZ25vcmVOZXh0S2V5cHJlc3MgPSBmYWxzZTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogYXJlIHdlIGN1cnJlbnRseSBpbnNpZGUgb2YgYSBzZXF1ZW5jZT9cbiAgICAgICAgICogdHlwZSBvZiBhY3Rpb24gKFwia2V5dXBcIiBvciBcImtleWRvd25cIiBvciBcImtleXByZXNzXCIpIG9yIGZhbHNlXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtib29sZWFufHN0cmluZ31cbiAgICAgICAgICovXG4gICAgICAgIHZhciBfbmV4dEV4cGVjdGVkQWN0aW9uID0gZmFsc2U7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIHJlc2V0cyBhbGwgc2VxdWVuY2UgY291bnRlcnMgZXhjZXB0IGZvciB0aGUgb25lcyBwYXNzZWQgaW5cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGRvTm90UmVzZXRcbiAgICAgICAgICogQHJldHVybnMgdm9pZFxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gX3Jlc2V0U2VxdWVuY2VzKGRvTm90UmVzZXQpIHtcbiAgICAgICAgICAgIGRvTm90UmVzZXQgPSBkb05vdFJlc2V0IHx8IHt9O1xuXG4gICAgICAgICAgICB2YXIgYWN0aXZlU2VxdWVuY2VzID0gZmFsc2UsXG4gICAgICAgICAgICAgICAga2V5O1xuXG4gICAgICAgICAgICBmb3IgKGtleSBpbiBfc2VxdWVuY2VMZXZlbHMpIHtcbiAgICAgICAgICAgICAgICBpZiAoZG9Ob3RSZXNldFtrZXldKSB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZVNlcXVlbmNlcyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBfc2VxdWVuY2VMZXZlbHNba2V5XSA9IDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghYWN0aXZlU2VxdWVuY2VzKSB7XG4gICAgICAgICAgICAgICAgX25leHRFeHBlY3RlZEFjdGlvbiA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGZpbmRzIGFsbCBjYWxsYmFja3MgdGhhdCBtYXRjaCBiYXNlZCBvbiB0aGUga2V5Y29kZSwgbW9kaWZpZXJzLFxuICAgICAgICAgKiBhbmQgYWN0aW9uXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjaGFyYWN0ZXJcbiAgICAgICAgICogQHBhcmFtIHtBcnJheX0gbW9kaWZpZXJzXG4gICAgICAgICAqIEBwYXJhbSB7RXZlbnR8T2JqZWN0fSBlXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gc2VxdWVuY2VOYW1lIC0gbmFtZSBvZiB0aGUgc2VxdWVuY2Ugd2UgYXJlIGxvb2tpbmcgZm9yXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gY29tYmluYXRpb25cbiAgICAgICAgICogQHBhcmFtIHtudW1iZXI9fSBsZXZlbFxuICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXl9XG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBfZ2V0TWF0Y2hlcyhjaGFyYWN0ZXIsIG1vZGlmaWVycywgZSwgc2VxdWVuY2VOYW1lLCBjb21iaW5hdGlvbiwgbGV2ZWwpIHtcbiAgICAgICAgICAgIHZhciBpO1xuICAgICAgICAgICAgdmFyIGNhbGxiYWNrO1xuICAgICAgICAgICAgdmFyIG1hdGNoZXMgPSBbXTtcbiAgICAgICAgICAgIHZhciBhY3Rpb24gPSBlLnR5cGU7XG5cbiAgICAgICAgICAgIC8vIGlmIHRoZXJlIGFyZSBubyBldmVudHMgcmVsYXRlZCB0byB0aGlzIGtleWNvZGVcbiAgICAgICAgICAgIGlmICghc2VsZi5fY2FsbGJhY2tzW2NoYXJhY3Rlcl0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGlmIGEgbW9kaWZpZXIga2V5IGlzIGNvbWluZyB1cCBvbiBpdHMgb3duIHdlIHNob3VsZCBhbGxvdyBpdFxuICAgICAgICAgICAgaWYgKGFjdGlvbiA9PSAna2V5dXAnICYmIF9pc01vZGlmaWVyKGNoYXJhY3RlcikpIHtcbiAgICAgICAgICAgICAgICBtb2RpZmllcnMgPSBbY2hhcmFjdGVyXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gbG9vcCB0aHJvdWdoIGFsbCBjYWxsYmFja3MgZm9yIHRoZSBrZXkgdGhhdCB3YXMgcHJlc3NlZFxuICAgICAgICAgICAgLy8gYW5kIHNlZSBpZiBhbnkgb2YgdGhlbSBtYXRjaFxuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHNlbGYuX2NhbGxiYWNrc1tjaGFyYWN0ZXJdLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2sgPSBzZWxmLl9jYWxsYmFja3NbY2hhcmFjdGVyXVtpXTtcblxuICAgICAgICAgICAgICAgIC8vIGlmIGEgc2VxdWVuY2UgbmFtZSBpcyBub3Qgc3BlY2lmaWVkLCBidXQgdGhpcyBpcyBhIHNlcXVlbmNlIGF0XG4gICAgICAgICAgICAgICAgLy8gdGhlIHdyb25nIGxldmVsIHRoZW4gbW92ZSBvbnRvIHRoZSBuZXh0IG1hdGNoXG4gICAgICAgICAgICAgICAgaWYgKCFzZXF1ZW5jZU5hbWUgJiYgY2FsbGJhY2suc2VxICYmIF9zZXF1ZW5jZUxldmVsc1tjYWxsYmFjay5zZXFdICE9IGNhbGxiYWNrLmxldmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBhY3Rpb24gd2UgYXJlIGxvb2tpbmcgZm9yIGRvZXNuJ3QgbWF0Y2ggdGhlIGFjdGlvbiB3ZSBnb3RcbiAgICAgICAgICAgICAgICAvLyB0aGVuIHdlIHNob3VsZCBrZWVwIGdvaW5nXG4gICAgICAgICAgICAgICAgaWYgKGFjdGlvbiAhPSBjYWxsYmFjay5hY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpcyBhIGtleXByZXNzIGV2ZW50IGFuZCB0aGUgbWV0YSBrZXkgYW5kIGNvbnRyb2wga2V5XG4gICAgICAgICAgICAgICAgLy8gYXJlIG5vdCBwcmVzc2VkIHRoYXQgbWVhbnMgdGhhdCB3ZSBuZWVkIHRvIG9ubHkgbG9vayBhdCB0aGVcbiAgICAgICAgICAgICAgICAvLyBjaGFyYWN0ZXIsIG90aGVyd2lzZSBjaGVjayB0aGUgbW9kaWZpZXJzIGFzIHdlbGxcbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgIC8vIGNocm9tZSB3aWxsIG5vdCBmaXJlIGEga2V5cHJlc3MgaWYgbWV0YSBvciBjb250cm9sIGlzIGRvd25cbiAgICAgICAgICAgICAgICAvLyBzYWZhcmkgd2lsbCBmaXJlIGEga2V5cHJlc3MgaWYgbWV0YSBvciBtZXRhK3NoaWZ0IGlzIGRvd25cbiAgICAgICAgICAgICAgICAvLyBmaXJlZm94IHdpbGwgZmlyZSBhIGtleXByZXNzIGlmIG1ldGEgb3IgY29udHJvbCBpcyBkb3duXG4gICAgICAgICAgICAgICAgaWYgKChhY3Rpb24gPT0gJ2tleXByZXNzJyAmJiAhZS5tZXRhS2V5ICYmICFlLmN0cmxLZXkpIHx8IF9tb2RpZmllcnNNYXRjaChtb2RpZmllcnMsIGNhbGxiYWNrLm1vZGlmaWVycykpIHtcblxuICAgICAgICAgICAgICAgICAgICAvLyB3aGVuIHlvdSBiaW5kIGEgY29tYmluYXRpb24gb3Igc2VxdWVuY2UgYSBzZWNvbmQgdGltZSBpdFxuICAgICAgICAgICAgICAgICAgICAvLyBzaG91bGQgb3ZlcndyaXRlIHRoZSBmaXJzdCBvbmUuICBpZiBhIHNlcXVlbmNlTmFtZSBvclxuICAgICAgICAgICAgICAgICAgICAvLyBjb21iaW5hdGlvbiBpcyBzcGVjaWZpZWQgaW4gdGhpcyBjYWxsIGl0IGRvZXMganVzdCB0aGF0XG4gICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgIC8vIEB0b2RvIG1ha2UgZGVsZXRpbmcgaXRzIG93biBtZXRob2Q/XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZWxldGVDb21ibyA9ICFzZXF1ZW5jZU5hbWUgJiYgY2FsbGJhY2suY29tYm8gPT0gY29tYmluYXRpb247XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZWxldGVTZXF1ZW5jZSA9IHNlcXVlbmNlTmFtZSAmJiBjYWxsYmFjay5zZXEgPT0gc2VxdWVuY2VOYW1lICYmIGNhbGxiYWNrLmxldmVsID09IGxldmVsO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGVsZXRlQ29tYm8gfHwgZGVsZXRlU2VxdWVuY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX2NhbGxiYWNrc1tjaGFyYWN0ZXJdLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIG1hdGNoZXMucHVzaChjYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gbWF0Y2hlcztcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBhY3R1YWxseSBjYWxscyB0aGUgY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgICAgICpcbiAgICAgICAgICogaWYgeW91ciBjYWxsYmFjayBmdW5jdGlvbiByZXR1cm5zIGZhbHNlIHRoaXMgd2lsbCB1c2UgdGhlIGpxdWVyeVxuICAgICAgICAgKiBjb252ZW50aW9uIC0gcHJldmVudCBkZWZhdWx0IGFuZCBzdG9wIHByb3BvZ2F0aW9uIG9uIHRoZSBldmVudFxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgICAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9maXJlQ2FsbGJhY2soY2FsbGJhY2ssIGUsIGNvbWJvLCBzZXF1ZW5jZSkge1xuXG4gICAgICAgICAgICAvLyBpZiB0aGlzIGV2ZW50IHNob3VsZCBub3QgaGFwcGVuIHN0b3AgaGVyZVxuICAgICAgICAgICAgaWYgKHNlbGYuc3RvcENhbGxiYWNrKGUsIGUudGFyZ2V0IHx8IGUuc3JjRWxlbWVudCwgY29tYm8sIHNlcXVlbmNlKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGNhbGxiYWNrKGUsIGNvbWJvKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBfcHJldmVudERlZmF1bHQoZSk7XG4gICAgICAgICAgICAgICAgX3N0b3BQcm9wYWdhdGlvbihlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBoYW5kbGVzIGEgY2hhcmFjdGVyIGtleSBldmVudFxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY2hhcmFjdGVyXG4gICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IG1vZGlmaWVyc1xuICAgICAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuX2hhbmRsZUtleSA9IGZ1bmN0aW9uKGNoYXJhY3RlciwgbW9kaWZpZXJzLCBlKSB7XG4gICAgICAgICAgICB2YXIgY2FsbGJhY2tzID0gX2dldE1hdGNoZXMoY2hhcmFjdGVyLCBtb2RpZmllcnMsIGUpO1xuICAgICAgICAgICAgdmFyIGk7XG4gICAgICAgICAgICB2YXIgZG9Ob3RSZXNldCA9IHt9O1xuICAgICAgICAgICAgdmFyIG1heExldmVsID0gMDtcbiAgICAgICAgICAgIHZhciBwcm9jZXNzZWRTZXF1ZW5jZUNhbGxiYWNrID0gZmFsc2U7XG5cbiAgICAgICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgbWF4TGV2ZWwgZm9yIHNlcXVlbmNlcyBzbyB3ZSBjYW4gb25seSBleGVjdXRlIHRoZSBsb25nZXN0IGNhbGxiYWNrIHNlcXVlbmNlXG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY2FsbGJhY2tzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrc1tpXS5zZXEpIHtcbiAgICAgICAgICAgICAgICAgICAgbWF4TGV2ZWwgPSBNYXRoLm1heChtYXhMZXZlbCwgY2FsbGJhY2tzW2ldLmxldmVsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGxvb3AgdGhyb3VnaCBtYXRjaGluZyBjYWxsYmFja3MgZm9yIHRoaXMga2V5IGV2ZW50XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY2FsbGJhY2tzLmxlbmd0aDsgKytpKSB7XG5cbiAgICAgICAgICAgICAgICAvLyBmaXJlIGZvciBhbGwgc2VxdWVuY2UgY2FsbGJhY2tzXG4gICAgICAgICAgICAgICAgLy8gdGhpcyBpcyBiZWNhdXNlIGlmIGZvciBleGFtcGxlIHlvdSBoYXZlIG11bHRpcGxlIHNlcXVlbmNlc1xuICAgICAgICAgICAgICAgIC8vIGJvdW5kIHN1Y2ggYXMgXCJnIGlcIiBhbmQgXCJnIHRcIiB0aGV5IGJvdGggbmVlZCB0byBmaXJlIHRoZVxuICAgICAgICAgICAgICAgIC8vIGNhbGxiYWNrIGZvciBtYXRjaGluZyBnIGNhdXNlIG90aGVyd2lzZSB5b3UgY2FuIG9ubHkgZXZlclxuICAgICAgICAgICAgICAgIC8vIG1hdGNoIHRoZSBmaXJzdCBvbmVcbiAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2tzW2ldLnNlcSkge1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIG9ubHkgZmlyZSBjYWxsYmFja3MgZm9yIHRoZSBtYXhMZXZlbCB0byBwcmV2ZW50XG4gICAgICAgICAgICAgICAgICAgIC8vIHN1YnNlcXVlbmNlcyBmcm9tIGFsc28gZmlyaW5nXG4gICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgIC8vIGZvciBleGFtcGxlICdhIG9wdGlvbiBiJyBzaG91bGQgbm90IGNhdXNlICdvcHRpb24gYicgdG8gZmlyZVxuICAgICAgICAgICAgICAgICAgICAvLyBldmVuIHRob3VnaCAnb3B0aW9uIGInIGlzIHBhcnQgb2YgdGhlIG90aGVyIHNlcXVlbmNlXG4gICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgIC8vIGFueSBzZXF1ZW5jZXMgdGhhdCBkbyBub3QgbWF0Y2ggaGVyZSB3aWxsIGJlIGRpc2NhcmRlZFxuICAgICAgICAgICAgICAgICAgICAvLyBiZWxvdyBieSB0aGUgX3Jlc2V0U2VxdWVuY2VzIGNhbGxcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrc1tpXS5sZXZlbCAhPSBtYXhMZXZlbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBwcm9jZXNzZWRTZXF1ZW5jZUNhbGxiYWNrID0gdHJ1ZTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBrZWVwIGEgbGlzdCBvZiB3aGljaCBzZXF1ZW5jZXMgd2VyZSBtYXRjaGVzIGZvciBsYXRlclxuICAgICAgICAgICAgICAgICAgICBkb05vdFJlc2V0W2NhbGxiYWNrc1tpXS5zZXFdID0gMTtcbiAgICAgICAgICAgICAgICAgICAgX2ZpcmVDYWxsYmFjayhjYWxsYmFja3NbaV0uY2FsbGJhY2ssIGUsIGNhbGxiYWNrc1tpXS5jb21ibywgY2FsbGJhY2tzW2ldLnNlcSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIGlmIHRoZXJlIHdlcmUgbm8gc2VxdWVuY2UgbWF0Y2hlcyBidXQgd2UgYXJlIHN0aWxsIGhlcmVcbiAgICAgICAgICAgICAgICAvLyB0aGF0IG1lYW5zIHRoaXMgaXMgYSByZWd1bGFyIG1hdGNoIHNvIHdlIHNob3VsZCBmaXJlIHRoYXRcbiAgICAgICAgICAgICAgICBpZiAoIXByb2Nlc3NlZFNlcXVlbmNlQ2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgX2ZpcmVDYWxsYmFjayhjYWxsYmFja3NbaV0uY2FsbGJhY2ssIGUsIGNhbGxiYWNrc1tpXS5jb21ibyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBpZiB0aGUga2V5IHlvdSBwcmVzc2VkIG1hdGNoZXMgdGhlIHR5cGUgb2Ygc2VxdWVuY2Ugd2l0aG91dFxuICAgICAgICAgICAgLy8gYmVpbmcgYSBtb2RpZmllciAoaWUgXCJrZXl1cFwiIG9yIFwia2V5cHJlc3NcIikgdGhlbiB3ZSBzaG91bGRcbiAgICAgICAgICAgIC8vIHJlc2V0IGFsbCBzZXF1ZW5jZXMgdGhhdCB3ZXJlIG5vdCBtYXRjaGVkIGJ5IHRoaXMgZXZlbnRcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyB0aGlzIGlzIHNvLCBmb3IgZXhhbXBsZSwgaWYgeW91IGhhdmUgdGhlIHNlcXVlbmNlIFwiaCBhIHRcIiBhbmQgeW91XG4gICAgICAgICAgICAvLyB0eXBlIFwiaCBlIGEgciB0XCIgaXQgZG9lcyBub3QgbWF0Y2guICBpbiB0aGlzIGNhc2UgdGhlIFwiZVwiIHdpbGxcbiAgICAgICAgICAgIC8vIGNhdXNlIHRoZSBzZXF1ZW5jZSB0byByZXNldFxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIG1vZGlmaWVyIGtleXMgYXJlIGlnbm9yZWQgYmVjYXVzZSB5b3UgY2FuIGhhdmUgYSBzZXF1ZW5jZVxuICAgICAgICAgICAgLy8gdGhhdCBjb250YWlucyBtb2RpZmllcnMgc3VjaCBhcyBcImVudGVyIGN0cmwrc3BhY2VcIiBhbmQgaW4gbW9zdFxuICAgICAgICAgICAgLy8gY2FzZXMgdGhlIG1vZGlmaWVyIGtleSB3aWxsIGJlIHByZXNzZWQgYmVmb3JlIHRoZSBuZXh0IGtleVxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIGFsc28gaWYgeW91IGhhdmUgYSBzZXF1ZW5jZSBzdWNoIGFzIFwiY3RybCtiIGFcIiB0aGVuIHByZXNzaW5nIHRoZVxuICAgICAgICAgICAgLy8gXCJiXCIga2V5IHdpbGwgdHJpZ2dlciBhIFwia2V5cHJlc3NcIiBhbmQgYSBcImtleWRvd25cIlxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIHRoZSBcImtleWRvd25cIiBpcyBleHBlY3RlZCB3aGVuIHRoZXJlIGlzIGEgbW9kaWZpZXIsIGJ1dCB0aGVcbiAgICAgICAgICAgIC8vIFwia2V5cHJlc3NcIiBlbmRzIHVwIG1hdGNoaW5nIHRoZSBfbmV4dEV4cGVjdGVkQWN0aW9uIHNpbmNlIGl0IG9jY3Vyc1xuICAgICAgICAgICAgLy8gYWZ0ZXIgYW5kIHRoYXQgY2F1c2VzIHRoZSBzZXF1ZW5jZSB0byByZXNldFxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIHdlIGlnbm9yZSBrZXlwcmVzc2VzIGluIGEgc2VxdWVuY2UgdGhhdCBkaXJlY3RseSBmb2xsb3cgYSBrZXlkb3duXG4gICAgICAgICAgICAvLyBmb3IgdGhlIHNhbWUgY2hhcmFjdGVyXG4gICAgICAgICAgICB2YXIgaWdub3JlVGhpc0tleXByZXNzID0gZS50eXBlID09ICdrZXlwcmVzcycgJiYgX2lnbm9yZU5leHRLZXlwcmVzcztcbiAgICAgICAgICAgIGlmIChlLnR5cGUgPT0gX25leHRFeHBlY3RlZEFjdGlvbiAmJiAhX2lzTW9kaWZpZXIoY2hhcmFjdGVyKSAmJiAhaWdub3JlVGhpc0tleXByZXNzKSB7XG4gICAgICAgICAgICAgICAgX3Jlc2V0U2VxdWVuY2VzKGRvTm90UmVzZXQpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBfaWdub3JlTmV4dEtleXByZXNzID0gcHJvY2Vzc2VkU2VxdWVuY2VDYWxsYmFjayAmJiBlLnR5cGUgPT0gJ2tleWRvd24nO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBoYW5kbGVzIGEga2V5ZG93biBldmVudFxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9oYW5kbGVLZXlFdmVudChlKSB7XG5cbiAgICAgICAgICAgIC8vIG5vcm1hbGl6ZSBlLndoaWNoIGZvciBrZXkgZXZlbnRzXG4gICAgICAgICAgICAvLyBAc2VlIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDI4NTYyNy9qYXZhc2NyaXB0LWtleWNvZGUtdnMtY2hhcmNvZGUtdXR0ZXItY29uZnVzaW9uXG4gICAgICAgICAgICBpZiAodHlwZW9mIGUud2hpY2ggIT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgZS53aGljaCA9IGUua2V5Q29kZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGNoYXJhY3RlciA9IF9jaGFyYWN0ZXJGcm9tRXZlbnQoZSk7XG5cbiAgICAgICAgICAgIC8vIG5vIGNoYXJhY3RlciBmb3VuZCB0aGVuIHN0b3BcbiAgICAgICAgICAgIGlmICghY2hhcmFjdGVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBuZWVkIHRvIHVzZSA9PT0gZm9yIHRoZSBjaGFyYWN0ZXIgY2hlY2sgYmVjYXVzZSB0aGUgY2hhcmFjdGVyIGNhbiBiZSAwXG4gICAgICAgICAgICBpZiAoZS50eXBlID09ICdrZXl1cCcgJiYgX2lnbm9yZU5leHRLZXl1cCA9PT0gY2hhcmFjdGVyKSB7XG4gICAgICAgICAgICAgICAgX2lnbm9yZU5leHRLZXl1cCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc2VsZi5oYW5kbGVLZXkoY2hhcmFjdGVyLCBfZXZlbnRNb2RpZmllcnMoZSksIGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGNhbGxlZCB0byBzZXQgYSAxIHNlY29uZCB0aW1lb3V0IG9uIHRoZSBzcGVjaWZpZWQgc2VxdWVuY2VcbiAgICAgICAgICpcbiAgICAgICAgICogdGhpcyBpcyBzbyBhZnRlciBlYWNoIGtleSBwcmVzcyBpbiB0aGUgc2VxdWVuY2UgeW91IGhhdmUgMSBzZWNvbmRcbiAgICAgICAgICogdG8gcHJlc3MgdGhlIG5leHQga2V5IGJlZm9yZSB5b3UgaGF2ZSB0byBzdGFydCBvdmVyXG4gICAgICAgICAqXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9yZXNldFNlcXVlbmNlVGltZXIoKSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQoX3Jlc2V0VGltZXIpO1xuICAgICAgICAgICAgX3Jlc2V0VGltZXIgPSBzZXRUaW1lb3V0KF9yZXNldFNlcXVlbmNlcywgMTAwMCk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogYmluZHMgYSBrZXkgc2VxdWVuY2UgdG8gYW4gZXZlbnRcbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbWJvIC0gY29tYm8gc3BlY2lmaWVkIGluIGJpbmQgY2FsbFxuICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSBrZXlzXG4gICAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gYWN0aW9uXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9iaW5kU2VxdWVuY2UoY29tYm8sIGtleXMsIGNhbGxiYWNrLCBhY3Rpb24pIHtcblxuICAgICAgICAgICAgLy8gc3RhcnQgb2ZmIGJ5IGFkZGluZyBhIHNlcXVlbmNlIGxldmVsIHJlY29yZCBmb3IgdGhpcyBjb21iaW5hdGlvblxuICAgICAgICAgICAgLy8gYW5kIHNldHRpbmcgdGhlIGxldmVsIHRvIDBcbiAgICAgICAgICAgIF9zZXF1ZW5jZUxldmVsc1tjb21ib10gPSAwO1xuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIGNhbGxiYWNrIHRvIGluY3JlYXNlIHRoZSBzZXF1ZW5jZSBsZXZlbCBmb3IgdGhpcyBzZXF1ZW5jZSBhbmQgcmVzZXRcbiAgICAgICAgICAgICAqIGFsbCBvdGhlciBzZXF1ZW5jZXMgdGhhdCB3ZXJlIGFjdGl2ZVxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuZXh0QWN0aW9uXG4gICAgICAgICAgICAgKiBAcmV0dXJucyB7RnVuY3Rpb259XG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGZ1bmN0aW9uIF9pbmNyZWFzZVNlcXVlbmNlKG5leHRBY3Rpb24pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIF9uZXh0RXhwZWN0ZWRBY3Rpb24gPSBuZXh0QWN0aW9uO1xuICAgICAgICAgICAgICAgICAgICArK19zZXF1ZW5jZUxldmVsc1tjb21ib107XG4gICAgICAgICAgICAgICAgICAgIF9yZXNldFNlcXVlbmNlVGltZXIoKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIHdyYXBzIHRoZSBzcGVjaWZpZWQgY2FsbGJhY2sgaW5zaWRlIG9mIGFub3RoZXIgZnVuY3Rpb24gaW4gb3JkZXJcbiAgICAgICAgICAgICAqIHRvIHJlc2V0IGFsbCBzZXF1ZW5jZSBjb3VudGVycyBhcyBzb29uIGFzIHRoaXMgc2VxdWVuY2UgaXMgZG9uZVxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIEBwYXJhbSB7RXZlbnR9IGVcbiAgICAgICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZnVuY3Rpb24gX2NhbGxiYWNrQW5kUmVzZXQoZSkge1xuICAgICAgICAgICAgICAgIF9maXJlQ2FsbGJhY2soY2FsbGJhY2ssIGUsIGNvbWJvKTtcblxuICAgICAgICAgICAgICAgIC8vIHdlIHNob3VsZCBpZ25vcmUgdGhlIG5leHQga2V5IHVwIGlmIHRoZSBhY3Rpb24gaXMga2V5IGRvd25cbiAgICAgICAgICAgICAgICAvLyBvciBrZXlwcmVzcy4gIHRoaXMgaXMgc28gaWYgeW91IGZpbmlzaCBhIHNlcXVlbmNlIGFuZFxuICAgICAgICAgICAgICAgIC8vIHJlbGVhc2UgdGhlIGtleSB0aGUgZmluYWwga2V5IHdpbGwgbm90IHRyaWdnZXIgYSBrZXl1cFxuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24gIT09ICdrZXl1cCcpIHtcbiAgICAgICAgICAgICAgICAgICAgX2lnbm9yZU5leHRLZXl1cCA9IF9jaGFyYWN0ZXJGcm9tRXZlbnQoZSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gd2VpcmQgcmFjZSBjb25kaXRpb24gaWYgYSBzZXF1ZW5jZSBlbmRzIHdpdGggdGhlIGtleVxuICAgICAgICAgICAgICAgIC8vIGFub3RoZXIgc2VxdWVuY2UgYmVnaW5zIHdpdGhcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KF9yZXNldFNlcXVlbmNlcywgMTApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBsb29wIHRocm91Z2gga2V5cyBvbmUgYXQgYSB0aW1lIGFuZCBiaW5kIHRoZSBhcHByb3ByaWF0ZSBjYWxsYmFja1xuICAgICAgICAgICAgLy8gZnVuY3Rpb24uICBmb3IgYW55IGtleSBsZWFkaW5nIHVwIHRvIHRoZSBmaW5hbCBvbmUgaXQgc2hvdWxkXG4gICAgICAgICAgICAvLyBpbmNyZWFzZSB0aGUgc2VxdWVuY2UuIGFmdGVyIHRoZSBmaW5hbCwgaXQgc2hvdWxkIHJlc2V0IGFsbCBzZXF1ZW5jZXNcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyBpZiBhbiBhY3Rpb24gaXMgc3BlY2lmaWVkIGluIHRoZSBvcmlnaW5hbCBiaW5kIGNhbGwgdGhlbiB0aGF0IHdpbGxcbiAgICAgICAgICAgIC8vIGJlIHVzZWQgdGhyb3VnaG91dC4gIG90aGVyd2lzZSB3ZSB3aWxsIHBhc3MgdGhlIGFjdGlvbiB0aGF0IHRoZVxuICAgICAgICAgICAgLy8gbmV4dCBrZXkgaW4gdGhlIHNlcXVlbmNlIHNob3VsZCBtYXRjaC4gIHRoaXMgYWxsb3dzIGEgc2VxdWVuY2VcbiAgICAgICAgICAgIC8vIHRvIG1peCBhbmQgbWF0Y2gga2V5cHJlc3MgYW5kIGtleWRvd24gZXZlbnRzIGRlcGVuZGluZyBvbiB3aGljaFxuICAgICAgICAgICAgLy8gb25lcyBhcmUgYmV0dGVyIHN1aXRlZCB0byB0aGUga2V5IHByb3ZpZGVkXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgICAgICB2YXIgaXNGaW5hbCA9IGkgKyAxID09PSBrZXlzLmxlbmd0aDtcbiAgICAgICAgICAgICAgICB2YXIgd3JhcHBlZENhbGxiYWNrID0gaXNGaW5hbCA/IF9jYWxsYmFja0FuZFJlc2V0IDogX2luY3JlYXNlU2VxdWVuY2UoYWN0aW9uIHx8IF9nZXRLZXlJbmZvKGtleXNbaSArIDFdKS5hY3Rpb24pO1xuICAgICAgICAgICAgICAgIF9iaW5kU2luZ2xlKGtleXNbaV0sIHdyYXBwZWRDYWxsYmFjaywgYWN0aW9uLCBjb21ibywgaSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogYmluZHMgYSBzaW5nbGUga2V5Ym9hcmQgY29tYmluYXRpb25cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbWJpbmF0aW9uXG4gICAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gYWN0aW9uXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gc2VxdWVuY2VOYW1lIC0gbmFtZSBvZiBzZXF1ZW5jZSBpZiBwYXJ0IG9mIHNlcXVlbmNlXG4gICAgICAgICAqIEBwYXJhbSB7bnVtYmVyPX0gbGV2ZWwgLSB3aGF0IHBhcnQgb2YgdGhlIHNlcXVlbmNlIHRoZSBjb21tYW5kIGlzXG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9iaW5kU2luZ2xlKGNvbWJpbmF0aW9uLCBjYWxsYmFjaywgYWN0aW9uLCBzZXF1ZW5jZU5hbWUsIGxldmVsKSB7XG5cbiAgICAgICAgICAgIC8vIHN0b3JlIGEgZGlyZWN0IG1hcHBlZCByZWZlcmVuY2UgZm9yIHVzZSB3aXRoIE1vdXNldHJhcC50cmlnZ2VyXG4gICAgICAgICAgICBzZWxmLl9kaXJlY3RNYXBbY29tYmluYXRpb24gKyAnOicgKyBhY3Rpb25dID0gY2FsbGJhY2s7XG5cbiAgICAgICAgICAgIC8vIG1ha2Ugc3VyZSBtdWx0aXBsZSBzcGFjZXMgaW4gYSByb3cgYmVjb21lIGEgc2luZ2xlIHNwYWNlXG4gICAgICAgICAgICBjb21iaW5hdGlvbiA9IGNvbWJpbmF0aW9uLnJlcGxhY2UoL1xccysvZywgJyAnKTtcblxuICAgICAgICAgICAgdmFyIHNlcXVlbmNlID0gY29tYmluYXRpb24uc3BsaXQoJyAnKTtcbiAgICAgICAgICAgIHZhciBpbmZvO1xuXG4gICAgICAgICAgICAvLyBpZiB0aGlzIHBhdHRlcm4gaXMgYSBzZXF1ZW5jZSBvZiBrZXlzIHRoZW4gcnVuIHRocm91Z2ggdGhpcyBtZXRob2RcbiAgICAgICAgICAgIC8vIHRvIHJlcHJvY2VzcyBlYWNoIHBhdHRlcm4gb25lIGtleSBhdCBhIHRpbWVcbiAgICAgICAgICAgIGlmIChzZXF1ZW5jZS5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgX2JpbmRTZXF1ZW5jZShjb21iaW5hdGlvbiwgc2VxdWVuY2UsIGNhbGxiYWNrLCBhY3Rpb24pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaW5mbyA9IF9nZXRLZXlJbmZvKGNvbWJpbmF0aW9uLCBhY3Rpb24pO1xuXG4gICAgICAgICAgICAvLyBtYWtlIHN1cmUgdG8gaW5pdGlhbGl6ZSBhcnJheSBpZiB0aGlzIGlzIHRoZSBmaXJzdCB0aW1lXG4gICAgICAgICAgICAvLyBhIGNhbGxiYWNrIGlzIGFkZGVkIGZvciB0aGlzIGtleVxuICAgICAgICAgICAgc2VsZi5fY2FsbGJhY2tzW2luZm8ua2V5XSA9IHNlbGYuX2NhbGxiYWNrc1tpbmZvLmtleV0gfHwgW107XG5cbiAgICAgICAgICAgIC8vIHJlbW92ZSBhbiBleGlzdGluZyBtYXRjaCBpZiB0aGVyZSBpcyBvbmVcbiAgICAgICAgICAgIF9nZXRNYXRjaGVzKGluZm8ua2V5LCBpbmZvLm1vZGlmaWVycywge3R5cGU6IGluZm8uYWN0aW9ufSwgc2VxdWVuY2VOYW1lLCBjb21iaW5hdGlvbiwgbGV2ZWwpO1xuXG4gICAgICAgICAgICAvLyBhZGQgdGhpcyBjYWxsIGJhY2sgdG8gdGhlIGFycmF5XG4gICAgICAgICAgICAvLyBpZiBpdCBpcyBhIHNlcXVlbmNlIHB1dCBpdCBhdCB0aGUgYmVnaW5uaW5nXG4gICAgICAgICAgICAvLyBpZiBub3QgcHV0IGl0IGF0IHRoZSBlbmRcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyB0aGlzIGlzIGltcG9ydGFudCBiZWNhdXNlIHRoZSB3YXkgdGhlc2UgYXJlIHByb2Nlc3NlZCBleHBlY3RzXG4gICAgICAgICAgICAvLyB0aGUgc2VxdWVuY2Ugb25lcyB0byBjb21lIGZpcnN0XG4gICAgICAgICAgICBzZWxmLl9jYWxsYmFja3NbaW5mby5rZXldW3NlcXVlbmNlTmFtZSA/ICd1bnNoaWZ0JyA6ICdwdXNoJ10oe1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBjYWxsYmFjayxcbiAgICAgICAgICAgICAgICBtb2RpZmllcnM6IGluZm8ubW9kaWZpZXJzLFxuICAgICAgICAgICAgICAgIGFjdGlvbjogaW5mby5hY3Rpb24sXG4gICAgICAgICAgICAgICAgc2VxOiBzZXF1ZW5jZU5hbWUsXG4gICAgICAgICAgICAgICAgbGV2ZWw6IGxldmVsLFxuICAgICAgICAgICAgICAgIGNvbWJvOiBjb21iaW5hdGlvblxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogYmluZHMgbXVsdGlwbGUgY29tYmluYXRpb25zIHRvIHRoZSBzYW1lIGNhbGxiYWNrXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IGNvbWJpbmF0aW9uc1xuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ3x1bmRlZmluZWR9IGFjdGlvblxuICAgICAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICAgICAqL1xuICAgICAgICBzZWxmLl9iaW5kTXVsdGlwbGUgPSBmdW5jdGlvbihjb21iaW5hdGlvbnMsIGNhbGxiYWNrLCBhY3Rpb24pIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29tYmluYXRpb25zLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgX2JpbmRTaW5nbGUoY29tYmluYXRpb25zW2ldLCBjYWxsYmFjaywgYWN0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAvLyBzdGFydCFcbiAgICAgICAgX2FkZEV2ZW50KHRhcmdldEVsZW1lbnQsICdrZXlwcmVzcycsIF9oYW5kbGVLZXlFdmVudCk7XG4gICAgICAgIF9hZGRFdmVudCh0YXJnZXRFbGVtZW50LCAna2V5ZG93bicsIF9oYW5kbGVLZXlFdmVudCk7XG4gICAgICAgIF9hZGRFdmVudCh0YXJnZXRFbGVtZW50LCAna2V5dXAnLCBfaGFuZGxlS2V5RXZlbnQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGJpbmRzIGFuIGV2ZW50IHRvIG1vdXNldHJhcFxuICAgICAqXG4gICAgICogY2FuIGJlIGEgc2luZ2xlIGtleSwgYSBjb21iaW5hdGlvbiBvZiBrZXlzIHNlcGFyYXRlZCB3aXRoICssXG4gICAgICogYW4gYXJyYXkgb2Yga2V5cywgb3IgYSBzZXF1ZW5jZSBvZiBrZXlzIHNlcGFyYXRlZCBieSBzcGFjZXNcbiAgICAgKlxuICAgICAqIGJlIHN1cmUgdG8gbGlzdCB0aGUgbW9kaWZpZXIga2V5cyBmaXJzdCB0byBtYWtlIHN1cmUgdGhhdCB0aGVcbiAgICAgKiBjb3JyZWN0IGtleSBlbmRzIHVwIGdldHRpbmcgYm91bmQgKHRoZSBsYXN0IGtleSBpbiB0aGUgcGF0dGVybilcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfEFycmF5fSBrZXlzXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICAgKiBAcGFyYW0ge3N0cmluZz19IGFjdGlvbiAtICdrZXlwcmVzcycsICdrZXlkb3duJywgb3IgJ2tleXVwJ1xuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBNb3VzZXRyYXAucHJvdG90eXBlLmJpbmQgPSBmdW5jdGlvbihrZXlzLCBjYWxsYmFjaywgYWN0aW9uKSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAga2V5cyA9IGtleXMgaW5zdGFuY2VvZiBBcnJheSA/IGtleXMgOiBba2V5c107XG4gICAgICAgIHNlbGYuX2JpbmRNdWx0aXBsZS5jYWxsKHNlbGYsIGtleXMsIGNhbGxiYWNrLCBhY3Rpb24pO1xuICAgICAgICByZXR1cm4gc2VsZjtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogdW5iaW5kcyBhbiBldmVudCB0byBtb3VzZXRyYXBcbiAgICAgKlxuICAgICAqIHRoZSB1bmJpbmRpbmcgc2V0cyB0aGUgY2FsbGJhY2sgZnVuY3Rpb24gb2YgdGhlIHNwZWNpZmllZCBrZXkgY29tYm9cbiAgICAgKiB0byBhbiBlbXB0eSBmdW5jdGlvbiBhbmQgZGVsZXRlcyB0aGUgY29ycmVzcG9uZGluZyBrZXkgaW4gdGhlXG4gICAgICogX2RpcmVjdE1hcCBkaWN0LlxuICAgICAqXG4gICAgICogVE9ETzogYWN0dWFsbHkgcmVtb3ZlIHRoaXMgZnJvbSB0aGUgX2NhbGxiYWNrcyBkaWN0aW9uYXJ5IGluc3RlYWRcbiAgICAgKiBvZiBiaW5kaW5nIGFuIGVtcHR5IGZ1bmN0aW9uXG4gICAgICpcbiAgICAgKiB0aGUga2V5Y29tYm8rYWN0aW9uIGhhcyB0byBiZSBleGFjdGx5IHRoZSBzYW1lIGFzXG4gICAgICogaXQgd2FzIGRlZmluZWQgaW4gdGhlIGJpbmQgbWV0aG9kXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ3xBcnJheX0ga2V5c1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBhY3Rpb25cbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgTW91c2V0cmFwLnByb3RvdHlwZS51bmJpbmQgPSBmdW5jdGlvbihrZXlzLCBhY3Rpb24pIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICByZXR1cm4gc2VsZi5iaW5kLmNhbGwoc2VsZiwga2V5cywgZnVuY3Rpb24oKSB7fSwgYWN0aW9uKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogdHJpZ2dlcnMgYW4gZXZlbnQgdGhhdCBoYXMgYWxyZWFkeSBiZWVuIGJvdW5kXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5c1xuICAgICAqIEBwYXJhbSB7c3RyaW5nPX0gYWN0aW9uXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIE1vdXNldHJhcC5wcm90b3R5cGUudHJpZ2dlciA9IGZ1bmN0aW9uKGtleXMsIGFjdGlvbikge1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIGlmIChzZWxmLl9kaXJlY3RNYXBba2V5cyArICc6JyArIGFjdGlvbl0pIHtcbiAgICAgICAgICAgIHNlbGYuX2RpcmVjdE1hcFtrZXlzICsgJzonICsgYWN0aW9uXSh7fSwga2V5cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNlbGY7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIHJlc2V0cyB0aGUgbGlicmFyeSBiYWNrIHRvIGl0cyBpbml0aWFsIHN0YXRlLiAgdGhpcyBpcyB1c2VmdWxcbiAgICAgKiBpZiB5b3Ugd2FudCB0byBjbGVhciBvdXQgdGhlIGN1cnJlbnQga2V5Ym9hcmQgc2hvcnRjdXRzIGFuZCBiaW5kXG4gICAgICogbmV3IG9uZXMgLSBmb3IgZXhhbXBsZSBpZiB5b3Ugc3dpdGNoIHRvIGFub3RoZXIgcGFnZVxuICAgICAqXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIE1vdXNldHJhcC5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICBzZWxmLl9jYWxsYmFja3MgPSB7fTtcbiAgICAgICAgc2VsZi5fZGlyZWN0TWFwID0ge307XG4gICAgICAgIHJldHVybiBzZWxmO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBzaG91bGQgd2Ugc3RvcCB0aGlzIGV2ZW50IGJlZm9yZSBmaXJpbmcgb2ZmIGNhbGxiYWNrc1xuICAgICAqXG4gICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICAgICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAgICovXG4gICAgTW91c2V0cmFwLnByb3RvdHlwZS5zdG9wQ2FsbGJhY2sgPSBmdW5jdGlvbihlLCBlbGVtZW50KSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgICAgICAvLyBpZiB0aGUgZWxlbWVudCBoYXMgdGhlIGNsYXNzIFwibW91c2V0cmFwXCIgdGhlbiBubyBuZWVkIHRvIHN0b3BcbiAgICAgICAgaWYgKCgnICcgKyBlbGVtZW50LmNsYXNzTmFtZSArICcgJykuaW5kZXhPZignIG1vdXNldHJhcCAnKSA+IC0xKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoX2JlbG9uZ3NUbyhlbGVtZW50LCBzZWxmLnRhcmdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHN0b3AgZm9yIGlucHV0LCBzZWxlY3QsIGFuZCB0ZXh0YXJlYVxuICAgICAgICByZXR1cm4gZWxlbWVudC50YWdOYW1lID09ICdJTlBVVCcgfHwgZWxlbWVudC50YWdOYW1lID09ICdTRUxFQ1QnIHx8IGVsZW1lbnQudGFnTmFtZSA9PSAnVEVYVEFSRUEnIHx8IGVsZW1lbnQuaXNDb250ZW50RWRpdGFibGU7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIGV4cG9zZXMgX2hhbmRsZUtleSBwdWJsaWNseSBzbyBpdCBjYW4gYmUgb3ZlcndyaXR0ZW4gYnkgZXh0ZW5zaW9uc1xuICAgICAqL1xuICAgIE1vdXNldHJhcC5wcm90b3R5cGUuaGFuZGxlS2V5ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgcmV0dXJuIHNlbGYuX2hhbmRsZUtleS5hcHBseShzZWxmLCBhcmd1bWVudHMpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBhbGxvdyBjdXN0b20ga2V5IG1hcHBpbmdzXG4gICAgICovXG4gICAgTW91c2V0cmFwLmFkZEtleWNvZGVzID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgICAgIGZvciAodmFyIGtleSBpbiBvYmplY3QpIHtcbiAgICAgICAgICAgIGlmIChvYmplY3QuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgICAgIF9NQVBba2V5XSA9IG9iamVjdFtrZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIF9SRVZFUlNFX01BUCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEluaXQgdGhlIGdsb2JhbCBtb3VzZXRyYXAgZnVuY3Rpb25zXG4gICAgICpcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBuZWVkZWQgdG8gYWxsb3cgdGhlIGdsb2JhbCBtb3VzZXRyYXAgZnVuY3Rpb25zIHRvIHdvcmtcbiAgICAgKiBub3cgdGhhdCBtb3VzZXRyYXAgaXMgYSBjb25zdHJ1Y3RvciBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBNb3VzZXRyYXAuaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgZG9jdW1lbnRNb3VzZXRyYXAgPSBNb3VzZXRyYXAoZG9jdW1lbnQpO1xuICAgICAgICBmb3IgKHZhciBtZXRob2QgaW4gZG9jdW1lbnRNb3VzZXRyYXApIHtcbiAgICAgICAgICAgIGlmIChtZXRob2QuY2hhckF0KDApICE9PSAnXycpIHtcbiAgICAgICAgICAgICAgICBNb3VzZXRyYXBbbWV0aG9kXSA9IChmdW5jdGlvbihtZXRob2QpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvY3VtZW50TW91c2V0cmFwW21ldGhvZF0uYXBwbHkoZG9jdW1lbnRNb3VzZXRyYXAsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSAobWV0aG9kKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgTW91c2V0cmFwLmluaXQoKTtcblxuICAgIC8vIGV4cG9zZSBtb3VzZXRyYXAgdG8gdGhlIGdsb2JhbCBvYmplY3RcbiAgICB3aW5kb3cuTW91c2V0cmFwID0gTW91c2V0cmFwO1xuXG4gICAgLy8gZXhwb3NlIGFzIGEgY29tbW9uIGpzIG1vZHVsZVxuICAgIGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IE1vdXNldHJhcDtcbiAgICB9XG5cbiAgICAvLyBleHBvc2UgbW91c2V0cmFwIGFzIGFuIEFNRCBtb2R1bGVcbiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG4gICAgICAgIGRlZmluZShmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBNb3VzZXRyYXA7XG4gICAgICAgIH0pO1xuICAgIH1cbn0pICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IG51bGwsIHR5cGVvZiAgd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IGRvY3VtZW50IDogbnVsbCk7XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZmluZWQgKi9cblxudmFyIHRocm90dGxlID0gcmVxdWlyZSgnLi90aHJvdHRsZScpO1xuXG4vKipcbiAqIERlYm91bmNlIGV4ZWN1dGlvbiBvZiBhIGZ1bmN0aW9uLiBEZWJvdW5jaW5nLCB1bmxpa2UgdGhyb3R0bGluZyxcbiAqIGd1YXJhbnRlZXMgdGhhdCBhIGZ1bmN0aW9uIGlzIG9ubHkgZXhlY3V0ZWQgYSBzaW5nbGUgdGltZSwgZWl0aGVyIGF0IHRoZVxuICogdmVyeSBiZWdpbm5pbmcgb2YgYSBzZXJpZXMgb2YgY2FsbHMsIG9yIGF0IHRoZSB2ZXJ5IGVuZC5cbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9ICAgZGVsYXkgICAgICAgICBBIHplcm8tb3ItZ3JlYXRlciBkZWxheSBpbiBtaWxsaXNlY29uZHMuIEZvciBldmVudCBjYWxsYmFja3MsIHZhbHVlcyBhcm91bmQgMTAwIG9yIDI1MCAob3IgZXZlbiBoaWdoZXIpIGFyZSBtb3N0IHVzZWZ1bC5cbiAqIEBwYXJhbSAge0Jvb2xlYW59ICBhdEJlZ2luICAgICAgIE9wdGlvbmFsLCBkZWZhdWx0cyB0byBmYWxzZS4gSWYgYXRCZWdpbiBpcyBmYWxzZSBvciB1bnNwZWNpZmllZCwgY2FsbGJhY2sgd2lsbCBvbmx5IGJlIGV4ZWN1dGVkIGBkZWxheWAgbWlsbGlzZWNvbmRzXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZnRlciB0aGUgbGFzdCBkZWJvdW5jZWQtZnVuY3Rpb24gY2FsbC4gSWYgYXRCZWdpbiBpcyB0cnVlLCBjYWxsYmFjayB3aWxsIGJlIGV4ZWN1dGVkIG9ubHkgYXQgdGhlIGZpcnN0IGRlYm91bmNlZC1mdW5jdGlvbiBjYWxsLlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKEFmdGVyIHRoZSB0aHJvdHRsZWQtZnVuY3Rpb24gaGFzIG5vdCBiZWVuIGNhbGxlZCBmb3IgYGRlbGF5YCBtaWxsaXNlY29uZHMsIHRoZSBpbnRlcm5hbCBjb3VudGVyIGlzIHJlc2V0KS5cbiAqIEBwYXJhbSAge0Z1bmN0aW9ufSBjYWxsYmFjayAgICAgIEEgZnVuY3Rpb24gdG8gYmUgZXhlY3V0ZWQgYWZ0ZXIgZGVsYXkgbWlsbGlzZWNvbmRzLiBUaGUgYHRoaXNgIGNvbnRleHQgYW5kIGFsbCBhcmd1bWVudHMgYXJlIHBhc3NlZCB0aHJvdWdoLCBhcy1pcyxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGBjYWxsYmFja2Agd2hlbiB0aGUgZGVib3VuY2VkLWZ1bmN0aW9uIGlzIGV4ZWN1dGVkLlxuICpcbiAqIEByZXR1cm4ge0Z1bmN0aW9ufSBBIG5ldywgZGVib3VuY2VkIGZ1bmN0aW9uLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICggZGVsYXksIGF0QmVnaW4sIGNhbGxiYWNrICkge1xuXHRyZXR1cm4gY2FsbGJhY2sgPT09IHVuZGVmaW5lZCA/IHRocm90dGxlKGRlbGF5LCBhdEJlZ2luLCBmYWxzZSkgOiB0aHJvdHRsZShkZWxheSwgY2FsbGJhY2ssIGF0QmVnaW4gIT09IGZhbHNlKTtcbn07XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZmluZWQsbm8tcGFyYW0tcmVhc3NpZ24sbm8tc2hhZG93ICovXG5cbi8qKlxuICogVGhyb3R0bGUgZXhlY3V0aW9uIG9mIGEgZnVuY3Rpb24uIEVzcGVjaWFsbHkgdXNlZnVsIGZvciByYXRlIGxpbWl0aW5nXG4gKiBleGVjdXRpb24gb2YgaGFuZGxlcnMgb24gZXZlbnRzIGxpa2UgcmVzaXplIGFuZCBzY3JvbGwuXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSAgICBkZWxheSAgICAgICAgICBBIHplcm8tb3ItZ3JlYXRlciBkZWxheSBpbiBtaWxsaXNlY29uZHMuIEZvciBldmVudCBjYWxsYmFja3MsIHZhbHVlcyBhcm91bmQgMTAwIG9yIDI1MCAob3IgZXZlbiBoaWdoZXIpIGFyZSBtb3N0IHVzZWZ1bC5cbiAqIEBwYXJhbSAge0Jvb2xlYW59ICAgbm9UcmFpbGluZyAgICAgT3B0aW9uYWwsIGRlZmF1bHRzIHRvIGZhbHNlLiBJZiBub1RyYWlsaW5nIGlzIHRydWUsIGNhbGxiYWNrIHdpbGwgb25seSBleGVjdXRlIGV2ZXJ5IGBkZWxheWAgbWlsbGlzZWNvbmRzIHdoaWxlIHRoZVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdHRsZWQtZnVuY3Rpb24gaXMgYmVpbmcgY2FsbGVkLiBJZiBub1RyYWlsaW5nIGlzIGZhbHNlIG9yIHVuc3BlY2lmaWVkLCBjYWxsYmFjayB3aWxsIGJlIGV4ZWN1dGVkIG9uZSBmaW5hbCB0aW1lXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFmdGVyIHRoZSBsYXN0IHRocm90dGxlZC1mdW5jdGlvbiBjYWxsLiAoQWZ0ZXIgdGhlIHRocm90dGxlZC1mdW5jdGlvbiBoYXMgbm90IGJlZW4gY2FsbGVkIGZvciBgZGVsYXlgIG1pbGxpc2Vjb25kcyxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIGludGVybmFsIGNvdW50ZXIgaXMgcmVzZXQpXG4gKiBAcGFyYW0gIHtGdW5jdGlvbn0gIGNhbGxiYWNrICAgICAgIEEgZnVuY3Rpb24gdG8gYmUgZXhlY3V0ZWQgYWZ0ZXIgZGVsYXkgbWlsbGlzZWNvbmRzLiBUaGUgYHRoaXNgIGNvbnRleHQgYW5kIGFsbCBhcmd1bWVudHMgYXJlIHBhc3NlZCB0aHJvdWdoLCBhcy1pcyxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8gYGNhbGxiYWNrYCB3aGVuIHRoZSB0aHJvdHRsZWQtZnVuY3Rpb24gaXMgZXhlY3V0ZWQuXG4gKiBAcGFyYW0gIHtCb29sZWFufSAgIGRlYm91bmNlTW9kZSAgIElmIGBkZWJvdW5jZU1vZGVgIGlzIHRydWUgKGF0IGJlZ2luKSwgc2NoZWR1bGUgYGNsZWFyYCB0byBleGVjdXRlIGFmdGVyIGBkZWxheWAgbXMuIElmIGBkZWJvdW5jZU1vZGVgIGlzIGZhbHNlIChhdCBlbmQpLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2hlZHVsZSBgY2FsbGJhY2tgIHRvIGV4ZWN1dGUgYWZ0ZXIgYGRlbGF5YCBtcy5cbiAqXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn0gIEEgbmV3LCB0aHJvdHRsZWQsIGZ1bmN0aW9uLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICggZGVsYXksIG5vVHJhaWxpbmcsIGNhbGxiYWNrLCBkZWJvdW5jZU1vZGUgKSB7XG5cblx0Ly8gQWZ0ZXIgd3JhcHBlciBoYXMgc3RvcHBlZCBiZWluZyBjYWxsZWQsIHRoaXMgdGltZW91dCBlbnN1cmVzIHRoYXRcblx0Ly8gYGNhbGxiYWNrYCBpcyBleGVjdXRlZCBhdCB0aGUgcHJvcGVyIHRpbWVzIGluIGB0aHJvdHRsZWAgYW5kIGBlbmRgXG5cdC8vIGRlYm91bmNlIG1vZGVzLlxuXHR2YXIgdGltZW91dElEO1xuXG5cdC8vIEtlZXAgdHJhY2sgb2YgdGhlIGxhc3QgdGltZSBgY2FsbGJhY2tgIHdhcyBleGVjdXRlZC5cblx0dmFyIGxhc3RFeGVjID0gMDtcblxuXHQvLyBgbm9UcmFpbGluZ2AgZGVmYXVsdHMgdG8gZmFsc3kuXG5cdGlmICggdHlwZW9mIG5vVHJhaWxpbmcgIT09ICdib29sZWFuJyApIHtcblx0XHRkZWJvdW5jZU1vZGUgPSBjYWxsYmFjaztcblx0XHRjYWxsYmFjayA9IG5vVHJhaWxpbmc7XG5cdFx0bm9UcmFpbGluZyA9IHVuZGVmaW5lZDtcblx0fVxuXG5cdC8vIFRoZSBgd3JhcHBlcmAgZnVuY3Rpb24gZW5jYXBzdWxhdGVzIGFsbCBvZiB0aGUgdGhyb3R0bGluZyAvIGRlYm91bmNpbmdcblx0Ly8gZnVuY3Rpb25hbGl0eSBhbmQgd2hlbiBleGVjdXRlZCB3aWxsIGxpbWl0IHRoZSByYXRlIGF0IHdoaWNoIGBjYWxsYmFja2Bcblx0Ly8gaXMgZXhlY3V0ZWQuXG5cdGZ1bmN0aW9uIHdyYXBwZXIgKCkge1xuXG5cdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdHZhciBlbGFwc2VkID0gTnVtYmVyKG5ldyBEYXRlKCkpIC0gbGFzdEV4ZWM7XG5cdFx0dmFyIGFyZ3MgPSBhcmd1bWVudHM7XG5cblx0XHQvLyBFeGVjdXRlIGBjYWxsYmFja2AgYW5kIHVwZGF0ZSB0aGUgYGxhc3RFeGVjYCB0aW1lc3RhbXAuXG5cdFx0ZnVuY3Rpb24gZXhlYyAoKSB7XG5cdFx0XHRsYXN0RXhlYyA9IE51bWJlcihuZXcgRGF0ZSgpKTtcblx0XHRcdGNhbGxiYWNrLmFwcGx5KHNlbGYsIGFyZ3MpO1xuXHRcdH1cblxuXHRcdC8vIElmIGBkZWJvdW5jZU1vZGVgIGlzIHRydWUgKGF0IGJlZ2luKSB0aGlzIGlzIHVzZWQgdG8gY2xlYXIgdGhlIGZsYWdcblx0XHQvLyB0byBhbGxvdyBmdXR1cmUgYGNhbGxiYWNrYCBleGVjdXRpb25zLlxuXHRcdGZ1bmN0aW9uIGNsZWFyICgpIHtcblx0XHRcdHRpbWVvdXRJRCA9IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHRpZiAoIGRlYm91bmNlTW9kZSAmJiAhdGltZW91dElEICkge1xuXHRcdFx0Ly8gU2luY2UgYHdyYXBwZXJgIGlzIGJlaW5nIGNhbGxlZCBmb3IgdGhlIGZpcnN0IHRpbWUgYW5kXG5cdFx0XHQvLyBgZGVib3VuY2VNb2RlYCBpcyB0cnVlIChhdCBiZWdpbiksIGV4ZWN1dGUgYGNhbGxiYWNrYC5cblx0XHRcdGV4ZWMoKTtcblx0XHR9XG5cblx0XHQvLyBDbGVhciBhbnkgZXhpc3RpbmcgdGltZW91dC5cblx0XHRpZiAoIHRpbWVvdXRJRCApIHtcblx0XHRcdGNsZWFyVGltZW91dCh0aW1lb3V0SUQpO1xuXHRcdH1cblxuXHRcdGlmICggZGVib3VuY2VNb2RlID09PSB1bmRlZmluZWQgJiYgZWxhcHNlZCA+IGRlbGF5ICkge1xuXHRcdFx0Ly8gSW4gdGhyb3R0bGUgbW9kZSwgaWYgYGRlbGF5YCB0aW1lIGhhcyBiZWVuIGV4Y2VlZGVkLCBleGVjdXRlXG5cdFx0XHQvLyBgY2FsbGJhY2tgLlxuXHRcdFx0ZXhlYygpO1xuXG5cdFx0fSBlbHNlIGlmICggbm9UcmFpbGluZyAhPT0gdHJ1ZSApIHtcblx0XHRcdC8vIEluIHRyYWlsaW5nIHRocm90dGxlIG1vZGUsIHNpbmNlIGBkZWxheWAgdGltZSBoYXMgbm90IGJlZW5cblx0XHRcdC8vIGV4Y2VlZGVkLCBzY2hlZHVsZSBgY2FsbGJhY2tgIHRvIGV4ZWN1dGUgYGRlbGF5YCBtcyBhZnRlciBtb3N0XG5cdFx0XHQvLyByZWNlbnQgZXhlY3V0aW9uLlxuXHRcdFx0Ly9cblx0XHRcdC8vIElmIGBkZWJvdW5jZU1vZGVgIGlzIHRydWUgKGF0IGJlZ2luKSwgc2NoZWR1bGUgYGNsZWFyYCB0byBleGVjdXRlXG5cdFx0XHQvLyBhZnRlciBgZGVsYXlgIG1zLlxuXHRcdFx0Ly9cblx0XHRcdC8vIElmIGBkZWJvdW5jZU1vZGVgIGlzIGZhbHNlIChhdCBlbmQpLCBzY2hlZHVsZSBgY2FsbGJhY2tgIHRvXG5cdFx0XHQvLyBleGVjdXRlIGFmdGVyIGBkZWxheWAgbXMuXG5cdFx0XHR0aW1lb3V0SUQgPSBzZXRUaW1lb3V0KGRlYm91bmNlTW9kZSA/IGNsZWFyIDogZXhlYywgZGVib3VuY2VNb2RlID09PSB1bmRlZmluZWQgPyBkZWxheSAtIGVsYXBzZWQgOiBkZWxheSk7XG5cdFx0fVxuXG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIHdyYXBwZXIgZnVuY3Rpb24uXG5cdHJldHVybiB3cmFwcGVyO1xuXG59O1xuIiwiKGZ1bmN0aW9uKCl7J3VzZSBzdHJpY3QnO3ZhciBrPXRoaXM7XG5mdW5jdGlvbiBhYShhKXt2YXIgYj10eXBlb2YgYTtpZihcIm9iamVjdFwiPT1iKWlmKGEpe2lmKGEgaW5zdGFuY2VvZiBBcnJheSlyZXR1cm5cImFycmF5XCI7aWYoYSBpbnN0YW5jZW9mIE9iamVjdClyZXR1cm4gYjt2YXIgYz1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYSk7aWYoXCJbb2JqZWN0IFdpbmRvd11cIj09YylyZXR1cm5cIm9iamVjdFwiO2lmKFwiW29iamVjdCBBcnJheV1cIj09Y3x8XCJudW1iZXJcIj09dHlwZW9mIGEubGVuZ3RoJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgYS5zcGxpY2UmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBhLnByb3BlcnR5SXNFbnVtZXJhYmxlJiYhYS5wcm9wZXJ0eUlzRW51bWVyYWJsZShcInNwbGljZVwiKSlyZXR1cm5cImFycmF5XCI7aWYoXCJbb2JqZWN0IEZ1bmN0aW9uXVwiPT1jfHxcInVuZGVmaW5lZFwiIT10eXBlb2YgYS5jYWxsJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgYS5wcm9wZXJ0eUlzRW51bWVyYWJsZSYmIWEucHJvcGVydHlJc0VudW1lcmFibGUoXCJjYWxsXCIpKXJldHVyblwiZnVuY3Rpb25cIn1lbHNlIHJldHVyblwibnVsbFwiO2Vsc2UgaWYoXCJmdW5jdGlvblwiPT1cbmImJlwidW5kZWZpbmVkXCI9PXR5cGVvZiBhLmNhbGwpcmV0dXJuXCJvYmplY3RcIjtyZXR1cm4gYn1mdW5jdGlvbiBsKGEpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBhfWZ1bmN0aW9uIGJhKGEsYixjKXtyZXR1cm4gYS5jYWxsLmFwcGx5KGEuYmluZCxhcmd1bWVudHMpfWZ1bmN0aW9uIGNhKGEsYixjKXtpZighYSl0aHJvdyBFcnJvcigpO2lmKDI8YXJndW1lbnRzLmxlbmd0aCl7dmFyIGQ9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDIpO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7QXJyYXkucHJvdG90eXBlLnVuc2hpZnQuYXBwbHkoYyxkKTtyZXR1cm4gYS5hcHBseShiLGMpfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gYS5hcHBseShiLGFyZ3VtZW50cyl9fVxuZnVuY3Rpb24gZGEoYSxiLGMpe2RhPUZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kJiYtMSE9RnVuY3Rpb24ucHJvdG90eXBlLmJpbmQudG9TdHJpbmcoKS5pbmRleE9mKFwibmF0aXZlIGNvZGVcIik/YmE6Y2E7cmV0dXJuIGRhLmFwcGx5KG51bGwsYXJndW1lbnRzKX1mdW5jdGlvbiBlYShhLGIpe3ZhciBjPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYj1jLnNsaWNlKCk7Yi5wdXNoLmFwcGx5KGIsYXJndW1lbnRzKTtyZXR1cm4gYS5hcHBseSh0aGlzLGIpfX1cbmZ1bmN0aW9uIG0oYSl7dmFyIGI9bjtmdW5jdGlvbiBjKCl7fWMucHJvdG90eXBlPWIucHJvdG90eXBlO2EuRz1iLnByb3RvdHlwZTthLnByb3RvdHlwZT1uZXcgYzthLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1hO2EuRj1mdW5jdGlvbihhLGMsZil7Zm9yKHZhciBnPUFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMiksaD0yO2g8YXJndW1lbnRzLmxlbmd0aDtoKyspZ1toLTJdPWFyZ3VtZW50c1toXTtyZXR1cm4gYi5wcm90b3R5cGVbY10uYXBwbHkoYSxnKX19Oy8qXG5cbiBUaGUgTUlUIExpY2Vuc2VcblxuIENvcHlyaWdodCAoYykgMjAwNyBDeWJvenUgTGFicywgSW5jLlxuIENvcHlyaWdodCAoYykgMjAxMiBHb29nbGUgSW5jLlxuXG4gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvXG4gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGVcbiByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3JcbiBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG5cbiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuXG4gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lOR1xuIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1NcbiBJTiBUSEUgU09GVFdBUkUuXG4qL1xudmFyIGZhPVN0cmluZy5wcm90b3R5cGUudHJpbT9mdW5jdGlvbihhKXtyZXR1cm4gYS50cmltKCl9OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlcGxhY2UoL15bXFxzXFx4YTBdK3xbXFxzXFx4YTBdKyQvZyxcIlwiKX07ZnVuY3Rpb24gcShhLGIpe3JldHVybi0xIT1hLmluZGV4T2YoYil9ZnVuY3Rpb24gZ2EoYSxiKXtyZXR1cm4gYTxiPy0xOmE+Yj8xOjB9O3ZhciBoYT1BcnJheS5wcm90b3R5cGUuaW5kZXhPZj9mdW5jdGlvbihhLGIsYyl7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5pbmRleE9mLmNhbGwoYSxiLGMpfTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsPT1jPzA6MD5jP01hdGgubWF4KDAsYS5sZW5ndGgrYyk6YztpZihsKGEpKXJldHVybiBsKGIpJiYxPT1iLmxlbmd0aD9hLmluZGV4T2YoYixjKTotMTtmb3IoO2M8YS5sZW5ndGg7YysrKWlmKGMgaW4gYSYmYVtjXT09PWIpcmV0dXJuIGM7cmV0dXJuLTF9LHI9QXJyYXkucHJvdG90eXBlLmZvckVhY2g/ZnVuY3Rpb24oYSxiLGMpe0FycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYSxiLGMpfTpmdW5jdGlvbihhLGIsYyl7Zm9yKHZhciBkPWEubGVuZ3RoLGU9bChhKT9hLnNwbGl0KFwiXCIpOmEsZj0wO2Y8ZDtmKyspZiBpbiBlJiZiLmNhbGwoYyxlW2ZdLGYsYSl9LGlhPUFycmF5LnByb3RvdHlwZS5maWx0ZXI/ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBBcnJheS5wcm90b3R5cGUuZmlsdGVyLmNhbGwoYSxcbmIsYyl9OmZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9YS5sZW5ndGgsZT1bXSxmPTAsZz1sKGEpP2Euc3BsaXQoXCJcIik6YSxoPTA7aDxkO2grKylpZihoIGluIGcpe3ZhciBwPWdbaF07Yi5jYWxsKGMscCxoLGEpJiYoZVtmKytdPXApfXJldHVybiBlfSx0PUFycmF5LnByb3RvdHlwZS5yZWR1Y2U/ZnVuY3Rpb24oYSxiLGMsZCl7ZCYmKGI9ZGEoYixkKSk7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5yZWR1Y2UuY2FsbChhLGIsYyl9OmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWM7cihhLGZ1bmN0aW9uKGMsZyl7ZT1iLmNhbGwoZCxlLGMsZyxhKX0pO3JldHVybiBlfSxqYT1BcnJheS5wcm90b3R5cGUuc29tZT9mdW5jdGlvbihhLGIsYyl7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5zb21lLmNhbGwoYSxiLGMpfTpmdW5jdGlvbihhLGIsYyl7Zm9yKHZhciBkPWEubGVuZ3RoLGU9bChhKT9hLnNwbGl0KFwiXCIpOmEsZj0wO2Y8ZDtmKyspaWYoZiBpbiBlJiZiLmNhbGwoYyxlW2ZdLGYsYSkpcmV0dXJuITA7XG5yZXR1cm4hMX07ZnVuY3Rpb24ga2EoYSxiKXt2YXIgYzthOntjPWEubGVuZ3RoO2Zvcih2YXIgZD1sKGEpP2Euc3BsaXQoXCJcIik6YSxlPTA7ZTxjO2UrKylpZihlIGluIGQmJmIuY2FsbCh2b2lkIDAsZFtlXSxlLGEpKXtjPWU7YnJlYWsgYX1jPS0xfXJldHVybiAwPmM/bnVsbDpsKGEpP2EuY2hhckF0KGMpOmFbY119ZnVuY3Rpb24gbGEoYSl7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5jb25jYXQuYXBwbHkoQXJyYXkucHJvdG90eXBlLGFyZ3VtZW50cyl9ZnVuY3Rpb24gbWEoYSxiLGMpe3JldHVybiAyPj1hcmd1bWVudHMubGVuZ3RoP0FycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEsYik6QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSxiLGMpfTt2YXIgdTthOnt2YXIgbmE9ay5uYXZpZ2F0b3I7aWYobmEpe3ZhciBvYT1uYS51c2VyQWdlbnQ7aWYob2Epe3U9b2E7YnJlYWsgYX19dT1cIlwifTt2YXIgcGE9cSh1LFwiT3BlcmFcIil8fHEodSxcIk9QUlwiKSx2PXEodSxcIlRyaWRlbnRcIil8fHEodSxcIk1TSUVcIikscWE9cSh1LFwiRWRnZVwiKSxyYT1xKHUsXCJHZWNrb1wiKSYmIShxKHUudG9Mb3dlckNhc2UoKSxcIndlYmtpdFwiKSYmIXEodSxcIkVkZ2VcIikpJiYhKHEodSxcIlRyaWRlbnRcIil8fHEodSxcIk1TSUVcIikpJiYhcSh1LFwiRWRnZVwiKSxzYT1xKHUudG9Mb3dlckNhc2UoKSxcIndlYmtpdFwiKSYmIXEodSxcIkVkZ2VcIik7ZnVuY3Rpb24gdGEoKXt2YXIgYT1rLmRvY3VtZW50O3JldHVybiBhP2EuZG9jdW1lbnRNb2RlOnZvaWQgMH12YXIgdWE7XG5hOnt2YXIgdmE9XCJcIix3YT1mdW5jdGlvbigpe3ZhciBhPXU7aWYocmEpcmV0dXJuL3J2XFw6KFteXFwpO10rKShcXCl8OykvLmV4ZWMoYSk7aWYocWEpcmV0dXJuL0VkZ2VcXC8oW1xcZFxcLl0rKS8uZXhlYyhhKTtpZih2KXJldHVybi9cXGIoPzpNU0lFfHJ2KVs6IF0oW15cXCk7XSspKFxcKXw7KS8uZXhlYyhhKTtpZihzYSlyZXR1cm4vV2ViS2l0XFwvKFxcUyspLy5leGVjKGEpO2lmKHBhKXJldHVybi8oPzpWZXJzaW9uKVsgXFwvXT8oXFxTKykvLmV4ZWMoYSl9KCk7d2EmJih2YT13YT93YVsxXTpcIlwiKTtpZih2KXt2YXIgeGE9dGEoKTtpZihudWxsIT14YSYmeGE+cGFyc2VGbG9hdCh2YSkpe3VhPVN0cmluZyh4YSk7YnJlYWsgYX19dWE9dmF9dmFyIHlhPXt9O1xuZnVuY3Rpb24gemEoYSl7aWYoIXlhW2FdKXtmb3IodmFyIGI9MCxjPWZhKFN0cmluZyh1YSkpLnNwbGl0KFwiLlwiKSxkPWZhKFN0cmluZyhhKSkuc3BsaXQoXCIuXCIpLGU9TWF0aC5tYXgoYy5sZW5ndGgsZC5sZW5ndGgpLGY9MDswPT1iJiZmPGU7ZisrKXt2YXIgZz1jW2ZdfHxcIlwiLGg9ZFtmXXx8XCJcIixwPS8oXFxkKikoXFxEKikvZyx5PS8oXFxkKikoXFxEKikvZztkb3t2YXIgRD1wLmV4ZWMoZyl8fFtcIlwiLFwiXCIsXCJcIl0sWD15LmV4ZWMoaCl8fFtcIlwiLFwiXCIsXCJcIl07aWYoMD09RFswXS5sZW5ndGgmJjA9PVhbMF0ubGVuZ3RoKWJyZWFrO2I9Z2EoMD09RFsxXS5sZW5ndGg/MDpwYXJzZUludChEWzFdLDEwKSwwPT1YWzFdLmxlbmd0aD8wOnBhcnNlSW50KFhbMV0sMTApKXx8Z2EoMD09RFsyXS5sZW5ndGgsMD09WFsyXS5sZW5ndGgpfHxnYShEWzJdLFhbMl0pfXdoaWxlKDA9PWIpfXlhW2FdPTA8PWJ9fVxudmFyIEFhPWsuZG9jdW1lbnQsQmE9QWEmJnY/dGEoKXx8KFwiQ1NTMUNvbXBhdFwiPT1BYS5jb21wYXRNb2RlP3BhcnNlSW50KHVhLDEwKTo1KTp2b2lkIDA7dmFyIHc9diYmISg5PD1OdW1iZXIoQmEpKSxDYT12JiYhKDg8PU51bWJlcihCYSkpO2Z1bmN0aW9uIHgoYSxiLGMsZCl7dGhpcy5hPWE7dGhpcy5ub2RlTmFtZT1jO3RoaXMubm9kZVZhbHVlPWQ7dGhpcy5ub2RlVHlwZT0yO3RoaXMucGFyZW50Tm9kZT10aGlzLm93bmVyRWxlbWVudD1ifWZ1bmN0aW9uIERhKGEsYil7dmFyIGM9Q2EmJlwiaHJlZlwiPT1iLm5vZGVOYW1lP2EuZ2V0QXR0cmlidXRlKGIubm9kZU5hbWUsMik6Yi5ub2RlVmFsdWU7cmV0dXJuIG5ldyB4KGIsYSxiLm5vZGVOYW1lLGMpfTtmdW5jdGlvbiB6KGEpe3ZhciBiPW51bGwsYz1hLm5vZGVUeXBlOzE9PWMmJihiPWEudGV4dENvbnRlbnQsYj12b2lkIDA9PWJ8fG51bGw9PWI/YS5pbm5lclRleHQ6YixiPXZvaWQgMD09Ynx8bnVsbD09Yj9cIlwiOmIpO2lmKFwic3RyaW5nXCIhPXR5cGVvZiBiKWlmKHcmJlwidGl0bGVcIj09YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpJiYxPT1jKWI9YS50ZXh0O2Vsc2UgaWYoOT09Y3x8MT09Yyl7YT05PT1jP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDtmb3IodmFyIGM9MCxkPVtdLGI9XCJcIjthOyl7ZG8gMSE9YS5ub2RlVHlwZSYmKGIrPWEubm9kZVZhbHVlKSx3JiZcInRpdGxlXCI9PWEubm9kZU5hbWUudG9Mb3dlckNhc2UoKSYmKGIrPWEudGV4dCksZFtjKytdPWE7d2hpbGUoYT1hLmZpcnN0Q2hpbGQpO2Zvcig7YyYmIShhPWRbLS1jXS5uZXh0U2libGluZyk7KTt9fWVsc2UgYj1hLm5vZGVWYWx1ZTtyZXR1cm5cIlwiK2J9XG5mdW5jdGlvbiBBKGEsYixjKXtpZihudWxsPT09YilyZXR1cm4hMDt0cnl7aWYoIWEuZ2V0QXR0cmlidXRlKXJldHVybiExfWNhdGNoKGQpe3JldHVybiExfUNhJiZcImNsYXNzXCI9PWImJihiPVwiY2xhc3NOYW1lXCIpO3JldHVybiBudWxsPT1jPyEhYS5nZXRBdHRyaWJ1dGUoYik6YS5nZXRBdHRyaWJ1dGUoYiwyKT09Y31mdW5jdGlvbiBCKGEsYixjLGQsZSl7cmV0dXJuKHc/RWE6RmEpLmNhbGwobnVsbCxhLGIsbChjKT9jOm51bGwsbChkKT9kOm51bGwsZXx8bmV3IEMpfVxuZnVuY3Rpb24gRWEoYSxiLGMsZCxlKXtpZihhIGluc3RhbmNlb2YgRXx8OD09YS5ifHxjJiZudWxsPT09YS5iKXt2YXIgZj1iLmFsbDtpZighZilyZXR1cm4gZTthPUdhKGEpO2lmKFwiKlwiIT1hJiYoZj1iLmdldEVsZW1lbnRzQnlUYWdOYW1lKGEpLCFmKSlyZXR1cm4gZTtpZihjKXtmb3IodmFyIGc9W10saD0wO2I9ZltoKytdOylBKGIsYyxkKSYmZy5wdXNoKGIpO2Y9Z31mb3IoaD0wO2I9ZltoKytdOylcIipcIj09YSYmXCIhXCI9PWIudGFnTmFtZXx8RihlLGIpO3JldHVybiBlfUhhKGEsYixjLGQsZSk7cmV0dXJuIGV9XG5mdW5jdGlvbiBGYShhLGIsYyxkLGUpe2IuZ2V0RWxlbWVudHNCeU5hbWUmJmQmJlwibmFtZVwiPT1jJiYhdj8oYj1iLmdldEVsZW1lbnRzQnlOYW1lKGQpLHIoYixmdW5jdGlvbihiKXthLmEoYikmJkYoZSxiKX0pKTpiLmdldEVsZW1lbnRzQnlDbGFzc05hbWUmJmQmJlwiY2xhc3NcIj09Yz8oYj1iLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoZCkscihiLGZ1bmN0aW9uKGIpe2IuY2xhc3NOYW1lPT1kJiZhLmEoYikmJkYoZSxiKX0pKTphIGluc3RhbmNlb2YgRz9IYShhLGIsYyxkLGUpOmIuZ2V0RWxlbWVudHNCeVRhZ05hbWUmJihiPWIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoYS5mKCkpLHIoYixmdW5jdGlvbihhKXtBKGEsYyxkKSYmRihlLGEpfSkpO3JldHVybiBlfVxuZnVuY3Rpb24gSWEoYSxiLGMsZCxlKXt2YXIgZjtpZigoYSBpbnN0YW5jZW9mIEV8fDg9PWEuYnx8YyYmbnVsbD09PWEuYikmJihmPWIuY2hpbGROb2Rlcykpe3ZhciBnPUdhKGEpO2lmKFwiKlwiIT1nJiYoZj1pYShmLGZ1bmN0aW9uKGEpe3JldHVybiBhLnRhZ05hbWUmJmEudGFnTmFtZS50b0xvd2VyQ2FzZSgpPT1nfSksIWYpKXJldHVybiBlO2MmJihmPWlhKGYsZnVuY3Rpb24oYSl7cmV0dXJuIEEoYSxjLGQpfSkpO3IoZixmdW5jdGlvbihhKXtcIipcIj09ZyYmKFwiIVwiPT1hLnRhZ05hbWV8fFwiKlwiPT1nJiYxIT1hLm5vZGVUeXBlKXx8RihlLGEpfSk7cmV0dXJuIGV9cmV0dXJuIEphKGEsYixjLGQsZSl9ZnVuY3Rpb24gSmEoYSxiLGMsZCxlKXtmb3IoYj1iLmZpcnN0Q2hpbGQ7YjtiPWIubmV4dFNpYmxpbmcpQShiLGMsZCkmJmEuYShiKSYmRihlLGIpO3JldHVybiBlfVxuZnVuY3Rpb24gSGEoYSxiLGMsZCxlKXtmb3IoYj1iLmZpcnN0Q2hpbGQ7YjtiPWIubmV4dFNpYmxpbmcpQShiLGMsZCkmJmEuYShiKSYmRihlLGIpLEhhKGEsYixjLGQsZSl9ZnVuY3Rpb24gR2EoYSl7aWYoYSBpbnN0YW5jZW9mIEcpe2lmKDg9PWEuYilyZXR1cm5cIiFcIjtpZihudWxsPT09YS5iKXJldHVyblwiKlwifXJldHVybiBhLmYoKX07IXJhJiYhdnx8diYmOTw9TnVtYmVyKEJhKXx8cmEmJnphKFwiMS45LjFcIik7diYmemEoXCI5XCIpO2Z1bmN0aW9uIEthKGEsYil7aWYoIWF8fCFiKXJldHVybiExO2lmKGEuY29udGFpbnMmJjE9PWIubm9kZVR5cGUpcmV0dXJuIGE9PWJ8fGEuY29udGFpbnMoYik7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24pcmV0dXJuIGE9PWJ8fCEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpO2Zvcig7YiYmYSE9YjspYj1iLnBhcmVudE5vZGU7cmV0dXJuIGI9PWF9XG5mdW5jdGlvbiBMYShhLGIpe2lmKGE9PWIpcmV0dXJuIDA7aWYoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbilyZXR1cm4gYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYyPzE6LTE7aWYodiYmISg5PD1OdW1iZXIoQmEpKSl7aWYoOT09YS5ub2RlVHlwZSlyZXR1cm4tMTtpZig5PT1iLm5vZGVUeXBlKXJldHVybiAxfWlmKFwic291cmNlSW5kZXhcImluIGF8fGEucGFyZW50Tm9kZSYmXCJzb3VyY2VJbmRleFwiaW4gYS5wYXJlbnROb2RlKXt2YXIgYz0xPT1hLm5vZGVUeXBlLGQ9MT09Yi5ub2RlVHlwZTtpZihjJiZkKXJldHVybiBhLnNvdXJjZUluZGV4LWIuc291cmNlSW5kZXg7dmFyIGU9YS5wYXJlbnROb2RlLGY9Yi5wYXJlbnROb2RlO3JldHVybiBlPT1mP01hKGEsYik6IWMmJkthKGUsYik/LTEqTmEoYSxiKTohZCYmS2EoZixhKT9OYShiLGEpOihjP2Euc291cmNlSW5kZXg6ZS5zb3VyY2VJbmRleCktKGQ/Yi5zb3VyY2VJbmRleDpmLnNvdXJjZUluZGV4KX1kPTk9PWEubm9kZVR5cGU/XG5hOmEub3duZXJEb2N1bWVudHx8YS5kb2N1bWVudDtjPWQuY3JlYXRlUmFuZ2UoKTtjLnNlbGVjdE5vZGUoYSk7Yy5jb2xsYXBzZSghMCk7ZD1kLmNyZWF0ZVJhbmdlKCk7ZC5zZWxlY3ROb2RlKGIpO2QuY29sbGFwc2UoITApO3JldHVybiBjLmNvbXBhcmVCb3VuZGFyeVBvaW50cyhrLlJhbmdlLlNUQVJUX1RPX0VORCxkKX1mdW5jdGlvbiBOYShhLGIpe3ZhciBjPWEucGFyZW50Tm9kZTtpZihjPT1iKXJldHVybi0xO2Zvcih2YXIgZD1iO2QucGFyZW50Tm9kZSE9YzspZD1kLnBhcmVudE5vZGU7cmV0dXJuIE1hKGQsYSl9ZnVuY3Rpb24gTWEoYSxiKXtmb3IodmFyIGM9YjtjPWMucHJldmlvdXNTaWJsaW5nOylpZihjPT1hKXJldHVybi0xO3JldHVybiAxfTtmdW5jdGlvbiBDKCl7dGhpcy5iPXRoaXMuYT1udWxsO3RoaXMubD0wfWZ1bmN0aW9uIE9hKGEpe3RoaXMubm9kZT1hO3RoaXMuYT10aGlzLmI9bnVsbH1mdW5jdGlvbiBQYShhLGIpe2lmKCFhLmEpcmV0dXJuIGI7aWYoIWIuYSlyZXR1cm4gYTtmb3IodmFyIGM9YS5hLGQ9Yi5hLGU9bnVsbCxmPW51bGwsZz0wO2MmJmQ7KXt2YXIgZj1jLm5vZGUsaD1kLm5vZGU7Zj09aHx8ZiBpbnN0YW5jZW9mIHgmJmggaW5zdGFuY2VvZiB4JiZmLmE9PWguYT8oZj1jLGM9Yy5hLGQ9ZC5hKTowPExhKGMubm9kZSxkLm5vZGUpPyhmPWQsZD1kLmEpOihmPWMsYz1jLmEpOyhmLmI9ZSk/ZS5hPWY6YS5hPWY7ZT1mO2crK31mb3IoZj1jfHxkO2Y7KWYuYj1lLGU9ZS5hPWYsZysrLGY9Zi5hO2EuYj1lO2EubD1nO3JldHVybiBhfWZ1bmN0aW9uIFFhKGEsYil7dmFyIGM9bmV3IE9hKGIpO2MuYT1hLmE7YS5iP2EuYS5iPWM6YS5hPWEuYj1jO2EuYT1jO2EubCsrfVxuZnVuY3Rpb24gRihhLGIpe3ZhciBjPW5ldyBPYShiKTtjLmI9YS5iO2EuYT9hLmIuYT1jOmEuYT1hLmI9YzthLmI9YzthLmwrK31mdW5jdGlvbiBSYShhKXtyZXR1cm4oYT1hLmEpP2Eubm9kZTpudWxsfWZ1bmN0aW9uIFNhKGEpe3JldHVybihhPVJhKGEpKT96KGEpOlwiXCJ9ZnVuY3Rpb24gSChhLGIpe3JldHVybiBuZXcgVGEoYSwhIWIpfWZ1bmN0aW9uIFRhKGEsYil7dGhpcy5mPWE7dGhpcy5iPSh0aGlzLmM9Yik/YS5iOmEuYTt0aGlzLmE9bnVsbH1mdW5jdGlvbiBJKGEpe3ZhciBiPWEuYjtpZihudWxsPT1iKXJldHVybiBudWxsO3ZhciBjPWEuYT1iO2EuYj1hLmM/Yi5iOmIuYTtyZXR1cm4gYy5ub2RlfTtmdW5jdGlvbiBuKGEpe3RoaXMuaT1hO3RoaXMuYj10aGlzLmc9ITE7dGhpcy5mPW51bGx9ZnVuY3Rpb24gSihhKXtyZXR1cm5cIlxcbiAgXCIrYS50b1N0cmluZygpLnNwbGl0KFwiXFxuXCIpLmpvaW4oXCJcXG4gIFwiKX1mdW5jdGlvbiBVYShhLGIpe2EuZz1ifWZ1bmN0aW9uIFZhKGEsYil7YS5iPWJ9ZnVuY3Rpb24gSyhhLGIpe3ZhciBjPWEuYShiKTtyZXR1cm4gYyBpbnN0YW5jZW9mIEM/K1NhKGMpOitjfWZ1bmN0aW9uIEwoYSxiKXt2YXIgYz1hLmEoYik7cmV0dXJuIGMgaW5zdGFuY2VvZiBDP1NhKGMpOlwiXCIrY31mdW5jdGlvbiBNKGEsYil7dmFyIGM9YS5hKGIpO3JldHVybiBjIGluc3RhbmNlb2YgQz8hIWMubDohIWN9O2Z1bmN0aW9uIE4oYSxiLGMpe24uY2FsbCh0aGlzLGEuaSk7dGhpcy5jPWE7dGhpcy5oPWI7dGhpcy5vPWM7dGhpcy5nPWIuZ3x8Yy5nO3RoaXMuYj1iLmJ8fGMuYjt0aGlzLmM9PVdhJiYoYy5ifHxjLmd8fDQ9PWMuaXx8MD09Yy5pfHwhYi5mP2IuYnx8Yi5nfHw0PT1iLml8fDA9PWIuaXx8IWMuZnx8KHRoaXMuZj17bmFtZTpjLmYubmFtZSxzOmJ9KTp0aGlzLmY9e25hbWU6Yi5mLm5hbWUsczpjfSl9bShOKTtcbmZ1bmN0aW9uIE8oYSxiLGMsZCxlKXtiPWIuYShkKTtjPWMuYShkKTt2YXIgZjtpZihiIGluc3RhbmNlb2YgQyYmYyBpbnN0YW5jZW9mIEMpe2I9SChiKTtmb3IoZD1JKGIpO2Q7ZD1JKGIpKWZvcihlPUgoYyksZj1JKGUpO2Y7Zj1JKGUpKWlmKGEoeihkKSx6KGYpKSlyZXR1cm4hMDtyZXR1cm4hMX1pZihiIGluc3RhbmNlb2YgQ3x8YyBpbnN0YW5jZW9mIEMpe2IgaW5zdGFuY2VvZiBDPyhlPWIsZD1jKTooZT1jLGQ9Yik7Zj1IKGUpO2Zvcih2YXIgZz10eXBlb2YgZCxoPUkoZik7aDtoPUkoZikpe3N3aXRjaChnKXtjYXNlIFwibnVtYmVyXCI6aD0reihoKTticmVhaztjYXNlIFwiYm9vbGVhblwiOmg9ISF6KGgpO2JyZWFrO2Nhc2UgXCJzdHJpbmdcIjpoPXooaCk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihcIklsbGVnYWwgcHJpbWl0aXZlIHR5cGUgZm9yIGNvbXBhcmlzb24uXCIpO31pZihlPT1iJiZhKGgsZCl8fGU9PWMmJmEoZCxoKSlyZXR1cm4hMH1yZXR1cm4hMX1yZXR1cm4gZT9cImJvb2xlYW5cIj09XG50eXBlb2YgYnx8XCJib29sZWFuXCI9PXR5cGVvZiBjP2EoISFiLCEhYyk6XCJudW1iZXJcIj09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PXR5cGVvZiBjP2EoK2IsK2MpOmEoYixjKTphKCtiLCtjKX1OLnByb3RvdHlwZS5hPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmMubSh0aGlzLmgsdGhpcy5vLGEpfTtOLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3ZhciBhPVwiQmluYXJ5IEV4cHJlc3Npb246IFwiK3RoaXMuYyxhPWErSih0aGlzLmgpO3JldHVybiBhKz1KKHRoaXMubyl9O2Z1bmN0aW9uIFhhKGEsYixjLGQpe3RoaXMuYT1hO3RoaXMudz1iO3RoaXMuaT1jO3RoaXMubT1kfVhhLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmF9O3ZhciBZYT17fTtcbmZ1bmN0aW9uIFAoYSxiLGMsZCl7aWYoWWEuaGFzT3duUHJvcGVydHkoYSkpdGhyb3cgRXJyb3IoXCJCaW5hcnkgb3BlcmF0b3IgYWxyZWFkeSBjcmVhdGVkOiBcIithKTthPW5ldyBYYShhLGIsYyxkKTtyZXR1cm4gWWFbYS50b1N0cmluZygpXT1hfVAoXCJkaXZcIiw2LDEsZnVuY3Rpb24oYSxiLGMpe3JldHVybiBLKGEsYykvSyhiLGMpfSk7UChcIm1vZFwiLDYsMSxmdW5jdGlvbihhLGIsYyl7cmV0dXJuIEsoYSxjKSVLKGIsYyl9KTtQKFwiKlwiLDYsMSxmdW5jdGlvbihhLGIsYyl7cmV0dXJuIEsoYSxjKSpLKGIsYyl9KTtQKFwiK1wiLDUsMSxmdW5jdGlvbihhLGIsYyl7cmV0dXJuIEsoYSxjKStLKGIsYyl9KTtQKFwiLVwiLDUsMSxmdW5jdGlvbihhLGIsYyl7cmV0dXJuIEsoYSxjKS1LKGIsYyl9KTtQKFwiPFwiLDQsMixmdW5jdGlvbihhLGIsYyl7cmV0dXJuIE8oZnVuY3Rpb24oYSxiKXtyZXR1cm4gYTxifSxhLGIsYyl9KTtcblAoXCI+XCIsNCwyLGZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gTyhmdW5jdGlvbihhLGIpe3JldHVybiBhPmJ9LGEsYixjKX0pO1AoXCI8PVwiLDQsMixmdW5jdGlvbihhLGIsYyl7cmV0dXJuIE8oZnVuY3Rpb24oYSxiKXtyZXR1cm4gYTw9Yn0sYSxiLGMpfSk7UChcIj49XCIsNCwyLGZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gTyhmdW5jdGlvbihhLGIpe3JldHVybiBhPj1ifSxhLGIsYyl9KTt2YXIgV2E9UChcIj1cIiwzLDIsZnVuY3Rpb24oYSxiLGMpe3JldHVybiBPKGZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9PWJ9LGEsYixjLCEwKX0pO1AoXCIhPVwiLDMsMixmdW5jdGlvbihhLGIsYyl7cmV0dXJuIE8oZnVuY3Rpb24oYSxiKXtyZXR1cm4gYSE9Yn0sYSxiLGMsITApfSk7UChcImFuZFwiLDIsMixmdW5jdGlvbihhLGIsYyl7cmV0dXJuIE0oYSxjKSYmTShiLGMpfSk7UChcIm9yXCIsMSwyLGZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gTShhLGMpfHxNKGIsYyl9KTtmdW5jdGlvbiBRKGEsYixjKXt0aGlzLmE9YTt0aGlzLmI9Ynx8MTt0aGlzLmY9Y3x8MX07ZnVuY3Rpb24gWmEoYSxiKXtpZihiLmEubGVuZ3RoJiY0IT1hLmkpdGhyb3cgRXJyb3IoXCJQcmltYXJ5IGV4cHJlc3Npb24gbXVzdCBldmFsdWF0ZSB0byBub2Rlc2V0IGlmIGZpbHRlciBoYXMgcHJlZGljYXRlKHMpLlwiKTtuLmNhbGwodGhpcyxhLmkpO3RoaXMuYz1hO3RoaXMuaD1iO3RoaXMuZz1hLmc7dGhpcy5iPWEuYn1tKFphKTtaYS5wcm90b3R5cGUuYT1mdW5jdGlvbihhKXthPXRoaXMuYy5hKGEpO3JldHVybiAkYSh0aGlzLmgsYSl9O1phLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3ZhciBhO2E9XCJGaWx0ZXI6XCIrSih0aGlzLmMpO3JldHVybiBhKz1KKHRoaXMuaCl9O2Z1bmN0aW9uIGFiKGEsYil7aWYoYi5sZW5ndGg8YS5BKXRocm93IEVycm9yKFwiRnVuY3Rpb24gXCIrYS5qK1wiIGV4cGVjdHMgYXQgbGVhc3RcIithLkErXCIgYXJndW1lbnRzLCBcIitiLmxlbmd0aCtcIiBnaXZlblwiKTtpZihudWxsIT09YS52JiZiLmxlbmd0aD5hLnYpdGhyb3cgRXJyb3IoXCJGdW5jdGlvbiBcIithLmorXCIgZXhwZWN0cyBhdCBtb3N0IFwiK2EuditcIiBhcmd1bWVudHMsIFwiK2IubGVuZ3RoK1wiIGdpdmVuXCIpO2EuQiYmcihiLGZ1bmN0aW9uKGIsZCl7aWYoNCE9Yi5pKXRocm93IEVycm9yKFwiQXJndW1lbnQgXCIrZCtcIiB0byBmdW5jdGlvbiBcIithLmorXCIgaXMgbm90IG9mIHR5cGUgTm9kZXNldDogXCIrYik7fSk7bi5jYWxsKHRoaXMsYS5pKTt0aGlzLmg9YTt0aGlzLmM9YjtVYSh0aGlzLGEuZ3x8amEoYixmdW5jdGlvbihhKXtyZXR1cm4gYS5nfSkpO1ZhKHRoaXMsYS5EJiYhYi5sZW5ndGh8fGEuQyYmISFiLmxlbmd0aHx8amEoYixmdW5jdGlvbihhKXtyZXR1cm4gYS5ifSkpfW0oYWIpO1xuYWIucHJvdG90eXBlLmE9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuaC5tLmFwcGx5KG51bGwsbGEoYSx0aGlzLmMpKX07YWIucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIGE9XCJGdW5jdGlvbjogXCIrdGhpcy5oO2lmKHRoaXMuYy5sZW5ndGgpdmFyIGI9dCh0aGlzLmMsZnVuY3Rpb24oYSxiKXtyZXR1cm4gYStKKGIpfSxcIkFyZ3VtZW50czpcIiksYT1hK0ooYik7cmV0dXJuIGF9O2Z1bmN0aW9uIGJiKGEsYixjLGQsZSxmLGcsaCxwKXt0aGlzLmo9YTt0aGlzLmk9Yjt0aGlzLmc9Yzt0aGlzLkQ9ZDt0aGlzLkM9ZTt0aGlzLm09Zjt0aGlzLkE9Zzt0aGlzLnY9dm9pZCAwIT09aD9oOmc7dGhpcy5CPSEhcH1iYi5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5qfTt2YXIgY2I9e307XG5mdW5jdGlvbiBSKGEsYixjLGQsZSxmLGcsaCl7aWYoY2IuaGFzT3duUHJvcGVydHkoYSkpdGhyb3cgRXJyb3IoXCJGdW5jdGlvbiBhbHJlYWR5IGNyZWF0ZWQ6IFwiK2ErXCIuXCIpO2NiW2FdPW5ldyBiYihhLGIsYyxkLCExLGUsZixnLGgpfVIoXCJib29sZWFuXCIsMiwhMSwhMSxmdW5jdGlvbihhLGIpe3JldHVybiBNKGIsYSl9LDEpO1IoXCJjZWlsaW5nXCIsMSwhMSwhMSxmdW5jdGlvbihhLGIpe3JldHVybiBNYXRoLmNlaWwoSyhiLGEpKX0sMSk7UihcImNvbmNhdFwiLDMsITEsITEsZnVuY3Rpb24oYSxiKXtyZXR1cm4gdChtYShhcmd1bWVudHMsMSksZnVuY3Rpb24oYixkKXtyZXR1cm4gYitMKGQsYSl9LFwiXCIpfSwyLG51bGwpO1IoXCJjb250YWluc1wiLDIsITEsITEsZnVuY3Rpb24oYSxiLGMpe3JldHVybiBxKEwoYixhKSxMKGMsYSkpfSwyKTtSKFwiY291bnRcIiwxLCExLCExLGZ1bmN0aW9uKGEsYil7cmV0dXJuIGIuYShhKS5sfSwxLDEsITApO1xuUihcImZhbHNlXCIsMiwhMSwhMSxmdW5jdGlvbigpe3JldHVybiExfSwwKTtSKFwiZmxvb3JcIiwxLCExLCExLGZ1bmN0aW9uKGEsYil7cmV0dXJuIE1hdGguZmxvb3IoSyhiLGEpKX0sMSk7UihcImlkXCIsNCwhMSwhMSxmdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGMoYSl7aWYodyl7dmFyIGI9ZS5hbGxbYV07aWYoYil7aWYoYi5ub2RlVHlwZSYmYT09Yi5pZClyZXR1cm4gYjtpZihiLmxlbmd0aClyZXR1cm4ga2EoYixmdW5jdGlvbihiKXtyZXR1cm4gYT09Yi5pZH0pfXJldHVybiBudWxsfXJldHVybiBlLmdldEVsZW1lbnRCeUlkKGEpfXZhciBkPWEuYSxlPTk9PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQsZD1MKGIsYSkuc3BsaXQoL1xccysvKSxmPVtdO3IoZCxmdW5jdGlvbihhKXthPWMoYSk7IWF8fDA8PWhhKGYsYSl8fGYucHVzaChhKX0pO2Yuc29ydChMYSk7dmFyIGc9bmV3IEM7cihmLGZ1bmN0aW9uKGEpe0YoZyxhKX0pO3JldHVybiBnfSwxKTtcblIoXCJsYW5nXCIsMiwhMSwhMSxmdW5jdGlvbigpe3JldHVybiExfSwxKTtSKFwibGFzdFwiLDEsITAsITEsZnVuY3Rpb24oYSl7aWYoMSE9YXJndW1lbnRzLmxlbmd0aCl0aHJvdyBFcnJvcihcIkZ1bmN0aW9uIGxhc3QgZXhwZWN0cyAoKVwiKTtyZXR1cm4gYS5mfSwwKTtSKFwibG9jYWwtbmFtZVwiLDMsITEsITAsZnVuY3Rpb24oYSxiKXt2YXIgYz1iP1JhKGIuYShhKSk6YS5hO3JldHVybiBjP2MubG9jYWxOYW1lfHxjLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk6XCJcIn0sMCwxLCEwKTtSKFwibmFtZVwiLDMsITEsITAsZnVuY3Rpb24oYSxiKXt2YXIgYz1iP1JhKGIuYShhKSk6YS5hO3JldHVybiBjP2Mubm9kZU5hbWUudG9Mb3dlckNhc2UoKTpcIlwifSwwLDEsITApO1IoXCJuYW1lc3BhY2UtdXJpXCIsMywhMCwhMSxmdW5jdGlvbigpe3JldHVyblwiXCJ9LDAsMSwhMCk7XG5SKFwibm9ybWFsaXplLXNwYWNlXCIsMywhMSwhMCxmdW5jdGlvbihhLGIpe3JldHVybihiP0woYixhKTp6KGEuYSkpLnJlcGxhY2UoL1tcXHNcXHhhMF0rL2csXCIgXCIpLnJlcGxhY2UoL15cXHMrfFxccyskL2csXCJcIil9LDAsMSk7UihcIm5vdFwiLDIsITEsITEsZnVuY3Rpb24oYSxiKXtyZXR1cm4hTShiLGEpfSwxKTtSKFwibnVtYmVyXCIsMSwhMSwhMCxmdW5jdGlvbihhLGIpe3JldHVybiBiP0soYixhKToreihhLmEpfSwwLDEpO1IoXCJwb3NpdGlvblwiLDEsITAsITEsZnVuY3Rpb24oYSl7cmV0dXJuIGEuYn0sMCk7UihcInJvdW5kXCIsMSwhMSwhMSxmdW5jdGlvbihhLGIpe3JldHVybiBNYXRoLnJvdW5kKEsoYixhKSl9LDEpO1IoXCJzdGFydHMtd2l0aFwiLDIsITEsITEsZnVuY3Rpb24oYSxiLGMpe2I9TChiLGEpO2E9TChjLGEpO3JldHVybiAwPT1iLmxhc3RJbmRleE9mKGEsMCl9LDIpO1IoXCJzdHJpbmdcIiwzLCExLCEwLGZ1bmN0aW9uKGEsYil7cmV0dXJuIGI/TChiLGEpOnooYS5hKX0sMCwxKTtcblIoXCJzdHJpbmctbGVuZ3RoXCIsMSwhMSwhMCxmdW5jdGlvbihhLGIpe3JldHVybihiP0woYixhKTp6KGEuYSkpLmxlbmd0aH0sMCwxKTtSKFwic3Vic3RyaW5nXCIsMywhMSwhMSxmdW5jdGlvbihhLGIsYyxkKXtjPUsoYyxhKTtpZihpc05hTihjKXx8SW5maW5pdHk9PWN8fC1JbmZpbml0eT09YylyZXR1cm5cIlwiO2Q9ZD9LKGQsYSk6SW5maW5pdHk7aWYoaXNOYU4oZCl8fC1JbmZpbml0eT09PWQpcmV0dXJuXCJcIjtjPU1hdGgucm91bmQoYyktMTt2YXIgZT1NYXRoLm1heChjLDApO2E9TChiLGEpO3JldHVybiBJbmZpbml0eT09ZD9hLnN1YnN0cmluZyhlKTphLnN1YnN0cmluZyhlLGMrTWF0aC5yb3VuZChkKSl9LDIsMyk7UihcInN1YnN0cmluZy1hZnRlclwiLDMsITEsITEsZnVuY3Rpb24oYSxiLGMpe2I9TChiLGEpO2E9TChjLGEpO2M9Yi5pbmRleE9mKGEpO3JldHVybi0xPT1jP1wiXCI6Yi5zdWJzdHJpbmcoYythLmxlbmd0aCl9LDIpO1xuUihcInN1YnN0cmluZy1iZWZvcmVcIiwzLCExLCExLGZ1bmN0aW9uKGEsYixjKXtiPUwoYixhKTthPUwoYyxhKTthPWIuaW5kZXhPZihhKTtyZXR1cm4tMT09YT9cIlwiOmIuc3Vic3RyaW5nKDAsYSl9LDIpO1IoXCJzdW1cIiwxLCExLCExLGZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPUgoYi5hKGEpKSxkPTAsZT1JKGMpO2U7ZT1JKGMpKWQrPSt6KGUpO3JldHVybiBkfSwxLDEsITApO1IoXCJ0cmFuc2xhdGVcIiwzLCExLCExLGZ1bmN0aW9uKGEsYixjLGQpe2I9TChiLGEpO2M9TChjLGEpO3ZhciBlPUwoZCxhKTthPXt9O2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBmPWMuY2hhckF0KGQpO2YgaW4gYXx8KGFbZl09ZS5jaGFyQXQoZCkpfWM9XCJcIjtmb3IoZD0wO2Q8Yi5sZW5ndGg7ZCsrKWY9Yi5jaGFyQXQoZCksYys9ZiBpbiBhP2FbZl06ZjtyZXR1cm4gY30sMyk7UihcInRydWVcIiwyLCExLCExLGZ1bmN0aW9uKCl7cmV0dXJuITB9LDApO2Z1bmN0aW9uIEcoYSxiKXt0aGlzLmg9YTt0aGlzLmM9dm9pZCAwIT09Yj9iOm51bGw7dGhpcy5iPW51bGw7c3dpdGNoKGEpe2Nhc2UgXCJjb21tZW50XCI6dGhpcy5iPTg7YnJlYWs7Y2FzZSBcInRleHRcIjp0aGlzLmI9MzticmVhaztjYXNlIFwicHJvY2Vzc2luZy1pbnN0cnVjdGlvblwiOnRoaXMuYj03O2JyZWFrO2Nhc2UgXCJub2RlXCI6YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihcIlVuZXhwZWN0ZWQgYXJndW1lbnRcIik7fX1mdW5jdGlvbiBkYihhKXtyZXR1cm5cImNvbW1lbnRcIj09YXx8XCJ0ZXh0XCI9PWF8fFwicHJvY2Vzc2luZy1pbnN0cnVjdGlvblwiPT1hfHxcIm5vZGVcIj09YX1HLnByb3RvdHlwZS5hPWZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT09dGhpcy5ifHx0aGlzLmI9PWEubm9kZVR5cGV9O0cucHJvdG90eXBlLmY9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ofTtcbkcucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIGE9XCJLaW5kIFRlc3Q6IFwiK3RoaXMuaDtudWxsPT09dGhpcy5jfHwoYSs9Sih0aGlzLmMpKTtyZXR1cm4gYX07ZnVuY3Rpb24gZWIoYSl7dGhpcy5iPWE7dGhpcy5hPTB9ZnVuY3Rpb24gZmIoYSl7YT1hLm1hdGNoKGdiKTtmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyloYi50ZXN0KGFbYl0pJiZhLnNwbGljZShiLDEpO3JldHVybiBuZXcgZWIoYSl9dmFyIGdiPS9cXCQ/KD86KD8hWzAtOS1cXC5dKSg/OlxcKnxbXFx3LVxcLl0rKTopPyg/IVswLTktXFwuXSkoPzpcXCp8W1xcdy1cXC5dKyl8XFwvXFwvfFxcLlxcLnw6OnxcXGQrKD86XFwuXFxkKik/fFxcLlxcZCt8XCJbXlwiXSpcInwnW14nXSonfFshPD5dPXxcXHMrfC4vZyxoYj0vXlxccy87ZnVuY3Rpb24gUyhhLGIpe3JldHVybiBhLmJbYS5hKyhifHwwKV19ZnVuY3Rpb24gVChhKXtyZXR1cm4gYS5iW2EuYSsrXX1mdW5jdGlvbiBpYihhKXtyZXR1cm4gYS5iLmxlbmd0aDw9YS5hfTtmdW5jdGlvbiBqYihhKXtuLmNhbGwodGhpcywzKTt0aGlzLmM9YS5zdWJzdHJpbmcoMSxhLmxlbmd0aC0xKX1tKGpiKTtqYi5wcm90b3R5cGUuYT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmN9O2piLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVyblwiTGl0ZXJhbDogXCIrdGhpcy5jfTtmdW5jdGlvbiBFKGEsYil7dGhpcy5qPWEudG9Mb3dlckNhc2UoKTt2YXIgYztjPVwiKlwiPT10aGlzLmo/XCIqXCI6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI7dGhpcy5jPWI/Yi50b0xvd2VyQ2FzZSgpOmN9RS5wcm90b3R5cGUuYT1mdW5jdGlvbihhKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDEhPWImJjIhPWIpcmV0dXJuITE7Yj12b2lkIDAhPT1hLmxvY2FsTmFtZT9hLmxvY2FsTmFtZTphLm5vZGVOYW1lO3JldHVyblwiKlwiIT10aGlzLmomJnRoaXMuaiE9Yi50b0xvd2VyQ2FzZSgpPyExOlwiKlwiPT10aGlzLmM/ITA6dGhpcy5jPT0oYS5uYW1lc3BhY2VVUkk/YS5uYW1lc3BhY2VVUkkudG9Mb3dlckNhc2UoKTpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIil9O0UucHJvdG90eXBlLmY9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5qfTtcbkUucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuXCJOYW1lIFRlc3Q6IFwiKyhcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09dGhpcy5jP1wiXCI6dGhpcy5jK1wiOlwiKSt0aGlzLmp9O2Z1bmN0aW9uIGtiKGEsYil7bi5jYWxsKHRoaXMsYS5pKTt0aGlzLmg9YTt0aGlzLmM9Yjt0aGlzLmc9YS5nO3RoaXMuYj1hLmI7aWYoMT09dGhpcy5jLmxlbmd0aCl7dmFyIGM9dGhpcy5jWzBdO2MudXx8Yy5jIT1sYnx8KGM9Yy5vLFwiKlwiIT1jLmYoKSYmKHRoaXMuZj17bmFtZTpjLmYoKSxzOm51bGx9KSl9fW0oa2IpO2Z1bmN0aW9uIG1iKCl7bi5jYWxsKHRoaXMsNCl9bShtYik7bWIucHJvdG90eXBlLmE9ZnVuY3Rpb24oYSl7dmFyIGI9bmV3IEM7YT1hLmE7OT09YS5ub2RlVHlwZT9GKGIsYSk6RihiLGEub3duZXJEb2N1bWVudCk7cmV0dXJuIGJ9O21iLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVyblwiUm9vdCBIZWxwZXIgRXhwcmVzc2lvblwifTtmdW5jdGlvbiBuYigpe24uY2FsbCh0aGlzLDQpfW0obmIpO25iLnByb3RvdHlwZS5hPWZ1bmN0aW9uKGEpe3ZhciBiPW5ldyBDO0YoYixhLmEpO3JldHVybiBifTtuYi5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm5cIkNvbnRleHQgSGVscGVyIEV4cHJlc3Npb25cIn07XG5mdW5jdGlvbiBvYihhKXtyZXR1cm5cIi9cIj09YXx8XCIvL1wiPT1hfWtiLnByb3RvdHlwZS5hPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuaC5hKGEpO2lmKCEoYiBpbnN0YW5jZW9mIEMpKXRocm93IEVycm9yKFwiRmlsdGVyIGV4cHJlc3Npb24gbXVzdCBldmFsdWF0ZSB0byBub2Rlc2V0LlwiKTthPXRoaXMuYztmb3IodmFyIGM9MCxkPWEubGVuZ3RoO2M8ZCYmYi5sO2MrKyl7dmFyIGU9YVtjXSxmPUgoYixlLmMuYSksZztpZihlLmd8fGUuYyE9cGIpaWYoZS5nfHxlLmMhPXFiKWZvcihnPUkoZiksYj1lLmEobmV3IFEoZykpO251bGwhPShnPUkoZikpOylnPWUuYShuZXcgUShnKSksYj1QYShiLGcpO2Vsc2UgZz1JKGYpLGI9ZS5hKG5ldyBRKGcpKTtlbHNle2ZvcihnPUkoZik7KGI9SShmKSkmJighZy5jb250YWluc3x8Zy5jb250YWlucyhiKSkmJmIuY29tcGFyZURvY3VtZW50UG9zaXRpb24oZykmODtnPWIpO2I9ZS5hKG5ldyBRKGcpKX19cmV0dXJuIGJ9O1xua2IucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIGE7YT1cIlBhdGggRXhwcmVzc2lvbjpcIitKKHRoaXMuaCk7aWYodGhpcy5jLmxlbmd0aCl7dmFyIGI9dCh0aGlzLmMsZnVuY3Rpb24oYSxiKXtyZXR1cm4gYStKKGIpfSxcIlN0ZXBzOlwiKTthKz1KKGIpfXJldHVybiBhfTtmdW5jdGlvbiByYihhKXtuLmNhbGwodGhpcyw0KTt0aGlzLmM9YTtVYSh0aGlzLGphKHRoaXMuYyxmdW5jdGlvbihhKXtyZXR1cm4gYS5nfSkpO1ZhKHRoaXMsamEodGhpcy5jLGZ1bmN0aW9uKGEpe3JldHVybiBhLmJ9KSl9bShyYik7cmIucHJvdG90eXBlLmE9ZnVuY3Rpb24oYSl7dmFyIGI9bmV3IEM7cih0aGlzLmMsZnVuY3Rpb24oYyl7Yz1jLmEoYSk7aWYoIShjIGluc3RhbmNlb2YgQykpdGhyb3cgRXJyb3IoXCJQYXRoIGV4cHJlc3Npb24gbXVzdCBldmFsdWF0ZSB0byBOb2RlU2V0LlwiKTtiPVBhKGIsYyl9KTtyZXR1cm4gYn07cmIucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHQodGhpcy5jLGZ1bmN0aW9uKGEsYil7cmV0dXJuIGErSihiKX0sXCJVbmlvbiBFeHByZXNzaW9uOlwiKX07ZnVuY3Rpb24gc2IoYSxiKXt0aGlzLmE9YTt0aGlzLmI9ISFifVxuZnVuY3Rpb24gJGEoYSxiLGMpe2ZvcihjPWN8fDA7YzxhLmEubGVuZ3RoO2MrKylmb3IodmFyIGQ9YS5hW2NdLGU9SChiKSxmPWIubCxnLGg9MDtnPUkoZSk7aCsrKXt2YXIgcD1hLmI/Zi1oOmgrMTtnPWQuYShuZXcgUShnLHAsZikpO2lmKFwibnVtYmVyXCI9PXR5cGVvZiBnKXA9cD09ZztlbHNlIGlmKFwic3RyaW5nXCI9PXR5cGVvZiBnfHxcImJvb2xlYW5cIj09dHlwZW9mIGcpcD0hIWc7ZWxzZSBpZihnIGluc3RhbmNlb2YgQylwPTA8Zy5sO2Vsc2UgdGhyb3cgRXJyb3IoXCJQcmVkaWNhdGUuZXZhbHVhdGUgcmV0dXJuZWQgYW4gdW5leHBlY3RlZCB0eXBlLlwiKTtpZighcCl7cD1lO2c9cC5mO3ZhciB5PXAuYTtpZigheSl0aHJvdyBFcnJvcihcIk5leHQgbXVzdCBiZSBjYWxsZWQgYXQgbGVhc3Qgb25jZSBiZWZvcmUgcmVtb3ZlLlwiKTt2YXIgRD15LmIseT15LmE7RD9ELmE9eTpnLmE9eTt5P3kuYj1EOmcuYj1EO2cubC0tO3AuYT1udWxsfX1yZXR1cm4gYn1cbnNiLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0KHRoaXMuYSxmdW5jdGlvbihhLGIpe3JldHVybiBhK0ooYil9LFwiUHJlZGljYXRlczpcIil9O2Z1bmN0aW9uIFUoYSxiLGMsZCl7bi5jYWxsKHRoaXMsNCk7dGhpcy5jPWE7dGhpcy5vPWI7dGhpcy5oPWN8fG5ldyBzYihbXSk7dGhpcy51PSEhZDtiPXRoaXMuaDtiPTA8Yi5hLmxlbmd0aD9iLmFbMF0uZjpudWxsO2EuYiYmYiYmKGE9Yi5uYW1lLGE9dz9hLnRvTG93ZXJDYXNlKCk6YSx0aGlzLmY9e25hbWU6YSxzOmIuc30pO2E6e2E9dGhpcy5oO2ZvcihiPTA7YjxhLmEubGVuZ3RoO2IrKylpZihjPWEuYVtiXSxjLmd8fDE9PWMuaXx8MD09Yy5pKXthPSEwO2JyZWFrIGF9YT0hMX10aGlzLmc9YX1tKFUpO1xuVS5wcm90b3R5cGUuYT1mdW5jdGlvbihhKXt2YXIgYj1hLmEsYz1udWxsLGM9dGhpcy5mLGQ9bnVsbCxlPW51bGwsZj0wO2MmJihkPWMubmFtZSxlPWMucz9MKGMucyxhKTpudWxsLGY9MSk7aWYodGhpcy51KWlmKHRoaXMuZ3x8dGhpcy5jIT10YilpZihhPUgoKG5ldyBVKHViLG5ldyBHKFwibm9kZVwiKSkpLmEoYSkpLGI9SShhKSlmb3IoYz10aGlzLm0oYixkLGUsZik7bnVsbCE9KGI9SShhKSk7KWM9UGEoYyx0aGlzLm0oYixkLGUsZikpO2Vsc2UgYz1uZXcgQztlbHNlIGM9Qih0aGlzLm8sYixkLGUpLGM9JGEodGhpcy5oLGMsZik7ZWxzZSBjPXRoaXMubShhLmEsZCxlLGYpO3JldHVybiBjfTtVLnByb3RvdHlwZS5tPWZ1bmN0aW9uKGEsYixjLGQpe2E9dGhpcy5jLmYodGhpcy5vLGEsYixjKTtyZXR1cm4gYT0kYSh0aGlzLmgsYSxkKX07XG5VLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3ZhciBhO2E9XCJTdGVwOlwiK0ooXCJPcGVyYXRvcjogXCIrKHRoaXMudT9cIi8vXCI6XCIvXCIpKTt0aGlzLmMuaiYmKGErPUooXCJBeGlzOiBcIit0aGlzLmMpKTthKz1KKHRoaXMubyk7aWYodGhpcy5oLmEubGVuZ3RoKXt2YXIgYj10KHRoaXMuaC5hLGZ1bmN0aW9uKGEsYil7cmV0dXJuIGErSihiKX0sXCJQcmVkaWNhdGVzOlwiKTthKz1KKGIpfXJldHVybiBhfTtmdW5jdGlvbiB2YihhLGIsYyxkKXt0aGlzLmo9YTt0aGlzLmY9Yjt0aGlzLmE9Yzt0aGlzLmI9ZH12Yi5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5qfTt2YXIgd2I9e307ZnVuY3Rpb24gVihhLGIsYyxkKXtpZih3Yi5oYXNPd25Qcm9wZXJ0eShhKSl0aHJvdyBFcnJvcihcIkF4aXMgYWxyZWFkeSBjcmVhdGVkOiBcIithKTtiPW5ldyB2YihhLGIsYywhIWQpO3JldHVybiB3YlthXT1ifVxuVihcImFuY2VzdG9yXCIsZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9bmV3IEMsZD1iO2Q9ZC5wYXJlbnROb2RlOylhLmEoZCkmJlFhKGMsZCk7cmV0dXJuIGN9LCEwKTtWKFwiYW5jZXN0b3Itb3Itc2VsZlwiLGZ1bmN0aW9uKGEsYil7dmFyIGM9bmV3IEMsZD1iO2RvIGEuYShkKSYmUWEoYyxkKTt3aGlsZShkPWQucGFyZW50Tm9kZSk7cmV0dXJuIGN9LCEwKTtcbnZhciBsYj1WKFwiYXR0cmlidXRlXCIsZnVuY3Rpb24oYSxiKXt2YXIgYz1uZXcgQyxkPWEuZigpO2lmKFwic3R5bGVcIj09ZCYmdyYmYi5zdHlsZSlyZXR1cm4gRihjLG5ldyB4KGIuc3R5bGUsYixcInN0eWxlXCIsYi5zdHlsZS5jc3NUZXh0KSksYzt2YXIgZT1iLmF0dHJpYnV0ZXM7aWYoZSlpZihhIGluc3RhbmNlb2YgRyYmbnVsbD09PWEuYnx8XCIqXCI9PWQpZm9yKHZhciBkPTAsZjtmPWVbZF07ZCsrKXc/Zi5ub2RlVmFsdWUmJkYoYyxEYShiLGYpKTpGKGMsZik7ZWxzZShmPWUuZ2V0TmFtZWRJdGVtKGQpKSYmKHc/Zi5ub2RlVmFsdWUmJkYoYyxEYShiLGYpKTpGKGMsZikpO3JldHVybiBjfSwhMSksdGI9VihcImNoaWxkXCIsZnVuY3Rpb24oYSxiLGMsZCxlKXtyZXR1cm4odz9JYTpKYSkuY2FsbChudWxsLGEsYixsKGMpP2M6bnVsbCxsKGQpP2Q6bnVsbCxlfHxuZXcgQyl9LCExLCEwKTtWKFwiZGVzY2VuZGFudFwiLEIsITEsITApO1xudmFyIHViPVYoXCJkZXNjZW5kYW50LW9yLXNlbGZcIixmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1uZXcgQztBKGIsYyxkKSYmYS5hKGIpJiZGKGUsYik7cmV0dXJuIEIoYSxiLGMsZCxlKX0sITEsITApLHBiPVYoXCJmb2xsb3dpbmdcIixmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1uZXcgQztkbyBmb3IodmFyIGY9YjtmPWYubmV4dFNpYmxpbmc7KUEoZixjLGQpJiZhLmEoZikmJkYoZSxmKSxlPUIoYSxmLGMsZCxlKTt3aGlsZShiPWIucGFyZW50Tm9kZSk7cmV0dXJuIGV9LCExLCEwKTtWKFwiZm9sbG93aW5nLXNpYmxpbmdcIixmdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1uZXcgQyxkPWI7ZD1kLm5leHRTaWJsaW5nOylhLmEoZCkmJkYoYyxkKTtyZXR1cm4gY30sITEpO1YoXCJuYW1lc3BhY2VcIixmdW5jdGlvbigpe3JldHVybiBuZXcgQ30sITEpO1xudmFyIHhiPVYoXCJwYXJlbnRcIixmdW5jdGlvbihhLGIpe3ZhciBjPW5ldyBDO2lmKDk9PWIubm9kZVR5cGUpcmV0dXJuIGM7aWYoMj09Yi5ub2RlVHlwZSlyZXR1cm4gRihjLGIub3duZXJFbGVtZW50KSxjO3ZhciBkPWIucGFyZW50Tm9kZTthLmEoZCkmJkYoYyxkKTtyZXR1cm4gY30sITEpLHFiPVYoXCJwcmVjZWRpbmdcIixmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1uZXcgQyxmPVtdO2RvIGYudW5zaGlmdChiKTt3aGlsZShiPWIucGFyZW50Tm9kZSk7Zm9yKHZhciBnPTEsaD1mLmxlbmd0aDtnPGg7ZysrKXt2YXIgcD1bXTtmb3IoYj1mW2ddO2I9Yi5wcmV2aW91c1NpYmxpbmc7KXAudW5zaGlmdChiKTtmb3IodmFyIHk9MCxEPXAubGVuZ3RoO3k8RDt5KyspYj1wW3ldLEEoYixjLGQpJiZhLmEoYikmJkYoZSxiKSxlPUIoYSxiLGMsZCxlKX1yZXR1cm4gZX0sITAsITApO1xuVihcInByZWNlZGluZy1zaWJsaW5nXCIsZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9bmV3IEMsZD1iO2Q9ZC5wcmV2aW91c1NpYmxpbmc7KWEuYShkKSYmUWEoYyxkKTtyZXR1cm4gY30sITApO3ZhciB5Yj1WKFwic2VsZlwiLGZ1bmN0aW9uKGEsYil7dmFyIGM9bmV3IEM7YS5hKGIpJiZGKGMsYik7cmV0dXJuIGN9LCExKTtmdW5jdGlvbiB6YihhKXtuLmNhbGwodGhpcywxKTt0aGlzLmM9YTt0aGlzLmc9YS5nO3RoaXMuYj1hLmJ9bSh6Yik7emIucHJvdG90eXBlLmE9ZnVuY3Rpb24oYSl7cmV0dXJuLUsodGhpcy5jLGEpfTt6Yi5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm5cIlVuYXJ5IEV4cHJlc3Npb246IC1cIitKKHRoaXMuYyl9O2Z1bmN0aW9uIEFiKGEpe24uY2FsbCh0aGlzLDEpO3RoaXMuYz1hfW0oQWIpO0FiLnByb3RvdHlwZS5hPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY307QWIucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuXCJOdW1iZXI6IFwiK3RoaXMuY307ZnVuY3Rpb24gQmIoYSxiKXt0aGlzLmE9YTt0aGlzLmI9Yn1mdW5jdGlvbiBDYihhKXtmb3IodmFyIGIsYz1bXTs7KXtXKGEsXCJNaXNzaW5nIHJpZ2h0IGhhbmQgc2lkZSBvZiBiaW5hcnkgZXhwcmVzc2lvbi5cIik7Yj1EYihhKTt2YXIgZD1UKGEuYSk7aWYoIWQpYnJlYWs7dmFyIGU9KGQ9WWFbZF18fG51bGwpJiZkLnc7aWYoIWUpe2EuYS5hLS07YnJlYWt9Zm9yKDtjLmxlbmd0aCYmZTw9Y1tjLmxlbmd0aC0xXS53OyliPW5ldyBOKGMucG9wKCksYy5wb3AoKSxiKTtjLnB1c2goYixkKX1mb3IoO2MubGVuZ3RoOyliPW5ldyBOKGMucG9wKCksYy5wb3AoKSxiKTtyZXR1cm4gYn1mdW5jdGlvbiBXKGEsYil7aWYoaWIoYS5hKSl0aHJvdyBFcnJvcihiKTt9ZnVuY3Rpb24gRWIoYSxiKXt2YXIgYz1UKGEuYSk7aWYoYyE9Yil0aHJvdyBFcnJvcihcIkJhZCB0b2tlbiwgZXhwZWN0ZWQ6IFwiK2IrXCIgZ290OiBcIitjKTt9XG5mdW5jdGlvbiBGYihhKXthPVQoYS5hKTtpZihcIilcIiE9YSl0aHJvdyBFcnJvcihcIkJhZCB0b2tlbjogXCIrYSk7fWZ1bmN0aW9uIEdiKGEpe2E9VChhLmEpO2lmKDI+YS5sZW5ndGgpdGhyb3cgRXJyb3IoXCJVbmNsb3NlZCBsaXRlcmFsIHN0cmluZ1wiKTtyZXR1cm4gbmV3IGpiKGEpfVxuZnVuY3Rpb24gSGIoYSl7dmFyIGIsYz1bXSxkO2lmKG9iKFMoYS5hKSkpe2I9VChhLmEpO2Q9UyhhLmEpO2lmKFwiL1wiPT1iJiYoaWIoYS5hKXx8XCIuXCIhPWQmJlwiLi5cIiE9ZCYmXCJAXCIhPWQmJlwiKlwiIT1kJiYhLyg/IVswLTldKVtcXHddLy50ZXN0KGQpKSlyZXR1cm4gbmV3IG1iO2Q9bmV3IG1iO1coYSxcIk1pc3NpbmcgbmV4dCBsb2NhdGlvbiBzdGVwLlwiKTtiPUliKGEsYik7Yy5wdXNoKGIpfWVsc2V7YTp7Yj1TKGEuYSk7ZD1iLmNoYXJBdCgwKTtzd2l0Y2goZCl7Y2FzZSBcIiRcIjp0aHJvdyBFcnJvcihcIlZhcmlhYmxlIHJlZmVyZW5jZSBub3QgYWxsb3dlZCBpbiBIVE1MIFhQYXRoXCIpO2Nhc2UgXCIoXCI6VChhLmEpO2I9Q2IoYSk7VyhhLCd1bmNsb3NlZCBcIihcIicpO0ViKGEsXCIpXCIpO2JyZWFrO2Nhc2UgJ1wiJzpjYXNlIFwiJ1wiOmI9R2IoYSk7YnJlYWs7ZGVmYXVsdDppZihpc05hTigrYikpaWYoIWRiKGIpJiYvKD8hWzAtOV0pW1xcd10vLnRlc3QoZCkmJlwiKFwiPT1TKGEuYSwxKSl7Yj1UKGEuYSk7XG5iPWNiW2JdfHxudWxsO1QoYS5hKTtmb3IoZD1bXTtcIilcIiE9UyhhLmEpOyl7VyhhLFwiTWlzc2luZyBmdW5jdGlvbiBhcmd1bWVudCBsaXN0LlwiKTtkLnB1c2goQ2IoYSkpO2lmKFwiLFwiIT1TKGEuYSkpYnJlYWs7VChhLmEpfVcoYSxcIlVuY2xvc2VkIGZ1bmN0aW9uIGFyZ3VtZW50IGxpc3QuXCIpO0ZiKGEpO2I9bmV3IGFiKGIsZCl9ZWxzZXtiPW51bGw7YnJlYWsgYX1lbHNlIGI9bmV3IEFiKCtUKGEuYSkpfVwiW1wiPT1TKGEuYSkmJihkPW5ldyBzYihKYihhKSksYj1uZXcgWmEoYixkKSl9aWYoYilpZihvYihTKGEuYSkpKWQ9YjtlbHNlIHJldHVybiBiO2Vsc2UgYj1JYihhLFwiL1wiKSxkPW5ldyBuYixjLnB1c2goYil9Zm9yKDtvYihTKGEuYSkpOyliPVQoYS5hKSxXKGEsXCJNaXNzaW5nIG5leHQgbG9jYXRpb24gc3RlcC5cIiksYj1JYihhLGIpLGMucHVzaChiKTtyZXR1cm4gbmV3IGtiKGQsYyl9XG5mdW5jdGlvbiBJYihhLGIpe3ZhciBjLGQsZTtpZihcIi9cIiE9YiYmXCIvL1wiIT1iKXRocm93IEVycm9yKCdTdGVwIG9wIHNob3VsZCBiZSBcIi9cIiBvciBcIi8vXCInKTtpZihcIi5cIj09UyhhLmEpKXJldHVybiBkPW5ldyBVKHliLG5ldyBHKFwibm9kZVwiKSksVChhLmEpLGQ7aWYoXCIuLlwiPT1TKGEuYSkpcmV0dXJuIGQ9bmV3IFUoeGIsbmV3IEcoXCJub2RlXCIpKSxUKGEuYSksZDt2YXIgZjtpZihcIkBcIj09UyhhLmEpKWY9bGIsVChhLmEpLFcoYSxcIk1pc3NpbmcgYXR0cmlidXRlIG5hbWVcIik7ZWxzZSBpZihcIjo6XCI9PVMoYS5hLDEpKXtpZighLyg/IVswLTldKVtcXHddLy50ZXN0KFMoYS5hKS5jaGFyQXQoMCkpKXRocm93IEVycm9yKFwiQmFkIHRva2VuOiBcIitUKGEuYSkpO2M9VChhLmEpO2Y9d2JbY118fG51bGw7aWYoIWYpdGhyb3cgRXJyb3IoXCJObyBheGlzIHdpdGggbmFtZTogXCIrYyk7VChhLmEpO1coYSxcIk1pc3Npbmcgbm9kZSBuYW1lXCIpfWVsc2UgZj10YjtjPVMoYS5hKTtpZigvKD8hWzAtOV0pW1xcd1xcKl0vLnRlc3QoYy5jaGFyQXQoMCkpKWlmKFwiKFwiPT1cblMoYS5hLDEpKXtpZighZGIoYykpdGhyb3cgRXJyb3IoXCJJbnZhbGlkIG5vZGUgdHlwZTogXCIrYyk7Yz1UKGEuYSk7aWYoIWRiKGMpKXRocm93IEVycm9yKFwiSW52YWxpZCB0eXBlIG5hbWU6IFwiK2MpO0ViKGEsXCIoXCIpO1coYSxcIkJhZCBub2RldHlwZVwiKTtlPVMoYS5hKS5jaGFyQXQoMCk7dmFyIGc9bnVsbDtpZignXCInPT1lfHxcIidcIj09ZSlnPUdiKGEpO1coYSxcIkJhZCBub2RldHlwZVwiKTtGYihhKTtjPW5ldyBHKGMsZyl9ZWxzZSBpZihjPVQoYS5hKSxlPWMuaW5kZXhPZihcIjpcIiksLTE9PWUpYz1uZXcgRShjKTtlbHNle3ZhciBnPWMuc3Vic3RyaW5nKDAsZSksaDtpZihcIipcIj09ZyloPVwiKlwiO2Vsc2UgaWYoaD1hLmIoZyksIWgpdGhyb3cgRXJyb3IoXCJOYW1lc3BhY2UgcHJlZml4IG5vdCBkZWNsYXJlZDogXCIrZyk7Yz1jLnN1YnN0cihlKzEpO2M9bmV3IEUoYyxoKX1lbHNlIHRocm93IEVycm9yKFwiQmFkIHRva2VuOiBcIitUKGEuYSkpO2U9bmV3IHNiKEpiKGEpLGYuYSk7cmV0dXJuIGR8fFxubmV3IFUoZixjLGUsXCIvL1wiPT1iKX1mdW5jdGlvbiBKYihhKXtmb3IodmFyIGI9W107XCJbXCI9PVMoYS5hKTspe1QoYS5hKTtXKGEsXCJNaXNzaW5nIHByZWRpY2F0ZSBleHByZXNzaW9uLlwiKTt2YXIgYz1DYihhKTtiLnB1c2goYyk7VyhhLFwiVW5jbG9zZWQgcHJlZGljYXRlIGV4cHJlc3Npb24uXCIpO0ViKGEsXCJdXCIpfXJldHVybiBifWZ1bmN0aW9uIERiKGEpe2lmKFwiLVwiPT1TKGEuYSkpcmV0dXJuIFQoYS5hKSxuZXcgemIoRGIoYSkpO3ZhciBiPUhiKGEpO2lmKFwifFwiIT1TKGEuYSkpYT1iO2Vsc2V7Zm9yKGI9W2JdO1wifFwiPT1UKGEuYSk7KVcoYSxcIk1pc3NpbmcgbmV4dCB1bmlvbiBsb2NhdGlvbiBwYXRoLlwiKSxiLnB1c2goSGIoYSkpO2EuYS5hLS07YT1uZXcgcmIoYil9cmV0dXJuIGF9O2Z1bmN0aW9uIEtiKGEpe3N3aXRjaChhLm5vZGVUeXBlKXtjYXNlIDE6cmV0dXJuIGVhKExiLGEpO2Nhc2UgOTpyZXR1cm4gS2IoYS5kb2N1bWVudEVsZW1lbnQpO2Nhc2UgMTE6Y2FzZSAxMDpjYXNlIDY6Y2FzZSAxMjpyZXR1cm4gTWI7ZGVmYXVsdDpyZXR1cm4gYS5wYXJlbnROb2RlP0tiKGEucGFyZW50Tm9kZSk6TWJ9fWZ1bmN0aW9uIE1iKCl7cmV0dXJuIG51bGx9ZnVuY3Rpb24gTGIoYSxiKXtpZihhLnByZWZpeD09YilyZXR1cm4gYS5uYW1lc3BhY2VVUkl8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiO3ZhciBjPWEuZ2V0QXR0cmlidXRlTm9kZShcInhtbG5zOlwiK2IpO3JldHVybiBjJiZjLnNwZWNpZmllZD9jLnZhbHVlfHxudWxsOmEucGFyZW50Tm9kZSYmOSE9YS5wYXJlbnROb2RlLm5vZGVUeXBlP0xiKGEucGFyZW50Tm9kZSxiKTpudWxsfTtmdW5jdGlvbiBOYihhLGIpe2lmKCFhLmxlbmd0aCl0aHJvdyBFcnJvcihcIkVtcHR5IFhQYXRoIGV4cHJlc3Npb24uXCIpO3ZhciBjPWZiKGEpO2lmKGliKGMpKXRocm93IEVycm9yKFwiSW52YWxpZCBYUGF0aCBleHByZXNzaW9uLlwiKTtiP1wiZnVuY3Rpb25cIj09YWEoYil8fChiPWRhKGIubG9va3VwTmFtZXNwYWNlVVJJLGIpKTpiPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9O3ZhciBkPUNiKG5ldyBCYihjLGIpKTtpZighaWIoYykpdGhyb3cgRXJyb3IoXCJCYWQgdG9rZW46IFwiK1QoYykpO3RoaXMuZXZhbHVhdGU9ZnVuY3Rpb24oYSxiKXt2YXIgYz1kLmEobmV3IFEoYSkpO3JldHVybiBuZXcgWShjLGIpfX1cbmZ1bmN0aW9uIFkoYSxiKXtpZigwPT1iKWlmKGEgaW5zdGFuY2VvZiBDKWI9NDtlbHNlIGlmKFwic3RyaW5nXCI9PXR5cGVvZiBhKWI9MjtlbHNlIGlmKFwibnVtYmVyXCI9PXR5cGVvZiBhKWI9MTtlbHNlIGlmKFwiYm9vbGVhblwiPT10eXBlb2YgYSliPTM7ZWxzZSB0aHJvdyBFcnJvcihcIlVuZXhwZWN0ZWQgZXZhbHVhdGlvbiByZXN1bHQuXCIpO2lmKDIhPWImJjEhPWImJjMhPWImJiEoYSBpbnN0YW5jZW9mIEMpKXRocm93IEVycm9yKFwidmFsdWUgY291bGQgbm90IGJlIGNvbnZlcnRlZCB0byB0aGUgc3BlY2lmaWVkIHR5cGVcIik7dGhpcy5yZXN1bHRUeXBlPWI7dmFyIGM7c3dpdGNoKGIpe2Nhc2UgMjp0aGlzLnN0cmluZ1ZhbHVlPWEgaW5zdGFuY2VvZiBDP1NhKGEpOlwiXCIrYTticmVhaztjYXNlIDE6dGhpcy5udW1iZXJWYWx1ZT1hIGluc3RhbmNlb2YgQz8rU2EoYSk6K2E7YnJlYWs7Y2FzZSAzOnRoaXMuYm9vbGVhblZhbHVlPWEgaW5zdGFuY2VvZiBDPzA8YS5sOiEhYTticmVhaztjYXNlIDQ6Y2FzZSA1OmNhc2UgNjpjYXNlIDc6dmFyIGQ9XG5IKGEpO2M9W107Zm9yKHZhciBlPUkoZCk7ZTtlPUkoZCkpYy5wdXNoKGUgaW5zdGFuY2VvZiB4P2UuYTplKTt0aGlzLnNuYXBzaG90TGVuZ3RoPWEubDt0aGlzLmludmFsaWRJdGVyYXRvclN0YXRlPSExO2JyZWFrO2Nhc2UgODpjYXNlIDk6ZD1SYShhKTt0aGlzLnNpbmdsZU5vZGVWYWx1ZT1kIGluc3RhbmNlb2YgeD9kLmE6ZDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKFwiVW5rbm93biBYUGF0aFJlc3VsdCB0eXBlLlwiKTt9dmFyIGY9MDt0aGlzLml0ZXJhdGVOZXh0PWZ1bmN0aW9uKCl7aWYoNCE9YiYmNSE9Yil0aHJvdyBFcnJvcihcIml0ZXJhdGVOZXh0IGNhbGxlZCB3aXRoIHdyb25nIHJlc3VsdCB0eXBlXCIpO3JldHVybiBmPj1jLmxlbmd0aD9udWxsOmNbZisrXX07dGhpcy5zbmFwc2hvdEl0ZW09ZnVuY3Rpb24oYSl7aWYoNiE9YiYmNyE9Yil0aHJvdyBFcnJvcihcInNuYXBzaG90SXRlbSBjYWxsZWQgd2l0aCB3cm9uZyByZXN1bHQgdHlwZVwiKTtyZXR1cm4gYT49Yy5sZW5ndGh8fFxuMD5hP251bGw6Y1thXX19WS5BTllfVFlQRT0wO1kuTlVNQkVSX1RZUEU9MTtZLlNUUklOR19UWVBFPTI7WS5CT09MRUFOX1RZUEU9MztZLlVOT1JERVJFRF9OT0RFX0lURVJBVE9SX1RZUEU9NDtZLk9SREVSRURfTk9ERV9JVEVSQVRPUl9UWVBFPTU7WS5VTk9SREVSRURfTk9ERV9TTkFQU0hPVF9UWVBFPTY7WS5PUkRFUkVEX05PREVfU05BUFNIT1RfVFlQRT03O1kuQU5ZX1VOT1JERVJFRF9OT0RFX1RZUEU9ODtZLkZJUlNUX09SREVSRURfTk9ERV9UWVBFPTk7ZnVuY3Rpb24gT2IoYSl7dGhpcy5sb29rdXBOYW1lc3BhY2VVUkk9S2IoYSl9XG5mdW5jdGlvbiBQYihhLGIpe3ZhciBjPWF8fGssZD1jLkRvY3VtZW50JiZjLkRvY3VtZW50LnByb3RvdHlwZXx8Yy5kb2N1bWVudDtpZighZC5ldmFsdWF0ZXx8YiljLlhQYXRoUmVzdWx0PVksZC5ldmFsdWF0ZT1mdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4obmV3IE5iKGEsYykpLmV2YWx1YXRlKGIsZCl9LGQuY3JlYXRlRXhwcmVzc2lvbj1mdW5jdGlvbihhLGIpe3JldHVybiBuZXcgTmIoYSxiKX0sZC5jcmVhdGVOU1Jlc29sdmVyPWZ1bmN0aW9uKGEpe3JldHVybiBuZXcgT2IoYSl9fXZhciBRYj1bXCJ3Z3hwYXRoXCIsXCJpbnN0YWxsXCJdLFo9aztRYlswXWluIFp8fCFaLmV4ZWNTY3JpcHR8fFouZXhlY1NjcmlwdChcInZhciBcIitRYlswXSk7Zm9yKHZhciBSYjtRYi5sZW5ndGgmJihSYj1RYi5zaGlmdCgpKTspUWIubGVuZ3RofHx2b2lkIDA9PT1QYj9aW1JiXT9aPVpbUmJdOlo9WltSYl09e306WltSYl09UGI7bW9kdWxlLmV4cG9ydHMuaW5zdGFsbD1QYjttb2R1bGUuZXhwb3J0cy5YUGF0aFJlc3VsdFR5cGU9e0FOWV9UWVBFOjAsTlVNQkVSX1RZUEU6MSxTVFJJTkdfVFlQRToyLEJPT0xFQU5fVFlQRTozLFVOT1JERVJFRF9OT0RFX0lURVJBVE9SX1RZUEU6NCxPUkRFUkVEX05PREVfSVRFUkFUT1JfVFlQRTo1LFVOT1JERVJFRF9OT0RFX1NOQVBTSE9UX1RZUEU6NixPUkRFUkVEX05PREVfU05BUFNIT1RfVFlQRTo3LEFOWV9VTk9SREVSRURfTk9ERV9UWVBFOjgsRklSU1RfT1JERVJFRF9OT0RFX1RZUEU6OX07fSkuY2FsbChnbG9iYWwpXG4iLCJNb3VzZXRyYXAgPSByZXF1aXJlKCdtb3VzZXRyYXAnKTtcclxua2F0ZXggPSByZXF1aXJlKCcuLi9saWIva2F0ZXgva2F0ZXgtbW9kaWZpZWQubWluLmpzJyk7XHJcbk1hdGhZbGVtQmFja2VuZCA9IHJlcXVpcmUoJy4vbWF0aHlsZW1fYmFja2VuZC5qcycpO1xyXG5NYXRoWWxlbVV0aWxzID0gcmVxdWlyZSgnLi9tYXRoeWxlbV91dGlscy5qcycpO1xyXG5NYXRoWWxlbVN5bWJvbHMgPSByZXF1aXJlKCcuL21hdGh5bGVtX3N5bWJvbHMuanMnKTtcclxuZGVib3VuY2UgPSByZXF1aXJlKCd0aHJvdHRsZS1kZWJvdW5jZS9kZWJvdW5jZScpO1xyXG5cclxudmFyIE1hdGhZbGVtID0gZnVuY3Rpb24gKG1hdGh5bGVtX2RpdiwgY29uZmlnKSB7XHJcbiAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gIHZhciBjb25maWcgPSBjb25maWcgfHwge307XHJcbiAgdmFyIG9wdGlvbnMgPSBjb25maWdbJ29wdGlvbnMnXSB8fCB7fTtcclxuXHJcbiAgaWYgKHR5cGVvZiBtYXRoeWxlbV9kaXYgPT0gJ3N0cmluZycgfHwgbWF0aHlsZW1fZGl2IGluc3RhbmNlb2YgU3RyaW5nKSB7XHJcbiAgICBtYXRoeWxlbV9kaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChtYXRoeWxlbV9kaXYpO1xyXG4gIH1cclxuXHJcbiAgaWYgKCEobWF0aHlsZW1fZGl2LmlkKSkge1xyXG4gICAgdmFyIGkgPSBNYXRoWWxlbS5tYXhfdWlkIHx8IDA7XHJcbiAgICB3aGlsZSAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hdGh5bGVtX3VpZF8nICsgaSkpIGkrKztcclxuICAgIE1hdGhZbGVtLm1heF91aWQgPSBpO1xyXG4gICAgbWF0aHlsZW1fZGl2LmlkID0gJ21hdGh5bGVtX3VpZF8nICsgaTtcclxuICB9XHJcbiAgbWF0aHlsZW1fZGl2LmNsYXNzTmFtZSArPSBcIiBtYXRoeWxlbVwiO1xyXG4gIHZhciBpID0gTWF0aFlsZW0ubWF4X3RhYkluZGV4IHx8IDA7XHJcbiAgbWF0aHlsZW1fZGl2LnRhYkluZGV4ID0gaTtcclxuICBNYXRoWWxlbS5tYXhfdGFiSW5kZXggPSBpICsgMTtcclxuXHJcbiAgdGhpcy5lZGl0b3JfYWN0aXZlID0gdHJ1ZTtcclxuICB0aGlzLmVtcHR5X2NvbnRlbnQgPSBvcHRpb25zWydlbXB0eV9jb250ZW50J10gfHwgJ1xcXFxyZWR7Wz9dfSc7XHJcbiAgdGhpcy5lZGl0b3IgPSBtYXRoeWxlbV9kaXY7XHJcbiAgdGhpcy5ibGFja2xpc3QgPSBbXTtcclxuICB0aGlzLm1haW50YWluX2ZvY3VzID0gZmFsc2U7XHJcbiAgdGhpcy5wcm9jZXNzZWRfZmFrZV9pbnB1dCA9IDIwO1xyXG4gIHRoaXMuYXV0b3JlcGxhY2UgPSB0cnVlO1xyXG4gIHRoaXMucmVhZHkgPSBmYWxzZTtcclxuXHJcbiAgTWF0aFlsZW0uaW5zdGFuY2VzW21hdGh5bGVtX2Rpdi5pZF0gPSB0aGlzO1xyXG5cclxuICBjb25maWdbJ3BhcmVudCddID0gc2VsZjtcclxuXHJcbiAgaWYgKC9Nb2JpLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKSB7XHJcbiAgICB2YXIgZmFrZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGV4dGFyZWEnKTtcclxuICAgIHRoaXMuZmFrZUlucHV0ID0gZmFrZUlucHV0O1xyXG5cclxuICAgIGZha2VJbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2Zha2VJbnB1dF8nICsgbWF0aHlsZW1fZGl2LmlkKTtcclxuICAgIGZha2VJbnB1dC5zZXRBdHRyaWJ1dGUoJ2F1dG9jYXBpdGFsaXplJywgJ25vbmUnKTtcclxuICAgIGZha2VJbnB1dC5zZXRBdHRyaWJ1dGUoJ2F1dG9jb21wbGV0ZScsICdvZmYnKTtcclxuICAgIGZha2VJbnB1dC5zZXRBdHRyaWJ1dGUoJ2F1dG9jb3JyZWN0JywgJ29mZicpO1xyXG4gICAgZmFrZUlucHV0LnNldEF0dHJpYnV0ZSgnc3BlbGxjaGVjaycsICdmYWxzZScpO1xyXG4gICAgbWF0aHlsZW1fZGl2Lmluc2VydEFkamFjZW50RWxlbWVudCgnYWZ0ZXJlbmQnLCBmYWtlSW5wdXQpO1xyXG5cclxuICAgIGZha2VJbnB1dC5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XHJcbiAgICBmYWtlSW5wdXQuc3R5bGUudG9wID0gbWF0aHlsZW1fZGl2Lm9mZnNldFRvcCArICdweCc7XHJcbiAgICBmYWtlSW5wdXQuc3R5bGUubGVmdCA9IG1hdGh5bGVtX2Rpdi5vZmZzZXRMZWZ0ICsgJ3B4JztcclxuICAgIGZha2VJbnB1dC5zdHlsZS53aWR0aCA9ICcxcHgnO1xyXG4gICAgZmFrZUlucHV0LnN0eWxlLmhlaWdodCA9ICcxcHgnO1xyXG4gICAgZmFrZUlucHV0LnN0eWxlLm9wYWNpdHkgPSAwO1xyXG4gICAgZmFrZUlucHV0LnN0eWxlLnBhZGRpbmcgPSAwO1xyXG4gICAgZmFrZUlucHV0LnN0eWxlLm1hcmdpbiA9IDA7XHJcbiAgICBmYWtlSW5wdXQuc3R5bGUuYm9yZGVyID0gMDtcclxuICAgIGZha2VJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIGRlYm91bmNlKDEwMCwgZnVuY3Rpb24gKCkge1xyXG4gICAgICBmb3IgKDsgc2VsZi5wcm9jZXNzZWRfZmFrZV9pbnB1dCA+IHNlbGYuZmFrZUlucHV0LnZhbHVlLmxlbmd0aDsgc2VsZi5wcm9jZXNzZWRfZmFrZV9pbnB1dC0tKSB7XHJcbiAgICAgICAgTW91c2V0cmFwLnRyaWdnZXIoJ2JhY2tzcGFjZScpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChzZWxmLmZha2VJbnB1dC52YWx1ZS5sZW5ndGggPT0gMCkge1xyXG4gICAgICAgIHNlbGYucHJvY2Vzc2VkX2Zha2VfaW5wdXQgPSAyMDtcclxuICAgICAgICBzZWxmLmZha2VJbnB1dC52YWx1ZSA9ICdfX19fX19fX19fX19fX19fX19fXyc7XHJcbiAgICAgIH1cclxuICAgICAgZm9yICg7IHNlbGYucHJvY2Vzc2VkX2Zha2VfaW5wdXQgPCBzZWxmLmZha2VJbnB1dC52YWx1ZS5sZW5ndGg7IHNlbGYucHJvY2Vzc2VkX2Zha2VfaW5wdXQrKykge1xyXG4gICAgICAgIHZhciBjID0gc2VsZi5mYWtlSW5wdXQudmFsdWVbc2VsZi5wcm9jZXNzZWRfZmFrZV9pbnB1dF07XHJcbiAgICAgICAgaWYgKGMgIT0gYy50b0xvd2VyQ2FzZSgpKSB7IE1vdXNldHJhcC50cmlnZ2VyKCdzaGlmdCsnICsgYy50b0xvd2VyQ2FzZSgpKSB9IGVsc2UgaWYgKGMgPT0gJyAnKSB7IE1vdXNldHJhcC50cmlnZ2VyKCdzcGFjZScpIH0gZWxzZSB7IE1vdXNldHJhcC50cmlnZ2VyKGMpIH1cclxuICAgICAgfVxyXG4gICAgfSkpO1xyXG4gICAgZmFrZUlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICBpZiAoZS5rZXljb2RlID09IDgpIHtcclxuICAgICAgICBNb3VzZXRyYXAudHJpZ2dlcignYmFja3NwYWNlJyk7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB9IGVsc2UgaWYgKGUua2V5Y29kZSA9PSAxMykge1xyXG4gICAgICAgIE1vdXNldHJhcC50cmlnZ2VyKCdlbnRlcicpO1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICBmYWtlSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXMnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHNlbGYuYWN0aXZhdGUoZmFsc2UpO1xyXG4gICAgfSk7XHJcbiAgICBmYWtlSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgaWYgKHNlbGYubWFpbnRhaW5fZm9jdXMpIHtcclxuICAgICAgICBzZWxmLm1haW50YWluX2ZvY3VzID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5mb2N1cygpO1xyXG4gICAgICB9IGVsc2UgeyBzZWxmLmRlYWN0aXZhdGUoZmFsc2UpIH1cclxuICAgIH0pO1xyXG4gICAgZmFrZUlucHV0LnZhbHVlID0gJ19fX19fX19fX19fX19fX19fX19fJztcclxuICB9XHJcblxyXG4gIHRoaXMuYmFja2VuZCA9IG5ldyBNYXRoWWxlbUJhY2tlbmQoY29uZmlnKTtcclxuICB0aGlzLnRlbXBfY3Vyc29yID0geydub2RlJzogbnVsbCwgJ2NhcmV0JzogMH07XHJcbiAgdGhpcy5lZGl0b3IuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgZyA9IE1hdGhZbGVtLmluc3RhbmNlc1t0aGlzLmlkXTtcclxuICAgIHZhciBiID0gZy5iYWNrZW5kO1xyXG4gICAgaWYgKGcuZWRpdG9yX2FjdGl2ZSkgeyByZXR1cm4gfVxyXG4gICAgZy5tYWludGFpbl9mb2N1cyA9IHRydWU7XHJcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgZy5tYWludGFpbl9mb2N1cyA9IGZhbHNlO1xyXG4gICAgfSwgNTAwKTtcclxuICAgIGIuc2VsX2NsZWFyKCk7XHJcbiAgICBiLmN1cnJlbnQgPSBiLmRvYy5yb290KCkubGFzdENoaWxkO1xyXG4gICAgYi5jYXJldCA9IE1hdGhZbGVtVXRpbHMuZ2V0X2xlbmd0aChiLmN1cnJlbnQpO1xyXG4gICAgZy5hY3RpdmF0ZSh0cnVlKTtcclxuICB9KTtcclxuICBpZiAoTWF0aFlsZW0ucmVhZHkgJiYgIXRoaXMucmVhZHkpIHtcclxuICAgIHRoaXMucmVhZHkgPSB0cnVlO1xyXG4gICAgdGhpcy5iYWNrZW5kLmZpcmVfZXZlbnQoJ3JlYWR5Jyk7XHJcbiAgICB0aGlzLnJlbmRlcih0cnVlKTtcclxuICB9XHJcbiAgdGhpcy5kZWFjdGl2YXRlKHRydWUpO1xyXG4gIHRoaXMucmVjb21wdXRlX2xvY2F0aW9uc19wYXRocygpO1xyXG59O1xyXG5cclxuTWF0aFlsZW0uaW5zdGFuY2VzID0ge307XHJcbk1hdGhZbGVtLnJlYWR5ID0gZmFsc2U7XHJcblxyXG5NYXRoWWxlbS5hY3RpdmVfbWF0aHlsZW0gPSBudWxsO1xyXG5cclxuTWF0aFlsZW0uYWRkX3N5bWJvbHMgPSBmdW5jdGlvbiAoc3ltYm9scykge1xyXG4gIGZvciAodmFyIHMgaW4gc3ltYm9scykge1xyXG4gICAgdmFyIG5ld19zeW1zID0gTWF0aFlsZW1TeW1ib2xzLmFkZF9zeW1ib2xzKHMsIHN5bWJvbHNbc10sIE1hdGhZbGVtU3ltYm9scy5zeW1ib2xzKTtcclxuICAgIGZvciAodmFyIHMgaW4gbmV3X3N5bXMpIHsgTWF0aFlsZW1TeW1ib2xzLnN5bWJvbHNbc10gPSBuZXdfc3ltc1tzXSB9XHJcbiAgfVxyXG4gIGZvciAodmFyIGkgaW4gTWF0aFlsZW0uaW5zdGFuY2VzKSB7XHJcbiAgICBmb3IgKHZhciBzIGluIHN5bWJvbHMpIHtcclxuICAgICAgTWF0aFlsZW0uaW5zdGFuY2VzW2ldLmJhY2tlbmQuc3ltYm9sc1tzXSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoc3ltYm9sc1tzXSkpO1xyXG4gICAgfVxyXG4gIH1cclxufTtcclxuXHJcbk1hdGhZbGVtLnNldF9nbG9iYWxfc3ltYm9scyA9IGZ1bmN0aW9uIChzeW1ib2xzKSB7XHJcbiAgTWF0aFlsZW1TeW1ib2xzLnN5bWJvbHMgPSB7fTtcclxuICBNYXRoWWxlbS5hZGRfc3ltYm9scyhzeW1ib2xzKTtcclxufTtcclxuXHJcbk1hdGhZbGVtLnJlc2V0X2dsb2JhbF9zeW1ib2xzID0gZnVuY3Rpb24gKCkge1xyXG4gIGZvciAodmFyIGkgaW4gTWF0aFlsZW0uaW5zdGFuY2VzKSB7XHJcbiAgICBNYXRoWWxlbS5pbnN0YW5jZXNbaV0uYmFja2VuZC5zeW1ib2xzID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShNYXRoWWxlbVN5bWJvbHMuc3ltYm9scykpO1xyXG4gIH1cclxufTtcclxuXHJcbk1hdGhZbGVtLmluaXRfc3ltYm9scyA9IGZ1bmN0aW9uIChzeW1ib2xzKSB7XHJcbiAgdmFyIGFsbF9yZWFkeSA9IGZ1bmN0aW9uICgpIHtcclxuICAgIE1hdGhZbGVtLnJlZ2lzdGVyX2tleWJvYXJkX2hhbmRsZXJzKCk7XHJcbiAgICBmb3IgKHZhciBpIGluIE1hdGhZbGVtLmluc3RhbmNlcykge1xyXG4gICAgICBNYXRoWWxlbS5pbnN0YW5jZXNbaV0ucmVhZHkgPSB0cnVlO1xyXG4gICAgICBNYXRoWWxlbS5pbnN0YW5jZXNbaV0ucmVuZGVyKHRydWUpO1xyXG4gICAgICBNYXRoWWxlbS5pbnN0YW5jZXNbaV0uYmFja2VuZC5zeW1ib2xzID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShNYXRoWWxlbVN5bWJvbHMuc3ltYm9scykpO1xyXG4gICAgICBNYXRoWWxlbS5pbnN0YW5jZXNbaV0uYmFja2VuZC5maXJlX2V2ZW50KCdyZWFkeScpO1xyXG4gICAgfVxyXG4gICAgTWF0aFlsZW1CYWNrZW5kLnJlYWR5ID0gdHJ1ZTtcclxuICB9O1xyXG4gIGlmICghKEFycmF5LmlzQXJyYXkoc3ltYm9scykpKSB7XHJcbiAgICBzeW1ib2xzID0gW3N5bWJvbHNdO1xyXG4gIH1cclxuICB2YXIgY2FsbHMgPSBbXTtcclxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcclxuICAgIHZhciB4ID0gKGZ1bmN0aW9uIG91dGVyIChqKSB7XHJcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoY2FsbGJhY2spIHtcclxuICAgICAgICB2YXIgcmVxID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcbiAgICAgICAgcmVxLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgIHZhciBzeW1zID0gSlNPTi5wYXJzZSh0aGlzLnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgICBmb3IgKHZhciBzIGluIHN5bXMpIHtcclxuICAgICAgICAgICAgdmFyIG5ld19zeW1zID0gTWF0aFlsZW1TeW1ib2xzLmFkZF9zeW1ib2xzKHMsIHN5bXNbc10sIE1hdGhZbGVtU3ltYm9scy5zeW1ib2xzKTtcclxuICAgICAgICAgICAgZm9yICh2YXIgcyBpbiBuZXdfc3ltcykgeyBNYXRoWWxlbVN5bWJvbHMuc3ltYm9sc1tzXSA9IG5ld19zeW1zW3NdIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGNhbGxiYWNrKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXEub3BlbignZ2V0Jywgc3ltYm9sc1tqXSwgdHJ1ZSk7XHJcbiAgICAgICAgcmVxLnNlbmQoKTtcclxuICAgICAgfTtcclxuICAgIH0oaSkpO1xyXG4gICAgY2FsbHMucHVzaCh4KTtcclxuICB9XHJcbiAgY2FsbHMucHVzaChhbGxfcmVhZHkpO1xyXG4gIHZhciBqID0gMDtcclxuICB2YXIgY2IgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBqICs9IDE7XHJcbiAgICBpZiAoaiA8IGNhbGxzLmxlbmd0aCkgY2FsbHNbal0oY2IpO1xyXG4gIH07XHJcbiAgaWYgKGNhbGxzLmxlbmd0aCA+IDApIGNhbGxzWzBdKGNiKTtcclxufTtcclxuXHJcbk1hdGhZbGVtLnByb3RvdHlwZS5pc19jaGFuZ2VkID0gZnVuY3Rpb24gKCkge1xyXG4gIHZhciBiYiA9IHRoaXMuZWRpdG9yLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2thdGV4JylbMF07XHJcbiAgaWYgKCFiYikgeyByZXR1cm4gfVxyXG4gIHZhciByZWN0ID0gYmIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgdmFyIGFucyA9ICF0aGlzLmJvdW5kaW5nX2JveCB8fCB0aGlzLmJvdW5kaW5nX2JveC50b3AgIT0gcmVjdC50b3AgfHwgdGhpcy5ib3VuZGluZ19ib3guYm90dG9tICE9IHJlY3QuYm90dG9tIHx8IHRoaXMuYm91bmRpbmdfYm94LnJpZ2h0ICE9IHJlY3QucmlnaHQgfHwgdGhpcy5ib3VuZGluZ19ib3gubGVmdCAhPSByZWN0LmxlZnQ7XHJcbiAgdGhpcy5ib3VuZGluZ19ib3ggPSByZWN0O1xyXG4gIHJldHVybiBhbnM7XHJcbn07XHJcblxyXG5NYXRoWWxlbS5wcm90b3R5cGUucmVjb21wdXRlX2xvY2F0aW9uc19wYXRocyA9IGZ1bmN0aW9uICgpIHtcclxuICB2YXIgYW5zID0gW107XHJcbiAgdmFyIGJiID0gdGhpcy5lZGl0b3IuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgna2F0ZXgnKVswXTtcclxuICBpZiAoIWJiKSB7IHJldHVybiB9XHJcbiAgdmFyIHJlY3QgPSBiYi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICBhbnMucHVzaCh7XHJcbiAgICAncGF0aCc6ICdhbGwnLFxyXG4gICAgJ3RvcCc6IHJlY3QudG9wLFxyXG4gICAgJ2JvdHRvbSc6IHJlY3QuYm90dG9tLFxyXG4gICAgJ2xlZnQnOiByZWN0LmxlZnQsXHJcbiAgICAncmlnaHQnOiByZWN0LnJpZ2h0XHJcbiAgfSk7XHJcbiAgdmFyIGVsdHMgPSB0aGlzLmVkaXRvci5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdtYXRoeWxlbV9lbHQnKTtcclxuICBmb3IgKHZhciBpID0gMDsgaSA8IGVsdHMubGVuZ3RoOyBpKyspIHtcclxuICAgIHZhciBlbHQgPSBlbHRzW2ldO1xyXG4gICAgaWYgKGVsdC5ub2RlTmFtZSA9PSAnbXN0eWxlJykgeyBjb250aW51ZSB9XHJcbiAgICB2YXIgcmVjdCA9IGVsdC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgIGlmIChyZWN0LnRvcCA9PSAwICYmIHJlY3QuYm90dG9tID09IDAgJiYgcmVjdC5sZWZ0ID09IDAgJiYgcmVjdC5yaWdodCA9PSAwKSB7IGNvbnRpbnVlIH1cclxuICAgIHZhciBjbCA9IGVsdC5jbGFzc05hbWUuc3BsaXQoL1xccysvKTtcclxuICAgIGZvciAodmFyIGogPSAwOyBqIDwgY2wubGVuZ3RoOyBqKyspIHtcclxuICAgICAgaWYgKGNsW2pdLnN0YXJ0c1dpdGgoJ21hdGh5bGVtX2xvYycpKSB7XHJcbiAgICAgICAgYW5zLnB1c2goe1xyXG4gICAgICAgICAgJ3BhdGgnOiBjbFtqXSxcclxuICAgICAgICAgICd0b3AnOiByZWN0LnRvcCxcclxuICAgICAgICAgICdib3R0b20nOiByZWN0LmJvdHRvbSxcclxuICAgICAgICAgICdsZWZ0JzogcmVjdC5sZWZ0LFxyXG4gICAgICAgICAgJ3JpZ2h0JzogcmVjdC5yaWdodCxcclxuICAgICAgICAgICdtaWRfeCc6IChyZWN0LmxlZnQgKyByZWN0LnJpZ2h0KSAvIDIsXHJcbiAgICAgICAgICAnbWlkX3knOiAocmVjdC5ib3R0b20gKyByZWN0LnRvcCkgLyAyLFxyXG4gICAgICAgICAgJ2JsYW5rJzogY2wuaW5kZXhPZignbWF0aHlsZW1fYmxhbmsnKSA+PSAwXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgdGhpcy5ib3hlcyA9IGFucztcclxufTtcclxuXHJcbk1hdGhZbGVtLmdldF9sb2MgPSBmdW5jdGlvbiAoeCwgeSwgY3VycmVudF9ub2RlLCBjdXJyZW50X2NhcmV0KSB7XHJcbiAgdmFyIGcgPSBNYXRoWWxlbS5hY3RpdmVfbWF0aHlsZW07XHJcbiAgdmFyIG1pbl9kaXN0ID0gLTE7XHJcbiAgdmFyIG1pZF9kaXN0ID0gMDtcclxuICB2YXIgb3B0ID0gbnVsbDtcclxuICAvLyBjaGVjayBpZiB3ZSBnbyB0byBmaXJzdCBvciBsYXN0IGVsZW1lbnRcclxuICBpZiAoY3VycmVudF9ub2RlKSB7XHJcbiAgICB2YXIgY3VycmVudF9wYXRoID0gTWF0aFlsZW1VdGlscy5wYXRoX3RvKGN1cnJlbnRfbm9kZSk7XHJcbiAgICB2YXIgY3VycmVudF9wb3MgPSBwYXJzZUludChjdXJyZW50X3BhdGguc3Vic3RyaW5nKGN1cnJlbnRfcGF0aC5sYXN0SW5kZXhPZignZScpICsgMSkpO1xyXG4gIH1cclxuXHJcbiAgdmFyIGJveGVzID0gZy5ib3hlcztcclxuICBpZiAoIWJveGVzKSB7IHJldHVybiB9XHJcbiAgaWYgKGN1cnJlbnRfbm9kZSkge1xyXG4gICAgY3VycmVudF9wYXRoID0gY3VycmVudF9wYXRoLnJlcGxhY2UoL2VbMC05XSskLywgJ2UnKTtcclxuICAgIHZhciBib3hlczIgPSBbXTtcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYm94ZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgaWYgKGJveGVzW2ldLnBhdGggPT0gJ2FsbCcpIHsgY29udGludWUgfVxyXG4gICAgICB2YXIgbG9jID0gYm94ZXNbaV0ucGF0aC5zdWJzdHJpbmcoMCwgYm94ZXNbaV0ucGF0aC5sYXN0SW5kZXhPZignXycpKTtcclxuICAgICAgbG9jID0gbG9jLnJlcGxhY2UoL2VbMC05XSskLywgJ2UnKTtcclxuICAgICAgaWYgKGxvYyA9PSBjdXJyZW50X3BhdGgpIHtcclxuICAgICAgICBib3hlczIucHVzaChib3hlc1tpXSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGJveGVzID0gYm94ZXMyO1xyXG4gIH1cclxuICBpZiAoIWJveGVzKSB7IHJldHVybiB9XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBib3hlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgdmFyIGJveCA9IGJveGVzW2ldO1xyXG4gICAgaWYgKGJveC5wYXRoID09ICdhbGwnKSB7XHJcbiAgICAgIGlmICghb3B0KSB7IG9wdCA9IHsgJ3BhdGgnOiAnbWF0aHlsZW1fbG9jX21fZTFfMCcgfSB9XHJcbiAgICAgIGNvbnRpbnVlO1xyXG4gICAgfVxyXG4gICAgdmFyIHhkaXN0ID0gTWF0aC5tYXgoYm94LmxlZnQgLSB4LCB4IC0gYm94LnJpZ2h0LCAwKTtcclxuICAgIHZhciB5ZGlzdCA9IE1hdGgubWF4KGJveC50b3AgLSB5LCB5IC0gYm94LmJvdHRvbSwgMCk7XHJcbiAgICB2YXIgZGlzdCA9IE1hdGguc3FydCh4ZGlzdCAqIHhkaXN0ICsgeWRpc3QgKiB5ZGlzdCk7XHJcbiAgICBpZiAobWluX2Rpc3QgPT0gLTEgfHwgZGlzdCA8IG1pbl9kaXN0KSB7XHJcbiAgICAgIG1pbl9kaXN0ID0gZGlzdDtcclxuICAgICAgbWlkX2Rpc3QgPSB4IC0gYm94Lm1pZF94O1xyXG4gICAgICBvcHQgPSBib3g7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHZhciBsb2MgPSBvcHQucGF0aC5zdWJzdHJpbmcoJ21hdGh5bGVtX2xvYycubGVuZ3RoKTtcclxuICBsb2MgPSBsb2MucmVwbGFjZSgvXy9nLCAnLycpO1xyXG4gIGxvYyA9IGxvYy5yZXBsYWNlKC8oWzAtOV0rKSg/PS4qP1xcLykvZywgJ1skMV0nKTtcclxuICB2YXIgY3VyID0gZy5iYWNrZW5kLmRvYy54cGF0aF9ub2RlKGxvYy5zdWJzdHJpbmcoMCwgbG9jLmxhc3RJbmRleE9mKCcvJykpLCBnLmJhY2tlbmQuZG9jLnJvb3QoKSk7XHJcbiAgdmFyIGNhciA9IHBhcnNlSW50KGxvYy5zdWJzdHJpbmcobG9jLmxhc3RJbmRleE9mKCcvJykgKyAxKSk7XHJcbiAgLy8gQ2hlY2sgaWYgd2Ugd2FudCB0aGUgY3Vyc29yIGJlZm9yZSBvciBhZnRlciB0aGUgZWxlbWVudFxyXG4gIGlmIChtaWRfZGlzdCA+IDAgJiYgIShvcHQuYmxhbmspKSB7XHJcbiAgICBjYXIrKztcclxuICB9XHJcbiAgdmFyIGFucyA9IHtcclxuICAgICdjdXJyZW50JzogY3VyLFxyXG4gICAgJ2NhcmV0JzogY2FyLFxyXG4gICAgJ3Bvcyc6ICdub25lJ1xyXG4gIH07XHJcbiAgaWYgKGN1cnJlbnRfbm9kZSAmJiBvcHQpIHtcclxuICAgIHZhciBvcHRfcG9zID0gcGFyc2VJbnQob3B0LnBhdGguc3Vic3RyaW5nKG9wdC5wYXRoLmxhc3RJbmRleE9mKCdlJykgKyAxLCBvcHQucGF0aC5sYXN0SW5kZXhPZignXycpKSk7XHJcbiAgICBpZiAob3B0X3BvcyA8IGN1cnJlbnRfcG9zKSB7IGFuc1sncG9zJ10gPSAnbGVmdCcgfSBlbHNlIGlmIChvcHRfcG9zID4gY3VycmVudF9wb3MpIHsgYW5zWydwb3MnXSA9ICdyaWdodCcgfSBlbHNlIGlmIChjYXIgPCBjdXJyZW50X2NhcmV0KSB7IGFuc1sncG9zJ10gPSAnbGVmdCcgfSBlbHNlIGlmIChjYXIgPiBjdXJyZW50X2NhcmV0KSB7IGFuc1sncG9zJ10gPSAncmlnaHQnIH1cclxuICB9XHJcbiAgcmV0dXJuIGFucztcclxufTtcclxuXHJcbk1hdGhZbGVtLm1vdXNlX3VwID0gZnVuY3Rpb24gKGUpIHtcclxuICBNYXRoWWxlbS5rYi5pc19tb3VzZV9kb3duID0gZmFsc2U7XHJcbiAgdmFyIGcgPSBNYXRoWWxlbS5hY3RpdmVfbWF0aHlsZW07XHJcbiAgaWYgKGcpIHsgZy5yZW5kZXIodHJ1ZSkgfVxyXG59O1xyXG5cclxuTWF0aFlsZW0ubW91c2VfZG93biA9IGZ1bmN0aW9uIChlKSB7XHJcbiAgdmFyIG4gPSBlLnRhcmdldDtcclxuICBNYXRoWWxlbS5rYi5pc19tb3VzZV9kb3duID0gdHJ1ZTtcclxuICB3aGlsZSAobiAhPSBudWxsKSB7XHJcbiAgICBpZiAobi5pZCBpbiBNYXRoWWxlbS5pbnN0YW5jZXMpIHtcclxuICAgICAgdmFyIGcgPSBNYXRoWWxlbS5hY3RpdmVfbWF0aHlsZW07XHJcbiAgICAgIGlmIChNYXRoWWxlbS5pbnN0YW5jZXNbbi5pZF0gPT0gZykge1xyXG4gICAgICAgIGcubWFpbnRhaW5fZm9jdXMgPSB0cnVlO1xyXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgZy5tYWludGFpbl9mb2N1cyA9IGZhbHNlO1xyXG4gICAgICAgIH0sIDUwMCk7XHJcbiAgICAgICAgaWYgKGUuc2hpZnRLZXkpIHtcclxuICAgICAgICAgIGcuc2VsZWN0X3RvKGUuY2xpZW50WCwgZS5jbGllbnRZLCB0cnVlKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdmFyIGxvYyA9IGUudG91Y2hlcyA/IE1hdGhZbGVtLmdldF9sb2MoZS50b3VjaGVzWzBdLmNsaWVudFgsIGUudG91Y2hlc1swXS5jbGllbnRZKSA6IE1hdGhZbGVtLmdldF9sb2MoZS5jbGllbnRYLCBlLmNsaWVudFkpO1xyXG4gICAgICAgICAgaWYgKCFsb2MpIHsgcmV0dXJuIH1cclxuICAgICAgICAgIHZhciBiID0gZy5iYWNrZW5kO1xyXG4gICAgICAgICAgYi5jdXJyZW50ID0gbG9jLmN1cnJlbnQ7XHJcbiAgICAgICAgICBiLmNhcmV0ID0gbG9jLmNhcmV0O1xyXG4gICAgICAgICAgYi5zZWxfc3RhdHVzID0gTWF0aFlsZW1CYWNrZW5kLlNFTF9OT05FO1xyXG4gICAgICAgIH1cclxuICAgICAgICBnLnJlbmRlcih0cnVlKTtcclxuICAgICAgfSBlbHNlIGlmIChnKSB7IGcuZGVhY3RpdmF0ZSh0cnVlKSB9XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIG4gPSBuLnBhcmVudE5vZGU7XHJcbiAgfVxyXG4gIE1hdGhZbGVtLmFjdGl2ZV9tYXRoeWxlbSA9IG51bGw7XHJcbiAgZm9yICh2YXIgaSBpbiBNYXRoWWxlbS5pbnN0YW5jZXMpIHtcclxuICAgIE1hdGhZbGVtLmluc3RhbmNlc1tpXS5kZWFjdGl2YXRlKHRydWUpO1xyXG4gIH1cclxufTtcclxuXHJcbk1hdGhZbGVtLm1vdXNlX21vdmUgPSBmdW5jdGlvbiAoZSkge1xyXG4gIHZhciBnID0gTWF0aFlsZW0uYWN0aXZlX21hdGh5bGVtO1xyXG4gIGlmICghZykgeyByZXR1cm4gfVxyXG4gIGlmICghTWF0aFlsZW0ua2IuaXNfbW91c2VfZG93bikge1xyXG4gICAgdmFyIGJiID0gZy5lZGl0b3I7XHJcbiAgICB2YXIgcmVjdCA9IGJiLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgaWYgKChlLmNsaWVudFggPCByZWN0LmxlZnQgfHwgZS5jbGllbnRYID4gcmVjdC5yaWdodCkgfHwgKGUuY2xpZW50WSA+IHJlY3QuYm90dG9tIHx8IGUuY2xpZW50WSA8IHJlY3QudG9wKSkge1xyXG4gICAgICBnLnRlbXBfY3Vyc29yID0ge1xyXG4gICAgICAgICdub2RlJzogbnVsbCxcclxuICAgICAgICAnY2FyZXQnOiAwXHJcbiAgICAgIH07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB2YXIgbG9jID0gTWF0aFlsZW0uZ2V0X2xvYyhlLmNsaWVudFgsIGUuY2xpZW50WSk7XHJcbiAgICAgIGlmICghbG9jKSB7IHJldHVybiB9XHJcbiAgICAgIGcudGVtcF9jdXJzb3IgPSB7XHJcbiAgICAgICAgJ25vZGUnOiBsb2MuY3VycmVudCxcclxuICAgICAgICAnY2FyZXQnOiBsb2MuY2FyZXRcclxuICAgICAgfTtcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgZy5zZWxlY3RfdG8oZS5jbGllbnRYLCBlLmNsaWVudFksIHRydWUpO1xyXG4gIH1cclxuICBnLnJlbmRlcihnLmlzX2NoYW5nZWQoKSk7XHJcbn07XHJcblxyXG5NYXRoWWxlbS50b3VjaF9tb3ZlID0gZnVuY3Rpb24gKGUpIHtcclxuICB2YXIgZyA9IE1hdGhZbGVtLmFjdGl2ZV9tYXRoeWxlbTtcclxuICBpZiAoIWcpIHsgcmV0dXJuIH1cclxuICBnLnNlbGVjdF90byhlLnRvdWNoZXNbMF0uY2xpZW50WCwgZS50b3VjaGVzWzBdLmNsaWVudFksIHRydWUpO1xyXG4gIGcucmVuZGVyKGcuaXNfY2hhbmdlZCgpKTtcclxufTtcclxuXHJcbk1hdGhZbGVtLnByb3RvdHlwZS5zZWxlY3RfdG8gPSBmdW5jdGlvbiAoeCwgeSwgbW91c2UpIHtcclxuICB2YXIgc2VsX2NhcmV0ID0gdGhpcy5iYWNrZW5kLmNhcmV0O1xyXG4gIHZhciBzZWxfY3Vyc29yID0gdGhpcy5iYWNrZW5kLmN1cnJlbnQ7XHJcbiAgaWYgKHRoaXMuYmFja2VuZC5zZWxfc3RhdHVzID09IE1hdGhZbGVtQmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUKSB7XHJcbiAgICBzZWxfY3Vyc29yID0gdGhpcy5iYWNrZW5kLnNlbF9lbmQubm9kZTtcclxuICAgIHNlbF9jYXJldCA9IHRoaXMuYmFja2VuZC5zZWxfZW5kLmNhcmV0O1xyXG4gIH0gZWxzZSBpZiAodGhpcy5iYWNrZW5kLnNlbF9zdGF0dXMgPT0gTWF0aFlsZW1CYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EKSB7XHJcbiAgICBzZWxfY3Vyc29yID0gdGhpcy5iYWNrZW5kLnNlbF9zdGFydC5ub2RlO1xyXG4gICAgc2VsX2NhcmV0ID0gdGhpcy5iYWNrZW5kLnNlbF9zdGFydC5jYXJldDtcclxuICB9XHJcbiAgdmFyIGxvYyA9IE1hdGhZbGVtLmdldF9sb2MoeCwgeSwgc2VsX2N1cnNvciwgc2VsX2NhcmV0KTtcclxuICBpZiAoIWxvYykgeyByZXR1cm4gfVxyXG4gIHRoaXMuYmFja2VuZC5zZWxlY3RfdG8obG9jLCBzZWxfY3Vyc29yLCBzZWxfY2FyZXQsIG1vdXNlKTtcclxufTtcclxuXHJcbmlmICgnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3cpIHtcclxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIE1hdGhZbGVtLm1vdXNlX2Rvd24sIGZhbHNlKTtcclxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgTWF0aFlsZW0udG91Y2hfbW92ZSwgZmFsc2UpO1xyXG59IGVsc2Uge1xyXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBNYXRoWWxlbS5tb3VzZV9kb3duLCBmYWxzZSk7XHJcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBNYXRoWWxlbS5tb3VzZV91cCwgZmFsc2UpO1xyXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBNYXRoWWxlbS5tb3VzZV9tb3ZlLCBmYWxzZSk7XHJcbn1cclxuXHJcbk1hdGhZbGVtLnByb3RvdHlwZS5yZW5kZXJfbm9kZSA9IGZ1bmN0aW9uICh0KSB7XHJcbiAgLy8gQWxsIHRoZSBpbnRlcmVzdGluZyB3b3JrIGlzIGRvbmUgYnkgdHJhbnNmb3JtLiAgVGhpcyBmdW5jdGlvbiBqdXN0IGFkZHMgaW4gdGhlIGN1cnNvciBhbmQgc2VsZWN0aW9uLXN0YXJ0IGN1cnNvclxyXG4gIHZhciBvdXRwdXQgPSAnJztcclxuICBpZiAodCA9PSAncmVuZGVyJykge1xyXG4gICAgdmFyIHJvb3QgPSB0aGlzLmJhY2tlbmQuZG9jLnJvb3QoKTtcclxuICAgIHRoaXMuYmFja2VuZC5hZGRfcGF0aHMocm9vdCwgJ20nKTtcclxuICAgIHRoaXMuYmFja2VuZC50ZW1wX2N1cnNvciA9IHRoaXMudGVtcF9jdXJzb3I7XHJcbiAgICB0aGlzLmJhY2tlbmQuYWRkX2NsYXNzZXNfY3Vyc29ycyhyb290KTtcclxuICAgIHRoaXMuYmFja2VuZC5jdXJyZW50LnNldEF0dHJpYnV0ZSgnY3VycmVudCcsICd5ZXMnKTtcclxuICAgIGlmICh0aGlzLnRlbXBfY3Vyc29yLm5vZGUpIHRoaXMudGVtcF9jdXJzb3Iubm9kZS5zZXRBdHRyaWJ1dGUoJ3RlbXAnLCAneWVzJyk7XHJcbiAgICBvdXRwdXQgPSB0aGlzLmJhY2tlbmQuZ2V0X2NvbnRlbnQoJ2xhdGV4JywgdHJ1ZSk7XHJcbiAgICB0aGlzLmJhY2tlbmQucmVtb3ZlX2N1cnNvcnNfY2xhc3Nlcyhyb290KTtcclxuICAgIG91dHB1dCA9IG91dHB1dC5yZXBsYWNlKG5ldyBSZWdFeHAoJyZhbXA7JywgJ2cnKSwgJyYnKTtcclxuICAgIHJldHVybiBvdXRwdXQ7XHJcbiAgfSBlbHNlIHtcclxuICAgIG91dHB1dCA9IHRoaXMuYmFja2VuZC5nZXRfY29udGVudCh0KTtcclxuICB9XHJcbiAgcmV0dXJuIG91dHB1dDtcclxufTtcclxuXHJcbk1hdGhZbGVtLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAodXBkYXRlZCkge1xyXG4gIGlmICghdGhpcy5lZGl0b3JfYWN0aXZlICYmIHRoaXMuYmFja2VuZC5kb2MuaXNfYmxhbmsoKSkge1xyXG4gICAga2F0ZXgucmVuZGVyKHRoaXMuZW1wdHlfY29udGVudCwgdGhpcy5lZGl0b3IpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICB2YXIgdGV4ID0gdGhpcy5yZW5kZXJfbm9kZSgncmVuZGVyJyk7XHJcbiAga2F0ZXgucmVuZGVyKHRleCwgdGhpcy5lZGl0b3IpO1xyXG4gIGlmICh1cGRhdGVkKSB7XHJcbiAgICB0aGlzLnJlY29tcHV0ZV9sb2NhdGlvbnNfcGF0aHMoKTtcclxuICB9XHJcbn07XHJcblxyXG5NYXRoWWxlbS5wcm90b3R5cGUuYWN0aXZhdGUgPSBmdW5jdGlvbiAoZm9jdXMpIHtcclxuICBNYXRoWWxlbS5hY3RpdmVfbWF0aHlsZW0gPSB0aGlzO1xyXG4gIHRoaXMuZWRpdG9yX2FjdGl2ZSA9IHRydWU7XHJcbiAgdGhpcy5lZGl0b3IuY2xhc3NOYW1lID0gdGhpcy5lZGl0b3IuY2xhc3NOYW1lLnJlcGxhY2UobmV3IFJlZ0V4cCgnKFxcXFxzfF4pbWF0aHlsZW1faW5hY3RpdmUoXFxcXHN8JCknKSwgJyBtYXRoeWxlbV9hY3RpdmUgJyk7XHJcbiAgaWYgKGZvY3VzKSB7XHJcbiAgICBpZiAodGhpcy5mYWtlSW5wdXQpIHtcclxuICAgICAgdGhpcy5mYWtlSW5wdXQuc3R5bGUudG9wID0gdGhpcy5lZGl0b3Iub2Zmc2V0VG9wICsgJ3B4JztcclxuICAgICAgdGhpcy5mYWtlSW5wdXQuc3R5bGUubGVmdCA9IHRoaXMuZWRpdG9yLm9mZnNldExlZnQgKyAncHgnO1xyXG4gICAgICB0aGlzLmZha2VJbnB1dC5mb2N1cygpO1xyXG4gICAgICB0aGlzLmZha2VJbnB1dC5zZXRTZWxlY3Rpb25SYW5nZSh0aGlzLmZha2VJbnB1dC52YWx1ZS5sZW5ndGgsIHRoaXMuZmFrZUlucHV0LnZhbHVlLmxlbmd0aCk7XHJcbiAgICB9IGVsc2UgeyB0aGlzLmVkaXRvci5mb2N1cygpIH1cclxuICB9XHJcbiAgaWYgKHRoaXMucmVhZHkpIHtcclxuICAgIHRoaXMucmVuZGVyKHRydWUpO1xyXG4gICAgdGhpcy5iYWNrZW5kLmZpcmVfZXZlbnQoJ2ZvY3VzJywgeydmb2N1c2VkJzogdHJ1ZX0pO1xyXG4gIH1cclxufTtcclxuXHJcbk1hdGhZbGVtLnByb3RvdHlwZS5kZWFjdGl2YXRlID0gZnVuY3Rpb24gKGJsdXIpIHtcclxuICB0aGlzLmVkaXRvcl9hY3RpdmUgPSBmYWxzZTtcclxuICB2YXIgcjEgPSBuZXcgUmVnRXhwKCcoPzpcXFxcc3xeKW1hdGh5bGVtX2FjdGl2ZSg/OlxcXFxzfCQpJyk7XHJcbiAgdmFyIHIyID0gbmV3IFJlZ0V4cCgnKD86XFxcXHN8XiltYXRoeWxlbV9pbmFjdGl2ZSg/OlxcXFxzfCQpJyk7XHJcbiAgaWYgKHRoaXMuZWRpdG9yLmNsYXNzTmFtZS5tYXRjaChyMSkpIHtcclxuICAgIHRoaXMuZWRpdG9yLmNsYXNzTmFtZSA9IHRoaXMuZWRpdG9yLmNsYXNzTmFtZS5yZXBsYWNlKHIxLCAnIG1hdGh5bGVtX2luYWN0aXZlICcpO1xyXG4gIH0gZWxzZSBpZiAoIXRoaXMuZWRpdG9yLmNsYXNzTmFtZS5tYXRjaChyMikpIHtcclxuICAgIHRoaXMuZWRpdG9yLmNsYXNzTmFtZSArPSAnIG1hdGh5bGVtX2luYWN0aXZlICc7XHJcbiAgfVxyXG4gIGlmIChibHVyICYmIHRoaXMuZmFrZUlucHV0KSB7IHRoaXMuZmFrZUlucHV0LmJsdXIoKSB9XHJcbiAgaWYgKHRoaXMucmVhZHkpIHtcclxuICAgIHRoaXMucmVuZGVyKCk7XHJcbiAgICB0aGlzLmJhY2tlbmQuZmlyZV9ldmVudCgnZm9jdXMnLCB7J2ZvY3VzZWQnOiBmYWxzZX0pO1xyXG4gIH1cclxufTtcclxuXHJcbi8vIEtleWJvYXJkIHN0dWZmXHJcblxyXG5NYXRoWWxlbS5rYiA9IHt9O1xyXG5cclxuTWF0aFlsZW0ua2IuaXNfbW91c2VfZG93biA9IGZhbHNlO1xyXG5cclxuLyoga2V5Ym9hcmQgYmVoYXZpb3VyIGRlZmluaXRpb25zICovXHJcblxyXG4vLyBrZXlzIGFzaWRlIGZyb20gMC05LGEteixBLVpcclxuTWF0aFlsZW0ua2Iua19jaGFycyA9IHtcclxuICAnPSc6ICc9JyxcclxuICAnKyc6ICcrJyxcclxuICAnLSc6ICctJyxcclxuICAnKic6ICcqJyxcclxuICAnLic6ICcuJyxcclxuICAnLCc6ICcsJyxcclxuICAnc2hpZnQrLyc6ICcvJyxcclxuICAnc2hpZnQrPSc6ICcrJ1xyXG59O1xyXG5NYXRoWWxlbS5rYi5rX3N5bXMgPSB7XHJcbiAgJy8nOiAnZnJhYycsXHJcbiAgJyUnOiAnbW9kJyxcclxuICAnXic6ICdwb3dlcicsXHJcbiAgJygnOiAncGFyZW4nLFxyXG4gICc8JzogJ2xlc3MnLFxyXG4gICc+JzogJ2dyZWF0ZXInLFxyXG4gICdfJzogJ3N1YicsXHJcbiAgJ3wnOiAnYWJzJyxcclxuICAnISc6ICdmYWN0JyxcclxuICAnc2hpZnQrdXAnOiAncG93ZXInLFxyXG4gICdzaGlmdCtkb3duJzogJ3N1YidcclxufTtcclxuTWF0aFlsZW0ua2Iua19jb250cm9scyA9IHtcclxuICAndXAnOiAndXAnLFxyXG4gICdkb3duJzogJ2Rvd24nLFxyXG4gICdyaWdodCc6ICdyaWdodCcsXHJcbiAgJ2xlZnQnOiAnbGVmdCcsXHJcbiAgJ2FsdCtrJzogJ3VwJyxcclxuICAnYWx0K2onOiAnZG93bicsXHJcbiAgJ2FsdCtsJzogJ3JpZ2h0JyxcclxuICAnYWx0K2gnOiAnbGVmdCcsXHJcbiAgJ3NwYWNlJzogJ3NwYWNlYmFyJyxcclxuICAnaG9tZSc6ICdob21lJyxcclxuICAnZW5kJzogJ2VuZCcsXHJcbiAgJ2JhY2tzcGFjZSc6ICdiYWNrc3BhY2UnLFxyXG4gICdkZWwnOiAnZGVsZXRlX2tleScsXHJcbiAgJ21vZCthJzogJ3NlbF9hbGwnLFxyXG4gICdtb2QrYyc6ICdzZWxfY29weScsXHJcbiAgJ21vZCt4JzogJ3NlbF9jdXQnLFxyXG4gICdtb2Qrdic6ICdzZWxfcGFzdGUnLFxyXG4gICdtb2Qreic6ICd1bmRvJyxcclxuICAnbW9kK3knOiAncmVkbycsXHJcbiAgJ2VudGVyJzogJ2RvbmUnLFxyXG4gICdtb2Qrc2hpZnQrcmlnaHQnOiAnbGlzdF9leHRlbmRfY29weV9yaWdodCcsXHJcbiAgJ21vZCtzaGlmdCtsZWZ0JzogJ2xpc3RfZXh0ZW5kX2NvcHlfbGVmdCcsXHJcbiAgJ21vZCtyaWdodCc6ICdsaXN0X2V4dGVuZF9yaWdodCcsXHJcbiAgJ21vZCtsZWZ0JzogJ2xpc3RfZXh0ZW5kX2xlZnQnLFxyXG4gICdtb2QrdXAnOiAnbGlzdF9leHRlbmRfdXAnLFxyXG4gICdtb2QrZG93bic6ICdsaXN0X2V4dGVuZF9kb3duJyxcclxuICAnbW9kK3NoaWZ0K3VwJzogJ2xpc3RfZXh0ZW5kX2NvcHlfdXAnLFxyXG4gICdtb2Qrc2hpZnQrZG93bic6ICdsaXN0X2V4dGVuZF9jb3B5X2Rvd24nLFxyXG4gICdtb2QrYmFja3NwYWNlJzogJ2xpc3RfcmVtb3ZlJyxcclxuICAnbW9kK3NoaWZ0K2JhY2tzcGFjZSc6ICdsaXN0X3JlbW92ZV9yb3cnLFxyXG4gICdzaGlmdCtsZWZ0JzogJ3NlbF9sZWZ0JyxcclxuICAnc2hpZnQrcmlnaHQnOiAnc2VsX3JpZ2h0JyxcclxuICAnKSc6ICdyaWdodF9wYXJlbicsXHJcbiAgJ1xcXFwnOiAnYmFja3NsYXNoJyxcclxuICAndGFiJzogJ3RhYidcclxufTtcclxuXHJcbi8vIGxldHRlcnNcclxuXHJcbmZvciAodmFyIGkgPSA2NTsgaSA8PSA5MDsgaSsrKSB7XHJcbiAgTWF0aFlsZW0ua2Iua19jaGFyc1tTdHJpbmcuZnJvbUNoYXJDb2RlKGkpLnRvTG93ZXJDYXNlKCldID0gU3RyaW5nLmZyb21DaGFyQ29kZShpKS50b0xvd2VyQ2FzZSgpO1xyXG4gIE1hdGhZbGVtLmtiLmtfY2hhcnNbJ3NoaWZ0KycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpLnRvTG93ZXJDYXNlKCldID0gU3RyaW5nLmZyb21DaGFyQ29kZShpKS50b1VwcGVyQ2FzZSgpO1xyXG59XHJcblxyXG4vLyBudW1iZXJzXHJcblxyXG5mb3IgKHZhciBpID0gNDg7IGkgPD0gNTc7IGkrKykgeyBNYXRoWWxlbS5rYi5rX2NoYXJzW1N0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gU3RyaW5nLmZyb21DaGFyQ29kZShpKSB9XHJcblxyXG5NYXRoWWxlbS5yZWdpc3Rlcl9rZXlib2FyZF9oYW5kbGVycyA9IGZ1bmN0aW9uICgpIHtcclxuICBNb3VzZXRyYXAuYWRkS2V5Y29kZXMoezE3MzogJy0nfSk7IC8vIEZpcmVmb3gncyBzcGVjaWFsIG1pbnVzIChuZWVkZWQgZm9yIF8gPSBzdWIgYmluZGluZylcclxuICBmb3IgKHZhciBpIGluIE1hdGhZbGVtLmtiLmtfY2hhcnMpIHtcclxuICAgIE1vdXNldHJhcC5iaW5kKGksIChmdW5jdGlvbiAoaSkge1xyXG4gICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICghTWF0aFlsZW0uYWN0aXZlX21hdGh5bGVtKSByZXR1cm4gdHJ1ZTtcclxuICAgICAgICBNYXRoWWxlbS5hY3RpdmVfbWF0aHlsZW0udGVtcF9jdXJzb3Iubm9kZSA9IG51bGw7XHJcbiAgICAgICAgTWF0aFlsZW0uYWN0aXZlX21hdGh5bGVtLmJhY2tlbmQuaW5zZXJ0X3N0cmluZyhNYXRoWWxlbS5rYi5rX2NoYXJzW2ldKTtcclxuICAgICAgICBNYXRoWWxlbS5hY3RpdmVfbWF0aHlsZW0ucmVuZGVyKHRydWUpO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgfTtcclxuICAgIH0oaSkpKTtcclxuICB9XHJcbiAgZm9yICh2YXIgaSBpbiBNYXRoWWxlbS5rYi5rX3N5bXMpIHtcclxuICAgIE1vdXNldHJhcC5iaW5kKGksIChmdW5jdGlvbiAoaSkge1xyXG4gICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICghTWF0aFlsZW0uYWN0aXZlX21hdGh5bGVtKSByZXR1cm4gdHJ1ZTtcclxuICAgICAgICBNYXRoWWxlbS5hY3RpdmVfbWF0aHlsZW0udGVtcF9jdXJzb3Iubm9kZSA9IG51bGw7XHJcbiAgICAgICAgTWF0aFlsZW0uYWN0aXZlX21hdGh5bGVtLmJhY2tlbmQuaW5zZXJ0X3N5bWJvbChNYXRoWWxlbS5rYi5rX3N5bXNbaV0pO1xyXG4gICAgICAgIE1hdGhZbGVtLmFjdGl2ZV9tYXRoeWxlbS5yZW5kZXIodHJ1ZSk7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9O1xyXG4gICAgfShpKSkpO1xyXG4gIH1cclxuICBmb3IgKHZhciBpIGluIE1hdGhZbGVtLmtiLmtfY29udHJvbHMpIHtcclxuICAgIE1vdXNldHJhcC5iaW5kKGksIChmdW5jdGlvbiAoaSkge1xyXG4gICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICghTWF0aFlsZW0uYWN0aXZlX21hdGh5bGVtKSByZXR1cm4gdHJ1ZTtcclxuICAgICAgICBNYXRoWWxlbS5hY3RpdmVfbWF0aHlsZW0uYmFja2VuZFtNYXRoWWxlbS5rYi5rX2NvbnRyb2xzW2ldXSgpO1xyXG4gICAgICAgIE1hdGhZbGVtLmFjdGl2ZV9tYXRoeWxlbS50ZW1wX2N1cnNvci5ub2RlID0gbnVsbDtcclxuICAgICAgICBNYXRoWWxlbS5hY3RpdmVfbWF0aHlsZW0ucmVuZGVyKFsndXAnLCAnZG93bicsICdyaWdodCcsICdsZWZ0JywgJ2hvbWUnLCAnZW5kJywgJ3NlbF9sZWZ0JywgJ3NlbF9yaWdodCddLmluZGV4T2YoaSkgPCAwKTtcclxuICAgICAgICBNYXRoWWxlbS5hY3RpdmVfbWF0aHlsZW0ucmVuZGVyKGZhbHNlKTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH07XHJcbiAgICB9KGkpKSk7XHJcbiAgfVxyXG59O1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBNYXRoWWxlbTtcclxuIiwiTW91c2V0cmFwID0gcmVxdWlyZSgnbW91c2V0cmFwJyk7XHJcbmthdGV4ID0gcmVxdWlyZSgnLi4vbGliL2thdGV4L2thdGV4LW1vZGlmaWVkLm1pbi5qcycpO1xyXG5NYXRoWWxlbVV0aWxzID0gcmVxdWlyZSgnLi9tYXRoeWxlbV91dGlscy5qcycpO1xyXG5NYXRoWWxlbURvYyA9IHJlcXVpcmUoJy4vbWF0aHlsZW1fZG9jLmpzJyk7XHJcbk1hdGhZbGVtU3ltYm9scyA9IHJlcXVpcmUoJy4vbWF0aHlsZW1fc3ltYm9scy5qcycpO1xyXG5cclxuaWYgKCFTdHJpbmcucHJvdG90eXBlLnN0YXJ0c1dpdGgpIHtcclxuICBTdHJpbmcucHJvdG90eXBlLnN0YXJ0c1dpdGggPSBmdW5jdGlvbiAoc2VhcmNoU3RyaW5nLCBwb3NpdGlvbikge1xyXG4gICAgcG9zaXRpb24gPSBwb3NpdGlvbiB8fCAwO1xyXG4gICAgcmV0dXJuIHRoaXMuc3Vic3RyKHBvc2l0aW9uLCBzZWFyY2hTdHJpbmcubGVuZ3RoKSA9PSBzZWFyY2hTdHJpbmc7XHJcbiAgfTtcclxufVxyXG5pZiAoIVN0cmluZy5wcm90b3R5cGUuZW5kc1dpdGgpIHtcclxuICBTdHJpbmcucHJvdG90eXBlLmVuZHNXaXRoID0gZnVuY3Rpb24gKHNlYXJjaFN0cmluZywgcG9zaXRpb24pIHtcclxuICAgIHBvc2l0aW9uID0gcG9zaXRpb24gfHwgdGhpcy5sZW5ndGg7XHJcbiAgICBwb3NpdGlvbiAtPSBzZWFyY2hTdHJpbmcubGVuZ3RoO1xyXG4gICAgcmV0dXJuIHRoaXMuaW5kZXhPZihzZWFyY2hTdHJpbmcsIHBvc2l0aW9uKSAhPSAtMTtcclxuICB9O1xyXG59XHJcblN0cmluZy5wcm90b3R5cGUuc3BsaWNlID0gZnVuY3Rpb24gKGlkeCwgcykge1xyXG4gIHJldHVybiAodGhpcy5zbGljZSgwLCBpZHgpICsgcyArIHRoaXMuc2xpY2UoaWR4KSk7XHJcbn07XHJcblN0cmluZy5wcm90b3R5cGUuc3BsaWNlbiA9IGZ1bmN0aW9uIChpZHgsIHMsIG4pIHtcclxuICByZXR1cm4gKHRoaXMuc2xpY2UoMCwgaWR4KSArIHMgKyB0aGlzLnNsaWNlKGlkeCArIG4pKTtcclxufTtcclxuU3RyaW5nLnByb3RvdHlwZS5zZWFyY2hfYXQgPSBmdW5jdGlvbiAoaWR4LCBzKSB7XHJcbiAgcmV0dXJuICh0aGlzLnN1YnN0cmluZyhpZHggLSBzLmxlbmd0aCwgaWR4KSA9PSBzKTtcclxufTtcclxuXHJcbnZhciBNYXRoWWxlbUJhY2tlbmQgPSBmdW5jdGlvbiAoY29uZmlnKSB7XHJcbiAgdmFyIGNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcclxuICB2YXIgZXZlbnRzID0gY29uZmlnWydldmVudHMnXSB8fCB7fTtcclxuICB2YXIgb3B0aW9ucyA9IGNvbmZpZ1snb3B0aW9ucyddIHx8IHt9O1xyXG4gIHRoaXMucGFyZW50ID0gY29uZmlnWydwYXJlbnQnXTtcclxuXHJcbiAgdGhpcy5ibGFja2xpc3QgPSBbXTtcclxuICB0aGlzLmF1dG9yZXBsYWNlID0gdHJ1ZTtcclxuICB0aGlzLnJlYWR5ID0gZmFsc2U7XHJcbiAgdGhpcy5ldmVudHMgPSB7fTtcclxuXHJcbiAgdmFyIGV2dHMgPSBbJ3JlYWR5JywgJ2NoYW5nZScsICdsZWZ0X2VuZCcsICdyaWdodF9lbmQnLCAnZG9uZScsICdjb21wbGV0aW9uJywgJ2RlYnVnJywgJ2Vycm9yJywgJ2ZvY3VzJ107XHJcblxyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgZXZ0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgdmFyIGUgPSBldnRzW2ldO1xyXG4gICAgaWYgKGUgaW4gZXZlbnRzKSB0aGlzLmV2ZW50c1tlXSA9IGUgaW4gZXZlbnRzID8gZXZlbnRzW2VdIDogbnVsbDtcclxuICB9XHJcblxyXG4gIHZhciBvcHRzID0gWydibGFua19jYXJldCcsICdlbXB0eV9jb250ZW50JywgJ2JsYWNrbGlzdCcsICdhdXRvcmVwbGFjZSddO1xyXG5cclxuICBmb3IgKHZhciBpID0gMDsgaSA8IG9wdHMubGVuZ3RoOyBpKyspIHtcclxuICAgIHZhciBwID0gb3B0c1tpXTtcclxuICAgIGlmIChwIGluIG9wdGlvbnMpIHRoaXNbcF0gPSBvcHRpb25zW3BdO1xyXG4gIH1cclxuXHJcbiAgdGhpcy5zeW1ib2xzID0ge307XHJcbiAgdGhpcy5kb2MgPSBuZXcgTWF0aFlsZW1Eb2Mob3B0aW9uc1sneG1sX2NvbnRlbnQnXSk7XHJcblxyXG4gIHRoaXMuY3VycmVudCA9IHRoaXMuZG9jLnJvb3QoKS5maXJzdENoaWxkO1xyXG4gIHRoaXMuY2FyZXQgPSAwO1xyXG4gIHRoaXMuc2VsX3N0YXJ0ID0gbnVsbDtcclxuICB0aGlzLnNlbF9lbmQgPSBudWxsO1xyXG4gIHRoaXMudW5kb19kYXRhID0gW107XHJcbiAgdGhpcy51bmRvX25vdyA9IC0xO1xyXG4gIHRoaXMuc2VsX3N0YXR1cyA9IE1hdGhZbGVtQmFja2VuZC5TRUxfTk9ORTtcclxuICB0aGlzLmNoZWNrcG9pbnQoKTtcclxuICBpZiAoTWF0aFlsZW1CYWNrZW5kLnJlYWR5ICYmICF0aGlzLnJlYWR5KSB7XHJcbiAgICB0aGlzLnJlYWR5ID0gdHJ1ZTtcclxuICAgIHRoaXMuc3ltYm9scyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoTWF0aFlsZW1TeW1ib2xzLnN5bWJvbHMpKTtcclxuICAgIHRoaXMuZmlyZV9ldmVudCgncmVhZHknKTtcclxuICB9XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQuU0VMX05PTkUgPSAwO1xyXG5NYXRoWWxlbUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9TVEFSVCA9IDE7XHJcbk1hdGhZbGVtQmFja2VuZC5TRUxfQ1VSU09SX0FUX0VORCA9IDI7XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQuY2xpcGJvYXJkID0gbnVsbDtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUuZ2V0X2NvbnRlbnQgPSBmdW5jdGlvbiAodCwgcikge1xyXG4gIHJldHVybiB0aGlzLmRvYy5nZXRfY29udGVudCh0LCByKTtcclxufTtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUuc2V0X2NvbnRlbnQgPSBmdW5jdGlvbiAoeG1sX2RhdGEpIHtcclxuICB0aGlzLmRvYyA9IG5ldyBNYXRoWWxlbURvYyh4bWxfZGF0YSk7XHJcbiAgdGhpcy5jdXJyZW50ID0gdGhpcy5kb2Mucm9vdCgpLmxhc3RDaGlsZDtcclxuICB0aGlzLmNhcmV0ID0gTWF0aFlsZW1VdGlscy5nZXRfbGVuZ3RoKHRoaXMuY3VycmVudCk7XHJcbiAgdGhpcy5zZWxfc3RhcnQgPSBudWxsO1xyXG4gIHRoaXMuc2VsX2VuZCA9IG51bGw7XHJcbiAgdGhpcy51bmRvX2RhdGEgPSBbXTtcclxuICB0aGlzLnVuZG9fbm93ID0gLTE7XHJcbiAgdGhpcy5zZWxfc3RhdHVzID0gTWF0aFlsZW1CYWNrZW5kLlNFTF9OT05FO1xyXG4gIHRoaXMuY2hlY2twb2ludCgpO1xyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5maXJlX2V2ZW50ID0gZnVuY3Rpb24gKGV2ZW50LCBhcmdzKSB7XHJcbiAgYXJncyA9IGFyZ3MgfHwge307XHJcbiAgYXJncy50YXJnZXQgPSB0aGlzLnBhcmVudCB8fCB0aGlzO1xyXG4gIGlmICh0aGlzLmV2ZW50c1tldmVudF0pIHsgdGhpcy5ldmVudHNbZXZlbnRdKGFyZ3MpIH1cclxufTtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUucmVtb3ZlX3N5bWJvbCA9IGZ1bmN0aW9uIChuYW1lKSB7XHJcbiAgaWYgKHRoaXMuc3ltYm9sc1tuYW1lXSkgZGVsZXRlIHRoaXMuc3ltYm9sc1tuYW1lXTtcclxufTtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUuYWRkX3N5bWJvbHMgPSBmdW5jdGlvbiAobmFtZSwgc3ltKSB7XHJcbiAgdmFyIG5ld19zeW1zID0gTWF0aFlsZW1TeW1ib2xzLmFkZF9zeW1ib2xzKG5hbWUsIHN5bSk7XHJcbiAgZm9yICh2YXIgcyBpbiBuZXdfc3ltcykge1xyXG4gICAgdGhpcy5zeW1ib2xzW3NdID0gbmV3X3N5bXNbc107XHJcbiAgfVxyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5hZGRfc3ltYm9sX2Z1bmNfbm9ubGF0ZXggPSBmdW5jdGlvbiAobmFtZSwgZ3JvdXApIHtcclxuICB2YXIgbmV3X3N5bXMgPSBNYXRoWWxlbVN5bWJvbHMuYWRkX3N5bWJvbHMoJ19mdW5jX25vbmxhdGV4JywgW3snZ3JvdXAnOiBncm91cCwgJ3N5bWJvbHMnOiBbbmFtZV19XSk7XHJcbiAgZm9yICh2YXIgcyBpbiBuZXdfc3ltcykgeyB0aGlzLnN5bWJvbHNbc10gPSBuZXdfc3ltc1tzXSB9XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmFkZF9zeW1ib2xfZnVuYyA9IGZ1bmN0aW9uIChuYW1lLCBncm91cCkge1xyXG4gIHZhciBuZXdfc3ltcyA9IE1hdGhZbGVtU3ltYm9scy5hZGRfc3ltYm9scygnX2Z1bmMnLCBbeydncm91cCc6IGdyb3VwLCAnc3ltYm9scyc6IFtuYW1lXX1dKTtcclxuICBmb3IgKHZhciBzIGluIG5ld19zeW1zKSB7IHRoaXMuc3ltYm9sc1tzXSA9IG5ld19zeW1zW3NdIH1cclxufTtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUuYWRkX3N5bWJvbF9yYXcgPSBmdW5jdGlvbiAobmFtZSwgbGF0ZXgsIHRleHQsIGdyb3VwKSB7XHJcbiAgdmFyIHMgPSB7fTtcclxuICBzW25hbWVdID0geydsYXRleCc6IGxhdGV4LCAndGV4dCc6IHRleHR9O1xyXG4gIHZhciBuZXdfc3ltcyA9IE1hdGhZbGVtU3ltYm9scy5hZGRfc3ltYm9scygnX3JhdycsIFt7J2dyb3VwJzogZ3JvdXAsICdzeW1ib2xzJzogc31dKTtcclxuICBmb3IgKHZhciBzIGluIG5ld19zeW1zKSB7IHRoaXMuc3ltYm9sc1tzXSA9IG5ld19zeW1zW3NdIH1cclxufTtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUuc2VsZWN0X3RvID0gZnVuY3Rpb24gKGxvYywgc2VsX2N1cnNvciwgc2VsX2NhcmV0LCBtb3VzZSkge1xyXG4gIGlmIChsb2MuY3VycmVudCA9PSBzZWxfY3Vyc29yICYmIGxvYy5jYXJldCA9PSBzZWxfY2FyZXQpIHtcclxuICAgIHRoaXMuc2VsX3N0YXR1cyA9IE1hdGhZbGVtQmFja2VuZC5TRUxfTk9ORTtcclxuICB9IGVsc2UgaWYgKGxvYy5wb3MgPT0gJ2xlZnQnKSB7XHJcbiAgICB0aGlzLnNlbF9lbmQgPSB7XHJcbiAgICAgICdub2RlJzogc2VsX2N1cnNvcixcclxuICAgICAgJ2NhcmV0Jzogc2VsX2NhcmV0XHJcbiAgICB9O1xyXG4gICAgdGhpcy5zZXRfc2VsX2JvdW5kYXJ5KE1hdGhZbGVtQmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJULCBtb3VzZSk7XHJcbiAgfSBlbHNlIGlmIChsb2MucG9zID09ICdyaWdodCcpIHtcclxuICAgIHRoaXMuc2VsX3N0YXJ0ID0ge1xyXG4gICAgICAnbm9kZSc6IHNlbF9jdXJzb3IsXHJcbiAgICAgICdjYXJldCc6IHNlbF9jYXJldFxyXG4gICAgfTtcclxuICAgIHRoaXMuc2V0X3NlbF9ib3VuZGFyeShNYXRoWWxlbUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9FTkQsIG1vdXNlKTtcclxuICB9XHJcbiAgdGhpcy5jdXJyZW50ID0gbG9jLmN1cnJlbnQ7XHJcbiAgdGhpcy5jYXJldCA9IGxvYy5jYXJldDtcclxufTtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUuc2V0X3NlbF9zdGFydCA9IGZ1bmN0aW9uICgpIHtcclxuICB0aGlzLnNlbF9zdGFydCA9IHsnbm9kZSc6IHRoaXMuY3VycmVudCwgJ2NhcmV0JzogdGhpcy5jYXJldH07XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLnNldF9zZWxfZW5kID0gZnVuY3Rpb24gKCkge1xyXG4gIHRoaXMuc2VsX2VuZCA9IHsnbm9kZSc6IHRoaXMuY3VycmVudCwgJ2NhcmV0JzogdGhpcy5jYXJldH07XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmFkZF9wYXRocyA9IGZ1bmN0aW9uIChuLCBwYXRoKSB7XHJcbiAgaWYgKG4ubm9kZU5hbWUgPT0gJ2UnKSB7XHJcbiAgICBuLnNldEF0dHJpYnV0ZSgncGF0aCcsIHBhdGgpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICB2YXIgZXMgPSAxO1xyXG4gICAgdmFyIGZzID0gMTtcclxuICAgIHZhciBjcyA9IDE7XHJcbiAgICB2YXIgbHMgPSAxO1xyXG4gICAgZm9yICh2YXIgYyA9IG4uZmlyc3RDaGlsZDsgYyAhPSBudWxsOyBjID0gYy5uZXh0U2libGluZykge1xyXG4gICAgICBpZiAoYy5ub2RlTmFtZSA9PSAnYycpIHsgdGhpcy5hZGRfcGF0aHMoYywgcGF0aCArICdfYycgKyBjcyk7IGNzKysgfSBlbHNlIGlmIChjLm5vZGVOYW1lID09ICdmJykgeyB0aGlzLmFkZF9wYXRocyhjLCBwYXRoICsgJ19mJyArIGZzKTsgZnMrKyB9IGVsc2UgaWYgKGMubm9kZU5hbWUgPT0gJ2wnKSB7IHRoaXMuYWRkX3BhdGhzKGMsIHBhdGggKyAnX2wnICsgbHMpOyBscysrIH0gZWxzZSBpZiAoYy5ub2RlTmFtZSA9PSAnZScpIHsgdGhpcy5hZGRfcGF0aHMoYywgcGF0aCArICdfZScgKyBlcyk7IGVzKysgfVxyXG4gICAgfVxyXG4gIH1cclxufTtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUuYWRkX2NsYXNzZXNfY3Vyc29ycyA9IGZ1bmN0aW9uIChuLCBwYXRoKSB7XHJcbiAgaWYgKG4ubm9kZU5hbWUgPT0gJ2UnKSB7XHJcbiAgICB2YXIgdGV4dCA9IE1hdGhZbGVtVXRpbHMuZ2V0X3ZhbHVlKG4pO1xyXG4gICAgdmFyIGFucyA9ICcnO1xyXG4gICAgdmFyIHNlbF9jdXJzb3I7XHJcbiAgICB2YXIgdGV4dF9ub2RlID0gTWF0aFlsZW1VdGlscy5pc190ZXh0KG4pO1xyXG4gICAgaWYgKHRoaXMuc2VsX3N0YXR1cyA9PSBNYXRoWWxlbUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9TVEFSVCkgc2VsX2N1cnNvciA9IHRoaXMuc2VsX2VuZDtcclxuICAgIGlmICh0aGlzLnNlbF9zdGF0dXMgPT0gTWF0aFlsZW1CYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EKSBzZWxfY3Vyc29yID0gdGhpcy5zZWxfc3RhcnQ7XHJcbiAgICBpZiAodGhpcy5zZWxfc3RhdHVzICE9IE1hdGhZbGVtQmFja2VuZC5TRUxfTk9ORSkge1xyXG4gICAgICB2YXIgc2VsX2NhcmV0X3RleHQgPSBNYXRoWWxlbVV0aWxzLmlzX3NtYWxsKHNlbF9jdXJzb3Iubm9kZSkgPyBNYXRoWWxlbVV0aWxzLlNNQUxMX1NFTF9DQVJFVCA6IE1hdGhZbGVtVXRpbHMuU0VMX0NBUkVUO1xyXG4gICAgICBpZiAoIXRleHRfbm9kZSAmJiB0ZXh0Lmxlbmd0aCA9PSAwICYmIG4ucGFyZW50Tm9kZS5jaGlsZEVsZW1lbnRDb3VudCA+IDEpIHtcclxuICAgICAgICBzZWxfY2FyZXRfdGV4dCA9ICdcXFxcYmx1ZXtcXFxceG1sQ2xhc3N7bWF0aHlsZW1fZWx0IG1hdGh5bGVtX2JsYW5rIG1hdGh5bGVtX2xvY18nICsgbi5nZXRBdHRyaWJ1dGUoJ3BhdGgnKSArICdfMH17JyArIHNlbF9jYXJldF90ZXh0ICsgJ319JztcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBzZWxfY2FyZXRfdGV4dCA9ICdcXFxcYmx1ZXsnICsgc2VsX2NhcmV0X3RleHQgKyAnfSc7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHRoaXMuc2VsX3N0YXR1cyA9PSBNYXRoWWxlbUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9FTkQpIHNlbF9jYXJldF90ZXh0ID0gdGV4dF9ub2RlID8gJ1snIDogc2VsX2NhcmV0X3RleHQgKyAnXFxcXCcgKyBNYXRoWWxlbVV0aWxzLlNFTF9DT0xPUiArICd7JztcclxuICAgICAgaWYgKHRoaXMuc2VsX3N0YXR1cyA9PSBNYXRoWWxlbUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9TVEFSVCkgc2VsX2NhcmV0X3RleHQgPSB0ZXh0X25vZGUgPyAnXScgOiAnfScgKyBzZWxfY2FyZXRfdGV4dDtcclxuICAgIH1cclxuICAgIHZhciBjYXJldF90ZXh0ID0gJyc7XHJcbiAgICB2YXIgdGVtcF9jYXJldF90ZXh0ID0gJyc7XHJcbiAgICBpZiAodGV4dC5sZW5ndGggPT0gMCkge1xyXG4gICAgICBpZiAodGV4dF9ub2RlKSBjYXJldF90ZXh0ID0gJ1xcXFxfJztcclxuICAgICAgZWxzZSBpZiAobi5wYXJlbnROb2RlLmNoaWxkRWxlbWVudENvdW50ID09IDEpIHtcclxuICAgICAgICBpZiAodGhpcy5jdXJyZW50ID09IG4pIHtcclxuICAgICAgICAgIHZhciBibGFua19jYXJldCA9IHRoaXMuYmxhbmtfY2FyZXQgfHwgKE1hdGhZbGVtVXRpbHMuaXNfc21hbGwodGhpcy5jdXJyZW50KSA/IE1hdGhZbGVtVXRpbHMuU01BTExfQ0FSRVQgOiBNYXRoWWxlbVV0aWxzLkNBUkVUKTtcclxuICAgICAgICAgIGFucyA9ICdcXFxccmVke1xcXFx4bWxDbGFzc3ttYWluX2N1cnNvciBtYXRoeWxlbV9lbHQgbWF0aHlsZW1fYmxhbmsgbWF0aHlsZW1fbG9jXycgKyBuLmdldEF0dHJpYnV0ZSgncGF0aCcpICsgJ18wJyArICd9eycgKyBibGFua19jYXJldCArICd9fSc7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnRlbXBfY3Vyc29yLm5vZGUgPT0gbikgeyBhbnMgPSAnXFxcXGdyYXl7XFxcXHhtbENsYXNze21hdGh5bGVtX2VsdCBtYXRoeWxlbV9ibGFuayBtYXRoeWxlbV9sb2NfJyArIG4uZ2V0QXR0cmlidXRlKCdwYXRoJykgKyAnXzAnICsgJ317Wz9dfX0nIH0gZWxzZSB7IGFucyA9ICdcXFxcYmx1ZXtcXFxceG1sQ2xhc3N7bWF0aHlsZW1fZWx0IG1hdGh5bGVtX2JsYW5rIG1hdGh5bGVtX2xvY18nICsgbi5nZXRBdHRyaWJ1dGUoJ3BhdGgnKSArICdfMCcgKyAnfXtbP119fScgfVxyXG4gICAgICB9IGVsc2UgaWYgKHRoaXMudGVtcF9jdXJzb3Iubm9kZSAhPSBuICYmIHRoaXMuY3VycmVudCAhPSBuICYmICghKHNlbF9jdXJzb3IpIHx8IHNlbF9jdXJzb3Iubm9kZSAhPSBuKSkge1xyXG4gICAgICAgIC8vIFRoZXNlIGFyZSB0aGUgZW1wdHkgZSBlbGVtZW50cyBhdCBlaXRoZXIgZW5kIG9mXHJcbiAgICAgICAgLy8gYSBjIG9yIG0gbm9kZSwgc3VjaCBhcyB0aGUgc3BhY2UgYmVmb3JlIGFuZFxyXG4gICAgICAgIC8vIGFmdGVyIGJvdGggdGhlIHNpbiBhbmQgeF4yIGluIHNpbih4XjIpXHJcbiAgICAgICAgLy9cclxuICAgICAgICAvLyBIZXJlLCB3ZSBhZGQgaW4gYSBzbWFsbCBlbGVtZW50IHNvIHRoYXQgd2UgY2FuXHJcbiAgICAgICAgLy8gdXNlIHRoZSBtb3VzZSB0byBzZWxlY3QgdGhlc2UgYXJlYXNcclxuICAgICAgICBhbnMgPSAnXFxcXHBoYW50b217XFxcXHhtbENsYXNze21hdGh5bGVtX2VsdCBtYXRoeWxlbV9ibGFuayBtYXRoeWxlbV9sb2NfJyArIG4uZ2V0QXR0cmlidXRlKCdwYXRoJykgKyAnXzAnICsgJ317XFxcXGN1cnNvclswLjFleF17MWV4fX19JztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0ZXh0Lmxlbmd0aCArIDE7IGkrKykge1xyXG4gICAgICBpZiAobiA9PSB0aGlzLmN1cnJlbnQgJiYgaSA9PSB0aGlzLmNhcmV0ICYmICh0ZXh0Lmxlbmd0aCA+IDAgfHwgbi5wYXJlbnROb2RlLmNoaWxkRWxlbWVudENvdW50ID4gMSkpIHtcclxuICAgICAgICBpZiAodGV4dF9ub2RlKSB7XHJcbiAgICAgICAgICBpZiAodGhpcy5zZWxfc3RhdHVzID09IE1hdGhZbGVtQmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUKSB7IGNhcmV0X3RleHQgPSAnWycgfSBlbHNlIGlmICh0aGlzLnNlbF9zdGF0dXMgPT0gTWF0aFlsZW1CYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EKSB7IGNhcmV0X3RleHQgPSAnXScgfSBlbHNlIHsgY2FyZXRfdGV4dCA9ICdcXFxcXycgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBjYXJldF90ZXh0ID0gTWF0aFlsZW1VdGlscy5pc19zbWFsbCh0aGlzLmN1cnJlbnQpID8gTWF0aFlsZW1VdGlscy5TTUFMTF9DQVJFVCA6IE1hdGhZbGVtVXRpbHMuQ0FSRVQ7XHJcbiAgICAgICAgICBpZiAodGV4dC5sZW5ndGggPT0gMCkgeyBjYXJldF90ZXh0ID0gJ1xcXFxyZWR7XFxcXHhtbENsYXNze21haW5fY3Vyc29yIG1hdGh5bGVtX2VsdCBtYXRoeWxlbV9ibGFuayBtYXRoeWxlbV9sb2NfJyArIG4uZ2V0QXR0cmlidXRlKCdwYXRoJykgKyAnXzB9eycgKyBjYXJldF90ZXh0ICsgJ319JyB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjYXJldF90ZXh0ID0gJ1xcXFxyZWR7XFxcXHhtbENsYXNze21haW5fY3Vyc29yfXsnICsgY2FyZXRfdGV4dCArICd9fSc7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBpZiAodGhpcy5zZWxfc3RhdHVzID09IE1hdGhZbGVtQmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUKSB7IGNhcmV0X3RleHQgPSBjYXJldF90ZXh0ICsgJ1xcXFwnICsgTWF0aFlsZW1VdGlscy5TRUxfQ09MT1IgKyAneycgfSBlbHNlIGlmICh0aGlzLnNlbF9zdGF0dXMgPT0gTWF0aFlsZW1CYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EKSB7IGNhcmV0X3RleHQgPSAnfScgKyBjYXJldF90ZXh0IH1cclxuICAgICAgICB9XHJcbiAgICAgICAgYW5zICs9IGNhcmV0X3RleHQ7XHJcbiAgICAgIH0gZWxzZSBpZiAobiA9PSB0aGlzLmN1cnJlbnQgJiYgaSA9PSB0aGlzLmNhcmV0ICYmIHRleHRfbm9kZSkge1xyXG4gICAgICAgIGFucyArPSBjYXJldF90ZXh0O1xyXG4gICAgICB9IGVsc2UgaWYgKHRoaXMuc2VsX3N0YXR1cyAhPSBNYXRoWWxlbUJhY2tlbmQuU0VMX05PTkUgJiYgc2VsX2N1cnNvci5ub2RlID09IG4gJiYgaSA9PSBzZWxfY3Vyc29yLmNhcmV0KSB7XHJcbiAgICAgICAgYW5zICs9IHNlbF9jYXJldF90ZXh0O1xyXG4gICAgICB9IGVsc2UgaWYgKHRoaXMudGVtcF9jdXJzb3Iubm9kZSA9PSBuICYmIGkgPT0gdGhpcy50ZW1wX2N1cnNvci5jYXJldCAmJiAodGV4dC5sZW5ndGggPiAwIHx8IG4ucGFyZW50Tm9kZS5jaGlsZEVsZW1lbnRDb3VudCA+IDEpKSB7XHJcbiAgICAgICAgaWYgKHRleHRfbm9kZSkgeyB0ZW1wX2NhcmV0X3RleHQgPSAnLicgfSBlbHNlIHtcclxuICAgICAgICAgIHRlbXBfY2FyZXRfdGV4dCA9IE1hdGhZbGVtVXRpbHMuaXNfc21hbGwodGhpcy5jdXJyZW50KSA/IE1hdGhZbGVtVXRpbHMuVEVNUF9TTUFMTF9DQVJFVCA6IE1hdGhZbGVtVXRpbHMuVEVNUF9DQVJFVDtcclxuICAgICAgICAgIGlmICh0ZXh0Lmxlbmd0aCA9PSAwKSB7XHJcbiAgICAgICAgICAgIHRlbXBfY2FyZXRfdGV4dCA9ICdcXFxcZ3JheXtcXFxceG1sQ2xhc3N7bWF0aHlsZW1fZWx0IG1hdGh5bGVtX2JsYW5rIG1hdGh5bGVtX2xvY18nICsgbi5nZXRBdHRyaWJ1dGUoJ3BhdGgnKSArICdfMH17JyArIHRlbXBfY2FyZXRfdGV4dCArICd9fSc7XHJcbiAgICAgICAgICB9IGVsc2UgeyB0ZW1wX2NhcmV0X3RleHQgPSAnXFxcXGdyYXl7JyArIHRlbXBfY2FyZXRfdGV4dCArICd9JyB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGFucyArPSB0ZW1wX2NhcmV0X3RleHQ7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGkgPCB0ZXh0Lmxlbmd0aCkgYW5zICs9ICdcXFxceG1sQ2xhc3N7bWF0aHlsZW1fZWx0IG1hdGh5bGVtX2xvY18nICsgbi5nZXRBdHRyaWJ1dGUoJ3BhdGgnKSArICdfJyArIGkgKyAnfXsnICsgdGV4dFtpXSArICd9JztcclxuICAgIH1cclxuICAgIGlmICh0ZXh0X25vZGUgJiYgbiA9PSB0aGlzLmN1cnJlbnQpIHtcclxuICAgICAgYW5zID0gJ1xcXFx4bWxDbGFzc3ttYXRoeWxlbV90ZXh0X2N1cnJlbnR9e3snICsgYW5zICsgJ319JztcclxuICAgIH1cclxuICAgIG4uc2V0QXR0cmlidXRlKCdyZW5kZXInLCBhbnMpO1xyXG4gICAgbi5yZW1vdmVBdHRyaWJ1dGUoJ3BhdGgnKTtcclxuICB9IGVsc2Uge1xyXG4gICAgZm9yICh2YXIgYyA9IG4uZmlyc3RDaGlsZDsgYyAhPSBudWxsOyBjID0gYy5uZXh0U2libGluZykge1xyXG4gICAgICBpZiAoYy5ub2RlTmFtZSA9PSAnYycgfHwgYy5ub2RlTmFtZSA9PSAnbCcgfHwgYy5ub2RlTmFtZSA9PSAnZicgfHwgYy5ub2RlTmFtZSA9PSAnZScpIHsgdGhpcy5hZGRfY2xhc3Nlc19jdXJzb3JzKGMpIH1cclxuICAgIH1cclxuICB9XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLnJlbW92ZV9jdXJzb3JzX2NsYXNzZXMgPSBmdW5jdGlvbiAobikge1xyXG4gIGlmIChuLm5vZGVOYW1lID09ICdlJykge1xyXG4gICAgbi5yZW1vdmVBdHRyaWJ1dGUoJ3BhdGgnKTtcclxuICAgIG4ucmVtb3ZlQXR0cmlidXRlKCdyZW5kZXInKTtcclxuICAgIG4ucmVtb3ZlQXR0cmlidXRlKCdjdXJyZW50Jyk7XHJcbiAgICBuLnJlbW92ZUF0dHJpYnV0ZSgndGVtcCcpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBmb3IgKHZhciBjID0gbi5maXJzdENoaWxkOyBjICE9IG51bGw7IGMgPSBjLm5leHRTaWJsaW5nKSB7XHJcbiAgICAgIGlmIChjLm5vZGVUeXBlID09IDEpIHsgdGhpcy5yZW1vdmVfY3Vyc29yc19jbGFzc2VzKGMpIH1cclxuICAgIH1cclxuICB9XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmRvd25fZnJvbV9mID0gZnVuY3Rpb24gKCkge1xyXG4gIHZhciBubiA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkO1xyXG4gIHdoaWxlIChubiAhPSBudWxsICYmIG5uLm5vZGVOYW1lICE9ICdjJyAmJiBubi5ub2RlTmFtZSAhPSAnbCcpIG5uID0gbm4ubmV4dFNpYmxpbmc7XHJcbiAgaWYgKG5uICE9IG51bGwpIHtcclxuICAgIHdoaWxlIChubi5ub2RlTmFtZSA9PSAnbCcpIG5uID0gbm4uZmlyc3RDaGlsZDtcclxuICAgIHRoaXMuY3VycmVudCA9IG5uLmZpcnN0Q2hpbGQ7XHJcbiAgfVxyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5kb3duX2Zyb21fZl90b19ibGFuayA9IGZ1bmN0aW9uICgpIHtcclxuICB2YXIgbm4gPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZDtcclxuICB3aGlsZSAobm4gIT0gbnVsbCAmJiAhKG5uLm5vZGVOYW1lID09ICdjJyAmJiBubi5jaGlsZE5vZGVzLmxlbmd0aCA9PSAxICYmIE1hdGhZbGVtVXRpbHMuaXNfYmxhbmsobm4uZmlyc3RDaGlsZCkpKSB7XHJcbiAgICBubiA9IG5uLm5leHRTaWJsaW5nO1xyXG4gIH1cclxuICBpZiAobm4gIT0gbnVsbCkge1xyXG4gICAgLy8gU2FuaXR5IGNoZWNrOlxyXG5cclxuICAgIHdoaWxlIChubi5ub2RlTmFtZSA9PSAnbCcpIG5uID0gbm4uZmlyc3RDaGlsZDtcclxuICAgIGlmIChubi5ub2RlTmFtZSAhPSAnYycgfHwgbm4uZmlyc3RDaGlsZC5ub2RlTmFtZSAhPSAnZScpIHtcclxuICAgICAgdGhpcy5wcm9ibGVtKCdkZmZ0YicpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB0aGlzLmN1cnJlbnQgPSBubi5maXJzdENoaWxkO1xyXG4gIH0gZWxzZSB0aGlzLmRvd25fZnJvbV9mKCk7XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmRlbGV0ZV9mcm9tX2YgPSBmdW5jdGlvbiAodG9faW5zZXJ0KSB7XHJcbiAgdmFyIG4gPSB0aGlzLmN1cnJlbnQ7XHJcbiAgdmFyIHAgPSBuLnBhcmVudE5vZGU7XHJcbiAgdmFyIHByZXYgPSBuLnByZXZpb3VzU2libGluZztcclxuICB2YXIgbmV4dCA9IG4ubmV4dFNpYmxpbmc7XHJcbiAgdmFyIG1pZGRsZSA9IHRvX2luc2VydCB8fCAnJztcclxuICB2YXIgbmV3X25vZGUgPSB0aGlzLm1ha2VfZShNYXRoWWxlbVV0aWxzLmdldF92YWx1ZShwcmV2KSArIG1pZGRsZSArIE1hdGhZbGVtVXRpbHMuZ2V0X3ZhbHVlKG5leHQpKTtcclxuICB0aGlzLmN1cnJlbnQgPSBuZXdfbm9kZTtcclxuICB0aGlzLmNhcmV0ID0gTWF0aFlsZW1VdGlscy5nZXRfbGVuZ3RoKHByZXYpO1xyXG4gIHAuaW5zZXJ0QmVmb3JlKG5ld19ub2RlLCBwcmV2KTtcclxuICBwLnJlbW92ZUNoaWxkKHByZXYpO1xyXG4gIHAucmVtb3ZlQ2hpbGQobik7XHJcbiAgcC5yZW1vdmVDaGlsZChuZXh0KTtcclxufTtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUuc3ltYm9sX3RvX25vZGUgPSBmdW5jdGlvbiAoc3ltX25hbWUsIGNvbnRlbnQpIHtcclxuICAvLyBzeW1fbmFtZSBpcyBhIGtleSBpbiB0aGUgc3ltYm9scyBkaWN0aW9uYXJ5XHJcbiAgLy9cclxuICAvLyBjb250ZW50IGlzIGEgbGlzdCBvZiBub2RlcyB0byBpbnNlcnRcclxuICB2YXIgYmFzZSA9IHRoaXMuZG9jLmJhc2U7XHJcbiAgdmFyIHMgPSB0aGlzLnN5bWJvbHNbc3ltX25hbWVdO1xyXG4gIHZhciBmID0gYmFzZS5jcmVhdGVFbGVtZW50KCdmJyk7XHJcbiAgaWYgKCd0eXBlJyBpbiBzKSBmLnNldEF0dHJpYnV0ZSgndHlwZScsIHNbJ3R5cGUnXSk7XHJcbiAgaWYgKCdncm91cCcgaW4gcykgZi5zZXRBdHRyaWJ1dGUoJ2dyb3VwJywgc1snZ3JvdXAnXSk7XHJcbiAgaWYgKHNbJ2NoYXInXSkgZi5zZXRBdHRyaWJ1dGUoJ2MnLCAneWVzJyk7XHJcblxyXG4gIHZhciBmaXJzdF9yZWYgPSAtMTtcclxuICB2YXIgcmVmc19jb3VudCA9IDA7XHJcbiAgdmFyIGxpc3RzID0ge307XHJcbiAgdmFyIGZpcnN0O1xyXG5cclxuICAvLyBNYWtlIHRoZSBiIG5vZGVzIGZvciByZW5kZXJpbmcgZWFjaCBvdXRwdXQgICAgXHJcbiAgZm9yICh2YXIgdCBpbiBzWydvdXRwdXQnXSkge1xyXG4gICAgdmFyIGIgPSBiYXNlLmNyZWF0ZUVsZW1lbnQoJ2InKTtcclxuICAgIGIuc2V0QXR0cmlidXRlKCdwJywgdCk7XHJcblxyXG4gICAgdmFyIG91dCA9IHNbJ291dHB1dCddW3RdO1xyXG4gICAgaWYgKHR5cGVvZiBvdXQgPT0gJ3N0cmluZycpIHtcclxuICAgICAgb3V0ID0gb3V0LnNwbGl0KC8oXFx7XFwkWzAtOV0rKD86XFx7W159XStcXH0pKlxcfSkvZyk7XHJcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb3V0Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdmFyIG0gPSBvdXRbaV0ubWF0Y2goL15cXHtcXCQoWzAtOV0rKSgoPzpcXHtbXn1dK1xcfSkqKVxcfSQvKTtcclxuICAgICAgICBpZiAobSkge1xyXG4gICAgICAgICAgb3V0W2ldID0geydyZWYnOiBwYXJzZUludChtWzFdKX07XHJcbiAgICAgICAgICBpZiAobVsyXS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIHZhciBtbSA9IG1bMl0ubWF0Y2goL1xce1tefV0qXFx9L2cpO1xyXG4gICAgICAgICAgICBvdXRbaV1bJ2QnXSA9IG1tLmxlbmd0aDtcclxuICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBtbS5sZW5ndGg7IGorKykge1xyXG4gICAgICAgICAgICAgIG91dFtpXVsnc2VwJyArIGpdID0gbW1bal0uc3Vic3RyaW5nKDEsIG1tW2pdLmxlbmd0aCAtIDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG91dC5sZW5ndGg7IGkrKykge1xyXG4gICAgICBpZiAodHlwZW9mIG91dFtpXSA9PSAnc3RyaW5nJyB8fCBvdXRbaV0gaW5zdGFuY2VvZiBTdHJpbmcpIHtcclxuICAgICAgICB2YXIgbnQgPSBiYXNlLmNyZWF0ZVRleHROb2RlKG91dFtpXSk7XHJcbiAgICAgICAgYi5hcHBlbmRDaGlsZChudCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdmFyIG50ID0gYmFzZS5jcmVhdGVFbGVtZW50KCdyJyk7XHJcbiAgICAgICAgZm9yICh2YXIgYXR0ciBpbiBvdXRbaV0pIHtcclxuICAgICAgICAgIG50LnNldEF0dHJpYnV0ZShhdHRyLCBvdXRbaV1bYXR0cl0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodCA9PSAnbGF0ZXgnKSB7XHJcbiAgICAgICAgICBpZiAoZmlyc3RfcmVmID09IC0xKSBmaXJzdF9yZWYgPSBvdXRbaV1bJ3JlZiddO1xyXG4gICAgICAgICAgaWYgKCdkJyBpbiBvdXRbaV0pIGxpc3RzW3JlZnNfY291bnRdID0gb3V0W2ldWydkJ107XHJcbiAgICAgICAgICByZWZzX2NvdW50Kys7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGIuYXBwZW5kQ2hpbGQobnQpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBmLmFwcGVuZENoaWxkKGIpO1xyXG4gIH1cclxuICAvLyBOb3cgbWFrZSB0aGUgYyBub2RlcyBmb3Igc3RvcmluZyB0aGUgY29udGVudFxyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcmVmc19jb3VudDsgaSsrKSB7XHJcbiAgICB2YXIgbmMgPSBiYXNlLmNyZWF0ZUVsZW1lbnQoJ2MnKTtcclxuICAgIGlmIChpIGluIGNvbnRlbnQpIHtcclxuICAgICAgdmFyIG5vZGVfbGlzdCA9IGNvbnRlbnRbaV07XHJcbiAgICAgIGZvciAodmFyIHNlID0gMDsgc2UgPCBub2RlX2xpc3QubGVuZ3RoOyBzZSsrKSB7XHJcbiAgICAgICAgbmMuYXBwZW5kQ2hpbGQobm9kZV9saXN0W3NlXS5jbG9uZU5vZGUodHJ1ZSkpO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgbmMuYXBwZW5kQ2hpbGQodGhpcy5tYWtlX2UoJycpKTtcclxuICAgIGlmIChpICsgMSA9PSBmaXJzdF9yZWYpIGZpcnN0ID0gbmMubGFzdENoaWxkO1xyXG4gICAgaWYgKHNbJ2F0dHJzJ10pIHsgZm9yICh2YXIgYSBpbiAoc1snYXR0cnMnXVtpXSB8fCB7fSkpIHsgbmMuc2V0QXR0cmlidXRlKGEsIHNbJ2F0dHJzJ11baV1bYV0pIH0gfVxyXG4gICAgaWYgKGkgaW4gbGlzdHMpIHtcclxuICAgICAgdmFyIHBhciA9IGY7XHJcbiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbGlzdHNbaV07IGorKykge1xyXG4gICAgICAgIHZhciBubCA9IGJhc2UuY3JlYXRlRWxlbWVudCgnbCcpO1xyXG4gICAgICAgIG5sLnNldEF0dHJpYnV0ZSgncycsICcxJyk7XHJcbiAgICAgICAgcGFyLmFwcGVuZENoaWxkKG5sKTtcclxuICAgICAgICBwYXIgPSBubDtcclxuICAgICAgICBpZiAoaiA9PSBsaXN0c1tpXSAtIDEpIG5sLmFwcGVuZENoaWxkKG5jKTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIGYuYXBwZW5kQ2hpbGQobmMpO1xyXG4gIH1cclxuICByZXR1cm4geydmJzogZiwgJ2ZpcnN0JzogZmlyc3R9O1xyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5pbnNlcnRfc3ltYm9sID0gZnVuY3Rpb24gKHN5bV9uYW1lKSB7XHJcbiAgaWYgKHN5bV9uYW1lID09ICdwb3dlcicgJiYgdGhpcy5jYXJldCA9PSAwICYmIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2YnICYmIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmNoaWxkTm9kZXMubGVuZ3RoID09IDEpIHsgdGhpcy5jdXJyZW50ID0gdGhpcy5jdXJyZW50LnBhcmVudE5vZGUucGFyZW50Tm9kZS5uZXh0U2libGluZyB9XHJcblxyXG4gIHZhciBzID0gdGhpcy5zeW1ib2xzW3N5bV9uYW1lXTtcclxuICBpZiAodGhpcy5pc19ibGFja2xpc3RlZChzWyd0eXBlJ10pKSB7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG4gIHZhciBjb250ZW50ID0ge307XHJcbiAgdmFyIGxlZnRfcGllY2UsIHJpZ2h0X3BpZWNlO1xyXG4gIHZhciBjdXIgPSBzWydjdXJyZW50J10gPT0gbnVsbCA/IDAgOiBwYXJzZUludChzWydjdXJyZW50J10pO1xyXG4gIHZhciB0b19yZW1vdmUgPSBbXTtcclxuICB2YXIgdG9fcmVwbGFjZSA9IG51bGw7XHJcbiAgdmFyIHJlcGxhY2VfZiA9IGZhbHNlO1xyXG5cclxuICBpZiAoY3VyID4gMCkge1xyXG4gICAgY3VyLS07XHJcbiAgICBpZiAodGhpcy5zZWxfc3RhdHVzICE9IE1hdGhZbGVtQmFja2VuZC5TRUxfTk9ORSkge1xyXG4gICAgICB2YXIgc2VsID0gdGhpcy5zZWxfZ2V0KCk7XHJcbiAgICAgIHRvX3JlbW92ZSA9IHNlbC5pbnZvbHZlZDtcclxuICAgICAgbGVmdF9waWVjZSA9IHRoaXMubWFrZV9lKE1hdGhZbGVtVXRpbHMuZ2V0X3ZhbHVlKHNlbC5yZW1uYW50KS5zbGljZSgwLCB0aGlzLnNlbF9zdGFydC5jYXJldCkpO1xyXG4gICAgICByaWdodF9waWVjZSA9IHRoaXMubWFrZV9lKE1hdGhZbGVtVXRpbHMuZ2V0X3ZhbHVlKHNlbC5yZW1uYW50KS5zbGljZSh0aGlzLnNlbF9zdGFydC5jYXJldCkpO1xyXG4gICAgICBjb250ZW50W2N1cl0gPSBzZWwubm9kZV9saXN0O1xyXG4gICAgfSBlbHNlIGlmIChzWydjdXJyZW50X3R5cGUnXSA9PSAndG9rZW4nKSB7XHJcbiAgICAgIC8vIElmIHdlJ3JlIGF0IHRoZSBiZWdpbm5pbmcsIHRoZW4gdGhlIHRva2VuIGlzIHRoZSBwcmV2aW91cyBmIG5vZGVcclxuICAgICAgaWYgKHRoaXMuY2FyZXQgPT0gMCAmJiB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nICE9IG51bGwpIHtcclxuICAgICAgICBjb250ZW50W2N1cl0gPSBbdGhpcy5tYWtlX2UoJycpLCB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nLCB0aGlzLm1ha2VfZSgnJyldO1xyXG4gICAgICAgIHRvX3JlcGxhY2UgPSB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nO1xyXG4gICAgICAgIHJlcGxhY2VfZiA9IHRydWU7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gbG9vayBmb3IgWzAtOS5dK3xbYS16QS1aXSBpbW1lZGlhdGVseSBwcmVjZWVkaW5nIHRoZSBjYXJldCBhbmQgdXNlIHRoYXQgYXMgdG9rZW5cclxuICAgICAgICB2YXIgcHJldiA9IE1hdGhZbGVtVXRpbHMuZ2V0X3ZhbHVlKHRoaXMuY3VycmVudCkuc3Vic3RyaW5nKDAsIHRoaXMuY2FyZXQpO1xyXG4gICAgICAgIHZhciB0b2tlbiA9IHByZXYubWF0Y2goL1swLTkuXSskfFthLXpBLVpdJC8pO1xyXG4gICAgICAgIGlmICh0b2tlbiAhPSBudWxsICYmIHRva2VuLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgIHRva2VuID0gdG9rZW5bMF07XHJcbiAgICAgICAgICBsZWZ0X3BpZWNlID0gdGhpcy5tYWtlX2UoTWF0aFlsZW1VdGlscy5nZXRfdmFsdWUodGhpcy5jdXJyZW50KS5zbGljZSgwLCB0aGlzLmNhcmV0IC0gdG9rZW4ubGVuZ3RoKSk7XHJcbiAgICAgICAgICByaWdodF9waWVjZSA9IHRoaXMubWFrZV9lKE1hdGhZbGVtVXRpbHMuZ2V0X3ZhbHVlKHRoaXMuY3VycmVudCkuc2xpY2UodGhpcy5jYXJldCkpO1xyXG4gICAgICAgICAgY29udGVudFtjdXJdID0gW3RoaXMubWFrZV9lKHRva2VuKV07XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIGlmICghcmVwbGFjZV9mICYmIChsZWZ0X3BpZWNlID09IG51bGwgfHwgcmlnaHRfcGllY2UgPT0gbnVsbCkpIHtcclxuICAgIGxlZnRfcGllY2UgPSB0aGlzLm1ha2VfZShNYXRoWWxlbVV0aWxzLmdldF92YWx1ZSh0aGlzLmN1cnJlbnQpLnNsaWNlKDAsIHRoaXMuY2FyZXQpKTtcclxuICAgIHJpZ2h0X3BpZWNlID0gdGhpcy5tYWtlX2UoTWF0aFlsZW1VdGlscy5nZXRfdmFsdWUodGhpcy5jdXJyZW50KS5zbGljZSh0aGlzLmNhcmV0KSk7XHJcbiAgICB0b19yZW1vdmUgPSBbdGhpcy5jdXJyZW50XTtcclxuICB9XHJcblxyXG4gIC8vIEJ5IG5vdzpcclxuICAvLyBcclxuICAvLyBjb250ZW50IGNvbnRhaW5zIHdoYXRldmVyIHdlIHdhbnQgdG8gcHJlLXBvcHVsYXRlIHRoZSAnY3VycmVudCcgZmllbGQgd2l0aCAoaWYgYW55KVxyXG4gIC8vXHJcbiAgLy8gcmlnaHRfcGllY2UgY29udGFpbnMgd2hhdGV2ZXIgY29udGVudCB3YXMgaW4gYW4gaW52b2x2ZWQgbm9kZVxyXG4gIC8vIHRvIHRoZSByaWdodCBvZiB0aGUgY3Vyc29yIGJ1dCBpcyBub3QgcGFydCBvZiB0aGUgaW5zZXJ0aW9uLlxyXG4gIC8vIEFuYWxvZ291c2x5IGZvciBsZWZ0X3BpZWNlXHJcbiAgLy9cclxuICAvLyBUaHVzIGFsbCB3ZSBzaG91bGQgaGF2ZSB0byBkbyBub3cgaXMgc3ltYm9sX3RvX25vZGUoc3ltX3R5cGUsXHJcbiAgLy8gY29udGVudCkgYW5kIHRoZW4gYWRkIHRoZSBsZWZ0X3BpZWNlLCByZXN1bHRpbmcgbm9kZSwgYW5kXHJcbiAgLy8gcmlnaHRfcGllY2UgaW4gdGhhdCBvcmRlci5cclxuICB2YXIgY3VycmVudF9wYXJlbnQgPSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZTtcclxuXHJcbiAgdmFyIHN5bSA9IHRoaXMuc3ltYm9sX3RvX25vZGUoc3ltX25hbWUsIGNvbnRlbnQpO1xyXG4gIHZhciBmID0gc3ltLmY7XHJcblxyXG4gIHZhciBuZXh0ID0gdGhpcy5jdXJyZW50Lm5leHRTaWJsaW5nO1xyXG5cclxuICBpZiAocmVwbGFjZV9mKSB7XHJcbiAgICBjdXJyZW50X3BhcmVudC5yZXBsYWNlQ2hpbGQoZiwgdG9fcmVwbGFjZSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGlmICh0b19yZW1vdmUubGVuZ3RoID09IDApIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuY3VycmVudCk7XHJcblxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b19yZW1vdmUubGVuZ3RoOyBpKyspIHtcclxuICAgICAgaWYgKG5leHQgPT0gdG9fcmVtb3ZlW2ldKSBuZXh0ID0gbmV4dC5uZXh0U2libGluZztcclxuICAgICAgY3VycmVudF9wYXJlbnQucmVtb3ZlQ2hpbGQodG9fcmVtb3ZlW2ldKTtcclxuICAgIH1cclxuICAgIGN1cnJlbnRfcGFyZW50Lmluc2VydEJlZm9yZShsZWZ0X3BpZWNlLCBuZXh0KTtcclxuICAgIGN1cnJlbnRfcGFyZW50Lmluc2VydEJlZm9yZShmLCBuZXh0KTtcclxuICAgIGN1cnJlbnRfcGFyZW50Lmluc2VydEJlZm9yZShyaWdodF9waWVjZSwgbmV4dCk7XHJcbiAgfVxyXG5cclxuICB0aGlzLmNhcmV0ID0gMDtcclxuICB0aGlzLmN1cnJlbnQgPSBmO1xyXG4gIGlmIChzWydjaGFyJ10pIHtcclxuICAgIHRoaXMuY3VycmVudCA9IHRoaXMuY3VycmVudC5uZXh0U2libGluZztcclxuICB9IGVsc2UgdGhpcy5kb3duX2Zyb21fZl90b19ibGFuaygpO1xyXG5cclxuICB0aGlzLnNlbF9jbGVhcigpO1xyXG4gIHRoaXMuY2hlY2twb2ludCgpO1xyXG4gIHJldHVybiB0cnVlO1xyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5zZWxfZ2V0ID0gZnVuY3Rpb24gKCkge1xyXG4gIGlmICh0aGlzLnNlbF9zdGF0dXMgPT0gTWF0aFlsZW1CYWNrZW5kLlNFTF9OT05FKSB7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbiAgdmFyIGludm9sdmVkID0gW107XHJcbiAgdmFyIG5vZGVfbGlzdCA9IFtdO1xyXG4gIHZhciByZW1uYW50ID0gbnVsbDtcclxuXHJcbiAgaWYgKHRoaXMuc2VsX3N0YXJ0Lm5vZGUgPT0gdGhpcy5zZWxfZW5kLm5vZGUpIHtcclxuICAgIHJldHVybiB7J25vZGVfbGlzdCc6IFt0aGlzLm1ha2VfZShNYXRoWWxlbVV0aWxzLmdldF92YWx1ZSh0aGlzLnNlbF9zdGFydC5ub2RlKS5zdWJzdHJpbmcodGhpcy5zZWxfc3RhcnQuY2FyZXQsIHRoaXMuc2VsX2VuZC5jYXJldCkpXSxcclxuICAgICAgJ3JlbW5hbnQnOiB0aGlzLm1ha2VfZShNYXRoWWxlbVV0aWxzLmdldF92YWx1ZSh0aGlzLnNlbF9zdGFydC5ub2RlKS5zdWJzdHJpbmcoMCwgdGhpcy5zZWxfc3RhcnQuY2FyZXQpICsgTWF0aFlsZW1VdGlscy5nZXRfdmFsdWUodGhpcy5zZWxfZW5kLm5vZGUpLnN1YnN0cmluZyh0aGlzLnNlbF9lbmQuY2FyZXQpKSxcclxuICAgICAgJ2ludm9sdmVkJzogW3RoaXMuc2VsX3N0YXJ0Lm5vZGVdfTtcclxuICB9XHJcblxyXG4gIG5vZGVfbGlzdC5wdXNoKHRoaXMubWFrZV9lKE1hdGhZbGVtVXRpbHMuZ2V0X3ZhbHVlKHRoaXMuc2VsX3N0YXJ0Lm5vZGUpLnN1YnN0cmluZyh0aGlzLnNlbF9zdGFydC5jYXJldCkpKTtcclxuICBpbnZvbHZlZC5wdXNoKHRoaXMuc2VsX3N0YXJ0Lm5vZGUpO1xyXG4gIGludm9sdmVkLnB1c2godGhpcy5zZWxfZW5kLm5vZGUpO1xyXG4gIHJlbW5hbnQgPSB0aGlzLm1ha2VfZShNYXRoWWxlbVV0aWxzLmdldF92YWx1ZSh0aGlzLnNlbF9zdGFydC5ub2RlKS5zdWJzdHJpbmcoMCwgdGhpcy5zZWxfc3RhcnQuY2FyZXQpICsgTWF0aFlsZW1VdGlscy5nZXRfdmFsdWUodGhpcy5zZWxfZW5kLm5vZGUpLnN1YnN0cmluZyh0aGlzLnNlbF9lbmQuY2FyZXQpKTtcclxuICB2YXIgbiA9IHRoaXMuc2VsX3N0YXJ0Lm5vZGUubmV4dFNpYmxpbmc7XHJcbiAgd2hpbGUgKG4gIT0gbnVsbCAmJiBuICE9IHRoaXMuc2VsX2VuZC5ub2RlKSB7XHJcbiAgICBpbnZvbHZlZC5wdXNoKG4pO1xyXG4gICAgbm9kZV9saXN0LnB1c2gobik7XHJcbiAgICBuID0gbi5uZXh0U2libGluZztcclxuICB9XHJcbiAgbm9kZV9saXN0LnB1c2godGhpcy5tYWtlX2UoTWF0aFlsZW1VdGlscy5nZXRfdmFsdWUodGhpcy5zZWxfZW5kLm5vZGUpLnN1YnN0cmluZygwLCB0aGlzLnNlbF9lbmQuY2FyZXQpKSk7XHJcbiAgcmV0dXJuIHsnbm9kZV9saXN0Jzogbm9kZV9saXN0LFxyXG4gICAgJ3JlbW5hbnQnOiByZW1uYW50LFxyXG4gICAgJ2ludm9sdmVkJzogaW52b2x2ZWQsXHJcbiAgICAnY3Vyc29yJzogMH07XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLm1ha2VfZSA9IGZ1bmN0aW9uICh0ZXh0KSB7XHJcbiAgdmFyIGJhc2UgPSB0aGlzLmRvYy5iYXNlO1xyXG4gIHZhciBuZXdfbm9kZSA9IGJhc2UuY3JlYXRlRWxlbWVudCgnZScpO1xyXG4gIG5ld19ub2RlLmFwcGVuZENoaWxkKGJhc2UuY3JlYXRlVGV4dE5vZGUodGV4dCkpO1xyXG4gIHJldHVybiBuZXdfbm9kZTtcclxufTtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUuaW5zZXJ0X3N0cmluZyA9IGZ1bmN0aW9uIChzKSB7XHJcbiAgaWYgKHRoaXMuc2VsX3N0YXR1cyAhPSBNYXRoWWxlbUJhY2tlbmQuU0VMX05PTkUpIHtcclxuICAgIHRoaXMuc2VsX2RlbGV0ZSgpO1xyXG4gICAgdGhpcy5zZWxfY2xlYXIoKTtcclxuICB9XHJcbiAgaWYgKHMgPT0gJyonICYmIHRoaXMuY2hlY2tfZm9yX3Bvd2VyKCkpIHJldHVybjtcclxuICBpZiAodGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQpIHsgdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNwbGljZSh0aGlzLmNhcmV0LCBzKSB9IGVsc2UgeyB0aGlzLmN1cnJlbnQuYXBwZW5kQ2hpbGQodGhpcy5kb2MuYmFzZS5jcmVhdGVUZXh0Tm9kZShzKSkgfVxyXG4gIHRoaXMuY2FyZXQgKz0gcy5sZW5ndGg7XHJcbiAgdGhpcy5jaGVja3BvaW50KCk7XHJcbiAgaWYgKHRoaXMuYXV0b3JlcGxhY2UpIHRoaXMuY2hlY2tfZm9yX3N5bWJvbCgpO1xyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5zZWxfY29weSA9IGZ1bmN0aW9uICgpIHtcclxuICB2YXIgc2VsID0gdGhpcy5zZWxfZ2V0KCk7XHJcbiAgaWYgKCFzZWwpIHJldHVybjtcclxuICBNYXRoWWxlbUJhY2tlbmQuY2xpcGJvYXJkID0gW107XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZWwubm9kZV9saXN0Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICBNYXRoWWxlbUJhY2tlbmQuY2xpcGJvYXJkLnB1c2goc2VsLm5vZGVfbGlzdFtpXS5jbG9uZU5vZGUodHJ1ZSkpO1xyXG4gIH1cclxuICB0aGlzLnNlbF9jbGVhcigpO1xyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5zZWxfY3V0ID0gZnVuY3Rpb24gKCkge1xyXG4gIHZhciBub2RlX2xpc3QgPSB0aGlzLnNlbF9kZWxldGUoKTtcclxuICBpZiAoIW5vZGVfbGlzdCkgcmV0dXJuO1xyXG4gIE1hdGhZbGVtQmFja2VuZC5jbGlwYm9hcmQgPSBbXTtcclxuICBmb3IgKHZhciBpID0gMDsgaSA8IG5vZGVfbGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgTWF0aFlsZW1CYWNrZW5kLmNsaXBib2FyZC5wdXNoKG5vZGVfbGlzdFtpXS5jbG9uZU5vZGUodHJ1ZSkpO1xyXG4gIH1cclxuICB0aGlzLnNlbF9jbGVhcigpO1xyXG4gIHRoaXMuY2hlY2twb2ludCgpO1xyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5pbnNlcnRfbm9kZXMgPSBmdW5jdGlvbiAobm9kZV9saXN0LCBtb3ZlX2N1cnNvcikge1xyXG4gIHZhciByZWFsX2NsaXBib2FyZCA9IFtdO1xyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbm9kZV9saXN0Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICByZWFsX2NsaXBib2FyZC5wdXNoKG5vZGVfbGlzdFtpXS5jbG9uZU5vZGUodHJ1ZSkpO1xyXG4gIH1cclxuXHJcbiAgaWYgKCF0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZCkgdGhpcy5jdXJyZW50LmFwcGVuZENoaWxkKHRoaXMuZG9jLmJhc2UuY3JlYXRlVGV4dE5vZGUoJycpKTtcclxuICBpZiAocmVhbF9jbGlwYm9hcmQubGVuZ3RoID09IDEpIHtcclxuICAgIGlmIChyZWFsX2NsaXBib2FyZFswXS5maXJzdENoaWxkKSB7XHJcbiAgICAgIHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZSA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcoMCwgdGhpcy5jYXJldCkgKyByZWFsX2NsaXBib2FyZFswXS5maXJzdENoaWxkLm5vZGVWYWx1ZSArIHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcodGhpcy5jYXJldCk7XHJcbiAgICAgIGlmIChtb3ZlX2N1cnNvcikgdGhpcy5jYXJldCArPSByZWFsX2NsaXBib2FyZFswXS5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGg7XHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIHZhciBubiA9IHRoaXMubWFrZV9lKE1hdGhZbGVtVXRpbHMuZ2V0X3ZhbHVlKHJlYWxfY2xpcGJvYXJkW3JlYWxfY2xpcGJvYXJkLmxlbmd0aCAtIDFdKSArIHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcodGhpcy5jYXJldCkpO1xyXG4gICAgdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZygwLCB0aGlzLmNhcmV0KSArIE1hdGhZbGVtVXRpbHMuZ2V0X3ZhbHVlKHJlYWxfY2xpcGJvYXJkWzBdKTtcclxuICAgIGlmICh0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmcgPT0gbnVsbCkgeyB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5hcHBlbmRDaGlsZChubikgfSBlbHNlIHsgdGhpcy5jdXJyZW50LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5uLCB0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmcpIH1cclxuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgcmVhbF9jbGlwYm9hcmQubGVuZ3RoIC0gMTsgaSsrKSB7IHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShyZWFsX2NsaXBib2FyZFtpXSwgbm4pIH1cclxuICAgIGlmIChtb3ZlX2N1cnNvcikge1xyXG4gICAgICB0aGlzLmN1cnJlbnQgPSBubjtcclxuICAgICAgdGhpcy5jYXJldCA9IE1hdGhZbGVtVXRpbHMuZ2V0X2xlbmd0aChyZWFsX2NsaXBib2FyZFtyZWFsX2NsaXBib2FyZC5sZW5ndGggLSAxXSk7XHJcbiAgICB9XHJcbiAgfVxyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5zZWxfcGFzdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgdGhpcy5zZWxfZGVsZXRlKCk7XHJcbiAgdGhpcy5zZWxfY2xlYXIoKTtcclxuICBpZiAoIShNYXRoWWxlbUJhY2tlbmQuY2xpcGJvYXJkKSB8fCBNYXRoWWxlbUJhY2tlbmQuY2xpcGJvYXJkLmxlbmd0aCA9PSAwKSByZXR1cm47XHJcbiAgdGhpcy5pbnNlcnRfbm9kZXMoTWF0aFlsZW1CYWNrZW5kLmNsaXBib2FyZCwgdHJ1ZSk7XHJcbiAgdGhpcy5jaGVja3BvaW50KCk7XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLnNlbF9jbGVhciA9IGZ1bmN0aW9uICgpIHtcclxuICB0aGlzLnNlbF9zdGFydCA9IG51bGw7XHJcbiAgdGhpcy5zZWxfZW5kID0gbnVsbDtcclxuICB0aGlzLnNlbF9zdGF0dXMgPSBNYXRoWWxlbUJhY2tlbmQuU0VMX05PTkU7XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLnNlbF9kZWxldGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgdmFyIHNlbCA9IHRoaXMuc2VsX2dldCgpO1xyXG4gIGlmICghc2VsKSByZXR1cm4gbnVsbDtcclxuICB2YXIgc2VsX3BhcmVudCA9IHNlbC5pbnZvbHZlZFswXS5wYXJlbnROb2RlO1xyXG4gIHZhciBzZWxfcHJldiA9IHNlbC5pbnZvbHZlZFswXS5wcmV2aW91c1NpYmxpbmc7XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZWwuaW52b2x2ZWQubGVuZ3RoOyBpKyspIHtcclxuICAgIHZhciBuID0gc2VsLmludm9sdmVkW2ldO1xyXG4gICAgc2VsX3BhcmVudC5yZW1vdmVDaGlsZChuKTtcclxuICB9XHJcbiAgaWYgKHNlbF9wcmV2ID09IG51bGwpIHtcclxuICAgIGlmIChzZWxfcGFyZW50LmZpcnN0Q2hpbGQgPT0gbnVsbCkgeyBzZWxfcGFyZW50LmFwcGVuZENoaWxkKHNlbC5yZW1uYW50KSB9IGVsc2UgeyBzZWxfcGFyZW50Lmluc2VydEJlZm9yZShzZWwucmVtbmFudCwgc2VsX3BhcmVudC5maXJzdENoaWxkKSB9XHJcbiAgfSBlbHNlIGlmIChzZWxfcHJldi5ub2RlTmFtZSA9PSAnZicpIHtcclxuICAgIGlmIChzZWxfcHJldi5uZXh0U2libGluZyA9PSBudWxsKSB7IHNlbF9wYXJlbnQuYXBwZW5kQ2hpbGQoc2VsLnJlbW5hbnQpIH0gZWxzZSB7IHNlbF9wYXJlbnQuaW5zZXJ0QmVmb3JlKHNlbC5yZW1uYW50LCBzZWxfcHJldi5uZXh0U2libGluZykgfVxyXG4gIH1cclxuICB0aGlzLmN1cnJlbnQgPSBzZWwucmVtbmFudDtcclxuICB0aGlzLmNhcmV0ID0gdGhpcy5zZWxfc3RhcnQuY2FyZXQ7XHJcbiAgcmV0dXJuIHNlbC5ub2RlX2xpc3Q7XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLnNlbF9hbGwgPSBmdW5jdGlvbiAoKSB7XHJcbiAgdGhpcy5ob21lKCk7XHJcbiAgdGhpcy5zZXRfc2VsX3N0YXJ0KCk7XHJcbiAgdGhpcy5lbmQoKTtcclxuICB0aGlzLnNldF9zZWxfZW5kKCk7XHJcbiAgaWYgKHRoaXMuc2VsX3N0YXJ0Lm5vZGUgIT0gdGhpcy5zZWxfZW5kLm5vZGUgfHwgdGhpcy5zZWxfc3RhcnQuY2FyZXQgIT0gdGhpcy5zZWxfZW5kLmNhcmV0KSB7IHRoaXMuc2VsX3N0YXR1cyA9IE1hdGhZbGVtQmFja2VuZC5TRUxfQ1VSU09SX0FUX0VORCB9XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLnNlbF9yaWdodCA9IGZ1bmN0aW9uICgpIHtcclxuICBpZiAodGhpcy5zZWxfc3RhdHVzID09IE1hdGhZbGVtQmFja2VuZC5TRUxfTk9ORSkge1xyXG4gICAgdGhpcy5zZXRfc2VsX3N0YXJ0KCk7XHJcbiAgICB0aGlzLnNlbF9zdGF0dXMgPSBNYXRoWWxlbUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9FTkQ7XHJcbiAgfVxyXG4gIGlmICh0aGlzLmNhcmV0ID49IE1hdGhZbGVtVXRpbHMuZ2V0X2xlbmd0aCh0aGlzLmN1cnJlbnQpKSB7XHJcbiAgICB2YXIgbm4gPSB0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmc7XHJcbiAgICBpZiAobm4gIT0gbnVsbCkge1xyXG4gICAgICB0aGlzLmN1cnJlbnQgPSBubi5uZXh0U2libGluZztcclxuICAgICAgdGhpcy5jYXJldCA9IDA7XHJcbiAgICAgIHRoaXMuc2V0X3NlbF9ib3VuZGFyeShNYXRoWWxlbUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9FTkQpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5zZXRfc2VsX2JvdW5kYXJ5KE1hdGhZbGVtQmFja2VuZC5TRUxfQ1VSU09SX0FUX0VORCk7XHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIHRoaXMuY2FyZXQgKz0gMTtcclxuICAgIHRoaXMuc2V0X3NlbF9ib3VuZGFyeShNYXRoWWxlbUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9FTkQpO1xyXG4gIH1cclxuICBpZiAodGhpcy5zZWxfc3RhcnQubm9kZSA9PSB0aGlzLnNlbF9lbmQubm9kZSAmJiB0aGlzLnNlbF9zdGFydC5jYXJldCA9PSB0aGlzLnNlbF9lbmQuY2FyZXQpIHtcclxuICAgIHRoaXMuc2VsX3N0YXR1cyA9IE1hdGhZbGVtQmFja2VuZC5TRUxfTk9ORTtcclxuICB9XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLnNldF9zZWxfYm91bmRhcnkgPSBmdW5jdGlvbiAoc3N0YXR1cywgbW91c2UpIHtcclxuICBpZiAodGhpcy5zZWxfc3RhdHVzID09IE1hdGhZbGVtQmFja2VuZC5TRUxfTk9ORSB8fCBtb3VzZSkgdGhpcy5zZWxfc3RhdHVzID0gc3N0YXR1cztcclxuICBpZiAodGhpcy5zZWxfc3RhdHVzID09IE1hdGhZbGVtQmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUKSB7IHRoaXMuc2V0X3NlbF9zdGFydCgpIH0gZWxzZSBpZiAodGhpcy5zZWxfc3RhdHVzID09IE1hdGhZbGVtQmFja2VuZC5TRUxfQ1VSU09SX0FUX0VORCkgeyB0aGlzLnNldF9zZWxfZW5kKCkgfVxyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5zZWxfbGVmdCA9IGZ1bmN0aW9uICgpIHtcclxuICBpZiAodGhpcy5zZWxfc3RhdHVzID09IE1hdGhZbGVtQmFja2VuZC5TRUxfTk9ORSkge1xyXG4gICAgdGhpcy5zZXRfc2VsX2VuZCgpO1xyXG4gICAgdGhpcy5zZWxfc3RhdHVzID0gTWF0aFlsZW1CYWNrZW5kLlNFTF9DVVJTT1JfQVRfU1RBUlQ7XHJcbiAgfVxyXG4gIGlmICh0aGlzLmNhcmV0IDw9IDApIHtcclxuICAgIHZhciBubiA9IHRoaXMuY3VycmVudC5wcmV2aW91c1NpYmxpbmc7XHJcbiAgICBpZiAobm4gIT0gbnVsbCkge1xyXG4gICAgICB0aGlzLmN1cnJlbnQgPSBubi5wcmV2aW91c1NpYmxpbmc7XHJcbiAgICAgIHRoaXMuY2FyZXQgPSBNYXRoWWxlbVV0aWxzLmdldF9sZW5ndGgodGhpcy5jdXJyZW50KTtcclxuICAgICAgdGhpcy5zZXRfc2VsX2JvdW5kYXJ5KE1hdGhZbGVtQmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuc2V0X3NlbF9ib3VuZGFyeShNYXRoWWxlbUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9TVEFSVCk7XHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIHRoaXMuY2FyZXQgLT0gMTtcclxuICAgIHRoaXMuc2V0X3NlbF9ib3VuZGFyeShNYXRoWWxlbUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9TVEFSVCk7XHJcbiAgfVxyXG4gIGlmICh0aGlzLnNlbF9zdGFydC5ub2RlID09IHRoaXMuc2VsX2VuZC5ub2RlICYmIHRoaXMuc2VsX3N0YXJ0LmNhcmV0ID09IHRoaXMuc2VsX2VuZC5jYXJldCkge1xyXG4gICAgdGhpcy5zZWxfc3RhdHVzID0gTWF0aFlsZW1CYWNrZW5kLlNFTF9OT05FO1xyXG4gIH1cclxufTtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUubGlzdF9leHRlbmRfY29weV9yaWdodCA9IGZ1bmN0aW9uICgpIHsgdGhpcy5saXN0X2V4dGVuZCgncmlnaHQnLCB0cnVlKSB9O1xyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmxpc3RfZXh0ZW5kX2NvcHlfbGVmdCA9IGZ1bmN0aW9uICgpIHsgdGhpcy5saXN0X2V4dGVuZCgnbGVmdCcsIHRydWUpIH07XHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUubGlzdF9leHRlbmRfcmlnaHQgPSBmdW5jdGlvbiAoKSB7IHRoaXMubGlzdF9leHRlbmQoJ3JpZ2h0JywgZmFsc2UpIH07XHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUubGlzdF9leHRlbmRfbGVmdCA9IGZ1bmN0aW9uICgpIHsgdGhpcy5saXN0X2V4dGVuZCgnbGVmdCcsIGZhbHNlKSB9O1xyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmxpc3RfZXh0ZW5kX3VwID0gZnVuY3Rpb24gKCkgeyB0aGlzLmxpc3RfZXh0ZW5kKCd1cCcsIGZhbHNlKSB9O1xyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmxpc3RfZXh0ZW5kX2Rvd24gPSBmdW5jdGlvbiAoKSB7IHRoaXMubGlzdF9leHRlbmQoJ2Rvd24nLCBmYWxzZSkgfTtcclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5saXN0X2V4dGVuZF9jb3B5X3VwID0gZnVuY3Rpb24gKCkgeyB0aGlzLmxpc3RfZXh0ZW5kKCd1cCcsIHRydWUpIH07XHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUubGlzdF9leHRlbmRfY29weV9kb3duID0gZnVuY3Rpb24gKCkgeyB0aGlzLmxpc3RfZXh0ZW5kKCdkb3duJywgdHJ1ZSkgfTtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUubGlzdF92ZXJ0aWNhbF9tb3ZlID0gZnVuY3Rpb24gKGRvd24pIHtcclxuICB2YXIgbiA9IHRoaXMuY3VycmVudDtcclxuICB3aGlsZSAobi5wYXJlbnROb2RlICYmIG4ucGFyZW50Tm9kZS5wYXJlbnROb2RlICYmICEobi5ub2RlTmFtZSA9PSAnYycgJiYgbi5wYXJlbnROb2RlLm5vZGVOYW1lID09ICdsJyAmJiBuLnBhcmVudE5vZGUucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnbCcpKSB7XHJcbiAgICBuID0gbi5wYXJlbnROb2RlO1xyXG4gIH1cclxuICBpZiAoIW4ucGFyZW50Tm9kZSkgcmV0dXJuO1xyXG4gIHZhciBwb3MgPSAxO1xyXG4gIHZhciBjYyA9IG47XHJcbiAgd2hpbGUgKGNjLnByZXZpb3VzU2libGluZyAhPSBudWxsKSB7XHJcbiAgICBwb3MrKztcclxuICAgIGNjID0gY2MucHJldmlvdXNTaWJsaW5nO1xyXG4gIH1cclxuICB2YXIgbmV3X2wgPSBkb3duID8gbi5wYXJlbnROb2RlLm5leHRTaWJsaW5nIDogbi5wYXJlbnROb2RlLnByZXZpb3VzU2libGluZztcclxuICBpZiAoIW5ld19sKSByZXR1cm47XHJcbiAgdmFyIGlkeCA9IDE7XHJcbiAgdmFyIG5uID0gbmV3X2wuZmlyc3RDaGlsZDtcclxuICB3aGlsZSAoaWR4IDwgcG9zKSB7XHJcbiAgICBpZHgrKztcclxuICAgIG5uID0gbm4ubmV4dFNpYmxpbmc7XHJcbiAgfVxyXG4gIHRoaXMuY3VycmVudCA9IG5uLmZpcnN0Q2hpbGQ7XHJcbiAgdGhpcy5jYXJldCA9IGRvd24gPyAwIDogTWF0aFlsZW1VdGlscy5nZXRfbGVuZ3RoKHRoaXMuY3VycmVudCk7XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmxpc3RfZXh0ZW5kID0gZnVuY3Rpb24gKGRpcmVjdGlvbiwgY29weSkge1xyXG4gIHZhciBiYXNlID0gdGhpcy5kb2MuYmFzZTtcclxuICB2YXIgdmVydGljYWwgPSBkaXJlY3Rpb24gPT0gJ3VwJyB8fCBkaXJlY3Rpb24gPT0gJ2Rvd24nO1xyXG4gIHZhciBiZWZvcmUgPSBkaXJlY3Rpb24gPT0gJ3VwJyB8fCBkaXJlY3Rpb24gPT0gJ2xlZnQnO1xyXG4gIHZhciB0aGlzX25hbWUgPSB2ZXJ0aWNhbCA/ICdsJyA6ICdjJztcclxuICB2YXIgbiA9IHRoaXMuY3VycmVudDtcclxuICB3aGlsZSAobi5wYXJlbnROb2RlICYmICEobi5ub2RlTmFtZSA9PSB0aGlzX25hbWUgJiYgbi5wYXJlbnROb2RlLm5vZGVOYW1lID09ICdsJykpIHtcclxuICAgIG4gPSBuLnBhcmVudE5vZGU7XHJcbiAgfVxyXG4gIGlmICghbi5wYXJlbnROb2RlKSByZXR1cm47XHJcbiAgdmFyIHRvX2luc2VydDtcclxuXHJcbiAgLy8gY2hlY2sgaWYgMkQgYW5kIGhvcml6b250YWwgYW5kIGV4dGVuZCBhbGwgdGhlIG90aGVyIHJvd3MgaWYgc28gXHJcbiAgaWYgKCF2ZXJ0aWNhbCAmJiBuLnBhcmVudE5vZGUucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnbCcpIHtcclxuICAgIHRvX2luc2VydCA9IGJhc2UuY3JlYXRlRWxlbWVudCgnYycpO1xyXG4gICAgdG9faW5zZXJ0LmFwcGVuZENoaWxkKHRoaXMubWFrZV9lKCcnKSk7XHJcbiAgICB2YXIgcG9zID0gMTtcclxuICAgIHZhciBjYyA9IG47XHJcbiAgICB3aGlsZSAoY2MucHJldmlvdXNTaWJsaW5nICE9IG51bGwpIHtcclxuICAgICAgcG9zKys7XHJcbiAgICAgIGNjID0gY2MucHJldmlvdXNTaWJsaW5nO1xyXG4gICAgfVxyXG4gICAgdmFyIHRvX21vZGlmeSA9IFtdO1xyXG4gICAgdmFyIGl0ZXJhdG9yID0gdGhpcy5kb2MueHBhdGhfbGlzdCgnLi9sL2NbcG9zaXRpb24oKT0nICsgcG9zICsgJ10nLCBuLnBhcmVudE5vZGUucGFyZW50Tm9kZSk7XHJcbiAgICB0cnkgeyBmb3IgKHZhciBubiA9IGl0ZXJhdG9yLml0ZXJhdGVOZXh0KCk7IG5uICE9IG51bGw7IG5uID0gaXRlcmF0b3IuaXRlcmF0ZU5leHQoKSkgeyB0b19tb2RpZnkucHVzaChubikgfSB9IGNhdGNoIChlKSB7IHRoaXMuZmlyZV9ldmVudCgnZXJyb3InLCB7J21lc3NhZ2UnOiAnWE1MIG1vZGlmaWVkIGR1cmluZyBpdGVyYXRpb24/ICcgKyBlfSkgfVxyXG4gICAgZm9yICh2YXIgaiA9IDA7IGogPCB0b19tb2RpZnkubGVuZ3RoOyBqKyspIHtcclxuICAgICAgdmFyIG5uID0gdG9fbW9kaWZ5W2pdO1xyXG4gICAgICBpZiAoY29weSkgbm4ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobm4uY2xvbmVOb2RlKHRydWUpLCBiZWZvcmUgPyBubiA6IG5uLm5leHRTaWJsaW5nKTtcclxuICAgICAgZWxzZSBubi5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0b19pbnNlcnQuY2xvbmVOb2RlKHRydWUpLCBiZWZvcmUgPyBubiA6IG5uLm5leHRTaWJsaW5nKTtcclxuICAgICAgbm4ucGFyZW50Tm9kZS5zZXRBdHRyaWJ1dGUoJ3MnLCBwYXJzZUludChubi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZSgncycpKSArIDEpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5jdXJyZW50ID0gYmVmb3JlID8gbi5wcmV2aW91c1NpYmxpbmcubGFzdENoaWxkIDogbi5uZXh0U2libGluZy5maXJzdENoaWxkO1xyXG4gICAgdGhpcy5jYXJldCA9IE1hdGhZbGVtVXRpbHMuZ2V0X2xlbmd0aCh0aGlzLmN1cnJlbnQpO1xyXG4gICAgdGhpcy5jaGVja3BvaW50KCk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBpZiAoY29weSkge1xyXG4gICAgdG9faW5zZXJ0ID0gbi5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGlmICh2ZXJ0aWNhbCkge1xyXG4gICAgICB0b19pbnNlcnQgPSBiYXNlLmNyZWF0ZUVsZW1lbnQoJ2wnKTtcclxuICAgICAgdG9faW5zZXJ0LnNldEF0dHJpYnV0ZSgncycsIG4uZ2V0QXR0cmlidXRlKCdzJykpO1xyXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhcnNlSW50KG4uZ2V0QXR0cmlidXRlKCdzJykpOyBpKyspIHtcclxuICAgICAgICB2YXIgYyA9IGJhc2UuY3JlYXRlRWxlbWVudCgnYycpO1xyXG4gICAgICAgIGMuYXBwZW5kQ2hpbGQodGhpcy5tYWtlX2UoJycpKTtcclxuICAgICAgICB0b19pbnNlcnQuYXBwZW5kQ2hpbGQoYyk7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRvX2luc2VydCA9IGJhc2UuY3JlYXRlRWxlbWVudCgnYycpO1xyXG4gICAgICB0b19pbnNlcnQuYXBwZW5kQ2hpbGQodGhpcy5tYWtlX2UoJycpKTtcclxuICAgIH1cclxuICB9XHJcbiAgbi5wYXJlbnROb2RlLnNldEF0dHJpYnV0ZSgncycsIHBhcnNlSW50KG4ucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoJ3MnKSkgKyAxKTtcclxuICBuLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRvX2luc2VydCwgYmVmb3JlID8gbiA6IG4ubmV4dFNpYmxpbmcpO1xyXG4gIGlmICh2ZXJ0aWNhbCkgdGhpcy5jdXJyZW50ID0gdG9faW5zZXJ0LmZpcnN0Q2hpbGQuZmlyc3RDaGlsZDtcclxuICBlbHNlIHRoaXMuY3VycmVudCA9IHRvX2luc2VydC5maXJzdENoaWxkO1xyXG4gIHRoaXMuY2FyZXQgPSAwO1xyXG4gIHRoaXMuY2hlY2twb2ludCgpO1xyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5saXN0X3JlbW92ZV9jb2wgPSBmdW5jdGlvbiAoKSB7XHJcbiAgdmFyIG4gPSB0aGlzLmN1cnJlbnQ7XHJcbiAgd2hpbGUgKG4ucGFyZW50Tm9kZSAmJiBuLnBhcmVudE5vZGUucGFyZW50Tm9kZSAmJiAhKG4ubm9kZU5hbWUgPT0gJ2MnICYmIG4ucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnbCcgJiYgbi5wYXJlbnROb2RlLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2wnKSkge1xyXG4gICAgbiA9IG4ucGFyZW50Tm9kZTtcclxuICB9XHJcbiAgaWYgKCFuLnBhcmVudE5vZGUpIHJldHVybjtcclxuXHJcbiAgLy8gRG9uJ3QgcmVtb3ZlIGlmIHRoZXJlIGlzIG9ubHkgYSBzaW5nbGUgY29sdW1uOlxyXG4gIGlmIChuLnByZXZpb3VzU2libGluZyAhPSBudWxsKSB7XHJcbiAgICB0aGlzLmN1cnJlbnQgPSBuLnByZXZpb3VzU2libGluZy5sYXN0Q2hpbGQ7XHJcbiAgICB0aGlzLmNhcmV0ID0gTWF0aFlsZW1VdGlscy5nZXRfbGVuZ3RoKHRoaXMuY3VycmVudCk7XHJcbiAgfSBlbHNlIGlmIChuLm5leHRTaWJsaW5nICE9IG51bGwpIHtcclxuICAgIHRoaXMuY3VycmVudCA9IG4ubmV4dFNpYmxpbmcuZmlyc3RDaGlsZDtcclxuICAgIHRoaXMuY2FyZXQgPSAwO1xyXG4gIH0gZWxzZSByZXR1cm47XHJcblxyXG4gIHZhciBwb3MgPSAxO1xyXG4gIHZhciBjYyA9IG47XHJcblxyXG4gIC8vIEZpbmQgcG9zaXRpb24gb2YgY29sdW1uXHJcbiAgd2hpbGUgKGNjLnByZXZpb3VzU2libGluZyAhPSBudWxsKSB7XHJcbiAgICBwb3MrKztcclxuICAgIGNjID0gY2MucHJldmlvdXNTaWJsaW5nO1xyXG4gIH1cclxuICB2YXIgdG9fbW9kaWZ5ID0gW107XHJcbiAgdmFyIGl0ZXJhdG9yID0gdGhpcy5kb2MueHBhdGhfbGlzdCgnLi9sL2NbcG9zaXRpb24oKT0nICsgcG9zICsgJ10nLCBuLnBhcmVudE5vZGUucGFyZW50Tm9kZSk7XHJcbiAgdHJ5IHsgZm9yICh2YXIgbm4gPSBpdGVyYXRvci5pdGVyYXRlTmV4dCgpOyBubiAhPSBudWxsOyBubiA9IGl0ZXJhdG9yLml0ZXJhdGVOZXh0KCkpIHsgdG9fbW9kaWZ5LnB1c2gobm4pIH0gfSBjYXRjaCAoZSkgeyB0aGlzLmZpcmVfZXZlbnQoJ2Vycm9yJywgeydtZXNzYWdlJzogJ1hNTCBtb2RpZmllZCBkdXJpbmcgaXRlcmF0aW9uPyAnICsgZX0pIH1cclxuICBmb3IgKHZhciBqID0gMDsgaiA8IHRvX21vZGlmeS5sZW5ndGg7IGorKykge1xyXG4gICAgdmFyIG5uID0gdG9fbW9kaWZ5W2pdO1xyXG4gICAgbm4ucGFyZW50Tm9kZS5zZXRBdHRyaWJ1dGUoJ3MnLCBwYXJzZUludChubi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZSgncycpKSAtIDEpO1xyXG4gICAgbm4ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChubik7XHJcbiAgfVxyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5saXN0X3JlbW92ZV9yb3cgPSBmdW5jdGlvbiAoKSB7XHJcbiAgdmFyIG4gPSB0aGlzLmN1cnJlbnQ7XHJcbiAgd2hpbGUgKG4ucGFyZW50Tm9kZSAmJiAhKG4ubm9kZU5hbWUgPT0gJ2wnICYmIG4ucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnbCcpKSB7XHJcbiAgICBuID0gbi5wYXJlbnROb2RlO1xyXG4gIH1cclxuICBpZiAoIW4ucGFyZW50Tm9kZSkgcmV0dXJuO1xyXG4gIC8vIERvbid0IHJlbW92ZSBpZiB0aGVyZSBpcyBvbmx5IGEgc2luZ2xlIHJvdzpcclxuICBpZiAobi5wcmV2aW91c1NpYmxpbmcgIT0gbnVsbCkge1xyXG4gICAgdGhpcy5jdXJyZW50ID0gbi5wcmV2aW91c1NpYmxpbmcubGFzdENoaWxkLmxhc3RDaGlsZDtcclxuICAgIHRoaXMuY2FyZXQgPSBNYXRoWWxlbVV0aWxzLmdldF9sZW5ndGgodGhpcy5jdXJyZW50KTtcclxuICB9IGVsc2UgaWYgKG4ubmV4dFNpYmxpbmcgIT0gbnVsbCkge1xyXG4gICAgdGhpcy5jdXJyZW50ID0gbi5uZXh0U2libGluZy5maXJzdENoaWxkLmZpcnN0Q2hpbGQ7XHJcbiAgICB0aGlzLmNhcmV0ID0gMDtcclxuICB9IGVsc2UgcmV0dXJuO1xyXG5cclxuICBuLnBhcmVudE5vZGUuc2V0QXR0cmlidXRlKCdzJywgcGFyc2VJbnQobi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZSgncycpKSAtIDEpO1xyXG4gIG4ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChuKTtcclxufTtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUubGlzdF9yZW1vdmUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgdmFyIG4gPSB0aGlzLmN1cnJlbnQ7XHJcbiAgd2hpbGUgKG4ucGFyZW50Tm9kZSAmJiAhKG4ubm9kZU5hbWUgPT0gJ2MnICYmIG4ucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnbCcpKSB7XHJcbiAgICBuID0gbi5wYXJlbnROb2RlO1xyXG4gIH1cclxuICBpZiAoIW4ucGFyZW50Tm9kZSkgcmV0dXJuO1xyXG4gIGlmIChuLnBhcmVudE5vZGUucGFyZW50Tm9kZSAmJiBuLnBhcmVudE5vZGUucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnbCcpIHtcclxuICAgIHRoaXMubGlzdF9yZW1vdmVfY29sKCk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG4gIGlmIChuLnByZXZpb3VzU2libGluZyAhPSBudWxsKSB7XHJcbiAgICB0aGlzLmN1cnJlbnQgPSBuLnByZXZpb3VzU2libGluZy5sYXN0Q2hpbGQ7XHJcbiAgICB0aGlzLmNhcmV0ID0gTWF0aFlsZW1VdGlscy5nZXRfbGVuZ3RoKHRoaXMuY3VycmVudCk7XHJcbiAgfSBlbHNlIGlmIChuLm5leHRTaWJsaW5nICE9IG51bGwpIHtcclxuICAgIHRoaXMuY3VycmVudCA9IG4ubmV4dFNpYmxpbmcuZmlyc3RDaGlsZDtcclxuICAgIHRoaXMuY2FyZXQgPSAwO1xyXG4gIH0gZWxzZSByZXR1cm47XHJcbiAgbi5wYXJlbnROb2RlLnNldEF0dHJpYnV0ZSgncycsIHBhcnNlSW50KG4ucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoJ3MnKSkgLSAxKTtcclxuICBuLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobik7XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLnJpZ2h0ID0gZnVuY3Rpb24gKCkge1xyXG4gIHRoaXMuc2VsX2NsZWFyKCk7XHJcbiAgaWYgKHRoaXMuY2FyZXQgPj0gTWF0aFlsZW1VdGlscy5nZXRfbGVuZ3RoKHRoaXMuY3VycmVudCkpIHtcclxuICAgIHZhciBubiA9IHRoaXMuZG9jLnhwYXRoX25vZGUoJ2ZvbGxvd2luZzo6ZVsxXScsIHRoaXMuY3VycmVudCk7XHJcbiAgICBpZiAobm4gIT0gbnVsbCkge1xyXG4gICAgICB0aGlzLmN1cnJlbnQgPSBubjtcclxuICAgICAgdGhpcy5jYXJldCA9IDA7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmZpcmVfZXZlbnQoJ3JpZ2h0X2VuZCcpO1xyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICB0aGlzLmNhcmV0ICs9IDE7XHJcbiAgfVxyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5zcGFjZWJhciA9IGZ1bmN0aW9uICgpIHtcclxuICBpZiAoTWF0aFlsZW1VdGlscy5pc190ZXh0KHRoaXMuY3VycmVudCkpIHRoaXMuaW5zZXJ0X3N0cmluZygnICcpO1xyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5sZWZ0ID0gZnVuY3Rpb24gKCkge1xyXG4gIHRoaXMuc2VsX2NsZWFyKCk7XHJcbiAgaWYgKHRoaXMuY2FyZXQgPD0gMCkge1xyXG4gICAgdmFyIHBuID0gdGhpcy5kb2MueHBhdGhfbm9kZSgncHJlY2VkaW5nOjplWzFdJywgdGhpcy5jdXJyZW50KTtcclxuICAgIGlmIChwbiAhPSBudWxsKSB7XHJcbiAgICAgIHRoaXMuY3VycmVudCA9IHBuO1xyXG4gICAgICB0aGlzLmNhcmV0ID0gTWF0aFlsZW1VdGlscy5nZXRfbGVuZ3RoKHRoaXMuY3VycmVudCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmZpcmVfZXZlbnQoJ2xlZnRfZW5kJyk7XHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIHRoaXMuY2FyZXQgLT0gMTtcclxuICB9XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmRlbGV0ZV9mcm9tX2MgPSBmdW5jdGlvbiAoKSB7XHJcbiAgdmFyIHBvcyA9IDA7XHJcbiAgdmFyIGMgPSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZTtcclxuICB3aGlsZSAoYyAmJiBjLm5vZGVOYW1lID09ICdjJykge1xyXG4gICAgcG9zKys7XHJcbiAgICBjID0gYy5wcmV2aW91c1NpYmxpbmc7XHJcbiAgfVxyXG4gIHZhciBpZHggPSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoJ2RlbGV0ZScpO1xyXG4gIHZhciBzdXJ2aXZvcl9ub2RlID0gdGhpcy5kb2MueHBhdGhfbm9kZSgnLi9jW3Bvc2l0aW9uKCk9JyArIGlkeCArICddJywgdGhpcy5jdXJyZW50LnBhcmVudE5vZGUucGFyZW50Tm9kZSk7XHJcbiAgdmFyIHN1cnZpdm9yX25vZGVzID0gW107XHJcbiAgZm9yICh2YXIgbiA9IHN1cnZpdm9yX25vZGUuZmlyc3RDaGlsZDsgbiAhPSBudWxsOyBuID0gbi5uZXh0U2libGluZykge1xyXG4gICAgc3Vydml2b3Jfbm9kZXMucHVzaChuKTtcclxuICB9XHJcbiAgdGhpcy5jdXJyZW50ID0gdGhpcy5jdXJyZW50LnBhcmVudE5vZGUucGFyZW50Tm9kZTtcclxuICB0aGlzLmRlbGV0ZV9mcm9tX2YoKTtcclxuICB0aGlzLmluc2VydF9ub2RlcyhzdXJ2aXZvcl9ub2RlcywgcG9zID4gaWR4KTtcclxufTtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUuZGVsZXRlX2Zyb21fZSA9IGZ1bmN0aW9uICgpIHtcclxuICAvLyByZXR1cm4gZmFsc2UgaWYgd2UgZGVsZXRlZCBzb21ldGhpbmcsIGFuZCB0cnVlIG90aGVyd2lzZS5cclxuICBpZiAodGhpcy5jYXJldCA+IDApIHtcclxuICAgIHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZSA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zcGxpY2VuKHRoaXMuY2FyZXQgLSAxLCAnJywgMSk7XHJcbiAgICB0aGlzLmNhcmV0LS07XHJcbiAgfSBlbHNlIHtcclxuICAgIC8vIFRoZSBvcmRlciBvZiB0aGVzZSBpcyBpbXBvcnRhbnRcclxuICAgIGlmICh0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nICE9IG51bGwgJiYgdGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZy5nZXRBdHRyaWJ1dGUoJ2MnKSA9PSAneWVzJykge1xyXG4gICAgICAvLyBUaGUgcHJldmlvdXMgbm9kZSBpcyBhbiBmIG5vZGUgYnV0IGlzIHJlYWxseSBqdXN0IGEgY2hhcmFjdGVyLiAgRGVsZXRlIGl0LlxyXG4gICAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nO1xyXG4gICAgICB0aGlzLmRlbGV0ZV9mcm9tX2YoKTtcclxuICAgIH0gZWxzZSBpZiAodGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZyAhPSBudWxsICYmIHRoaXMuY3VycmVudC5wcmV2aW91c1NpYmxpbmcubm9kZU5hbWUgPT0gJ2YnKSB7XHJcbiAgICAgIC8vIFdlJ3JlIGluIGFuIGUgbm9kZSBqdXN0IGFmdGVyIGFuIGYgbm9kZS4gIE1vdmUgYmFjayBpbnRvIHRoZSBmIG5vZGUgKGRlbGV0ZSBpdD8pXHJcbiAgICAgIHRoaXMubGVmdCgpO1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnByZXZpb3VzU2libGluZyAhPSBudWxsICYmIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnByZXZpb3VzU2libGluZy5ub2RlTmFtZSA9PSAnYycpIHtcclxuICAgICAgLy8gV2UncmUgaW4gYSBjIGNoaWxkIG9mIGFuIGYgbm9kZSwgYnV0IG5vdCB0aGUgZmlyc3Qgb25lLiAgR28gdG8gdGhlIHByZXZpb3VzIGNcclxuICAgICAgaWYgKHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmhhc0F0dHJpYnV0ZSgnZGVsZXRlJykpIHtcclxuICAgICAgICB0aGlzLmRlbGV0ZV9mcm9tX2MoKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLmxlZnQoKTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSBpZiAodGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZyA9PSBudWxsICYmIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLm5vZGVOYW1lID09ICdjJyAmJiAodGhpcy5jdXJyZW50LnBhcmVudE5vZGUucHJldmlvdXNTaWJsaW5nID09IG51bGwgfHwgdGhpcy5jdXJyZW50LnBhcmVudE5vZGUucHJldmlvdXNTaWJsaW5nLm5vZGVOYW1lICE9ICdjJykpIHtcclxuICAgICAgLy8gV2UncmUgaW4gdGhlIGZpcnN0IGMgY2hpbGQgb2YgYW4gZiBub2RlIGFuZCBhdCB0aGUgYmVnaW5uaW5nLS1kZWxldGUgdGhlIGYgbm9kZVxyXG4gICAgICB2YXIgcGFyID0gdGhpcy5jdXJyZW50LnBhcmVudE5vZGU7XHJcbiAgICAgIHdoaWxlIChwYXIucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnbCcgfHwgcGFyLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2MnKSB7XHJcbiAgICAgICAgcGFyID0gcGFyLnBhcmVudE5vZGU7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHBhci5oYXNBdHRyaWJ1dGUoJ2RlbGV0ZScpKSB7XHJcbiAgICAgICAgdGhpcy5kZWxldGVfZnJvbV9jKCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5jdXJyZW50ID0gcGFyLnBhcmVudE5vZGU7XHJcbiAgICAgICAgdGhpcy5kZWxldGVfZnJvbV9mKCk7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIFdlJ3JlIGF0IHRoZSBiZWdpbm5pbmcgKGhvcGVmdWxseSEpIFxyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiB0cnVlO1xyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5kZWxldGVfZm9yd2FyZF9mcm9tX2UgPSBmdW5jdGlvbiAoKSB7XHJcbiAgLy8gcmV0dXJuIGZhbHNlIGlmIHdlIGRlbGV0ZWQgc29tZXRoaW5nLCBhbmQgdHJ1ZSBvdGhlcndpc2UuXHJcbiAgaWYgKHRoaXMuY2FyZXQgPCB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUubGVuZ3RoKSB7XHJcbiAgICB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3BsaWNlbih0aGlzLmNhcmV0LCAnJywgMSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIC8vIFdlJ3JlIGF0IHRoZSBlbmRcclxuICAgIGlmICh0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmcgIT0gbnVsbCkge1xyXG4gICAgICAvLyBUaGUgbmV4dCBub2RlIGlzIGFuIGYgbm9kZS4gIERlbGV0ZSBpdC5cclxuICAgICAgdGhpcy5jdXJyZW50ID0gdGhpcy5jdXJyZW50Lm5leHRTaWJsaW5nO1xyXG4gICAgICB0aGlzLmRlbGV0ZV9mcm9tX2YoKTtcclxuICAgIH0gZWxzZSBpZiAodGhpcy5jdXJyZW50LnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2MnKSB7XHJcbiAgICAgIC8vIFdlJ3JlIGluIGEgYyBjaGlsZCBvZiBhbiBmIG5vZGUuICBEbyBub3RoaW5nXHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIHRydWU7XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmJhY2tzcGFjZSA9IGZ1bmN0aW9uICgpIHtcclxuICBpZiAodGhpcy5zZWxfc3RhdHVzICE9IE1hdGhZbGVtQmFja2VuZC5TRUxfTk9ORSkge1xyXG4gICAgdGhpcy5zZWxfZGVsZXRlKCk7XHJcbiAgICB0aGlzLnNlbF9zdGF0dXMgPSBNYXRoWWxlbUJhY2tlbmQuU0VMX05PTkU7XHJcbiAgICB0aGlzLmNoZWNrcG9pbnQoKTtcclxuICB9IGVsc2UgaWYgKHRoaXMuZGVsZXRlX2Zyb21fZSgpKSB7XHJcbiAgICB0aGlzLmNoZWNrcG9pbnQoKTtcclxuICB9XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmRlbGV0ZV9rZXkgPSBmdW5jdGlvbiAoKSB7XHJcbiAgaWYgKHRoaXMuc2VsX3N0YXR1cyAhPSBNYXRoWWxlbUJhY2tlbmQuU0VMX05PTkUpIHtcclxuICAgIHRoaXMuc2VsX2RlbGV0ZSgpO1xyXG4gICAgdGhpcy5zZWxfc3RhdHVzID0gTWF0aFlsZW1CYWNrZW5kLlNFTF9OT05FO1xyXG4gICAgdGhpcy5jaGVja3BvaW50KCk7XHJcbiAgfSBlbHNlIGlmICh0aGlzLmRlbGV0ZV9mb3J3YXJkX2Zyb21fZSgpKSB7XHJcbiAgICB0aGlzLmNoZWNrcG9pbnQoKTtcclxuICB9XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmJhY2tzbGFzaCA9IGZ1bmN0aW9uICgpIHtcclxuICBpZiAoTWF0aFlsZW1VdGlscy5pc190ZXh0KHRoaXMuY3VycmVudCkpIHJldHVybjtcclxuICB0aGlzLmluc2VydF9zeW1ib2woJ3N5bV9uYW1lJyk7XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLnRhYiA9IGZ1bmN0aW9uICgpIHtcclxuICBpZiAoIU1hdGhZbGVtVXRpbHMuaXNfc3ltYm9sKHRoaXMuY3VycmVudCkpIHtcclxuICAgIHRoaXMuY2hlY2tfZm9yX3N5bWJvbCgpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICB2YXIgc3ltX25hbWUgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC50ZXh0Q29udGVudDtcclxuICB2YXIgY2FuZGlkYXRlcyA9IFtdO1xyXG4gIGZvciAodmFyIG4gaW4gdGhpcy5zeW1ib2xzKSB7XHJcbiAgICBpZiAobi5zdGFydHNXaXRoKHN5bV9uYW1lKSkgY2FuZGlkYXRlcy5wdXNoKG4pO1xyXG4gIH1cclxuICBpZiAoY2FuZGlkYXRlcy5sZW5ndGggPT0gMSkge1xyXG4gICAgdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQudGV4dENvbnRlbnQgPSBjYW5kaWRhdGVzWzBdO1xyXG4gICAgdGhpcy5jYXJldCA9IGNhbmRpZGF0ZXNbMF0ubGVuZ3RoO1xyXG4gIH0gZWxzZSB7XHJcbiAgICB0aGlzLmZpcmVfZXZlbnQoJ2NvbXBsZXRpb24nLCB7J2NhbmRpZGF0ZXMnOiBjYW5kaWRhdGVzfSk7XHJcbiAgfVxyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5yaWdodF9wYXJlbiA9IGZ1bmN0aW9uICgpIHtcclxuICBpZiAodGhpcy5jdXJyZW50Lm5vZGVOYW1lICE9ICdlJyB8fCB0aGlzLmNhcmV0ID09IE1hdGhZbGVtVXRpbHMuZ2V0X2xlbmd0aCh0aGlzLmN1cnJlbnQpKSB7IHRoaXMucmlnaHQoKSB9XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLnVwID0gZnVuY3Rpb24gKCkge1xyXG4gIHRoaXMuc2VsX2NsZWFyKCk7XHJcbiAgaWYgKHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmhhc0F0dHJpYnV0ZSgndXAnKSkge1xyXG4gICAgdmFyIHQgPSBwYXJzZUludCh0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoJ3VwJykpO1xyXG4gICAgdmFyIGYgPSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5wYXJlbnROb2RlO1xyXG4gICAgdmFyIG4gPSBmLmZpcnN0Q2hpbGQ7XHJcbiAgICB3aGlsZSAobiAhPSBudWxsICYmIHQgPiAwKSB7XHJcbiAgICAgIGlmIChuLm5vZGVOYW1lID09ICdjJykgdC0tO1xyXG4gICAgICBpZiAodCA+IDApIG4gPSBuLm5leHRTaWJsaW5nO1xyXG4gICAgfVxyXG4gICAgdGhpcy5jdXJyZW50ID0gbi5sYXN0Q2hpbGQ7XHJcbiAgICB0aGlzLmNhcmV0ID0gTWF0aFlsZW1VdGlscy5nZXRfbGVuZ3RoKHRoaXMuY3VycmVudCk7XHJcbiAgfSBlbHNlIHRoaXMubGlzdF92ZXJ0aWNhbF9tb3ZlKGZhbHNlKTtcclxufTtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUuZG93biA9IGZ1bmN0aW9uICgpIHtcclxuICB0aGlzLnNlbF9jbGVhcigpO1xyXG4gIGlmICh0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5oYXNBdHRyaWJ1dGUoJ2Rvd24nKSkge1xyXG4gICAgdmFyIHQgPSBwYXJzZUludCh0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoJ2Rvd24nKSk7XHJcbiAgICB2YXIgZiA9IHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnBhcmVudE5vZGU7XHJcbiAgICB2YXIgbiA9IGYuZmlyc3RDaGlsZDtcclxuICAgIHdoaWxlIChuICE9IG51bGwgJiYgdCA+IDApIHtcclxuICAgICAgaWYgKG4ubm9kZU5hbWUgPT0gJ2MnKSB0LS07XHJcbiAgICAgIGlmICh0ID4gMCkgbiA9IG4ubmV4dFNpYmxpbmc7XHJcbiAgICB9XHJcbiAgICB0aGlzLmN1cnJlbnQgPSBuLmxhc3RDaGlsZDtcclxuICAgIHRoaXMuY2FyZXQgPSBNYXRoWWxlbVV0aWxzLmdldF9sZW5ndGgodGhpcy5jdXJyZW50KTtcclxuICB9IGVsc2UgdGhpcy5saXN0X3ZlcnRpY2FsX21vdmUodHJ1ZSk7XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmhvbWUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgdGhpcy5jdXJyZW50ID0gdGhpcy5kb2Mucm9vdCgpLmZpcnN0Q2hpbGQ7XHJcbiAgdGhpcy5jYXJldCA9IDA7XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uICgpIHtcclxuICB0aGlzLmN1cnJlbnQgPSB0aGlzLmRvYy5yb290KCkubGFzdENoaWxkO1xyXG4gIHRoaXMuY2FyZXQgPSBNYXRoWWxlbVV0aWxzLmdldF9sZW5ndGgodGhpcy5jdXJyZW50KTtcclxufTtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUuY2hlY2twb2ludCA9IGZ1bmN0aW9uICgpIHtcclxuICB2YXIgYmFzZSA9IHRoaXMuZG9jLmJhc2U7XHJcbiAgdGhpcy5jdXJyZW50LnNldEF0dHJpYnV0ZSgnY3VycmVudCcsICd5ZXMnKTtcclxuICB0aGlzLmN1cnJlbnQuc2V0QXR0cmlidXRlKCdjYXJldCcsIHRoaXMuY2FyZXQudG9TdHJpbmcoKSk7XHJcbiAgdGhpcy51bmRvX25vdysrO1xyXG4gIHRoaXMudW5kb19kYXRhW3RoaXMudW5kb19ub3ddID0gYmFzZS5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgdGhpcy51bmRvX2RhdGEuc3BsaWNlKHRoaXMudW5kb19ub3cgKyAxLCB0aGlzLnVuZG9fZGF0YS5sZW5ndGgpO1xyXG4gIHRoaXMuZmlyZV9ldmVudCgnY2hhbmdlJywgeydvbGQnOiB0aGlzLnVuZG9fZGF0YVt0aGlzLnVuZG9fbm93IC0gMV0sICduZXcnOiB0aGlzLnVuZG9fZGF0YVt0aGlzLnVuZG9fbm93XX0pO1xyXG4gIHRoaXMuY3VycmVudC5yZW1vdmVBdHRyaWJ1dGUoJ2N1cnJlbnQnKTtcclxuICB0aGlzLmN1cnJlbnQucmVtb3ZlQXR0cmlidXRlKCdjYXJldCcpO1xyXG4gIGlmICh0aGlzLnBhcmVudCAmJiB0aGlzLnBhcmVudC5yZWFkeSkgdGhpcy5wYXJlbnQucmVuZGVyKHRydWUpO1xyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5yZXN0b3JlID0gZnVuY3Rpb24gKHQpIHtcclxuICB0aGlzLmRvYy5iYXNlID0gdGhpcy51bmRvX2RhdGFbdF0uY2xvbmVOb2RlKHRydWUpO1xyXG4gIHRoaXMuZmluZF9jdXJyZW50KCk7XHJcbiAgdGhpcy5jdXJyZW50LnJlbW92ZUF0dHJpYnV0ZSgnY3VycmVudCcpO1xyXG4gIHRoaXMuY3VycmVudC5yZW1vdmVBdHRyaWJ1dGUoJ2NhcmV0Jyk7XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmZpbmRfY3VycmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICB0aGlzLmN1cnJlbnQgPSB0aGlzLmRvYy54cGF0aF9ub2RlKFwiLy8qW0BjdXJyZW50PSd5ZXMnXVwiKTtcclxuICB0aGlzLmNhcmV0ID0gcGFyc2VJbnQodGhpcy5jdXJyZW50LmdldEF0dHJpYnV0ZSgnY2FyZXQnKSk7XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLnVuZG8gPSBmdW5jdGlvbiAoKSB7XHJcbiAgdGhpcy5zZWxfY2xlYXIoKTtcclxuICBpZiAodGhpcy51bmRvX25vdyA8PSAwKSByZXR1cm47XHJcbiAgdGhpcy51bmRvX25vdy0tO1xyXG4gIHRoaXMucmVzdG9yZSh0aGlzLnVuZG9fbm93KTtcclxufTtcclxuXHJcbk1hdGhZbGVtQmFja2VuZC5wcm90b3R5cGUucmVkbyA9IGZ1bmN0aW9uICgpIHtcclxuICB0aGlzLnNlbF9jbGVhcigpO1xyXG4gIGlmICh0aGlzLnVuZG9fbm93ID49IHRoaXMudW5kb19kYXRhLmxlbmd0aCAtIDEpIHJldHVybjtcclxuICB0aGlzLnVuZG9fbm93Kys7XHJcbiAgdGhpcy5yZXN0b3JlKHRoaXMudW5kb19ub3cpO1xyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5kb25lID0gZnVuY3Rpb24gKHMpIHtcclxuICBpZiAoTWF0aFlsZW1VdGlscy5pc19zeW1ib2wodGhpcy5jdXJyZW50KSkgdGhpcy5jb21wbGV0ZV9zeW1ib2woKTtcclxuICBlbHNlIHRoaXMuZmlyZV9ldmVudCgnZG9uZScpO1xyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5jb21wbGV0ZV9zeW1ib2wgPSBmdW5jdGlvbiAoKSB7XHJcbiAgdmFyIHN5bV9uYW1lID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQudGV4dENvbnRlbnQ7XHJcbiAgaWYgKCEodGhpcy5zeW1ib2xzW3N5bV9uYW1lXSkpIHJldHVybjtcclxuICB0aGlzLmN1cnJlbnQgPSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5wYXJlbnROb2RlO1xyXG4gIHRoaXMuZGVsZXRlX2Zyb21fZigpO1xyXG4gIHRoaXMuaW5zZXJ0X3N5bWJvbChzeW1fbmFtZSk7XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLnByb2JsZW0gPSBmdW5jdGlvbiAobWVzc2FnZSkge1xyXG4gIHRoaXMuZmlyZV9ldmVudCgnZXJyb3InLCB7J21lc3NhZ2UnOiBtZXNzYWdlfSk7XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmlzX2JsYWNrbGlzdGVkID0gZnVuY3Rpb24gKHN5bWJfdHlwZSkge1xyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ibGFja2xpc3QubGVuZ3RoOyBpKyspIHsgaWYgKHN5bWJfdHlwZSA9PSB0aGlzLmJsYWNrbGlzdFtpXSkgcmV0dXJuIHRydWU7IH1cclxuICByZXR1cm4gZmFsc2U7XHJcbn07XHJcblxyXG5NYXRoWWxlbUJhY2tlbmQucHJvdG90eXBlLmNoZWNrX2Zvcl9wb3dlciA9IGZ1bmN0aW9uICgpIHtcclxuICBpZiAodGhpcy5hdXRvcmVwbGFjZSAmJiB0aGlzLmNhcmV0ID09IDAgJiYgdGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZyAmJiB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nLm5vZGVOYW1lID09ICdmJyAmJiB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nLmdldEF0dHJpYnV0ZSgndHlwZScpID09ICcqJykge1xyXG4gICAgdmFyIG4gPSB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nO1xyXG4gICAgdmFyIHAgPSBuLnBhcmVudE5vZGU7XHJcbiAgICB2YXIgcHJldiA9IG4ucHJldmlvdXNTaWJsaW5nO1xyXG4gICAgdmFyIG5leHQgPSBuLm5leHRTaWJsaW5nO1xyXG4gICAgdmFyIG5ld19ub2RlID0gdGhpcy5tYWtlX2UoTWF0aFlsZW1VdGlscy5nZXRfdmFsdWUocHJldikgKyBNYXRoWWxlbVV0aWxzLmdldF92YWx1ZShuZXh0KSk7XHJcbiAgICB0aGlzLmN1cnJlbnQgPSBuZXdfbm9kZTtcclxuICAgIHRoaXMuY2FyZXQgPSBNYXRoWWxlbVV0aWxzLmdldF9sZW5ndGgocHJldik7XHJcbiAgICBwLmluc2VydEJlZm9yZShuZXdfbm9kZSwgcHJldik7XHJcbiAgICBwLnJlbW92ZUNoaWxkKHByZXYpO1xyXG4gICAgcC5yZW1vdmVDaGlsZChuKTtcclxuICAgIHAucmVtb3ZlQ2hpbGQobmV4dCk7XHJcbiAgICB0aGlzLmluc2VydF9zeW1ib2woJ3Bvd2VyJyk7XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9XHJcbiAgcmV0dXJuIGZhbHNlO1xyXG59O1xyXG5cclxuTWF0aFlsZW1CYWNrZW5kLnByb3RvdHlwZS5jaGVja19mb3Jfc3ltYm9sID0gZnVuY3Rpb24gKCkge1xyXG4gIHZhciBpbnN0YW5jZSA9IHRoaXM7XHJcbiAgaWYgKE1hdGhZbGVtVXRpbHMuaXNfdGV4dCh0aGlzLmN1cnJlbnQpKSByZXR1cm47XHJcbiAgaWYgKHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2YnICYmIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmNoaWxkTm9kZXMubGVuZ3RoID09IDEgJiYgdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlID09ICdoJykge1xyXG4gICAgdmFyIG4gPSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5wYXJlbnROb2RlO1xyXG4gICAgdmFyIHN5bV9uYW1lID0gbi5nZXRBdHRyaWJ1dGUoJ3R5cGUnKSArICdoJztcclxuICAgIHZhciBzID0gdGhpcy5zeW1ib2xzW3N5bV9uYW1lXTtcclxuICAgIGlmICghcyB8fCB0aGlzLmlzX2JsYWNrbGlzdGVkKHNbJ3R5cGUnXSkpIHsgcmV0dXJuIH1cclxuICAgIHZhciBmID0gdGhpcy5zeW1ib2xfdG9fbm9kZShzeW1fbmFtZSwgW10pLmY7XHJcbiAgICBuLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGYsIG4pO1xyXG4gICAgdGhpcy5jYXJldCA9IDA7XHJcbiAgICB0aGlzLmN1cnJlbnQgPSBmO1xyXG4gICAgdGhpcy5kb3duX2Zyb21fZl90b19ibGFuaygpO1xyXG4gICAgdGhpcy5jaGVja3BvaW50KCk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG4gIGZvciAodmFyIHMgaW4gdGhpcy5zeW1ib2xzKSB7XHJcbiAgICBpZiAoaW5zdGFuY2UuY3VycmVudC5ub2RlTmFtZSA9PSAnZScgJiYgIShNYXRoWWxlbVV0aWxzLmlzX2JsYW5rKGluc3RhbmNlLmN1cnJlbnQpKSAmJiBpbnN0YW5jZS5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNlYXJjaF9hdChpbnN0YW5jZS5jYXJldCwgcykpIHtcclxuICAgICAgdmFyIHRlbXAgPSBpbnN0YW5jZS5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlO1xyXG4gICAgICB2YXIgdGVtcF9jYXJldCA9IGluc3RhbmNlLmNhcmV0O1xyXG4gICAgICBpbnN0YW5jZS5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlID0gaW5zdGFuY2UuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zbGljZSgwLCBpbnN0YW5jZS5jYXJldCAtIHMubGVuZ3RoKSArIGluc3RhbmNlLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc2xpY2UoaW5zdGFuY2UuY2FyZXQpO1xyXG4gICAgICBpbnN0YW5jZS5jYXJldCAtPSBzLmxlbmd0aDtcclxuICAgICAgdmFyIHN1Y2Nlc3MgPSBpbnN0YW5jZS5pbnNlcnRfc3ltYm9sKHMpO1xyXG4gICAgICBpZiAoIXN1Y2Nlc3MpIHtcclxuICAgICAgICBpbnN0YW5jZS5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlID0gdGVtcDtcclxuICAgICAgICBpbnN0YW5jZS5jYXJldCA9IHRlbXBfY2FyZXQ7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gIH1cclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gTWF0aFlsZW1CYWNrZW5kO1xyXG4iLCJyZXF1aXJlKCd3aWNrZWQtZ29vZC14cGF0aCcpLmluc3RhbGwoKTtcclxuXHJcbnZhciBNYXRoWWxlbURvYyA9IGZ1bmN0aW9uIChkb2MpIHtcclxuICBkb2MgPSBkb2MgfHwgJzxtPjxlPjwvZT48L20+JztcclxuICB0aGlzLnNldF9jb250ZW50KGRvYyk7XHJcbn07XHJcblxyXG5NYXRoWWxlbURvYy5wcm90b3R5cGUuaXNfc21hbGwgPSBmdW5jdGlvbiAobm4pIHtcclxuICB2YXIgbiA9IG5uLnBhcmVudE5vZGU7XHJcbiAgd2hpbGUgKG4gIT0gbnVsbCAmJiBuLm5vZGVOYW1lICE9ICdtJykge1xyXG4gICAgaWYgKG4uZ2V0QXR0cmlidXRlKCdzbWFsbCcpID09ICd5ZXMnKSB7IHJldHVybiB0cnVlIH1cclxuICAgIG4gPSBuLnBhcmVudE5vZGU7XHJcbiAgICB3aGlsZSAobiAhPSBudWxsICYmIG4ubm9kZU5hbWUgIT0gJ2MnKSB7IG4gPSBuLnBhcmVudE5vZGUgfVxyXG4gIH1cclxuICByZXR1cm4gZmFsc2U7XHJcbn07XHJcblxyXG5NYXRoWWxlbURvYy5wcm90b3R5cGUuZW5zdXJlX3RleHRfbm9kZXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgdmFyIGwgPSB0aGlzLmJhc2UuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2UnKTtcclxuICBmb3IgKHZhciBpID0gMDsgaSA8IGwubGVuZ3RoOyBpKyspIHtcclxuICAgIGlmICghKGxbaV0uZmlyc3RDaGlsZCkpIHsgbFtpXS5hcHBlbmRDaGlsZCh0aGlzLmJhc2UuY3JlYXRlVGV4dE5vZGUoJycpKSB9XHJcbiAgfVxyXG59O1xyXG5cclxuTWF0aFlsZW1Eb2MucHJvdG90eXBlLmlzX2JsYW5rID0gZnVuY3Rpb24gKCkge1xyXG4gIGlmICh0aGlzLmJhc2UuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2YnKS5sZW5ndGggPiAwKSB7IHJldHVybiBmYWxzZSB9XHJcbiAgdmFyIGwgPSB0aGlzLmJhc2UuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2UnKTtcclxuICBpZiAobC5sZW5ndGggPT0gMSAmJiAoIShsWzBdLmZpcnN0Q2hpbGQpIHx8IGxbMF0uZmlyc3RDaGlsZC50ZXh0Q29udGVudCA9PSAnJykpIHsgcmV0dXJuIHRydWUgfVxyXG4gIHJldHVybiBmYWxzZTtcclxufTtcclxuXHJcbk1hdGhZbGVtRG9jLnByb3RvdHlwZS5yb290ID0gZnVuY3Rpb24gKCkge1xyXG4gIHJldHVybiB0aGlzLmJhc2UuZG9jdW1lbnRFbGVtZW50O1xyXG59O1xyXG5cclxuTWF0aFlsZW1Eb2MucHJvdG90eXBlLmdldF9jb250ZW50ID0gZnVuY3Rpb24gKHQsIHIpIHtcclxuICBpZiAodCAhPSAneG1sJykgeyByZXR1cm4gdGhpcy5tYW51YWxfcmVuZGVyKHQsIHRoaXMucm9vdCgpLCByKSB9IGVsc2UgeyByZXR1cm4gKG5ldyBYTUxTZXJpYWxpemVyKCkpLnNlcmlhbGl6ZVRvU3RyaW5nKHRoaXMuYmFzZSkgfVxyXG59O1xyXG5cclxuTWF0aFlsZW1Eb2MucHJvdG90eXBlLnhwYXRoX25vZGUgPSBmdW5jdGlvbiAoeHBhdGgsIG5vZGUpIHtcclxuICBub2RlID0gbm9kZSB8fCB0aGlzLnJvb3QoKTtcclxuICByZXR1cm4gdGhpcy5iYXNlLmV2YWx1YXRlKHhwYXRoLCBub2RlLCBudWxsLCBYUGF0aFJlc3VsdC5GSVJTVF9PUkRFUkVEX05PREVfVFlQRSwgbnVsbCkuc2luZ2xlTm9kZVZhbHVlO1xyXG59O1xyXG5cclxuTWF0aFlsZW1Eb2MucHJvdG90eXBlLnhwYXRoX2xpc3QgPSBmdW5jdGlvbiAoeHBhdGgsIG5vZGUpIHtcclxuICBub2RlID0gbm9kZSB8fCB0aGlzLnJvb3QoKTtcclxuICByZXR1cm4gdGhpcy5iYXNlLmV2YWx1YXRlKHhwYXRoLCBub2RlLCBudWxsLCBYUGF0aFJlc3VsdC5PUkRFUkVEX05PREVfSVRFUkFUT1JfVFlQRSwgbnVsbCk7XHJcbn07XHJcblxyXG5NYXRoWWxlbURvYy5wcm90b3R5cGUuc2V0X2NvbnRlbnQgPSBmdW5jdGlvbiAoeG1sX2RhdGEpIHtcclxuICB0aGlzLmJhc2UgPSAobmV3IHdpbmRvdy5ET01QYXJzZXIoKSkucGFyc2VGcm9tU3RyaW5nKHhtbF9kYXRhLCAndGV4dC94bWwnKTtcclxuICB0aGlzLmVuc3VyZV90ZXh0X25vZGVzKCk7XHJcbn07XHJcblxyXG5NYXRoWWxlbURvYy5icmFja2V0X3hwYXRoID0gXCIoY291bnQoLi8qKSAhPSAxIGFuZCBub3QgXFxcclxuICAgICAgICAgICAgICAgICAgKCBcXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnQoLi9lKT0yIGFuZCBcXFxyXG4gICAgICAgICAgICAgICAgY291bnQoLi9mKT0xIGFuZCBcXFxyXG4gICAgICAgICAgICAgICAgY291bnQoLi9lW3N0cmluZy1sZW5ndGgodGV4dCgpKT0wXSk9MiBhbmQgXFxcclxuICAgICAgICAgICAgICAgICggXFxcclxuICAgICAgICAgICAgICAgICAgKFxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnQoLi9mL2MpPTEgYW5kXFxcclxuICAgICAgICAgICAgICAgICAgICBjb3VudCguL2YvY1tAaXNfYnJhY2tldD0neWVzJ10pPTFcXFxyXG4gICAgICAgICAgICAgICAgICApXFxcclxuICAgICAgICAgICAgICAgICAgb3JcXFxyXG4gICAgICAgICAgICAgICAgICAoXFxcclxuICAgICAgICAgICAgICAgICAgICBmL0BjPSd5ZXMnIGFuZCBcXFxyXG4gICAgICAgICAgICAgICAgY291bnQoLi9lW0BjdXJyZW50PSd5ZXMnXSk9MCBhbmQgXFxcclxuICAgICAgICAgICAgICAgIGNvdW50KC4vZVtAdGVtcD0neWVzJ10pPTAgXFxcclxuICAgICAgICAgICAgICAgICAgKVxcXHJcbiAgICAgICAgICAgICAgICApXFxcclxuICAgICAgICAgICAgICApXFxcclxuICAgICAgICAgICAgKSAgXFxcclxuICAgICAgICAgICAgb3JcXFxyXG4gICAgICAgICAgICAgICAgKFxcXHJcbiAgICAgICAgICAgICAgY291bnQoLi8qKSA9IDEgYW5kIFxcXHJcbiAgICAgICAgICAgICAgc3RyaW5nLWxlbmd0aCguL2UvdGV4dCgpKSAhPSAxIGFuZCBcXFxyXG4gICAgICAgICAgICAgIG51bWJlciguL2UvdGV4dCgpKSAhPSAuL2UvdGV4dCgpIFxcXHJcbiAgICAgICAgICAgICkgXFxcclxuICAgICAgICAgICAgb3IgXFxcclxuICAgICAgICAgICAgICAgICggXFxcclxuICAgICAgICAgICAgICBjb3VudCguLyopID0gMSBhbmQgXFxcclxuICAgICAgICAgICAgICAuL2UvQGN1cnJlbnQgPSAneWVzJyBcXFxyXG4gICAgICAgICAgICApIFxcXHJcbiAgICAgICAgICAgIG9yIFxcXHJcbiAgICAgICAgICAgICAgICAoIFxcXHJcbiAgICAgICAgICAgICAgY291bnQoLi8qKSA9IDEgYW5kIFxcXHJcbiAgICAgICAgICAgICAgLi9lL0B0ZW1wID0gJ3llcycgXFxcclxuICAgICAgICAgICAgKVwiO1xyXG5cclxuTWF0aFlsZW1Eb2MucHJvdG90eXBlLm1hbnVhbF9yZW5kZXIgPSBmdW5jdGlvbiAodCwgbiwgcikge1xyXG4gIHZhciBhbnMgPSAnJztcclxuICBpZiAobi5ub2RlTmFtZSA9PSAnZScpIHtcclxuICAgIGlmICh0ID09ICdsYXRleCcgJiYgcikge1xyXG4gICAgICBhbnMgPSBuLmdldEF0dHJpYnV0ZSgncmVuZGVyJyk7XHJcbiAgICB9IGVsc2UgaWYgKHQgPT0gJ3RleHQnKSB7XHJcbiAgICAgIGFucyA9IE1hdGhZbGVtVXRpbHMuZ2V0X3ZhbHVlKG4pO1xyXG4gICAgICBpZiAobi5wcmV2aW91c1NpYmxpbmcgJiYgbi5uZXh0U2libGluZyAmJiBhbnMgPT0gJycpIHsgYW5zID0gJyAqICcgfSBlbHNlIHtcclxuICAgICAgICBhbnMgPSBhbnMucmVwbGFjZSgvKC4pKFteYS16QS1aMC05Ll0pKC4pL2csICckMSAkMiAkMycpO1xyXG4gICAgICAgIGFucyA9IGFucy5yZXBsYWNlKC8oW2EtekEtWl0pKD89XFwuKS9nLCAnJDEgKiAnKTtcclxuICAgICAgICBhbnMgPSBhbnMucmVwbGFjZSgvKFxcLikoPz1bYS16QS1aXSkvZywgJyQxICogJyk7XHJcbiAgICAgICAgYW5zID0gYW5zLnJlcGxhY2UoLyhbYS16QS1aXSkoPz1bYS16QS1aMC05XSkvZywgJyQxICogJyk7XHJcbiAgICAgICAgYW5zID0gYW5zLnJlcGxhY2UoLyhbYS16QS1aMC05XSkoPz1bYS16QS1aXSkvZywgJyQxICogJyk7XHJcbiAgICAgICAgaWYgKG4ucHJldmlvdXNTaWJsaW5nICYmIG4ucHJldmlvdXNTaWJsaW5nLmdldEF0dHJpYnV0ZSgnZ3JvdXAnKSAhPSAnb3BlcmF0aW9ucycpIHsgYW5zID0gYW5zLnJlcGxhY2UoL14oW2EtekEtWjAtOV0pL2csICcgKiAkMScpIH1cclxuICAgICAgICBpZiAobi5uZXh0U2libGluZyAmJiBuLm5leHRTaWJsaW5nLmdldEF0dHJpYnV0ZSgnZ3JvdXAnKSAhPSAnb3BlcmF0aW9ucycpIHsgYW5zID0gYW5zLnJlcGxhY2UoLyhbYS16QS1aMC05XSkkL2csICckMSAqICcpIH1cclxuICAgICAgICBhbnMgPSAnICcgKyBhbnMgKyAnICc7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFucyA9IE1hdGhZbGVtVXRpbHMuZ2V0X3ZhbHVlKG4pO1xyXG4gICAgfVxyXG4gIH0gZWxzZSBpZiAobi5ub2RlTmFtZSA9PSAnZicpIHtcclxuICAgIHZhciByZWFsX3R5cGUgPSAodCA9PSAnbGF0ZXgnICYmIHRoaXMuaXNfc21hbGwobikpID8gJ3NtYWxsX2xhdGV4JyA6IHQ7XHJcbiAgICB2YXIgbm4gPSB0aGlzLnhwYXRoX25vZGUoXCIuL2JbQHA9J1wiICsgcmVhbF90eXBlICsgXCInXVwiLCBuKSB8fCB0aGlzLnhwYXRoX25vZGUoXCIuL2JbQHA9J1wiICsgdCArIFwiJ11cIiwgbik7XHJcbiAgICBpZiAobm4pIHsgYW5zID0gdGhpcy5tYW51YWxfcmVuZGVyKHQsIG5uLCByKSB9XHJcbiAgfSBlbHNlIGlmIChuLm5vZGVOYW1lID09ICdiJykge1xyXG4gICAgdmFyIGNzID0gW107XHJcbiAgICB2YXIgaSA9IDE7XHJcbiAgICB2YXIgcGFyID0gbi5wYXJlbnROb2RlO1xyXG4gICAgZm9yICh2YXIgbm4gPSBwYXIuZmlyc3RDaGlsZDsgbm4gIT0gbnVsbDsgbm4gPSBubi5uZXh0U2libGluZykge1xyXG4gICAgICBpZiAobm4ubm9kZU5hbWUgPT0gJ2MnIHx8IG5uLm5vZGVOYW1lID09ICdsJykgeyBjc1tpKytdID0gdGhpcy5tYW51YWxfcmVuZGVyKHQsIG5uLCByKSB9XHJcbiAgICB9XHJcbiAgICBmb3IgKHZhciBubiA9IG4uZmlyc3RDaGlsZDsgbm4gIT0gbnVsbDsgbm4gPSBubi5uZXh0U2libGluZykge1xyXG4gICAgICBpZiAobm4ubm9kZVR5cGUgPT0gMykgeyBhbnMgKz0gbm4udGV4dENvbnRlbnQgfSBlbHNlIGlmIChubi5ub2RlVHlwZSA9PSAxKSB7XHJcbiAgICAgICAgaWYgKG5uLmhhc0F0dHJpYnV0ZSgnZCcpKSB7XHJcbiAgICAgICAgICB2YXIgZGltID0gcGFyc2VJbnQobm4uZ2V0QXR0cmlidXRlKCdkJykpO1xyXG4gICAgICAgICAgdmFyIGpvaW5lciA9IGZ1bmN0aW9uIChkLCBsKSB7XHJcbiAgICAgICAgICAgIGlmIChkID4gMSkge1xyXG4gICAgICAgICAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgbC5sZW5ndGg7IGsrKykgeyBsW2tdID0gam9pbmVyKGQgLSAxLCBsW2tdKSB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGwuam9pbihubi5nZXRBdHRyaWJ1dGUoJ3NlcCcgKyAoZCAtIDEpKSk7XHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgICAgYW5zICs9IGpvaW5lcihkaW0sIGNzW3BhcnNlSW50KG5uLmdldEF0dHJpYnV0ZSgncmVmJykpXSk7XHJcbiAgICAgICAgfSBlbHNlIHsgYW5zICs9IGNzW3BhcnNlSW50KG5uLmdldEF0dHJpYnV0ZSgncmVmJykpXSB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9IGVsc2UgaWYgKG4ubm9kZU5hbWUgPT0gJ2wnKSB7XHJcbiAgICBhbnMgPSBbXTtcclxuICAgIHZhciBpID0gMDtcclxuICAgIGZvciAodmFyIG5uID0gbi5maXJzdENoaWxkOyBubiAhPSBudWxsOyBubiA9IG5uLm5leHRTaWJsaW5nKSB7XHJcbiAgICAgIGFuc1tpKytdID0gdGhpcy5tYW51YWxfcmVuZGVyKHQsIG5uLCByKTtcclxuICAgIH1cclxuICB9IGVsc2UgaWYgKG4ubm9kZU5hbWUgPT0gJ2MnIHx8IG4ubm9kZU5hbWUgPT0gJ20nKSB7XHJcbiAgICBmb3IgKHZhciBubiA9IG4uZmlyc3RDaGlsZDsgbm4gIT0gbnVsbDsgbm4gPSBubi5uZXh0U2libGluZykgeyBhbnMgKz0gdGhpcy5tYW51YWxfcmVuZGVyKHQsIG5uLCByKSB9XHJcbiAgICBpZiAodCA9PSAnbGF0ZXgnICYmXHJcbiAgICAgICAgICAgICAgICBuLmdldEF0dHJpYnV0ZSgnYnJhY2tldCcpID09ICd5ZXMnICYmXHJcbiAgICAgICAgICAgICAgICB0aGlzLmJhc2UuZXZhbHVhdGUoTWF0aFlsZW1Eb2MuYnJhY2tldF94cGF0aCwgbiwgbnVsbCxcclxuICAgICAgICAgICAgICAgICAgWFBhdGhSZXN1bHQuQk9PTEVBTl9UWVBFLCBudWxsKS5ib29sZWFuVmFsdWUpIHtcclxuICAgICAgYW5zID0gJ1xcXFxsZWZ0KCcgKyBhbnMgKyAnXFxcXHJpZ2h0KSc7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBhbnM7XHJcbn07XHJcblxyXG5NYXRoWWxlbURvYy5wcm90b3R5cGUucGF0aF90byA9IGZ1bmN0aW9uIChuKSB7XHJcbiAgdmFyIG5hbWUgPSBuLm5vZGVOYW1lO1xyXG4gIGlmIChuYW1lID09ICdtJykgeyByZXR1cm4gJ21hdGh5bGVtX2xvY19tJyB9XHJcbiAgdmFyIG5zID0gMDtcclxuICBmb3IgKHZhciBubiA9IG47IG5uICE9IG51bGw7IG5uID0gbm4ucHJldmlvdXNTaWJsaW5nKSB7XHJcbiAgICBpZiAobm4ubm9kZVR5cGUgPT0gMSAmJiBubi5ub2RlTmFtZSA9PSBuYW1lKSB7IG5zKysgfVxyXG4gIH1cclxuICByZXR1cm4gdGhpcy5wYXRoX3RvKG4ucGFyZW50Tm9kZSkgKyAnXycgKyBuYW1lICsgJycgKyBucztcclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gTWF0aFlsZW1Eb2M7XHJcbiIsIk1hdGhZbGVtU3ltYm9scyA9IHsnc3ltYm9scyc6IHt9fTtcclxuXHJcbk1hdGhZbGVtU3ltYm9scy5zeW1iX3JhdyA9IGZ1bmN0aW9uIChzeW1iX25hbWUsIGxhdGV4X3N5bWIsIHRleHRfc3ltYiwgZ3JvdXApIHtcclxuICByZXR1cm4geydvdXRwdXQnOiB7J2xhdGV4JzogbGF0ZXhfc3ltYixcclxuICAgICd0ZXh0JzogdGV4dF9zeW1ifSxcclxuICAnZ3JvdXAnOiBncm91cCxcclxuICAnY2hhcic6IHRydWUsXHJcbiAgJ3R5cGUnOiBzeW1iX25hbWV9O1xyXG59O1xyXG5cclxuTWF0aFlsZW1TeW1ib2xzLnN5bWJfZnVuYyA9IGZ1bmN0aW9uIChmdW5jX25hbWUsIGdyb3VwKSB7XHJcbiAgcmV0dXJuIHsnb3V0cHV0JzogeydsYXRleCc6ICdcXFxcJyArIGZ1bmNfbmFtZSArICdcXFxcbGVmdCh7JDF9XFxcXHJpZ2h0KScsXHJcbiAgICAndGV4dCc6ICcgJyArIGZ1bmNfbmFtZSArICcoeyQxfSknfSxcclxuICAndHlwZSc6IGZ1bmNfbmFtZSxcclxuICAnZ3JvdXAnOiBncm91cCxcclxuICAnYXR0cnMnOiBbXHJcbiAgICB7J2RlbGV0ZSc6ICcxJ31cclxuICBdXHJcbiAgfTtcclxufTtcclxuXHJcbk1hdGhZbGVtU3ltYm9scy5zeW1iX2Z1bmNfbm9ubGF0ZXggPSBmdW5jdGlvbiAoZnVuY19uYW1lLCBncm91cCkge1xyXG4gIHJldHVybiB7J291dHB1dCc6IHsnbGF0ZXgnOiAnXFxcXG1hdGhybXsnICsgZnVuY19uYW1lICsgJ31cXFxcbGVmdCh7JDF9XFxcXHJpZ2h0KScsXHJcbiAgICAndGV4dCc6ICcgJyArIGZ1bmNfbmFtZSArICcoeyQxfSknfSxcclxuICAndHlwZSc6IGZ1bmNfbmFtZSxcclxuICAnZ3JvdXAnOiBncm91cCxcclxuICAnYXR0cnMnOiBbXHJcbiAgICB7J2RlbGV0ZSc6ICcxJ31cclxuICBdXHJcbiAgfTtcclxufTtcclxuXHJcbk1hdGhZbGVtU3ltYm9scy5hZGRfc3ltYm9scyA9IGZ1bmN0aW9uIChuYW1lLCBzeW0pIHtcclxuICB2YXIgc3ltYm9scyA9IHt9O1xyXG4gIGlmIChuYW1lID09ICdfcmF3Jykge1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzeW0ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgZm9yICh2YXIgdCBpbiBzeW1baV1bJ3N5bWJvbHMnXSkge1xyXG4gICAgICAgIHN5bWJvbHNbdF0gPSBNYXRoWWxlbVN5bWJvbHMuc3ltYl9yYXcodCwgc3ltW2ldWydzeW1ib2xzJ11bdF1bJ2xhdGV4J10sIHN5bVtpXVsnc3ltYm9scyddW3RdWyd0ZXh0J10sIHN5bVtpXVsnZ3JvdXAnXSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9IGVsc2UgaWYgKG5hbWUgPT0gJ19saXRlcmFsJykge1xyXG4gICAgZm9yICh2YXIgaiA9IDA7IGogPCBzeW0ubGVuZ3RoOyBqKyspIHtcclxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzeW1bal1bJ3N5bWJvbHMnXS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIHN5bWJvbHNbc3ltW2pdWydzeW1ib2xzJ11baV1dID0gTWF0aFlsZW1TeW1ib2xzLnN5bWJfcmF3KHN5bVtqXVsnc3ltYm9scyddW2ldLCAnXFxcXCcgKyBzeW1bal1bJ3N5bWJvbHMnXVtpXSwgJyAkJyArIHN5bVtqXVsnc3ltYm9scyddW2ldICsgJyAnLCBzeW1bal1bJ2dyb3VwJ10pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSBlbHNlIGlmIChuYW1lID09ICdfZnVuYycpIHtcclxuICAgIGZvciAodmFyIGogPSAwOyBqIDwgc3ltLmxlbmd0aDsgaisrKSB7XHJcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3ltW2pdWydzeW1ib2xzJ10ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBzeW1ib2xzW3N5bVtqXVsnc3ltYm9scyddW2ldXSA9IE1hdGhZbGVtU3ltYm9scy5zeW1iX2Z1bmMoc3ltW2pdWydzeW1ib2xzJ11baV0sIHN5bVtqXVsnZ3JvdXAnXSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9IGVsc2UgaWYgKG5hbWUgPT0gJ19mdW5jX25vbmxhdGV4Jykge1xyXG4gICAgZm9yICh2YXIgaiA9IDA7IGogPCBzeW0ubGVuZ3RoOyBqKyspIHtcclxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzeW1bal1bJ3N5bWJvbHMnXS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIHN5bWJvbHNbc3ltW2pdWydzeW1ib2xzJ11baV1dID0gTWF0aFlsZW1TeW1ib2xzLnN5bWJfZnVuY19ub25sYXRleChzeW1bal1bJ3N5bWJvbHMnXVtpXSwgc3ltW2pdWydncm91cCddKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0gZWxzZSBzeW1ib2xzW25hbWVdID0gc3ltO1xyXG4gIHJldHVybiBzeW1ib2xzO1xyXG59O1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBNYXRoWWxlbVN5bWJvbHM7XHJcbiIsInZhciBNYXRoWWxlbVV0aWxzID0ge307XHJcblxyXG5NYXRoWWxlbVV0aWxzLkNBUkVUID0gJ1xcXFxjdXJzb3JbLTAuMmV4XXswLjdlbX0nO1xyXG5NYXRoWWxlbVV0aWxzLlRFTVBfU01BTExfQ0FSRVQgPSAnXFxcXGN1cnNvclswZW1dezAuNmVtfSc7XHJcbk1hdGhZbGVtVXRpbHMuVEVNUF9DQVJFVCA9ICdcXFxcY3Vyc29yWy0wLjJleF17MC43ZW19JztcclxuTWF0aFlsZW1VdGlscy5TTUFMTF9DQVJFVCA9ICdcXFxcY3Vyc29yWy0wLjA1ZW1dezAuNWVtfSc7XHJcbk1hdGhZbGVtVXRpbHMuU0VMX0NBUkVUID0gJ1xcXFxjdXJzb3JbLTAuMmV4XXswLjdlbX0nO1xyXG5NYXRoWWxlbVV0aWxzLlNNQUxMX1NFTF9DQVJFVCA9ICdcXFxcY3Vyc29yWy0wLjA1ZW1dezAuNWVtfSc7XHJcbk1hdGhZbGVtVXRpbHMuU0VMX0NPTE9SID0gJ3JlZCc7XHJcblxyXG5NYXRoWWxlbVV0aWxzLmlzX2JsYW5rID0gZnVuY3Rpb24gKG4pIHtcclxuICByZXR1cm4gbi5maXJzdENoaWxkID09IG51bGwgfHwgbi5maXJzdENoaWxkLm5vZGVWYWx1ZSA9PSAnJztcclxufTtcclxuXHJcbk1hdGhZbGVtVXRpbHMuZ2V0X3ZhbHVlID0gZnVuY3Rpb24gKG4pIHtcclxuICByZXR1cm4gbi5maXJzdENoaWxkID8gbi5maXJzdENoaWxkLm5vZGVWYWx1ZSA6ICcnO1xyXG59O1xyXG5cclxuTWF0aFlsZW1VdGlscy5nZXRfbGVuZ3RoID0gZnVuY3Rpb24gKG4pIHtcclxuICBpZiAoTWF0aFlsZW1VdGlscy5pc19ibGFuayhuKSB8fCBuLm5vZGVOYW1lID09ICdmJykgcmV0dXJuIDA7XHJcbiAgcmV0dXJuIG4uZmlyc3RDaGlsZC5ub2RlVmFsdWUubGVuZ3RoO1xyXG59O1xyXG5cclxuTWF0aFlsZW1VdGlscy5wYXRoX3RvID0gZnVuY3Rpb24gKG4pIHtcclxuICB2YXIgbmFtZSA9IG4ubm9kZU5hbWU7XHJcbiAgaWYgKG5hbWUgPT0gJ20nKSByZXR1cm4gJ21hdGh5bGVtX2xvY19tJztcclxuICB2YXIgbnMgPSAwO1xyXG4gIGZvciAodmFyIG5uID0gbjsgbm4gIT0gbnVsbDsgbm4gPSBubi5wcmV2aW91c1NpYmxpbmcpIGlmIChubi5ub2RlVHlwZSA9PSAxICYmIG5uLm5vZGVOYW1lID09IG5hbWUpIG5zKys7XHJcbiAgcmV0dXJuIE1hdGhZbGVtVXRpbHMucGF0aF90byhuLnBhcmVudE5vZGUpICsgJ18nICsgbmFtZSArICcnICsgbnM7XHJcbn07XHJcblxyXG5NYXRoWWxlbVV0aWxzLmlzX3RleHQgPSBmdW5jdGlvbiAobm4pIHtcclxuICByZXR1cm4gbm4ucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoJ21vZGUnKSAmJiAobm4ucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoJ21vZGUnKSA9PSAndGV4dCcgfHwgbm4ucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoJ21vZGUnKSA9PSAnc3ltYm9sJyk7XHJcbn07XHJcblxyXG5NYXRoWWxlbVV0aWxzLmlzX3N5bWJvbCA9IGZ1bmN0aW9uIChubikge1xyXG4gIHJldHVybiBubi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZSgnbW9kZScpICYmIG5uLnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKCdtb2RlJykgPT0gJ3N5bWJvbCc7XHJcbn07XHJcblxyXG5NYXRoWWxlbVV0aWxzLmlzX3NtYWxsID0gZnVuY3Rpb24gKG5uKSB7XHJcbiAgdmFyIG4gPSBubi5wYXJlbnROb2RlO1xyXG4gIHdoaWxlIChuICE9IG51bGwgJiYgbi5ub2RlTmFtZSAhPSAnbScpIHtcclxuICAgIGlmIChuLmdldEF0dHJpYnV0ZSgnc21hbGwnKSA9PSAneWVzJykge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIG4gPSBuLnBhcmVudE5vZGU7XHJcbiAgICB3aGlsZSAobiAhPSBudWxsICYmIG4ubm9kZU5hbWUgIT0gJ2MnKSB7IG4gPSBuLnBhcmVudE5vZGUgfVxyXG4gIH1cclxuICByZXR1cm4gZmFsc2U7XHJcbn07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IE1hdGhZbGVtVXRpbHM7XHJcbiJdfQ==
