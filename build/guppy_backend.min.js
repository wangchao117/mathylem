(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.GuppyBackend = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
(function(e){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=e()}else if(typeof define==="function"&&define.amd){define([],e)}else{var t;if(typeof window!=="undefined"){t=window}else if(typeof global!=="undefined"){t=global}else if(typeof self!=="undefined"){t=self}else{t=this}t.katex=e()}})(function(){var e,t,r;return function e(t,r,a){function i(o,s){if(!r[o]){if(!t[o]){var l=typeof require=="function"&&require;if(!s&&l)return l(o,!0);if(n)return n(o,!0);var u=new Error("Cannot find module '"+o+"'");throw u.code="MODULE_NOT_FOUND",u}var h=r[o]={exports:{}};t[o][0].call(h.exports,function(e){var r=t[o][1][e];return i(r?r:e)},h,h.exports,e,t,r,a)}return r[o].exports}var n=typeof require=="function"&&require;for(var o=0;o<a.length;o++)i(a[o]);return i}({1:[function(e,t,r){"use strict";var a=e("./src/ParseError");var i=e("./src/Settings");var n=e("./src/buildTree");var o=e("./src/parseTree");var s=e("./src/utils");var l=function e(t,r,a){s.clearNode(r);var l=new i(a);var u=o(t,l);var h=n(u,t,l).toNode();r.appendChild(h)};if(typeof document!=="undefined"){if(document.compatMode!=="CSS1Compat"){typeof console!=="undefined"&&console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your "+"website has a suitable doctype.");l=function e(){throw new a("KaTeX doesn't work in quirks mode.")}}}var u=function e(t,r){var a=new i(r);var s=o(t,a);return n(s,t,a).toMarkup()};var h=function e(t,r){var a=new i(r);return o(t,a)};t.exports={render:l,renderToString:u,__parse:h,ParseError:a}},{"./src/ParseError":10,"./src/Settings":12,"./src/buildTree":17,"./src/parseTree":27,"./src/utils":31}],2:[function(e,t,r){t.exports={default:e("core-js/library/fn/json/stringify"),__esModule:true}},{"core-js/library/fn/json/stringify":3}],3:[function(e,t,r){var a=e("../../modules/_core"),i=a.JSON||(a.JSON={stringify:JSON.stringify});t.exports=function e(t){return i.stringify.apply(i,arguments)}},{"../../modules/_core":4}],4:[function(e,t,r){var a=t.exports={version:"2.4.0"};if(typeof __e=="number")__e=a},{}],5:[function(e,t,r){"use strict";function a(e){if(!e.__matchAtRelocatable){var t=e.source+"|()";var r="g"+(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"");e.__matchAtRelocatable=new RegExp(t,r)}return e.__matchAtRelocatable}function i(e,t,r){if(e.global||e.sticky){throw new Error("matchAt(...): Only non-global regexes are supported")}var i=a(e);i.lastIndex=r;var n=i.exec(t);if(n[n.length-1]==null){n.length=n.length-1;return n}else{return null}}t.exports=i},{}],6:[function(e,t,r){"use strict";var a=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty;var n=Object.prototype.propertyIsEnumerable;function o(e){if(e===null||e===undefined){throw new TypeError("Object.assign cannot be called with null or undefined")}return Object(e)}function s(){try{if(!Object.assign){return false}var e=new String("abc");e[5]="de";if(Object.getOwnPropertyNames(e)[0]==="5"){return false}var t={};for(var r=0;r<10;r++){t["_"+String.fromCharCode(r)]=r}var a=Object.getOwnPropertyNames(t).map(function(e){return t[e]});if(a.join("")!=="0123456789"){return false}var i={};"abcdefghijklmnopqrst".split("").forEach(function(e){i[e]=e});if(Object.keys(Object.assign({},i)).join("")!=="abcdefghijklmnopqrst"){return false}return true}catch(e){return false}}t.exports=s()?Object.assign:function(e,t){var r;var s=o(e);var l;for(var u=1;u<arguments.length;u++){r=Object(arguments[u]);for(var h in r){if(i.call(r,h)){s[h]=r[h]}}if(a){l=a(r);for(var p=0;p<l.length;p++){if(n.call(r,l[p])){s[l[p]]=r[l[p]]}}}}return s}},{}],7:[function(e,t,r){"use strict";var a=e("match-at");var i=e("./ParseError");function n(e){this.input=e;this.pos=0}function o(e,t,r,a){this.text=e;this.start=t;this.end=r;this.lexer=a}o.prototype.range=function(e,t){if(e.lexer!==this.lexer){return new o(t)}return new o(t,this.start,e.end,this.lexer)};var s=new RegExp("([ \r\n\t]+)|"+"([!-\\[\\]-\u2027\u202a-\ud7ff\uf900-\uffff]"+"|[\ud800-\udbff][\udc00-\udfff]"+"|\\\\(?:[a-zA-Z]+|[^\ud800-\udfff])"+")");n.prototype.lex=function(){var e=this.input;var t=this.pos;if(t===e.length){return new o("EOF",t,t,this)}var r=a(s,e,t);if(r===null){throw new i("Unexpected character: '"+e[t]+"'",new o(e[t],t,t+1,this))}var n=r[2]||" ";var l=this.pos;this.pos+=r[0].length;var u=this.pos;return new o(n,l,u,this)};t.exports=n},{"./ParseError":10,"match-at":5}],8:[function(e,t,r){"use strict";var a=e("./Lexer");var i=e("./macros");var n=e("./ParseError");var o=e("object-assign");function s(e,t){this.lexer=new a(e);this.macros=o({},i,t);this.stack=[];this.discardedWhiteSpace=[]}s.prototype.nextToken=function(){for(;;){if(this.stack.length===0){this.stack.push(this.lexer.lex())}var e=this.stack.pop();var t=e.text;if(!(t.charAt(0)==="\\"&&this.macros.hasOwnProperty(t))){return e}var r=void 0;var i=this.macros[t];if(typeof i==="string"){var o=0;if(i.indexOf("#")!==-1){var s=i.replace(/##/g,"");while(s.indexOf("#"+(o+1))!==-1){++o}}var l=new a(i);i=[];r=l.lex();while(r.text!=="EOF"){i.push(r);r=l.lex()}i.reverse();i.numArgs=o;this.macros[t]=i}if(i.numArgs){var u=[];var h=void 0;for(h=0;h<i.numArgs;++h){var p=this.get(true);if(p.text==="{"){var c=[];var v=1;while(v!==0){r=this.get(false);c.push(r);if(r.text==="{"){++v}else if(r.text==="}"){--v}else if(r.text==="EOF"){throw new n("End of input in macro argument",p)}}c.pop();c.reverse();u[h]=c}else if(p.text==="EOF"){throw new n("End of input expecting macro argument",e)}else{u[h]=[p]}}i=i.slice();for(h=i.length-1;h>=0;--h){r=i[h];if(r.text==="#"){if(h===0){throw new n("Incomplete placeholder at end of macro body",r)}r=i[--h];if(r.text==="#"){i.splice(h+1,1)}else if(/^[1-9]$/.test(r.text)){i.splice.apply(i,[h,2].concat(u[r.text-1]))}else{throw new n("Not a valid argument number",r)}}}}this.stack=this.stack.concat(i)}};s.prototype.get=function(e){this.discardedWhiteSpace=[];var t=this.nextToken();if(e){while(t.text===" "){this.discardedWhiteSpace.push(t);t=this.nextToken()}}return t};s.prototype.unget=function(e){this.stack.push(e);while(this.discardedWhiteSpace.length!==0){this.stack.push(this.discardedWhiteSpace.pop())}};t.exports=s},{"./Lexer":7,"./ParseError":10,"./macros":24,"object-assign":6}],9:[function(e,t,r){"use strict";var a=e("./fontMetrics");var i=6;var n=[[1,1,1],[2,1,1],[3,1,1],[4,2,1],[5,2,1],[6,3,1],[7,4,2],[8,6,3],[9,7,6],[10,8,7],[11,10,9]];var o=[.5,.6,.7,.8,.9,1,1.2,1.44,1.728,2.074,2.488];function s(e){this.style=e.style;this.color=e.color;this.size=e.size||i;this.textSize=e.textSize||this.size;this.phantom=e.phantom;this.font=e.font;this.sizeMultiplier=o[this.size-1];this._fontMetrics=null}s.prototype.extend=function(e){var t={style:this.style,size:this.size,textSize:this.textSize,color:this.color,phantom:this.phantom,font:this.font};for(var r in e){if(e.hasOwnProperty(r)){t[r]=e[r]}}return new s(t)};function l(e,t){return t.size<2?e:n[e-1][t.size-1]}s.prototype.havingStyle=function(e){if(this.style===e){return this}else{return this.extend({style:e,size:l(this.textSize,e)})}};s.prototype.havingCrampedStyle=function(){return this.havingStyle(this.style.cramp())};s.prototype.havingSize=function(e){if(this.size===e&&this.textSize===e){return this}else{return this.extend({style:this.style.text(),size:e,textSize:e})}};s.prototype.havingBaseStyle=function(e){e=e||this.style.text();var t=l(i,e);if(this.size===t&&this.textSize===i&&this.style===e){return this}else{return this.extend({style:e,size:t,baseSize:i})}};s.prototype.withColor=function(e){return this.extend({color:e})};s.prototype.withPhantom=function(){return this.extend({phantom:true})};s.prototype.withFont=function(e){return this.extend({font:e||this.font})};s.prototype.sizingClasses=function(e){if(e.size!==this.size){return["sizing","reset-size"+e.size,"size"+this.size]}else{return[]}};s.prototype.baseSizingClasses=function(){if(this.size!==i){return["sizing","reset-size"+this.size,"size"+i]}else{return[]}};s.prototype.fontMetrics=function(){if(!this._fontMetrics){this._fontMetrics=a.getFontMetrics(this.size)}return this._fontMetrics};var u={"katex-blue":"#6495ed","katex-orange":"#ffa500","katex-pink":"#ff00af","katex-red":"#df0030","katex-green":"#28ae7b","katex-gray":"gray","katex-purple":"#9d38bd","katex-blueA":"#ccfaff","katex-blueB":"#80f6ff","katex-blueC":"#63d9ea","katex-blueD":"#11accd","katex-blueE":"#0c7f99","katex-tealA":"#94fff5","katex-tealB":"#26edd5","katex-tealC":"#01d1c1","katex-tealD":"#01a995","katex-tealE":"#208170","katex-greenA":"#b6ffb0","katex-greenB":"#8af281","katex-greenC":"#74cf70","katex-greenD":"#1fab54","katex-greenE":"#0d923f","katex-goldA":"#ffd0a9","katex-goldB":"#ffbb71","katex-goldC":"#ff9c39","katex-goldD":"#e07d10","katex-goldE":"#a75a05","katex-redA":"#fca9a9","katex-redB":"#ff8482","katex-redC":"#f9685d","katex-redD":"#e84d39","katex-redE":"#bc2612","katex-maroonA":"#ffbde0","katex-maroonB":"#ff92c6","katex-maroonC":"#ed5fa6","katex-maroonD":"#ca337c","katex-maroonE":"#9e034e","katex-purpleA":"#ddd7ff","katex-purpleB":"#c6b9fc","katex-purpleC":"#aa87ff","katex-purpleD":"#7854ab","katex-purpleE":"#543b78","katex-mintA":"#f5f9e8","katex-mintB":"#edf2df","katex-mintC":"#e0e5cc","katex-grayA":"#f6f7f7","katex-grayB":"#f0f1f2","katex-grayC":"#e3e5e6","katex-grayD":"#d6d8da","katex-grayE":"#babec2","katex-grayF":"#888d93","katex-grayG":"#626569","katex-grayH":"#3b3e40","katex-grayI":"#21242c","katex-kaBlue":"#314453","katex-kaGreen":"#71B307"};s.prototype.getColor=function(){if(this.phantom){return"transparent"}else{return u[this.color]||this.color}};s.BASESIZE=i;t.exports=s},{"./fontMetrics":21}],10:[function(e,t,r){"use strict";function a(e,t){var r="KaTeX parse error: "+e;var i=void 0;var n=void 0;if(t&&t.lexer&&t.start<=t.end){var o=t.lexer.input;i=t.start;n=t.end;if(i===o.length){r+=" at end of input: "}else{r+=" at position "+(i+1)+": "}var s=o.slice(i,n).replace(/[^]/g,"$&\u0332");var l=void 0;if(i>15){l="\u2026"+o.slice(i-15,i)}else{l=o.slice(0,i)}var u=void 0;if(n+15<o.length){u=o.slice(n,n+15)+"\u2026"}else{u=o.slice(n)}r+=l+s+u}var h=new Error(r);h.name="ParseError";h.__proto__=a.prototype;h.position=i;return h}a.prototype.__proto__=Error.prototype;t.exports=a},{}],11:[function(e,t,r){"use strict";var a=e("./functions");var i=e("./environments");var n=e("./MacroExpander");var o=e("./symbols");var s=e("./utils");var l=e("./unicodeRegexes").cjkRegex;var u=e("./parseData");var h=e("./ParseError");function p(e,t){this.gullet=new n(e,t.macros);if(t.colorIsTextColor){this.gullet.macros["\\color"]="\\textcolor"}this.settings=t;this.leftrightDepth=0}var c=u.ParseNode;function v(e,t,r){this.result=e;this.isFunction=t;this.token=r}p.prototype.expect=function(e,t){if(this.nextToken.text!==e){throw new h("Expected '"+e+"', got '"+this.nextToken.text+"'",this.nextToken)}if(t!==false){this.consume()}};p.prototype.consume=function(){this.nextToken=this.gullet.get(this.mode==="math")};p.prototype.switchMode=function(e){this.gullet.unget(this.nextToken);this.mode=e;this.consume()};p.prototype.parse=function(){this.mode="math";this.consume();var e=this.parseInput();return e};p.prototype.parseInput=function(){var e=this.parseExpression(false);this.expect("EOF",false);return e};var f=["}","\\end","\\right","&","\\\\","\\cr"];p.prototype.parseExpression=function(e,t){var r=[];while(true){var i=this.nextToken;if(f.indexOf(i.text)!==-1){break}if(t&&i.text===t){break}if(e&&a[i.text]&&a[i.text].infix){break}var n=this.parseAtom();if(!n){if(!this.settings.throwOnError&&i.text[0]==="\\"){var o=this.handleUnsupportedCmd();r.push(o);continue}break}r.push(n)}return this.handleInfixNodes(r)};p.prototype.handleInfixNodes=function(e){var t=-1;var r=void 0;for(var a=0;a<e.length;a++){var i=e[a];if(i.type==="infix"){if(t!==-1){throw new h("only one infix operator per group",i.value.token)}t=a;r=i.value.replaceWith}}if(t!==-1){var n=void 0;var o=void 0;var s=e.slice(0,t);var l=e.slice(t+1);if(s.length===1&&s[0].type==="ordgroup"){n=s[0]}else{n=new c("ordgroup",s,this.mode)}if(l.length===1&&l[0].type==="ordgroup"){o=l[0]}else{o=new c("ordgroup",l,this.mode)}var u=this.callFunction(r,[n,o],null);return[new c(u.type,u,this.mode)]}else{return e}};var m=1;p.prototype.handleSupSubscript=function(e){var t=this.nextToken;var r=t.text;this.consume();var i=this.parseGroup();if(!i){if(!this.settings.throwOnError&&this.nextToken.text[0]==="\\"){return this.handleUnsupportedCmd()}else{throw new h("Expected group after '"+r+"'",t)}}else if(i.isFunction){var n=a[i.result].greediness;if(n>m){return this.parseFunction(i)}else{throw new h("Got function '"+i.result+"' with no arguments "+"as "+e,t)}}else{return i.result}};p.prototype.handleUnsupportedCmd=function(){var e=this.nextToken.text;var t=[];for(var r=0;r<e.length;r++){t.push(new c("textord",e[r],"text"))}var a=new c("text",{body:t,type:"text"},this.mode);var i=new c("color",{color:this.settings.errorColor,value:[a],type:"color"},this.mode);this.consume();return i};p.prototype.parseAtom=function(){var e=this.parseImplicitGroup();if(this.mode==="text"){return e}var t=void 0;var r=void 0;while(true){var a=this.nextToken;if(a.text==="\\limits"||a.text==="\\nolimits"){if(!e||e.type!=="op"){throw new h("Limit controls must follow a math operator",a)}else{var i=a.text==="\\limits";e.value.limits=i;e.value.alwaysHandleSupSub=true}this.consume()}else if(a.text==="^"){if(t){throw new h("Double superscript",a)}t=this.handleSupSubscript("superscript")}else if(a.text==="_"){if(r){throw new h("Double subscript",a)}r=this.handleSupSubscript("subscript")}else if(a.text==="'"){if(t){throw new h("Double superscript",a)}var n=new c("textord","\\prime",this.mode);var o=[n];this.consume();while(this.nextToken.text==="'"){o.push(n);this.consume()}if(this.nextToken.text==="^"){o.push(this.handleSupSubscript("superscript"))}t=new c("ordgroup",o,this.mode)}else{break}}if(t||r){return new c("supsub",{base:e,sup:t,sub:r},this.mode)}else{return e}};var d=["\\tiny","\\sixptsize","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"];var g=["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"];var y={"\\rm":"mathrm","\\sf":"mathsf","\\tt":"mathtt","\\bf":"mathbf","\\it":"mathit"};p.prototype.parseImplicitGroup=function(){var e=this.parseSymbol();if(e==null){return this.parseFunction()}var t=e.result;if(t==="\\left"){var r=this.parseFunction(e);++this.leftrightDepth;var a=this.parseExpression(false);--this.leftrightDepth;this.expect("\\right",false);var n=this.parseFunction();return new c("leftright",{body:a,left:r.value.value,right:n.value.value},this.mode)}else if(t==="\\begin"){var o=this.parseFunction(e);var l=o.value.name;if(!i.hasOwnProperty(l)){throw new h("No such environment: "+l,o.value.nameGroup)}var u=i[l];var p=this.parseArguments("\\begin{"+l+"}",u);var v={mode:this.mode,envName:l,parser:this,positions:p.pop()};var f=u.handler(v,p);this.expect("\\end",false);var m=this.nextToken;var x=this.parseFunction();if(x.value.name!==l){throw new h("Mismatch: \\begin{"+l+"} matched "+"by \\end{"+x.value.name+"}",m)}f.position=x.position;return f}else if(s.contains(d,t)){this.consumeSpaces();var b=this.parseExpression(false);return new c("sizing",{size:s.indexOf(d,t)+1,value:b},this.mode)}else if(s.contains(g,t)){this.consumeSpaces();var w=this.parseExpression(true);return new c("styling",{style:t.slice(1,t.length-5),value:w},this.mode)}else if(t in y){var k=y[t];this.consumeSpaces();var z=this.parseExpression(true);if(k.slice(0,4)==="text"){return new c("text",{style:k,body:new c("ordgroup",z,this.mode)},this.mode)}else{return new c("font",{font:k,body:new c("ordgroup",z,this.mode)},this.mode)}}else if(t==="\\color"){var M=this.parseColorGroup(false);if(!M){throw new h("\\color not followed by color")}var S=this.parseExpression(true);return new c("color",{type:"color",color:M.result.value,value:S},this.mode)}else if(t==="$"){if(this.mode==="math"){throw new h("$ within math mode")}this.consume();var A=this.mode;this.switchMode("math");var N=this.parseExpression(false,"$");this.expect("$",true);this.switchMode(A);return new c("styling",{style:"text",value:N},"math")}else{return this.parseFunction(e)}};p.prototype.parseFunction=function(e){if(!e){e=this.parseGroup()}if(e){if(e.isFunction){var t=e.result;var r=a[t];if(this.mode==="text"&&!r.allowedInText){throw new h("Can't use function '"+t+"' in text mode",e.token)}var i=this.parseArguments(t,r);var n=e.token;var o=this.callFunction(t,i,i.pop(),n);return new c(o.type,o,this.mode)}else{return e.result}}else{return null}};p.prototype.callFunction=function(e,t,r,i){var n={funcName:e,parser:this,positions:r,token:i};return a[e].handler(n,t)};p.prototype.parseArguments=function(e,t){var r=t.numArgs+t.numOptionalArgs;if(r===0){return[[this.pos]]}var i=t.greediness;var n=[this.pos];var o=[];for(var s=0;s<r;s++){var l=this.nextToken;var u=t.argTypes&&t.argTypes[s];var p=void 0;if(s<t.numOptionalArgs){if(u){p=this.parseGroupOfType(u,true)}else{p=this.parseGroup(true)}if(!p){o.push(null);n.push(this.pos);continue}}else{if(u){p=this.parseGroupOfType(u)}else{p=this.parseGroup()}if(!p){if(!this.settings.throwOnError&&this.nextToken.text[0]==="\\"){p=new v(this.handleUnsupportedCmd(this.nextToken.text),false)}else{throw new h("Expected group after '"+e+"'",l)}}}var c=void 0;if(p.isFunction){var f=a[p.result].greediness;if(f>i){c=this.parseFunction(p)}else{throw new h("Got function '"+p.result+"' as "+"argument to '"+e+"'",l)}}else{c=p.result}o.push(c);n.push(this.pos)}o.push(n);return o};p.prototype.parseGroupOfType=function(e,t){var r=this.mode;if(e==="original"){e=r}if(e==="color"){return this.parseColorGroup(t)}if(e==="size"){return this.parseSizeGroup(t)}if(e==="string"){var a=this.parseStringGroup("string",t);return new v(a.text,false)}this.switchMode(e);if(e==="text"){this.consumeSpaces()}var i=this.parseGroup(t);this.switchMode(r);return i};p.prototype.consumeSpaces=function(){while(this.nextToken.text===" "){this.consume()}};p.prototype.parseStringGroup=function(e,t){if(t&&this.nextToken.text!=="["){return null}var r=this.mode;this.mode="text";this.expect(t?"[":"{");var a="";var i=this.nextToken;var n=i;while(this.nextToken.text!==(t?"]":"}")){if(this.nextToken.text==="EOF"){throw new h("Unexpected end of input in "+e,i.range(this.nextToken,a))}n=this.nextToken;a+=n.text;this.consume()}this.mode=r;this.expect(t?"]":"}");return i.range(n,a)};p.prototype.parseRegexGroup=function(e,t){var r=this.mode;this.mode="text";var a=this.nextToken;var i=a;var n="";while(this.nextToken.text!=="EOF"&&e.test(n+this.nextToken.text)){i=this.nextToken;n+=i.text;this.consume()}if(n===""){throw new h("Invalid "+t+": '"+a.text+"'",a)}this.mode=r;return a.range(i,n)};p.prototype.parseColorGroup=function(e){var t=this.parseStringGroup("color",e);if(!t){return null}var r=/^(#[a-z0-9]+|[a-z]+)$/i.exec(t.text);if(!r){throw new h("Invalid color: '"+t.text+"'",t)}return new v(new c("color",r[0],this.mode),false)};p.prototype.parseSizeGroup=function(e){var t=void 0;if(!e&&this.nextToken.text!=="{"){t=this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/,"size")}else{t=this.parseStringGroup("size",e)}if(!t){return null}var r=/([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(t.text);if(!r){throw new h("Invalid size: '"+t.text+"'",t)}var a={number:+(r[1]+r[2]),unit:r[3]};if(a.unit!=="em"&&a.unit!=="ex"&&a.unit!=="mu"){throw new h("Invalid unit: '"+a.unit+"'",t)}return new v(new c("color",a,this.mode),false)};p.prototype.parseGroup=function(e){var t=this.nextToken;if(this.nextToken.text===(e?"[":"{")){this.consume();var r=this.parseExpression(false,e?"]":null);var a=this.nextToken;this.expect(e?"]":"}");if(this.mode==="text"){this.formLigatures(r)}return new v(new c("ordgroup",r,this.mode,t,a),false)}else{return e?null:this.parseSymbol()}};p.prototype.formLigatures=function(e){var t=e.length-1;for(var r=0;r<t;++r){var a=e[r];var i=a.value;if(i==="-"&&e[r+1].value==="-"){if(r+1<t&&e[r+2].value==="-"){e.splice(r,3,new c("textord","---","text",a,e[r+2]));t-=2}else{e.splice(r,2,new c("textord","--","text",a,e[r+1]));t-=1}}if((i==="'"||i==="`")&&e[r+1].value===i){e.splice(r,2,new c("textord",i+i,"text",a,e[r+1]));t-=1}}};p.prototype.parseSymbol=function(){var e=this.nextToken;if(a[e.text]){this.consume();return new v(e.text,true,e)}else if(o[this.mode][e.text]){this.consume();return new v(new c(o[this.mode][e.text].group,e.text,this.mode,e),false,e)}else if(this.mode==="text"&&l.test(e.text)){this.consume();return new v(new c("textord",e.text,this.mode,e),false,e)}else if(e.text==="$"){return new v(e.text,false,e)}else{return null}};p.prototype.ParseNode=c;t.exports=p},{"./MacroExpander":8,"./ParseError":10,"./environments":20,"./functions":23,"./parseData":26,"./symbols":29,"./unicodeRegexes":30,"./utils":31}],12:[function(e,t,r){"use strict";var a=e("./utils");function i(e){e=e||{};this.displayMode=a.deflt(e.displayMode,false);this.throwOnError=a.deflt(e.throwOnError,true);this.errorColor=a.deflt(e.errorColor,"#cc0000");this.macros=e.macros||{};this.colorIsTextColor=a.deflt(e.colorIsTextColor,false)}t.exports=i},{"./utils":31}],13:[function(e,t,r){"use strict";function a(e,t,r){this.id=e;this.size=t;this.cramped=r}a.prototype.sup=function(){return c[v[this.id]]};a.prototype.sub=function(){return c[f[this.id]]};a.prototype.fracNum=function(){return c[m[this.id]]};a.prototype.fracDen=function(){return c[d[this.id]]};a.prototype.cramp=function(){return c[g[this.id]]};a.prototype.text=function(){return c[y[this.id]]};a.prototype.isTight=function(){return this.size>=2};var i=0;var n=1;var o=2;var s=3;var l=4;var u=5;var h=6;var p=7;var c=[new a(i,0,false),new a(n,0,true),new a(o,1,false),new a(s,1,true),new a(l,2,false),new a(u,2,true),new a(h,3,false),new a(p,3,true)];var v=[l,u,l,u,h,p,h,p];var f=[u,u,u,u,p,p,p,p];var m=[o,s,l,u,h,p,h,p];var d=[s,s,u,u,p,p,p,p];var g=[n,n,s,s,u,u,p,p];var y=[i,n,o,s,o,s,o,s];t.exports={DISPLAY:c[i],TEXT:c[o],SCRIPT:c[l],SCRIPTSCRIPT:c[h]}},{}],14:[function(e,t,r){"use strict";var a=e("./domTree");var i=e("./fontMetrics");var n=e("./symbols");var o=e("./utils");var s=["\\imath","\\jmath","\\pounds"];var l=function e(t,r,a){if(n[a][t]&&n[a][t].replace){t=n[a][t].replace}return{value:t,metrics:i.getCharacterMetrics(t,r)}};var u=function e(t,r,i,n,o){var s=l(t,r,i);var u=s.metrics;t=s.value;var h=void 0;if(u){var p=u.italic;if(i==="text"){p=0}h=new a.symbolNode(t,u.height,u.depth,p,u.skew,o)}else{typeof console!=="undefined"&&console.warn("No character metrics for '"+t+"' in style '"+r+"'");h=new a.symbolNode(t,0,0,0,0,o)}if(n){h.maxFontSize=n.sizeMultiplier;if(n.style.isTight()){h.classes.push("mtight")}if(n.getColor()){h.style.color=n.getColor()}}return h};var h=function e(t,r,a,i){if(t==="\\"||n[r][t].font==="main"){return u(t,"Main-Regular",r,a,i)}else{return u(t,"AMS-Regular",r,a,i.concat(["amsrm"]))}};var p=function e(t,r,a,i,o){if(o==="mathord"){var s=c(t,r,a,i);return u(t,s.fontName,r,a,i.concat([s.fontClass]))}else if(o==="textord"){var l=n[r][t]&&n[r][t].font;if(l==="ams"){return u(t,"AMS-Regular",r,a,i.concat(["amsrm"]))}else{return u(t,"Main-Regular",r,a,i.concat(["mathrm"]))}}else{throw new Error("unexpected type: "+o+" in mathDefault")}};var c=function e(t,r,a,i){if(/[0-9]/.test(t.charAt(0))||o.contains(s,t)){return{fontName:"Main-Italic",fontClass:"mainit"}}else{return{fontName:"Math-Italic",fontClass:"mathit"}}};var v=function e(t,r,a){var i=t.mode;var n=t.value;var h=["mord"];var v=r.font;if(v){var f=void 0;if(v==="mathit"||o.contains(s,n)){f=c(n,i,r,h)}else{f=w[v]}if(l(n,f.fontName,i).metrics){return u(n,f.fontName,i,r,h.concat([f.fontClass||v]))}else{return p(n,i,r,h,a)}}else{return p(n,i,r,h,a)}};var f=function e(t){var r=0;var a=0;var i=0;if(t.children){for(var n=0;n<t.children.length;n++){if(t.children[n].height>r){r=t.children[n].height}if(t.children[n].depth>a){a=t.children[n].depth}if(t.children[n].maxFontSize>i){i=t.children[n].maxFontSize}}}t.height=r;t.depth=a;t.maxFontSize=i};var m=function e(t,r,i){var n=new a.span(t,r,i);f(n);return n};var d=function e(t,r){t.children=r.concat(t.children);f(t)};var g=function e(t,r){var i=new a.documentFragment(t,r);f(i);return i};var y=function e(t,r){var i=m([],[new a.symbolNode("\u200b")]);i.style.fontSize=r+"em";var n=m(["fontsize-ensurer"].concat(t.baseSizingClasses()),[i]);return n};var x=function e(t,r,i,n){var o=void 0;var s=void 0;var l=void 0;if(r==="individualShift"){var u=t;t=[u[0]];o=-u[0].shift-u[0].elem.depth;s=o;for(l=1;l<u.length;l++){var h=-u[l].shift-s-u[l].elem.depth;var p=h-(u[l-1].elem.height+u[l-1].elem.depth);s=s+h;t.push({type:"kern",size:p});t.push(u[l])}}else if(r==="top"){var c=i;for(l=0;l<t.length;l++){if(t[l].type==="kern"){c-=t[l].size}else{c-=t[l].elem.height+t[l].elem.depth}}o=c}else if(r==="bottom"){o=-i}else if(r==="shift"){o=-t[0].elem.depth-i}else if(r==="firstBaseline"){o=-t[0].elem.depth}else{o=0}var v=0;for(l=0;l<t.length;l++){if(t[l].type==="elem"){v=Math.max(v,t[l].elem.maxFontSize)}}var f=y(n,v);var d=[];s=o;for(l=0;l<t.length;l++){if(t[l].type==="kern"){s+=t[l].size}else{var g=t[l].elem;var x=-g.depth-s;s+=g.height+g.depth;var b=m([],[f,g]);b.height-=x;b.depth+=x;b.style.top=x+"em";d.push(b)}}var w=m(["baseline-fix"],[f,new a.symbolNode("\u200b")]);d.push(w);var k=m(["vlist"],d);k.height=Math.max(s,k.height);k.depth=Math.max(-o,k.depth);return k};var b={"\\qquad":{size:"2em",className:"qquad"},"\\quad":{size:"1em",className:"quad"},"\\enspace":{size:"0.5em",className:"enspace"},"\\;":{size:"0.277778em",className:"thickspace"},"\\:":{size:"0.22222em",className:"mediumspace"},"\\,":{size:"0.16667em",className:"thinspace"},"\\!":{size:"-0.16667em",className:"negativethinspace"}};var w={mathbf:{variant:"bold",fontName:"Main-Bold"},mathrm:{variant:"normal",fontName:"Main-Regular"},textit:{variant:"italic",fontName:"Main-Italic"},mathbb:{variant:"double-struck",fontName:"AMS-Regular"},mathcal:{variant:"script",fontName:"Caligraphic-Regular"},mathfrak:{variant:"fraktur",fontName:"Fraktur-Regular"},mathscr:{variant:"script",fontName:"Script-Regular"},mathsf:{variant:"sans-serif",fontName:"SansSerif-Regular"},mathtt:{variant:"monospace",fontName:"Typewriter-Regular"}};t.exports={fontMap:w,makeSymbol:u,mathsym:h,makeSpan:m,makeFragment:g,makeVList:x,makeOrd:v,prependChildren:d,spacingFunctions:b}},{"./domTree":19,"./fontMetrics":21,"./symbols":29,"./utils":31}],15:[function(e,t,r){"use strict";var a=e("babel-runtime/core-js/json/stringify");var i=n(a);function n(e){return e&&e.__esModule?e:{default:e}}var o=e("./ParseError");var s=e("./Style");var l=e("./buildCommon");var u=e("./delimiter");var h=e("./domTree");var p=e("./utils");var c=e("./stretchy");var v=l.makeSpan;var f=function e(t){return t instanceof h.span&&t.classes[0]==="mspace"};var m=function e(t){return t&&t.classes[0]==="mbin"};var d=function e(t,r){if(t){return p.contains(["mbin","mopen","mrel","mop","mpunct"],t.classes[0])}else{return r}};var g=function e(t,r){if(t){return p.contains(["mrel","mclose","mpunct"],t.classes[0])}else{return r}};var y=function e(t,r){var a=r;while(a<t.length&&f(t[a])){a++}if(a===r){return null}else{return t.splice(r,a-r)}};var x=function e(t,r,a){var i=[];for(var n=0;n<t.length;n++){var o=t[n];var s=q(o,r);if(s instanceof h.documentFragment){Array.prototype.push.apply(i,s.children)}else{i.push(s)}}for(var u=0;u<i.length;u++){var p=y(i,u);if(p){if(u<i.length){if(i[u]instanceof h.symbolNode){i[u]=v([].concat(i[u].classes),[i[u]])}l.prependChildren(i[u],p)}else{Array.prototype.push.apply(i,p);break}}}for(var c=0;c<i.length;c++){var f=1;var x=1;while(i[c-f]&&i[c-f].classes[0]==="cursor"){f++}while(i[c+x]&&i[c+x].classes[0]==="cursor"){x++}if(m(i[c])&&(d(i[c-f],a)||g(i[c+x],a))){i[c].classes[0]="mord"}}return i};var b=function e(t){if(t instanceof h.documentFragment){if(t.children.length){return e(t.children[t.children.length-1])}}else{if(p.contains(["mord","mop","mbin","mrel","mopen","mclose","mpunct","minner"],t.classes[0])){return t.classes[0]}}return null};var w=function e(t,r){if(!t.value.base){return false}else{var a=t.value.base;if(a.type==="op"){return a.value.limits&&(r.style.size===s.DISPLAY.size||a.value.alwaysHandleSupSub)}else if(a.type==="accent"){return z(a.value.base)}else if(a.type==="horizBrace"){var i=t.value.sub?false:true;return i===a.value.isOver}else{return null}}};var k=function e(t){if(!t){return false}else if(t.type==="ordgroup"){if(t.value.length===1){return e(t.value[0])}else{return t}}else if(t.type==="color"){if(t.value.value.length===1){return e(t.value.value[0])}else{return t}}else if(t.type==="font"){return e(t.value.body)}else{return t}};var z=function e(t){var r=k(t);return r.type==="mathord"||r.type==="textord"||r.type==="bin"||r.type==="rel"||r.type==="inner"||r.type==="open"||r.type==="close"||r.type==="punct"};var M=function e(t,r){var a=["nulldelimiter"].concat(t.baseSizingClasses());return v(r.concat(a))};var S={};S.mathord=function(e,t){return l.makeOrd(e,t,"mathord")};S.textord=function(e,t){return l.makeOrd(e,t,"textord")};S.bin=function(e,t){return l.mathsym(e.value,e.mode,t,["mbin"])};S.rel=function(e,t){return l.mathsym(e.value,e.mode,t,["mrel"])};S.open=function(e,t){return l.mathsym(e.value,e.mode,t,["mopen"])};S.close=function(e,t){return l.mathsym(e.value,e.mode,t,["mclose"])};S.inner=function(e,t){return l.mathsym(e.value,e.mode,t,["minner"])};S.punct=function(e,t){return l.mathsym(e.value,e.mode,t,["mpunct"])};S.ordgroup=function(e,t){return v(["mord"],x(e.value,t,true),t)};S.text=function(e,t){var r=t.withFont(e.value.style);var a=x(e.value.body,r,true);for(var i=0;i<a.length-1;i++){if(a[i].tryCombine(a[i+1])){a.splice(i+1,1);i--}}return v(["mord","text"],a,r)};S.xmlClass=function(e,t,r){var a=x(e.value.value,t,r);return new l.makeFragment(a,[e.value.cl])};S.color=function(e,t){var r=x(e.value.value,t.withColor(e.value.color),false);return new l.makeFragment(r)};S.supsub=function(e,t){if(w(e,t)){return S[e.value.base.type](e,t)}var r=q(e.value.base,t);var a=void 0;var i=void 0;var n=t.fontMetrics();var o=void 0;var u=0;var p=0;if(e.value.sup){o=t.havingStyle(t.style.sup());a=q(e.value.sup,o,t);if(!z(e.value.base)){u=r.height-o.fontMetrics().supDrop*o.sizeMultiplier/t.sizeMultiplier}}if(e.value.sub){o=t.havingStyle(t.style.sub());i=q(e.value.sub,o,t);if(!z(e.value.base)){p=r.depth+o.fontMetrics().subDrop*o.sizeMultiplier/t.sizeMultiplier}}var c=void 0;if(t.style===s.DISPLAY){c=n.sup1}else if(t.style.cramped){c=n.sup3}else{c=n.sup2}var f=t.sizeMultiplier;var m=.5/n.ptPerEm/f+"em";var d=void 0;if(!e.value.sup){p=Math.max(p,n.sub1,i.height-.8*n.xHeight);d=l.makeVList([{type:"elem",elem:i}],"shift",p,t);d.children[0].style.marginRight=m;if(r instanceof h.symbolNode){d.children[0].style.marginLeft=-r.italic+"em"}}else if(!e.value.sub){u=Math.max(u,c,a.depth+.25*n.xHeight);d=l.makeVList([{type:"elem",elem:a}],"shift",-u,t);d.children[0].style.marginRight=m}else{u=Math.max(u,c,a.depth+.25*n.xHeight);p=Math.max(p,n.sub2);var g=n.defaultRuleThickness;if(u-a.depth-(i.height-p)<4*g){p=4*g-(u-a.depth)+i.height;var y=.8*n.xHeight-(u-a.depth);if(y>0){u+=y;p-=y}}d=l.makeVList([{type:"elem",elem:i,shift:p},{type:"elem",elem:a,shift:-u}],"individualShift",null,t);if(r instanceof h.symbolNode){d.children[0].style.marginLeft=-r.italic+"em"}d.children[0].style.marginRight=m;d.children[1].style.marginRight=m}var x=b(r)||"mord";return v([x],[r,v(["msupsub"],[d])],t)};S.genfrac=function(e,t){var r=t.style;if(e.value.size==="display"){r=s.DISPLAY}else if(e.value.size==="text"){r=s.TEXT}var a=r.fracNum();var i=r.fracDen();var n=void 0;n=t.havingStyle(a);var o=q(e.value.numer,n,t);n=t.havingStyle(i);var h=q(e.value.denom,n,t);var p=void 0;if(e.value.hasBarLine){p=N("frac-line",t)}else{p=null}var c=p?p.height:0;var f=void 0;var m=void 0;var d=void 0;if(r.size===s.DISPLAY.size){f=t.fontMetrics().num1;if(c>0){m=3*c}else{m=7*t.fontMetrics().defaultRuleThickness}d=t.fontMetrics().denom1}else{if(c>0){f=t.fontMetrics().num2;m=c}else{f=t.fontMetrics().num3;m=3*t.fontMetrics().defaultRuleThickness;
}d=t.fontMetrics().denom2}var g=void 0;if(c===0){var y=f-o.depth-(h.height-d);if(y<m){f+=.5*(m-y);d+=.5*(m-y)}g=l.makeVList([{type:"elem",elem:h,shift:d},{type:"elem",elem:o,shift:-f}],"individualShift",null,t)}else{var x=t.fontMetrics().axisHeight;if(f-o.depth-(x+.5*c)<m){f+=m-(f-o.depth-(x+.5*c))}if(x-.5*c-(h.height-d)<m){d+=m-(x-.5*c-(h.height-d))}var b=-(x-.5*c);g=l.makeVList([{type:"elem",elem:h,shift:d},{type:"elem",elem:p,shift:b},{type:"elem",elem:o,shift:-f}],"individualShift",null,t)}n=t.havingStyle(r);g.height*=n.sizeMultiplier/t.sizeMultiplier;g.depth*=n.sizeMultiplier/t.sizeMultiplier;var w=void 0;if(r.size===s.DISPLAY.size){w=t.fontMetrics().delim1}else{w=t.fontMetrics().delim2}var k=void 0;var z=void 0;if(e.value.leftDelim==null){k=M(t,["mopen"])}else{k=u.customSizedDelim(e.value.leftDelim,w,true,t.havingStyle(r),e.mode,["mopen"])}if(e.value.rightDelim==null){z=M(t,["mclose"])}else{z=u.customSizedDelim(e.value.rightDelim,w,true,t.havingStyle(r),e.mode,["mclose"])}return v(["mord"].concat(n.sizingClasses(t)),[k,v(["mfrac"],[g]),z],t)};var A=function e(t,r){var a=t.number;if(t.unit==="ex"){a*=r.fontMetrics().emPerEx}else if(t.unit==="mu"){a/=18}return a};S.array=function(e,t){var r=void 0;var a=void 0;var i=e.value.body.length;var n=0;var s=new Array(i);var u=1/t.fontMetrics().ptPerEm;var h=5*u;var c=12*u;var f=3*u;var m=p.deflt(e.value.arraystretch,1);var d=m*c;var g=.7*d;var y=.3*d;var x=0;for(r=0;r<e.value.body.length;++r){var b=e.value.body[r];var w=g;var k=y;if(n<b.length){n=b.length}var z=new Array(b.length);for(a=0;a<b.length;++a){var M=q(b[a],t);if(k<M.depth){k=M.depth}if(w<M.height){w=M.height}z[a]=M}var S=0;if(e.value.rowGaps[r]){S=A(e.value.rowGaps[r].value,t);if(S>0){S+=y;if(k<S){k=S}S=0}}if(e.value.addJot){k+=f}z.height=w;z.depth=k;x+=w;z.pos=x;x+=k+S;s[r]=z}var N=x/2+t.fontMetrics().axisHeight;var T=e.value.cols||[];var C=[];var E=void 0;var O=void 0;for(a=0,O=0;a<n||O<T.length;++a,++O){var R=T[O]||{};var L=true;while(R.type==="separator"){if(!L){E=v(["arraycolsep"],[]);E.style.width=t.fontMetrics().doubleRuleSep+"em";C.push(E)}if(R.separator==="|"){var D=v(["vertical-separator"],[]);D.style.height=x+"em";D.style.verticalAlign=-(x-N)+"em";C.push(D)}else{throw new o("Invalid separator type: "+R.separator)}O++;R=T[O]||{};L=false}if(a>=n){continue}var P=void 0;if(a>0||e.value.hskipBeforeAndAfter){P=p.deflt(R.pregap,h);if(P!==0){E=v(["arraycolsep"],[]);E.style.width=P+"em";C.push(E)}}var B=[];for(r=0;r<i;++r){var F=s[r];var I=F[a];if(!I){continue}var V=F.pos-N;I.depth=F.depth;I.height=F.height;B.push({type:"elem",elem:I,shift:V})}B=l.makeVList(B,"individualShift",null,t);B=v(["col-align-"+(R.align||"c")],[B]);C.push(B);if(a<n-1||e.value.hskipBeforeAndAfter){P=p.deflt(R.postgap,h);if(P!==0){E=v(["arraycolsep"],[]);E.style.width=P+"em";C.push(E)}}}s=v(["mtable"],C);return v(["mord"],[s],t)};S.spacing=function(e,t){if(e.value==="\\ "||e.value==="\\space"||e.value===" "||e.value==="~"){if(e.mode==="text"){return l.makeOrd(e,t,"textord")}else{return v(["mspace"],[l.mathsym(e.value,e.mode,t)],t)}}else{return v(["mspace",l.spacingFunctions[e.value].className],[],t)}};S.llap=function(e,t){var r=v(["inner"],[q(e.value.body,t)]);var a=v(["fix"],[]);return v(["mord","llap"],[r,a],t)};S.rlap=function(e,t){var r=v(["inner"],[q(e.value.body,t)]);var a=v(["fix"],[]);return v(["mord","rlap"],[r,a],t)};S.op=function(e,t){var r=void 0;var a=void 0;var i=false;if(e.type==="supsub"){r=e.value.sup;a=e.value.sub;e=e.value.base;i=true}var n=t.style;var o=["\\smallint"];var u=false;if(n.size===s.DISPLAY.size&&e.value.symbol&&!p.contains(o,e.value.body)){u=true}var c=void 0;if(e.value.symbol){var f=u?"Size2-Regular":"Size1-Regular";c=l.makeSymbol(e.value.body,f,"math",t,["mop","op-symbol",u?"large-op":"small-op"])}else if(e.value.value){var m=x(e.value.value,t,true);if(m.length===1&&m[0]instanceof h.symbolNode){c=m[0];c.classes[0]="mop"}else{c=v(["mop"],m,t)}}else{var d=[];for(var g=1;g<e.value.body.length;g++){d.push(l.mathsym(e.value.body[g],e.mode))}c=v(["mop"],d,t)}var y=0;var b=0;if(c instanceof h.symbolNode){y=(c.height-c.depth)/2-t.fontMetrics().axisHeight;b=c.italic}if(i){c=v([],[c]);var w=void 0;var k=void 0;var z=void 0;var M=void 0;var S=void 0;if(r){S=t.havingStyle(n.sup());w=q(r,S,t);k=Math.max(t.fontMetrics().bigOpSpacing1,t.fontMetrics().bigOpSpacing3-w.depth)}if(a){S=t.havingStyle(n.sub());z=q(a,S,t);M=Math.max(t.fontMetrics().bigOpSpacing2,t.fontMetrics().bigOpSpacing4-z.height)}var A=void 0;var N=void 0;var T=void 0;if(!r){N=c.height-y;A=l.makeVList([{type:"kern",size:t.fontMetrics().bigOpSpacing5},{type:"elem",elem:z},{type:"kern",size:M},{type:"elem",elem:c}],"top",N,t);A.children[0].style.marginLeft=-b+"em"}else if(!a){T=c.depth+y;A=l.makeVList([{type:"elem",elem:c},{type:"kern",size:k},{type:"elem",elem:w},{type:"kern",size:t.fontMetrics().bigOpSpacing5}],"bottom",T,t);A.children[1].style.marginLeft=b+"em"}else if(!r&&!a){return c}else{T=t.fontMetrics().bigOpSpacing5+z.height+z.depth+M+c.depth+y;A=l.makeVList([{type:"kern",size:t.fontMetrics().bigOpSpacing5},{type:"elem",elem:z},{type:"kern",size:M},{type:"elem",elem:c},{type:"kern",size:k},{type:"elem",elem:w},{type:"kern",size:t.fontMetrics().bigOpSpacing5}],"bottom",T,t);A.children[0].style.marginLeft=-b+"em";A.children[2].style.marginLeft=b+"em"}return v(["mop","op-limits"],[A],t)}else{if(y){c.style.position="relative";c.style.top=y+"em"}return c}};S.mod=function(e,t){var r=[];if(e.value.modType==="bmod"){if(!t.style.isTight()){r.push(v(["mspace","negativemediumspace"],[],t))}r.push(v(["mspace","thickspace"],[],t))}else if(t.style.size===s.DISPLAY.size){r.push(v(["mspace","quad"],[],t))}else if(e.value.modType==="mod"){r.push(v(["mspace","twelvemuspace"],[],t))}else{r.push(v(["mspace","eightmuspace"],[],t))}if(e.value.modType==="pod"||e.value.modType==="pmod"){r.push(l.mathsym("(",e.mode))}if(e.value.modType!=="pod"){var a=[l.mathsym("m",e.mode),l.mathsym("o",e.mode),l.mathsym("d",e.mode)];if(e.value.modType==="bmod"){r.push(v(["mbin"],a,t));r.push(v(["mspace","thickspace"],[],t));if(!t.style.isTight()){r.push(v(["mspace","negativemediumspace"],[],t))}}else{Array.prototype.push.apply(r,a);r.push(v(["mspace","sixmuspace"],[],t))}}if(e.value.value){Array.prototype.push.apply(r,x(e.value.value,t,false))}if(e.value.modType==="pod"||e.value.modType==="pmod"){r.push(l.mathsym(")",e.mode))}return l.makeFragment(r)};S.katex=function(e,t){var r=v(["k"],[l.mathsym("K",e.mode)],t);var a=v(["a"],[l.mathsym("A",e.mode)],t);a.height=(a.height+.2)*.75;a.depth=(a.height-.2)*.75;var i=v(["t"],[l.mathsym("T",e.mode)],t);var n=v(["e"],[l.mathsym("E",e.mode)],t);n.height=n.height-.2155;n.depth=n.depth+.2155;var o=v(["x"],[l.mathsym("X",e.mode)],t);return v(["mord","katex-logo"],[r,a,i,n,o],t)};var N=function e(t,r){var a=r.havingBaseStyle();var i=v([t].concat(a.sizingClasses(r)),[],r);i.height=r.fontMetrics().defaultRuleThickness/r.sizeMultiplier;i.maxFontSize=1;return i};S.overline=function(e,t){var r=q(e.value.body,t.havingCrampedStyle());var a=N("overline-line",t);var i=l.makeVList([{type:"elem",elem:r},{type:"kern",size:3*a.height},{type:"elem",elem:a},{type:"kern",size:a.height}],"firstBaseline",null,t);return v(["mord","overline"],[i],t)};S.underline=function(e,t){var r=q(e.value.body,t);var a=N("underline-line",t);var i=l.makeVList([{type:"kern",size:a.height},{type:"elem",elem:a},{type:"kern",size:3*a.height},{type:"elem",elem:r}],"top",r.height,t);return v(["mord","underline"],[i],t)};S.sqrt=function(e,t){var r=q(e.value.body,t.havingCrampedStyle());var a=N("sqrt-line",t);var i=a.height;var n=i;if(t.style.id<s.TEXT.id){n=t.fontMetrics().xHeight*t.sizeMultiplier}var o=i+n/4;var h=(r.height+r.depth+o+i)*t.sizeMultiplier;var p=v(["sqrt-sign"],[u.customSizedDelim("\\surd",h,false,t,e.mode)],t);var c=p.height+p.depth-i;if(c>r.height+r.depth+o){o=(o+c-r.height-r.depth)/2}var f=-(r.height+o+i)+p.height;p.style.top=f+"em";p.height-=f;p.depth+=f;var m=void 0;if(r.height===0&&r.depth===0){m=v()}else{m=l.makeVList([{type:"elem",elem:r},{type:"kern",size:o},{type:"elem",elem:a},{type:"kern",size:i}],"firstBaseline",null,t)}if(!e.value.index){return v(["mord","sqrt"],[p,m],t)}else{var d=t.havingStyle(s.SCRIPTSCRIPT);var g=q(e.value.index,d,t);var y=Math.max(p.height,m.height);var x=Math.max(p.depth,m.depth);var b=.6*(y-x);var w=l.makeVList([{type:"elem",elem:g}],"shift",-b,t);var k=v(["root"],[w]);return v(["mord","sqrt"],[k,p,m],t)}};function T(e,t,r){var a=x(e,t,false);var i=t.sizeMultiplier/r.sizeMultiplier;for(var n=0;n<a.length;n++){var o=p.indexOf(a[n].classes,"sizing");if(o<0){Array.prototype.push.apply(a[n].classes,t.sizingClasses(r))}else if(a[n].classes[o+1]==="reset-size"+t.size){a[n].classes[o+1]="reset-size"+r.size}a[n].height*=i;a[n].depth*=i}return l.makeFragment(a)}S.sizing=function(e,t){var r=t.havingSize(e.value.size);return T(e.value.value,r,t)};S.styling=function(e,t){var r={display:s.DISPLAY,text:s.TEXT,script:s.SCRIPT,scriptscript:s.SCRIPTSCRIPT};var a=r[e.value.style];var i=t.havingStyle(a);return T(e.value.value,i,t)};S.font=function(e,t){var r=e.value.font;return q(e.value.body,t.withFont(r))};S.delimsizing=function(e,t){var r=e.value.value;if(r==="."){return v([e.value.mclass])}return u.sizedDelim(r,e.value.size,t,e.mode,[e.value.mclass])};S.leftright=function(e,t){var r=x(e.value.body,t,true);var a=0;var i=0;var n=false;for(var o=0;o<r.length;o++){if(r[o].isMiddle){n=true}else{a=Math.max(r[o].height,a);i=Math.max(r[o].depth,i)}}a*=t.sizeMultiplier;i*=t.sizeMultiplier;var s=void 0;if(e.value.left==="."){s=M(t,["mopen"])}else{s=u.leftRightDelim(e.value.left,a,i,t,e.mode,["mopen"])}r.unshift(s);if(n){for(var h=1;h<r.length;h++){var p=r[h];if(p.isMiddle){r[h]=u.leftRightDelim(p.isMiddle.value,a,i,p.isMiddle.options,e.mode,[]);var c=y(p.children,0);if(c){l.prependChildren(r[h],c)}}}}var f=void 0;if(e.value.right==="."){f=M(t,["mclose"])}else{f=u.leftRightDelim(e.value.right,a,i,t,e.mode,["mclose"])}r.push(f);return v(["minner"],r,t)};S.cursor=function(e,t,r){var a=v(["cursor"],[],t);var i=0;var n=A(e.value.height,t);if(e.value.shift){i=A(e.value.shift,t)}i/=t.sizeMultiplier;n/=t.sizeMultiplier;a.style.marginRight="-1px";a.style.borderRight="1px solid";a.style.marginBottom=i+"em";a.style.height=n+"em";a.width=1;a.height=n+i;a.depth=-i;e.value.previous=r;return a};S.middle=function(e,t){var r=void 0;if(e.value.value==="."){r=M(t,[])}else{r=u.sizedDelim(e.value.value,1,t,e.mode,[]);r.isMiddle={value:e.value.value,options:t}}return r};S.rule=function(e,t,r){var a=v(["mord","rule"],[],t);var i=0;if(e.value.shift){i=A(e.value.shift,t)}var n=A(e.value.width,t);var o=A(e.value.height,t);i/=t.sizeMultiplier;n/=t.sizeMultiplier;o/=t.sizeMultiplier;a.style.borderRightWidth=n+"em";a.style.borderTopWidth=o+"em";a.style.bottom=i+"em";a.width=n;a.height=o+i;a.depth=-i;return a};S.kern=function(e,t){var r=v(["mord","rule"],[],t);var a=0;if(e.value.dimension){a=A(e.value.dimension,t)}a/=t.sizeMultiplier;r.style.marginLeft=a+"em";return r};S.accent=function(e,t){var r=e.value.base;var a=void 0;if(e.type==="supsub"){var i=e;e=i.value.base;r=e.value.base;i.value.base=r;a=q(i,t)}var n=q(r,t.havingCrampedStyle());var o=e.value.isShifty&&z(r);var s=0;if(o){var u=k(r);var h=q(u,t.havingCrampedStyle());s=h.skew}var p=Math.min(n.height,t.fontMetrics().xHeight);var f=void 0;if(!e.value.isStretchy){var m=l.makeSymbol(e.value.label,"Main-Regular","math",t);m.italic=0;var d=e.value.label==="\\vec"?"accent-vec":null;f=v(["accent-body",d],[v([],[m])]);f.style.marginLeft=2*s+"em";f=l.makeVList([{type:"elem",elem:n},{type:"kern",size:-p},{type:"elem",elem:f}],"firstBaseline",null,t)}else{f=c.svgSpan(e,t);if(s>0){var g="calc(100% - "+2*s+"em) 100%";f.style.backgroundSize=g}f=l.makeVList([{type:"elem",elem:n},{type:"elem",elem:f}],"firstBaseline",null,t)}var y=v(["mord","accent"],[f],t);if(a){a.children[0]=y;a.height=Math.max(y.height,a.height);a.classes[0]="mord";return a}else{return y}};S.horizBrace=function(e,t){var r=t.style;var a=e.type==="supsub";var i=void 0;var n=void 0;if(a){if(e.value.sup){n=t.havingStyle(r.sup());i=q(e.value.sup,n,t)}else{n=t.havingStyle(r.sub());i=q(e.value.sub,n,t)}e=e.value.base}var o=q(e.value.base,t.havingStyle(r.cramp()));var s=c.svgSpan(e,t);var u=void 0;if(e.value.isOver){u=l.makeVList([{type:"elem",elem:o},{type:"kern",size:.1},{type:"elem",elem:s}],"firstBaseline",null,t)}else{u=l.makeVList([{type:"elem",elem:s},{type:"kern",size:.1},{type:"elem",elem:o}],"bottom",o.depth+.1+s.height,t)}if(a){var h=v(["mord",e.value.isOver?"mover":"munder"],[u],t);if(e.value.isOver){u=l.makeVList([{type:"elem",elem:h},{type:"kern",size:.2},{type:"elem",elem:i}],"firstBaseline",null,t)}else{u=l.makeVList([{type:"elem",elem:i},{type:"kern",size:.2},{type:"elem",elem:h}],"bottom",h.depth+.2+i.height,t)}}return v(["mord",e.value.isOver?"mover":"munder"],[u],t)};S.accentUnder=function(e,t){var r=q(e.value.body,t);var a=c.svgSpan(e,t);var i=/tilde/.test(e.value.label)?.12:0;var n=l.makeVList([{type:"elem",elem:a},{type:"kern",size:i},{type:"elem",elem:r}],"bottom",a.height+i,t);return v(["mord","accentunder"],[n],t)};S.enclose=function(e,t){var r=q(e.value.body,t);var a=e.value.label.substr(1);var i=t.sizeMultiplier;var n=void 0;var o=0;var s=0;if(a==="sout"){n=v(["stretchy","sout"]);n.height=t.fontMetrics().defaultRuleThickness/i;n.maxFontSize=1;s=-.5*t.fontMetrics().xHeight}else{r.classes.push(a==="fbox"?"boxpad":"cancel-pad");var u=z(e.value.body);o=a==="fbox"?.34:u?.2:0;s=r.depth+o;n=c.encloseSpan(r,u,a,o,t)}var h=l.makeVList([{type:"elem",elem:r,shift:0},{type:"elem",elem:n,shift:s}],"individualShift",null,t);if(n.height>h.maxFontSize){h.children[1].style.top=-(r.height+o-.9/i)+"em"}if(/cancel/.test(a)){return v(["mord","cancel-lap"],[h],t)}else{return v(["mord"],[h],t)}};S.xArrow=function(e,t){var r=t.style;var a=t.havingStyle(r.sup());var i=q(e.value.body,a,t);var n=void 0;if(e.value.below){a=t.havingStyle(r.sub());n=q(e.value.below,a,t)}var o=c.svgSpan(e,t);var s=-t.fontMetrics().axisHeight+o.depth;var u=-t.fontMetrics().axisHeight-o.height-.111;var h=void 0;if(e.value.below){var p=-t.fontMetrics().axisHeight+n.height+o.height+.111;h=l.makeVList([{type:"elem",elem:i,shift:u},{type:"elem",elem:o,shift:s},{type:"elem",elem:n,shift:p}],"individualShift",null,t)}else{h=l.makeVList([{type:"elem",elem:i,shift:u},{type:"elem",elem:o,shift:s}],"individualShift",null,t)}var f=v(["mrel","x-arrow"],[h],t);f.depth=f.depth;f.height=f.height;return f};S.phantom=function(e,t){var r=x(e.value.value,t.withPhantom(),false);return new l.makeFragment(r)};S.mclass=function(e,t){var r=x(e.value.value,t,true);return v([e.value.mclass],r,t)};var q=function e(t,r,a){if(!t){return v()}if(S[t.type]){var i=S[t.type](t,r);if(a&&r.size!==a.size){i=v(r.sizingClasses(a),[i],r);var n=r.sizeMultiplier/a.sizeMultiplier;i.height*=n;i.depth*=n}return i}else{throw new o("Got group of unknown type: '"+t.type+"'")}};var C=function e(t,r){t=JSON.parse((0,i.default)(t));var a=x(t,r,true);var n=v(["base"],a,r);var o=v(["strut"]);var s=v(["strut","bottom"]);o.style.height=n.height+"em";s.style.height=n.height+n.depth+"em";s.style.verticalAlign=-n.depth+"em";var l=v(["katex-html"],[o,s,n]);l.setAttribute("aria-hidden","true");return l};t.exports=C},{"./ParseError":10,"./Style":13,"./buildCommon":14,"./delimiter":18,"./domTree":19,"./stretchy":28,"./utils":31,"babel-runtime/core-js/json/stringify":2}],16:[function(e,t,r){"use strict";var a=e("./buildCommon");var i=e("./fontMetrics");var n=e("./mathMLTree");var o=e("./ParseError");var s=e("./symbols");var l=e("./utils");var u=e("./stretchy");var h=a.makeSpan;var p=a.fontMap;var c=function e(t,r){if(s[r][t]&&s[r][t].replace){t=s[r][t].replace}return new n.TextNode(t)};var v=function e(t,r){var a=r.font;if(!a){return null}var n=t.mode;if(a==="mathit"){return"italic"}var o=t.value;if(l.contains(["\\imath","\\jmath"],o)){return null}if(s[n][o]&&s[n][o].replace){o=s[n][o].replace}var u=p[a].fontName;if(i.getCharacterMetrics(o,u)){return p[r.font].variant}return null};var f={};var m={mi:"italic",mn:"normal",mtext:"normal"};f.mathord=function(e,t){var r=new n.MathNode("mi",[c(e.value,e.mode)]);var a=v(e,t)||"italic";if(a!==m[r.type]){r.setAttribute("mathvariant",a)}return r};f.textord=function(e,t){var r=c(e.value,e.mode);var a=v(e,t)||"normal";var i=void 0;if(e.mode==="text"){i=new n.MathNode("mtext",[r])}else if(/[0-9]/.test(e.value)){i=new n.MathNode("mn",[r])}else{i=new n.MathNode("mi",[r])}if(a!==m[i.type]){i.setAttribute("mathvariant",a)}return i};f.bin=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);return t};f.rel=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);return t};f.open=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);return t};f.close=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);return t};f.inner=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);return t};f.punct=function(e){var t=new n.MathNode("mo",[c(e.value,e.mode)]);t.setAttribute("separator","true");return t};f.ordgroup=function(e,t){var r=d(e.value,t);var a=new n.MathNode("mrow",r);return a};f.text=function(e,t){var r=e.value.body;var a=[];var i=null;for(var o=0;o<r.length;o++){var s=g(r[o],t);if(s.type==="mtext"&&i!=null){Array.prototype.push.apply(i.children,s.children)}else{a.push(s);if(s.type==="mtext"){i=s}}}if(a.length===1){return a[0]}else{return new n.MathNode("mrow",a)}};f.color=function(e,t){var r=d(e.value.value,t);var a=new n.MathNode("mstyle",r);a.setAttribute("mathcolor",e.value.color);return a};f.xmlClass=function(e,t){var r=d(e.value.value,t);var a=new n.MathNode("mstyle",r);a.setAttribute("class",e.value.cl);return a};f.supsub=function(e,t){var r=false;var a=void 0;var i=void 0;if(e.value.base){if(e.value.base.value.type==="horizBrace"){i=e.value.sup?true:false;if(i===e.value.base.value.isOver){r=true;a=e.value.base.value.isOver}}}var o=[g(e.value.base,t)];if(e.value.sub){o.push(g(e.value.sub,t))}if(e.value.sup){o.push(g(e.value.sup,t))}var s=void 0;if(r){s=a?"mover":"munder"}else if(!e.value.sub){s="msup"}else if(!e.value.sup){s="msub"}else{s="msubsup"}var l=new n.MathNode(s,o);return l};f.genfrac=function(e,t){var r=new n.MathNode("mfrac",[g(e.value.numer,t),g(e.value.denom,t)]);if(!e.value.hasBarLine){r.setAttribute("linethickness","0px")}if(e.value.leftDelim!=null||e.value.rightDelim!=null){var a=[];if(e.value.leftDelim!=null){var i=new n.MathNode("mo",[new n.TextNode(e.value.leftDelim)]);i.setAttribute("fence","true");a.push(i)}a.push(r);if(e.value.rightDelim!=null){var o=new n.MathNode("mo",[new n.TextNode(e.value.rightDelim)]);o.setAttribute("fence","true");a.push(o)}var s=new n.MathNode("mrow",a);return s}return r};f.array=function(e,t){return new n.MathNode("mtable",e.value.body.map(function(e){return new n.MathNode("mtr",e.map(function(e){return new n.MathNode("mtd",[g(e,t)])}))}))};f.sqrt=function(e,t){var r=void 0;if(e.value.index){r=new n.MathNode("mroot",[g(e.value.body,t),g(e.value.index,t)])}else{r=new n.MathNode("msqrt",[g(e.value.body,t)])}return r};f.leftright=function(e,t){var r=d(e.value.body,t);if(e.value.left!=="."){var a=new n.MathNode("mo",[c(e.value.left,e.mode)]);a.setAttribute("fence","true");r.unshift(a)}if(e.value.right!=="."){var i=new n.MathNode("mo",[c(e.value.right,e.mode)]);i.setAttribute("fence","true");r.push(i)}var o=new n.MathNode("mrow",r);return o};f.middle=function(e,t){var r=new n.MathNode("mo",[c(e.value.middle,e.mode)]);r.setAttribute("fence","true");return r};f.accent=function(e,t){var r=void 0;if(e.value.isStretchy){r=u.mathMLnode(e.value.label)}else{r=new n.MathNode("mo",[c(e.value.label,e.mode)])}var a=new n.MathNode("mover",[g(e.value.base,t),r]);a.setAttribute("accent","true");return a};f.spacing=function(e){var t=void 0;if(e.value==="\\ "||e.value==="\\space"||e.value===" "||e.value==="~"){t=new n.MathNode("mtext",[new n.TextNode("\xa0")])}else{t=new n.MathNode("mspace");t.setAttribute("width",a.spacingFunctions[e.value].size)}return t};f.op=function(e,t){var r=void 0;if(e.value.symbol){r=new n.MathNode("mo",[c(e.value.body,e.mode)])}else if(e.value.value){r=new n.MathNode("mo",d(e.value.value,t))}else{r=new n.MathNode("mi",[new n.TextNode(e.value.body.slice(1))])}return r};f.cursor=function(e){var t=new n.MathNode("mtext",[new n.TextNode("|")]);return t};f.mod=function(e,t){var r=[];if(e.value.modType==="pod"||e.value.modType==="pmod"){r.push(new n.MathNode("mo",[c("(",e.mode)]))}if(e.value.modType!=="pod"){r.push(new n.MathNode("mo",[c("mod",e.mode)]))}if(e.value.value){var a=new n.MathNode("mspace");a.setAttribute("width","0.333333em");r.push(a);r=r.concat(d(e.value.value,t))}if(e.value.modType==="pod"||e.value.modType==="pmod"){r.push(new n.MathNode("mo",[c(")",e.mode)]))}return new n.MathNode("mo",r)};f.katex=function(e){var t=new n.MathNode("mtext",[new n.TextNode("KaTeX")]);return t};f.font=function(e,t){var r=e.value.font;return g(e.value.body,t.withFont(r))};f.delimsizing=function(e){var t=[];if(e.value.value!=="."){t.push(c(e.value.value,e.mode))}var r=new n.MathNode("mo",t);if(e.value.mclass==="mopen"||e.value.mclass==="mclose"){r.setAttribute("fence","true")}else{r.setAttribute("fence","false")}return r};f.styling=function(e,t){var r=d(e.value.value,t);var a=new n.MathNode("mstyle",r);var i={display:["0","true"],text:["0","false"],script:["1","false"],scriptscript:["2","false"]};var o=i[e.value.style];a.setAttribute("scriptlevel",o[0]);a.setAttribute("displaystyle",o[1]);return a};f.sizing=function(e,t){var r=t.havingSize(e.value.size);var a=d(e.value.value,r);var i=new n.MathNode("mstyle",a);i.setAttribute("mathsize",r.sizeMultiplier+"em");return i};f.overline=function(e,t){var r=new n.MathNode("mo",[new n.TextNode("\u203e")]);r.setAttribute("stretchy","true");var a=new n.MathNode("mover",[g(e.value.body,t),r]);a.setAttribute("accent","true");return a};f.underline=function(e,t){var r=new n.MathNode("mo",[new n.TextNode("\u203e")]);r.setAttribute("stretchy","true");var a=new n.MathNode("munder",[g(e.value.body,t),r]);a.setAttribute("accentunder","true");return a};f.accentUnder=function(e,t){var r=u.mathMLnode(e.value.label);var a=new n.MathNode("munder",[g(e.value.body,t),r]);a.setAttribute("accentunder","true");return a};f.enclose=function(e,t){var r=new n.MathNode("menclose",[g(e.value.body,t)]);var a="";switch(e.value.label){case"\\bcancel":a="downdiagonalstrike";break;case"\\sout":a="horizontalstrike";break;case"\\fbox":a="box";break;default:a="updiagonalstrike"}r.setAttribute("notation",a);return r};f.horizBrace=function(e,t){var r=u.mathMLnode(e.value.label);return new n.MathNode(e.value.isOver?"mover":"munder",[g(e.value.base,t),r])};f.xArrow=function(e,t){var r=u.mathMLnode(e.value.label);var a=void 0;var i=void 0;if(e.value.body){var o=g(e.value.body,t);if(e.value.below){i=g(e.value.below,t);a=new n.MathNode("munderover",[r,i,o])}else{a=new n.MathNode("mover",[r,o])}}else if(e.value.below){i=g(e.value.below,t);a=new n.MathNode("munder",[r,i])}else{a=new n.MathNode("mover",[r])}return a};f.rule=function(e){var t=new n.MathNode("mrow");return t};f.kern=function(e){var t=new n.MathNode("mrow");return t};f.llap=function(e,t){var r=new n.MathNode("mpadded",[g(e.value.body,t)]);r.setAttribute("lspace","-1width");r.setAttribute("width","0px");return r};f.rlap=function(e,t){var r=new n.MathNode("mpadded",[g(e.value.body,t)]);r.setAttribute("width","0px");return r};f.phantom=function(e,t){var r=d(e.value.value,t);return new n.MathNode("mphantom",r)};f.mclass=function(e,t){var r=d(e.value.value,t);return new n.MathNode("mstyle",r)};var d=function e(t,r){var a=[];for(var i=0;i<t.length;i++){var n=t[i];a.push(g(n,r))}return a};var g=function e(t,r){if(!t){return new n.MathNode("mrow")}if(f[t.type]){return f[t.type](t,r)}else{throw new o("Got group of unknown type: '"+t.type+"'")}};var y=function e(t,r,a){var i=d(t,a);var o=new n.MathNode("mrow",i);var s=new n.MathNode("annotation",[new n.TextNode(r)]);s.setAttribute("encoding","application/x-tex");var l=new n.MathNode("semantics",[o,s]);var u=new n.MathNode("math",[l]);return h(["katex-mathml"],[u])};t.exports=y},{"./ParseError":10,"./buildCommon":14,"./fontMetrics":21,"./mathMLTree":25,"./stretchy":28,"./symbols":29,"./utils":31}],17:[function(e,t,r){"use strict";var a=e("./buildHTML");var i=e("./buildMathML");var n=e("./buildCommon");var o=e("./Options");var s=e("./Settings");var l=e("./Style");var u=n.makeSpan;var h=function e(t,r,n){n=n||new s({});var h=l.TEXT;if(n.displayMode){h=l.DISPLAY}var p=new o({style:h});var c=i(t,r,p);var v=a(t,p);var f=u(["katex"],[c,v]);if(n.displayMode){return u(["katex-display"],[f])}else{return f}};t.exports=h},{"./Options":9,"./Settings":12,"./Style":13,"./buildCommon":14,"./buildHTML":15,"./buildMathML":16}],18:[function(e,t,r){"use strict";var a=e("./ParseError");var i=e("./Style");var n=e("./buildCommon");var o=e("./fontMetrics");var s=e("./symbols");var l=e("./utils");var u=n.makeSpan;var h=function e(t,r){if(s.math[t]&&s.math[t].replace){return o.getCharacterMetrics(s.math[t].replace,r)}else{return o.getCharacterMetrics(t,r)}};var p=function e(t,r,a,i){var n=a.havingBaseStyle(r);var o=u((i||[]).concat(n.sizingClasses(a)),[t],a);o.height*=n.sizeMultiplier/a.sizeMultiplier;o.depth*=n.sizeMultiplier/a.sizeMultiplier;o.maxFontSize=n.sizeMultiplier;return o};var c=function e(t,r,a){var i=r.havingBaseStyle(a);var n=(1-r.sizeMultiplier/i.sizeMultiplier)*r.fontMetrics().axisHeight;t.classes.push("delimcenter");t.style.top=n+"em";t.height-=n;t.depth+=n};var v=function e(t,r,a,i,o,s){var l=n.makeSymbol(t,"Main-Regular",o,i);var u=p(l,r,i,s);if(a){c(u,i,r)}return u};var f=function e(t,r,a,i){return n.makeSymbol(t,"Size"+r+"-Regular",a,i)};var m=function e(t,r,a,n,o,s){var l=f(t,r,o,n);var h=p(u(["delimsizing","size"+r],[l],n),i.TEXT,n,s);if(a){c(h,n,i.TEXT)}return h};var d=function e(t,r,a){var i=void 0;if(r==="Size1-Regular"){i="delim-size1"}else if(r==="Size4-Regular"){i="delim-size4"}var o=u(["delimsizinginner",i],[u([],[n.makeSymbol(t,r,a)])]);return{type:"elem",elem:o}};var g=function e(t,r,a,o,s,l){var c=void 0;var v=void 0;var f=void 0;var m=void 0;c=f=m=t;v=null;var g="Size1-Regular";if(t==="\\uparrow"){f=m="\u23d0"}else if(t==="\\Uparrow"){f=m="\u2016"}else if(t==="\\downarrow"){c=f="\u23d0"}else if(t==="\\Downarrow"){c=f="\u2016"}else if(t==="\\updownarrow"){c="\\uparrow";f="\u23d0";m="\\downarrow"}else if(t==="\\Updownarrow"){c="\\Uparrow";f="\u2016";m="\\Downarrow"}else if(t==="["||t==="\\lbrack"){c="\u23a1";f="\u23a2";m="\u23a3";g="Size4-Regular"}else if(t==="]"||t==="\\rbrack"){c="\u23a4";f="\u23a5";m="\u23a6";g="Size4-Regular"}else if(t==="\\lfloor"){f=c="\u23a2";m="\u23a3";g="Size4-Regular"}else if(t==="\\lceil"){c="\u23a1";f=m="\u23a2";g="Size4-Regular"}else if(t==="\\rfloor"){f=c="\u23a5";m="\u23a6";g="Size4-Regular"}else if(t==="\\rceil"){c="\u23a4";f=m="\u23a5";g="Size4-Regular"}else if(t==="("){c="\u239b";f="\u239c";m="\u239d";g="Size4-Regular"}else if(t===")"){c="\u239e";f="\u239f";m="\u23a0";g="Size4-Regular"}else if(t==="\\{"||t==="\\lbrace"){c="\u23a7";v="\u23a8";m="\u23a9";f="\u23aa";g="Size4-Regular"}else if(t==="\\}"||t==="\\rbrace"){c="\u23ab";v="\u23ac";m="\u23ad";f="\u23aa";g="Size4-Regular"}else if(t==="\\lgroup"){c="\u23a7";m="\u23a9";f="\u23aa";g="Size4-Regular"}else if(t==="\\rgroup"){c="\u23ab";m="\u23ad";f="\u23aa";g="Size4-Regular"}else if(t==="\\lmoustache"){c="\u23a7";m="\u23ad";f="\u23aa";g="Size4-Regular"}else if(t==="\\rmoustache"){c="\u23ab";m="\u23a9";f="\u23aa";g="Size4-Regular"}else if(t==="\\surd"){c="\ue001";m="\u23b7";f="\ue000";g="Size4-Regular"}var y=h(c,g);var x=y.height+y.depth;var b=h(f,g);var w=b.height+b.depth;var k=h(m,g);var z=k.height+k.depth;var M=0;var S=1;if(v!==null){var A=h(v,g);M=A.height+A.depth;S=2}var N=x+z+M;var T=Math.ceil((r-N)/(S*w));var q=N+T*S*w;var C=o.fontMetrics().axisHeight;if(a){C*=o.sizeMultiplier}var E=q/2-C;var O=[];O.push(d(m,g,s));if(v===null){for(var R=0;R<T;R++){O.push(d(f,g,s))}}else{for(var L=0;L<T;L++){O.push(d(f,g,s))}O.push(d(v,g,s));for(var D=0;D<T;D++){O.push(d(f,g,s))}}O.push(d(c,g,s));var P=o.havingBaseStyle(i.TEXT);var B=n.makeVList(O,"bottom",E,P);return p(u(["delimsizing","mult"],[B],P),i.TEXT,o,l)};var y=["(",")","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\\lceil","\\rceil","\\surd"];var x=["\\uparrow","\\downarrow","\\updownarrow","\\Uparrow","\\Downarrow","\\Updownarrow","|","\\|","\\vert","\\Vert","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","\\lmoustache","\\rmoustache"];var b=["<",">","\\langle","\\rangle","/","\\backslash","\\lt","\\gt"];var w=[0,1.2,1.8,2.4,3];var k=function e(t,r,i,n,o){if(t==="<"||t==="\\lt"){t="\\langle"}else if(t===">"||t==="\\gt"){t="\\rangle"}if(l.contains(y,t)||l.contains(b,t)){return m(t,r,false,i,n,o)}else if(l.contains(x,t)){return g(t,w[r],false,i,n,o)}else{throw new a("Illegal delimiter: '"+t+"'")}};var z=[{type:"small",style:i.SCRIPTSCRIPT},{type:"small",style:i.SCRIPT},{type:"small",style:i.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4}];var M=[{type:"small",style:i.SCRIPTSCRIPT},{type:"small",style:i.SCRIPT},{type:"small",style:i.TEXT},{type:"stack"}];var S=[{type:"small",style:i.SCRIPTSCRIPT},{type:"small",style:i.SCRIPT},{type:"small",style:i.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4},{type:"stack"}];var A=function e(t){if(t.type==="small"){return"Main-Regular"}else if(t.type==="large"){return"Size"+t.size+"-Regular"}else if(t.type==="stack"){return"Size4-Regular"}};var N=function e(t,r,a,i){var n=Math.min(2,3-i.style.size);for(var o=n;o<a.length;o++){if(a[o].type==="stack"){break}var s=h(t,A(a[o]));var l=s.height+s.depth;if(a[o].type==="small"){var u=i.havingBaseStyle(a[o].style);l*=u.sizeMultiplier}if(l>r){return a[o]}}return a[a.length-1]};var T=function e(t,r,a,i,n,o){if(t==="<"||t==="\\lt"){t="\\langle"}else if(t===">"||t==="\\gt"){t="\\rangle"}var s=void 0;if(l.contains(b,t)){s=z}else if(l.contains(y,t)){s=S}else{s=M}var u=N(t,r,s,i);if(u.type==="small"){return v(t,u.style,a,i,n,o)}else if(u.type==="large"){return m(t,u.size,a,i,n,o)}else if(u.type==="stack"){return g(t,r,a,i,n,o)}};var q=function e(t,r,a,i,n,o){var s=i.fontMetrics().axisHeight*i.sizeMultiplier;var l=901;var u=5/i.fontMetrics().ptPerEm;var h=Math.max(r-s,a+s);var p=Math.max(h/500*l,2*h-u);return T(t,p,true,i,n,o)};t.exports={sizedDelim:k,customSizedDelim:T,leftRightDelim:q}},{"./ParseError":10,"./Style":13,"./buildCommon":14,"./fontMetrics":21,"./symbols":29,"./utils":31}],19:[function(e,t,r){"use strict";var a=e("./unicodeRegexes");var i=e("./utils");var n=function e(t){t=t.slice();for(var r=t.length-1;r>=0;r--){if(!t[r]){t.splice(r,1)}}return t.join(" ")};function o(e,t,r){this.classes=e||[];this.children=t||[];this.height=0;this.depth=0;this.maxFontSize=0;this.style={};this.attributes={};if(r){if(r.style.isTight()){this.classes.push("mtight")}if(r.getColor()){this.style.color=r.getColor()}}}o.prototype.setAttribute=function(e,t){this.attributes[e]=t};o.prototype.tryCombine=function(e){return false};o.prototype.toNode=function(){var e=document.createElement("span");e.className=n(this.classes);for(var t in this.style){if(Object.prototype.hasOwnProperty.call(this.style,t)){e.style[t]=this.style[t]}}for(var r in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,r)){e.setAttribute(r,this.attributes[r])}}for(var a=0;a<this.children.length;a++){e.appendChild(this.children[a].toNode())}return e};o.prototype.toMarkup=function(){var e="<span";if(this.classes.length){e+=' class="';e+=i.escape(n(this.classes));e+='"'}var t="";for(var r in this.style){if(this.style.hasOwnProperty(r)){t+=i.hyphenate(r)+":"+this.style[r]+";"}}if(t){e+=' style="'+i.escape(t)+'"'}for(var a in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,a)){e+=" "+a+'="';e+=i.escape(this.attributes[a]);e+='"'}}e+=">";for(var o=0;o<this.children.length;o++){e+=this.children[o].toMarkup();
}e+="</span>";return e};function s(e,t){this.children=e||[];this.height=0;this.depth=0;this.maxFontSize=0;if(t){for(var r=0;r<this.children.length;r++){for(var a=0;a<t.length;a++){this.children[r].classes.push(t[a])}}}this.classes=t||[]}s.prototype.toNode=function(){var e=document.createDocumentFragment();for(var t=0;t<this.children.length;t++){e.appendChild(this.children[t].toNode())}return e};s.prototype.toMarkup=function(){var e="";for(var t=0;t<this.children.length;t++){e+=this.children[t].toMarkup()}return e};var l={"\xee":"\u0131\u0302","\xef":"\u0131\u0308","\xed":"\u0131\u0301","\xec":"\u0131\u0300"};function u(e,t,r,i,n,o,s){this.value=e||"";this.height=t||0;this.depth=r||0;this.italic=i||0;this.skew=n||0;this.classes=o||[];this.style=s||{};this.maxFontSize=0;if(a.cjkRegex.test(e)){if(a.hangulRegex.test(e)){this.classes.push("hangul_fallback")}else{this.classes.push("cjk_fallback")}}if(/[\xee\xef\xed\xec]/.test(this.value)){this.value=l[this.value]}}u.prototype.tryCombine=function(e){if(!e||!(e instanceof u)||this.italic>0||n(this.classes)!==n(e.classes)||this.skew!==e.skew||this.maxFontSize!==e.maxFontSize){return false}for(var t in this.style){if(this.style.hasOwnProperty(t)&&this.style[t]!==e.style[t]){return false}}for(var r in e.style){if(e.style.hasOwnProperty(r)&&this.style[r]!==e.style[r]){return false}}this.value+=e.value;this.height=Math.max(this.height,e.height);this.depth=Math.max(this.depth,e.depth);this.italic=e.italic;return true};u.prototype.toNode=function(){var e=document.createTextNode(this.value);var t=null;if(this.italic>0){t=document.createElement("span");t.style.marginRight=this.italic+"em"}if(this.classes.length>0){t=t||document.createElement("span");t.className=n(this.classes)}for(var r in this.style){if(this.style.hasOwnProperty(r)){t=t||document.createElement("span");t.style[r]=this.style[r]}}if(t){t.appendChild(e);return t}else{return e}};u.prototype.toMarkup=function(){var e=false;var t="<span";if(this.classes.length){e=true;t+=' class="';t+=i.escape(n(this.classes));t+='"'}var r="";if(this.italic>0){r+="margin-right:"+this.italic+"em;"}for(var a in this.style){if(this.style.hasOwnProperty(a)){r+=i.hyphenate(a)+":"+this.style[a]+";"}}if(r){e=true;t+=' style="'+i.escape(r)+'"'}var o=i.escape(this.value);if(e){t+=">";t+=o;t+="</span>";return t}else{return o}};t.exports={span:o,documentFragment:s,symbolNode:u}},{"./unicodeRegexes":30,"./utils":31}],20:[function(e,t,r){"use strict";var a=e("./parseData");var i=e("./ParseError");var n=a.ParseNode;function o(e,t,r){var a=[];var o=[a];var s=[];while(true){var l=e.parseExpression(false,null);l=new n("ordgroup",l,e.mode);if(r){l=new n("styling",{style:r,value:[l]},e.mode)}a.push(l);var u=e.nextToken.text;if(u==="&"){e.consume()}else if(u==="\\end"){break}else if(u==="\\\\"||u==="\\cr"){var h=e.parseFunction();s.push(h.value.size);a=[];o.push(a)}else{throw new i("Expected & or \\\\ or \\end",e.nextToken)}}t.body=o;t.rowGaps=s;return new n(t.type,t,e.mode)}function s(e,r,a){if(typeof e==="string"){e=[e]}if(typeof r==="number"){r={numArgs:r}}var i={numArgs:r.numArgs||0,argTypes:r.argTypes,greediness:1,allowedInText:!!r.allowedInText,numOptionalArgs:r.numOptionalArgs||0,handler:a};for(var n=0;n<e.length;++n){t.exports[e[n]]=i}}function l(e){if(e.substr(0,1)==="d"){return"display"}else{return"text"}}s(["array","darray"],{numArgs:1},function(e,t){var r=t[0];r=r.value.map?r.value:[r];var a=r.map(function(e){var t=e.value;if("lcr".indexOf(t)!==-1){return{type:"align",align:t}}else if(t==="|"){return{type:"separator",separator:"|"}}throw new i("Unknown column alignment: "+e.value,e)});var n={type:"array",cols:a,hskipBeforeAndAfter:true};n=o(e.parser,n,l(e.envName));return n});s(["matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix"],{},function(e){var t={matrix:null,pmatrix:["(",")"],bmatrix:["[","]"],Bmatrix:["\\{","\\}"],vmatrix:["|","|"],Vmatrix:["\\Vert","\\Vert"]}[e.envName];var r={type:"array",hskipBeforeAndAfter:false};r=o(e.parser,r,l(e.envName));if(t){r=new n("leftright",{body:[r],left:t[0],right:t[1]},e.mode)}return r});s(["cases","dcases"],{},function(e){var t={type:"array",arraystretch:1.2,cols:[{type:"align",align:"l",pregap:0,postgap:1},{type:"align",align:"l",pregap:0,postgap:0}]};t=o(e.parser,t,l(e.envName));t=new n("leftright",{body:[t],left:"\\{",right:"."},e.mode);return t});s("aligned",{},function(e){var t={type:"array",cols:[],addJot:true};t=o(e.parser,t,"display");var r=new n("ordgroup",[],e.mode);var a=0;t.value.body.forEach(function(e){for(var t=1;t<e.length;t+=2){var i=e[t].value.value[0];i.value.unshift(r)}if(a<e.length){a=e.length}});for(var i=0;i<a;++i){var s="r";var l=0;if(i%2===1){s="l"}else if(i>0){l=2}t.value.cols[i]={type:"align",align:s,pregap:l,postgap:0}}return t});s("gathered",{},function(e){var t={type:"array",cols:[{type:"align",align:"c"}],addJot:true};t=o(e.parser,t,"display");return t})},{"./ParseError":10,"./parseData":26}],21:[function(e,t,r){"use strict";var a=e("./unicodeRegexes").cjkRegex;var i={slant:[.25,.25,.25],space:[0,0,0],stretch:[0,0,0],shrink:[0,0,0],xHeight:[.431,.431,.431],quad:[1,1.171,1.472],extraSpace:[0,0,0],num1:[.677,.732,.925],num2:[.394,.384,.387],num3:[.444,.471,.504],denom1:[.686,.752,1.025],denom2:[.345,.344,.532],sup1:[.413,.503,.504],sup2:[.363,.431,.404],sup3:[.289,.286,.294],sub1:[.15,.143,.2],sub2:[.247,.286,.4],supDrop:[.386,.353,.494],subDrop:[.05,.071,.1],delim1:[2.39,1.7,1.98],delim2:[1.01,1.157,1.42],axisHeight:[.25,.25,.25],defaultRuleThickness:[.04,.04,.04],bigOpSpacing1:[.111,.111,.111],bigOpSpacing2:[.166,.166,.166],bigOpSpacing3:[.2,.2,.2],bigOpSpacing4:[.6,.6,.6],bigOpSpacing5:[.1,.1,.1],ptPerEm:[10,10,10],doubleRuleSep:[.2,.2,.2]};var n=e("./fontMetricsData");var o={"\xc0":"A","\xc1":"A","\xc2":"A","\xc3":"A","\xc4":"A","\xc5":"A","\xc6":"A","\xc7":"C","\xc8":"E","\xc9":"E","\xca":"E","\xcb":"E","\xcc":"I","\xcd":"I","\xce":"I","\xcf":"I","\xd0":"D","\xd1":"N","\xd2":"O","\xd3":"O","\xd4":"O","\xd5":"O","\xd6":"O","\xd8":"O","\xd9":"U","\xda":"U","\xdb":"U","\xdc":"U","\xdd":"Y","\xde":"o","\xdf":"B","\xe0":"a","\xe1":"a","\xe2":"a","\xe3":"a","\xe4":"a","\xe5":"a","\xe6":"a","\xe7":"c","\xe8":"e","\xe9":"e","\xea":"e","\xeb":"e","\xec":"i","\xed":"i","\xee":"i","\xef":"i","\xf0":"d","\xf1":"n","\xf2":"o","\xf3":"o","\xf4":"o","\xf5":"o","\xf6":"o","\xf8":"o","\xf9":"u","\xfa":"u","\xfb":"u","\xfc":"u","\xfd":"y","\xfe":"o","\xff":"y","\u0410":"A","\u0411":"B","\u0412":"B","\u0413":"F","\u0414":"A","\u0415":"E","\u0416":"K","\u0417":"3","\u0418":"N","\u0419":"N","\u041a":"K","\u041b":"N","\u041c":"M","\u041d":"H","\u041e":"O","\u041f":"N","\u0420":"P","\u0421":"C","\u0422":"T","\u0423":"y","\u0424":"O","\u0425":"X","\u0426":"U","\u0427":"h","\u0428":"W","\u0429":"W","\u042a":"B","\u042b":"X","\u042c":"B","\u042d":"3","\u042e":"X","\u042f":"R","\u0430":"a","\u0431":"b","\u0432":"a","\u0433":"r","\u0434":"y","\u0435":"e","\u0436":"m","\u0437":"e","\u0438":"n","\u0439":"n","\u043a":"n","\u043b":"n","\u043c":"m","\u043d":"n","\u043e":"o","\u043f":"n","\u0440":"p","\u0441":"c","\u0442":"o","\u0443":"y","\u0444":"b","\u0445":"x","\u0446":"n","\u0447":"n","\u0448":"w","\u0449":"w","\u044a":"a","\u044b":"m","\u044c":"a","\u044d":"e","\u044e":"m","\u044f":"r"};var s=function e(t,r){var i=t.charCodeAt(0);if(t[0]in o){i=o[t[0]].charCodeAt(0)}else if(a.test(t[0])){i="M".charCodeAt(0)}var s=n[r][i];if(s){return{depth:s[0],height:s[1],italic:s[2],skew:s[3],width:s[4]}}};var l={};var u=function e(t){var r=void 0;if(t>=5){r=0}else if(t>=3){r=1}else{r=2}if(!l[r]){var a=l[r]={};for(var n in i){if(i.hasOwnProperty(n)){a[n]=i[n][r]}}a.emPerEx=a.xHeight/a.quad}return l[r]};t.exports={getFontMetrics:u,getCharacterMetrics:s}},{"./fontMetricsData":22,"./unicodeRegexes":30}],22:[function(e,t,r){"use strict";t.exports={"AMS-Regular":{65:[0,.68889,0,0],66:[0,.68889,0,0],67:[0,.68889,0,0],68:[0,.68889,0,0],69:[0,.68889,0,0],70:[0,.68889,0,0],71:[0,.68889,0,0],72:[0,.68889,0,0],73:[0,.68889,0,0],74:[.16667,.68889,0,0],75:[0,.68889,0,0],76:[0,.68889,0,0],77:[0,.68889,0,0],78:[0,.68889,0,0],79:[.16667,.68889,0,0],80:[0,.68889,0,0],81:[.16667,.68889,0,0],82:[0,.68889,0,0],83:[0,.68889,0,0],84:[0,.68889,0,0],85:[0,.68889,0,0],86:[0,.68889,0,0],87:[0,.68889,0,0],88:[0,.68889,0,0],89:[0,.68889,0,0],90:[0,.68889,0,0],107:[0,.68889,0,0],165:[0,.675,.025,0],174:[.15559,.69224,0,0],240:[0,.68889,0,0],295:[0,.68889,0,0],710:[0,.825,0,0],732:[0,.9,0,0],770:[0,.825,0,0],771:[0,.9,0,0],989:[.08167,.58167,0,0],1008:[0,.43056,.04028,0],8245:[0,.54986,0,0],8463:[0,.68889,0,0],8487:[0,.68889,0,0],8498:[0,.68889,0,0],8502:[0,.68889,0,0],8503:[0,.68889,0,0],8504:[0,.68889,0,0],8513:[0,.68889,0,0],8592:[-.03598,.46402,0,0],8594:[-.03598,.46402,0,0],8602:[-.13313,.36687,0,0],8603:[-.13313,.36687,0,0],8606:[.01354,.52239,0,0],8608:[.01354,.52239,0,0],8610:[.01354,.52239,0,0],8611:[.01354,.52239,0,0],8619:[0,.54986,0,0],8620:[0,.54986,0,0],8621:[-.13313,.37788,0,0],8622:[-.13313,.36687,0,0],8624:[0,.69224,0,0],8625:[0,.69224,0,0],8630:[0,.43056,0,0],8631:[0,.43056,0,0],8634:[.08198,.58198,0,0],8635:[.08198,.58198,0,0],8638:[.19444,.69224,0,0],8639:[.19444,.69224,0,0],8642:[.19444,.69224,0,0],8643:[.19444,.69224,0,0],8644:[.1808,.675,0,0],8646:[.1808,.675,0,0],8647:[.1808,.675,0,0],8648:[.19444,.69224,0,0],8649:[.1808,.675,0,0],8650:[.19444,.69224,0,0],8651:[.01354,.52239,0,0],8652:[.01354,.52239,0,0],8653:[-.13313,.36687,0,0],8654:[-.13313,.36687,0,0],8655:[-.13313,.36687,0,0],8666:[.13667,.63667,0,0],8667:[.13667,.63667,0,0],8669:[-.13313,.37788,0,0],8672:[-.064,.437,0,0],8674:[-.064,.437,0,0],8705:[0,.825,0,0],8708:[0,.68889,0,0],8709:[.08167,.58167,0,0],8717:[0,.43056,0,0],8722:[-.03598,.46402,0,0],8724:[.08198,.69224,0,0],8726:[.08167,.58167,0,0],8733:[0,.69224,0,0],8736:[0,.69224,0,0],8737:[0,.69224,0,0],8738:[.03517,.52239,0,0],8739:[.08167,.58167,0,0],8740:[.25142,.74111,0,0],8741:[.08167,.58167,0,0],8742:[.25142,.74111,0,0],8756:[0,.69224,0,0],8757:[0,.69224,0,0],8764:[-.13313,.36687,0,0],8765:[-.13313,.37788,0,0],8769:[-.13313,.36687,0,0],8770:[-.03625,.46375,0,0],8774:[.30274,.79383,0,0],8776:[-.01688,.48312,0,0],8778:[.08167,.58167,0,0],8782:[.06062,.54986,0,0],8783:[.06062,.54986,0,0],8785:[.08198,.58198,0,0],8786:[.08198,.58198,0,0],8787:[.08198,.58198,0,0],8790:[0,.69224,0,0],8791:[.22958,.72958,0,0],8796:[.08198,.91667,0,0],8806:[.25583,.75583,0,0],8807:[.25583,.75583,0,0],8808:[.25142,.75726,0,0],8809:[.25142,.75726,0,0],8812:[.25583,.75583,0,0],8814:[.20576,.70576,0,0],8815:[.20576,.70576,0,0],8816:[.30274,.79383,0,0],8817:[.30274,.79383,0,0],8818:[.22958,.72958,0,0],8819:[.22958,.72958,0,0],8822:[.1808,.675,0,0],8823:[.1808,.675,0,0],8828:[.13667,.63667,0,0],8829:[.13667,.63667,0,0],8830:[.22958,.72958,0,0],8831:[.22958,.72958,0,0],8832:[.20576,.70576,0,0],8833:[.20576,.70576,0,0],8840:[.30274,.79383,0,0],8841:[.30274,.79383,0,0],8842:[.13597,.63597,0,0],8843:[.13597,.63597,0,0],8847:[.03517,.54986,0,0],8848:[.03517,.54986,0,0],8858:[.08198,.58198,0,0],8859:[.08198,.58198,0,0],8861:[.08198,.58198,0,0],8862:[0,.675,0,0],8863:[0,.675,0,0],8864:[0,.675,0,0],8865:[0,.675,0,0],8872:[0,.69224,0,0],8873:[0,.69224,0,0],8874:[0,.69224,0,0],8876:[0,.68889,0,0],8877:[0,.68889,0,0],8878:[0,.68889,0,0],8879:[0,.68889,0,0],8882:[.03517,.54986,0,0],8883:[.03517,.54986,0,0],8884:[.13667,.63667,0,0],8885:[.13667,.63667,0,0],8888:[0,.54986,0,0],8890:[.19444,.43056,0,0],8891:[.19444,.69224,0,0],8892:[.19444,.69224,0,0],8901:[0,.54986,0,0],8903:[.08167,.58167,0,0],8905:[.08167,.58167,0,0],8906:[.08167,.58167,0,0],8907:[0,.69224,0,0],8908:[0,.69224,0,0],8909:[-.03598,.46402,0,0],8910:[0,.54986,0,0],8911:[0,.54986,0,0],8912:[.03517,.54986,0,0],8913:[.03517,.54986,0,0],8914:[0,.54986,0,0],8915:[0,.54986,0,0],8916:[0,.69224,0,0],8918:[.0391,.5391,0,0],8919:[.0391,.5391,0,0],8920:[.03517,.54986,0,0],8921:[.03517,.54986,0,0],8922:[.38569,.88569,0,0],8923:[.38569,.88569,0,0],8926:[.13667,.63667,0,0],8927:[.13667,.63667,0,0],8928:[.30274,.79383,0,0],8929:[.30274,.79383,0,0],8934:[.23222,.74111,0,0],8935:[.23222,.74111,0,0],8936:[.23222,.74111,0,0],8937:[.23222,.74111,0,0],8938:[.20576,.70576,0,0],8939:[.20576,.70576,0,0],8940:[.30274,.79383,0,0],8941:[.30274,.79383,0,0],8994:[.19444,.69224,0,0],8995:[.19444,.69224,0,0],9416:[.15559,.69224,0,0],9484:[0,.69224,0,0],9488:[0,.69224,0,0],9492:[0,.37788,0,0],9496:[0,.37788,0,0],9585:[.19444,.68889,0,0],9586:[.19444,.74111,0,0],9632:[0,.675,0,0],9633:[0,.675,0,0],9650:[0,.54986,0,0],9651:[0,.54986,0,0],9654:[.03517,.54986,0,0],9660:[0,.54986,0,0],9661:[0,.54986,0,0],9664:[.03517,.54986,0,0],9674:[.11111,.69224,0,0],9733:[.19444,.69224,0,0],10003:[0,.69224,0,0],10016:[0,.69224,0,0],10731:[.11111,.69224,0,0],10846:[.19444,.75583,0,0],10877:[.13667,.63667,0,0],10878:[.13667,.63667,0,0],10885:[.25583,.75583,0,0],10886:[.25583,.75583,0,0],10887:[.13597,.63597,0,0],10888:[.13597,.63597,0,0],10889:[.26167,.75726,0,0],10890:[.26167,.75726,0,0],10891:[.48256,.98256,0,0],10892:[.48256,.98256,0,0],10901:[.13667,.63667,0,0],10902:[.13667,.63667,0,0],10933:[.25142,.75726,0,0],10934:[.25142,.75726,0,0],10935:[.26167,.75726,0,0],10936:[.26167,.75726,0,0],10937:[.26167,.75726,0,0],10938:[.26167,.75726,0,0],10949:[.25583,.75583,0,0],10950:[.25583,.75583,0,0],10955:[.28481,.79383,0,0],10956:[.28481,.79383,0,0],57350:[.08167,.58167,0,0],57351:[.08167,.58167,0,0],57352:[.08167,.58167,0,0],57353:[0,.43056,.04028,0],57356:[.25142,.75726,0,0],57357:[.25142,.75726,0,0],57358:[.41951,.91951,0,0],57359:[.30274,.79383,0,0],57360:[.30274,.79383,0,0],57361:[.41951,.91951,0,0],57366:[.25142,.75726,0,0],57367:[.25142,.75726,0,0],57368:[.25142,.75726,0,0],57369:[.25142,.75726,0,0],57370:[.13597,.63597,0,0],57371:[.13597,.63597,0,0]},"Caligraphic-Regular":{48:[0,.43056,0,0],49:[0,.43056,0,0],50:[0,.43056,0,0],51:[.19444,.43056,0,0],52:[.19444,.43056,0,0],53:[.19444,.43056,0,0],54:[0,.64444,0,0],55:[.19444,.43056,0,0],56:[0,.64444,0,0],57:[.19444,.43056,0,0],65:[0,.68333,0,.19445],66:[0,.68333,.03041,.13889],67:[0,.68333,.05834,.13889],68:[0,.68333,.02778,.08334],69:[0,.68333,.08944,.11111],70:[0,.68333,.09931,.11111],71:[.09722,.68333,.0593,.11111],72:[0,.68333,.00965,.11111],73:[0,.68333,.07382,0],74:[.09722,.68333,.18472,.16667],75:[0,.68333,.01445,.05556],76:[0,.68333,0,.13889],77:[0,.68333,0,.13889],78:[0,.68333,.14736,.08334],79:[0,.68333,.02778,.11111],80:[0,.68333,.08222,.08334],81:[.09722,.68333,0,.11111],82:[0,.68333,0,.08334],83:[0,.68333,.075,.13889],84:[0,.68333,.25417,0],85:[0,.68333,.09931,.08334],86:[0,.68333,.08222,0],87:[0,.68333,.08222,.08334],88:[0,.68333,.14643,.13889],89:[.09722,.68333,.08222,.08334],90:[0,.68333,.07944,.13889]},"Fraktur-Regular":{33:[0,.69141,0,0],34:[0,.69141,0,0],38:[0,.69141,0,0],39:[0,.69141,0,0],40:[.24982,.74947,0,0],41:[.24982,.74947,0,0],42:[0,.62119,0,0],43:[.08319,.58283,0,0],44:[0,.10803,0,0],45:[.08319,.58283,0,0],46:[0,.10803,0,0],47:[.24982,.74947,0,0],48:[0,.47534,0,0],49:[0,.47534,0,0],50:[0,.47534,0,0],51:[.18906,.47534,0,0],52:[.18906,.47534,0,0],53:[.18906,.47534,0,0],54:[0,.69141,0,0],55:[.18906,.47534,0,0],56:[0,.69141,0,0],57:[.18906,.47534,0,0],58:[0,.47534,0,0],59:[.12604,.47534,0,0],61:[-.13099,.36866,0,0],63:[0,.69141,0,0],65:[0,.69141,0,0],66:[0,.69141,0,0],67:[0,.69141,0,0],68:[0,.69141,0,0],69:[0,.69141,0,0],70:[.12604,.69141,0,0],71:[0,.69141,0,0],72:[.06302,.69141,0,0],73:[0,.69141,0,0],74:[.12604,.69141,0,0],75:[0,.69141,0,0],76:[0,.69141,0,0],77:[0,.69141,0,0],78:[0,.69141,0,0],79:[0,.69141,0,0],80:[.18906,.69141,0,0],81:[.03781,.69141,0,0],82:[0,.69141,0,0],83:[0,.69141,0,0],84:[0,.69141,0,0],85:[0,.69141,0,0],86:[0,.69141,0,0],87:[0,.69141,0,0],88:[0,.69141,0,0],89:[.18906,.69141,0,0],90:[.12604,.69141,0,0],91:[.24982,.74947,0,0],93:[.24982,.74947,0,0],94:[0,.69141,0,0],97:[0,.47534,0,0],98:[0,.69141,0,0],99:[0,.47534,0,0],100:[0,.62119,0,0],101:[0,.47534,0,0],102:[.18906,.69141,0,0],103:[.18906,.47534,0,0],104:[.18906,.69141,0,0],105:[0,.69141,0,0],106:[0,.69141,0,0],107:[0,.69141,0,0],108:[0,.69141,0,0],109:[0,.47534,0,0],110:[0,.47534,0,0],111:[0,.47534,0,0],112:[.18906,.52396,0,0],113:[.18906,.47534,0,0],114:[0,.47534,0,0],115:[0,.47534,0,0],116:[0,.62119,0,0],117:[0,.47534,0,0],118:[0,.52396,0,0],119:[0,.52396,0,0],120:[.18906,.47534,0,0],121:[.18906,.47534,0,0],122:[.18906,.47534,0,0],8216:[0,.69141,0,0],8217:[0,.69141,0,0],58112:[0,.62119,0,0],58113:[0,.62119,0,0],58114:[.18906,.69141,0,0],58115:[.18906,.69141,0,0],58116:[.18906,.47534,0,0],58117:[0,.69141,0,0],58118:[0,.62119,0,0],58119:[0,.47534,0,0]},"Main-Bold":{33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.13333,.63333,0,0],44:[.19444,.15556,0,0],45:[0,.44444,0,0],46:[0,.15556,0,0],47:[.25,.75,0,0],48:[0,.64444,0,0],49:[0,.64444,0,0],50:[0,.64444,0,0],51:[0,.64444,0,0],52:[0,.64444,0,0],53:[0,.64444,0,0],54:[0,.64444,0,0],55:[0,.64444,0,0],56:[0,.64444,0,0],57:[0,.64444,0,0],58:[0,.44444,0,0],59:[.19444,.44444,0,0],60:[.08556,.58556,0,0],61:[-.10889,.39111,0,0],62:[.08556,.58556,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.68611,0,0],66:[0,.68611,0,0],67:[0,.68611,0,0],68:[0,.68611,0,0],69:[0,.68611,0,0],70:[0,.68611,0,0],71:[0,.68611,0,0],72:[0,.68611,0,0],73:[0,.68611,0,0],74:[0,.68611,0,0],75:[0,.68611,0,0],76:[0,.68611,0,0],77:[0,.68611,0,0],78:[0,.68611,0,0],79:[0,.68611,0,0],80:[0,.68611,0,0],81:[.19444,.68611,0,0],82:[0,.68611,0,0],83:[0,.68611,0,0],84:[0,.68611,0,0],85:[0,.68611,0,0],86:[0,.68611,.01597,0],87:[0,.68611,.01597,0],88:[0,.68611,0,0],89:[0,.68611,.02875,0],90:[0,.68611,0,0],91:[.25,.75,0,0],92:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.31,.13444,.03194,0],96:[0,.69444,0,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[0,.69444,.10903,0],103:[.19444,.44444,.01597,0],104:[0,.69444,0,0],105:[0,.69444,0,0],106:[.19444,.69444,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,0,0],114:[0,.44444,0,0],115:[0,.44444,0,0],116:[0,.63492,0,0],117:[0,.44444,0,0],118:[0,.44444,.01597,0],119:[0,.44444,.01597,0],120:[0,.44444,0,0],121:[.19444,.44444,.01597,0],122:[0,.44444,0,0],123:[.25,.75,0,0],124:[.25,.75,0,0],125:[.25,.75,0,0],126:[.35,.34444,0,0],168:[0,.69444,0,0],172:[0,.44444,0,0],175:[0,.59611,0,0],176:[0,.69444,0,0],177:[.13333,.63333,0,0],180:[0,.69444,0,0],215:[.13333,.63333,0,0],247:[.13333,.63333,0,0],305:[0,.44444,0,0],567:[.19444,.44444,0,0],710:[0,.69444,0,0],711:[0,.63194,0,0],713:[0,.59611,0,0],714:[0,.69444,0,0],715:[0,.69444,0,0],728:[0,.69444,0,0],729:[0,.69444,0,0],730:[0,.69444,0,0],732:[0,.69444,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.69444,0,0],772:[0,.59611,0,0],774:[0,.69444,0,0],775:[0,.69444,0,0],776:[0,.69444,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.63194,0,0],824:[.19444,.69444,0,0],915:[0,.68611,0,0],916:[0,.68611,0,0],920:[0,.68611,0,0],923:[0,.68611,0,0],926:[0,.68611,0,0],928:[0,.68611,0,0],931:[0,.68611,0,0],933:[0,.68611,0,0],934:[0,.68611,0,0],936:[0,.68611,0,0],937:[0,.68611,0,0],8211:[0,.44444,.03194,0],8212:[0,.44444,.03194,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0],8224:[.19444,.69444,0,0],8225:[.19444,.69444,0,0],8242:[0,.55556,0,0],8407:[0,.72444,.15486,0],8463:[0,.69444,0,0],8465:[0,.69444,0,0],8467:[0,.69444,0,0],8472:[.19444,.44444,0,0],8476:[0,.69444,0,0],8501:[0,.69444,0,0],8592:[-.10889,.39111,0,0],8593:[.19444,.69444,0,0],8594:[-.10889,.39111,0,0],8595:[.19444,.69444,0,0],8596:[-.10889,.39111,0,0],8597:[.25,.75,0,0],8598:[.19444,.69444,0,0],8599:[.19444,.69444,0,0],8600:[.19444,.69444,0,0],8601:[.19444,.69444,0,0],8636:[-.10889,.39111,0,0],8637:[-.10889,.39111,0,0],8640:[-.10889,.39111,0,0],8641:[-.10889,.39111,0,0],8656:[-.10889,.39111,0,0],8657:[.19444,.69444,0,0],8658:[-.10889,.39111,0,0],8659:[.19444,.69444,0,0],8660:[-.10889,.39111,0,0],8661:[.25,.75,0,0],8704:[0,.69444,0,0],8706:[0,.69444,.06389,0],8707:[0,.69444,0,0],8709:[.05556,.75,0,0],8711:[0,.68611,0,0],8712:[.08556,.58556,0,0],8715:[.08556,.58556,0,0],8722:[.13333,.63333,0,0],8723:[.13333,.63333,0,0],8725:[.25,.75,0,0],8726:[.25,.75,0,0],8727:[-.02778,.47222,0,0],8728:[-.02639,.47361,0,0],8729:[-.02639,.47361,0,0],8730:[.18,.82,0,0],8733:[0,.44444,0,0],8734:[0,.44444,0,0],8736:[0,.69224,0,0],8739:[.25,.75,0,0],8741:[.25,.75,0,0],8743:[0,.55556,0,0],8744:[0,.55556,0,0],8745:[0,.55556,0,0],8746:[0,.55556,0,0],8747:[.19444,.69444,.12778,0],8764:[-.10889,.39111,0,0],8768:[.19444,.69444,0,0],8771:[.00222,.50222,0,0],8776:[.02444,.52444,0,0],8781:[.00222,.50222,0,0],8801:[.00222,.50222,0,0],8804:[.19667,.69667,0,0],8805:[.19667,.69667,0,0],8810:[.08556,.58556,0,0],8811:[.08556,.58556,0,0],8826:[.08556,.58556,0,0],8827:[.08556,.58556,0,0],8834:[.08556,.58556,0,0],8835:[.08556,.58556,0,0],8838:[.19667,.69667,0,0],8839:[.19667,.69667,0,0],8846:[0,.55556,0,0],8849:[.19667,.69667,0,0],8850:[.19667,.69667,0,0],8851:[0,.55556,0,0],8852:[0,.55556,0,0],8853:[.13333,.63333,0,0],8854:[.13333,.63333,0,0],8855:[.13333,.63333,0,0],8856:[.13333,.63333,0,0],8857:[.13333,.63333,0,0],8866:[0,.69444,0,0],8867:[0,.69444,0,0],8868:[0,.69444,0,0],8869:[0,.69444,0,0],8900:[-.02639,.47361,0,0],8901:[-.02639,.47361,0,0],8902:[-.02778,.47222,0,0],8968:[.25,.75,0,0],8969:[.25,.75,0,0],8970:[.25,.75,0,0],8971:[.25,.75,0,0],8994:[-.13889,.36111,0,0],8995:[-.13889,.36111,0,0],9651:[.19444,.69444,0,0],9657:[-.02778,.47222,0,0],9661:[.19444,.69444,0,0],9667:[-.02778,.47222,0,0],9711:[.19444,.69444,0,0],9824:[.12963,.69444,0,0],9825:[.12963,.69444,0,0],9826:[.12963,.69444,0,0],9827:[.12963,.69444,0,0],9837:[0,.75,0,0],9838:[.19444,.69444,0,0],9839:[.19444,.69444,0,0],10216:[.25,.75,0,0],10217:[.25,.75,0,0],10815:[0,.68611,0,0],10927:[.19667,.69667,0,0],10928:[.19667,.69667,0,0]},"Main-Italic":{33:[0,.69444,.12417,0],34:[0,.69444,.06961,0],35:[.19444,.69444,.06616,0],37:[.05556,.75,.13639,0],38:[0,.69444,.09694,0],39:[0,.69444,.12417,0],40:[.25,.75,.16194,0],41:[.25,.75,.03694,0],42:[0,.75,.14917,0],43:[.05667,.56167,.03694,0],44:[.19444,.10556,0,0],45:[0,.43056,.02826,0],46:[0,.10556,0,0],47:[.25,.75,.16194,0],48:[0,.64444,.13556,0],49:[0,.64444,.13556,0],50:[0,.64444,.13556,0],51:[0,.64444,.13556,0],52:[.19444,.64444,.13556,0],53:[0,.64444,.13556,0],54:[0,.64444,.13556,0],55:[.19444,.64444,.13556,0],56:[0,.64444,.13556,0],57:[0,.64444,.13556,0],58:[0,.43056,.0582,0],59:[.19444,.43056,.0582,0],61:[-.13313,.36687,.06616,0],63:[0,.69444,.1225,0],64:[0,.69444,.09597,0],65:[0,.68333,0,0],66:[0,.68333,.10257,0],67:[0,.68333,.14528,0],68:[0,.68333,.09403,0],69:[0,.68333,.12028,0],70:[0,.68333,.13305,0],71:[0,.68333,.08722,0],72:[0,.68333,.16389,0],73:[0,.68333,.15806,0],74:[0,.68333,.14028,0],75:[0,.68333,.14528,0],76:[0,.68333,0,0],77:[0,.68333,.16389,0],78:[0,.68333,.16389,0],79:[0,.68333,.09403,0],80:[0,.68333,.10257,0],81:[.19444,.68333,.09403,0],82:[0,.68333,.03868,0],83:[0,.68333,.11972,0],84:[0,.68333,.13305,0],85:[0,.68333,.16389,0],86:[0,.68333,.18361,0],87:[0,.68333,.18361,0],88:[0,.68333,.15806,0],89:[0,.68333,.19383,0],90:[0,.68333,.14528,0],91:[.25,.75,.1875,0],93:[.25,.75,.10528,0],94:[0,.69444,.06646,0],95:[.31,.12056,.09208,0],97:[0,.43056,.07671,0],98:[0,.69444,.06312,0],99:[0,.43056,.05653,0],100:[0,.69444,.10333,0],101:[0,.43056,.07514,0],102:[.19444,.69444,.21194,0],103:[.19444,.43056,.08847,0],104:[0,.69444,.07671,0],105:[0,.65536,.1019,0],106:[.19444,.65536,.14467,0],107:[0,.69444,.10764,0],108:[0,.69444,.10333,0],109:[0,.43056,.07671,0],110:[0,.43056,.07671,0],111:[0,.43056,.06312,0],112:[.19444,.43056,.06312,0],113:[.19444,.43056,.08847,0],114:[0,.43056,.10764,0],115:[0,.43056,.08208,0],116:[0,.61508,.09486,0],117:[0,.43056,.07671,0],118:[0,.43056,.10764,0],119:[0,.43056,.10764,0],120:[0,.43056,.12042,0],121:[.19444,.43056,.08847,0],122:[0,.43056,.12292,0],126:[.35,.31786,.11585,0],163:[0,.69444,0,0],305:[0,.43056,0,.02778],567:[.19444,.43056,0,.08334],768:[0,.69444,0,0],769:[0,.69444,.09694,0],770:[0,.69444,.06646,0],771:[0,.66786,.11585,0],772:[0,.56167,.10333,0],774:[0,.69444,.10806,0],775:[0,.66786,.11752,0],776:[0,.66786,.10474,0],778:[0,.69444,0,0],779:[0,.69444,.1225,0],780:[0,.62847,.08295,0],915:[0,.68333,.13305,0],916:[0,.68333,0,0],920:[0,.68333,.09403,0],923:[0,.68333,0,0],926:[0,.68333,.15294,0],928:[0,.68333,.16389,0],931:[0,.68333,.12028,0],933:[0,.68333,.11111,0],934:[0,.68333,.05986,0],936:[0,.68333,.11111,0],937:[0,.68333,.10257,0],8211:[0,.43056,.09208,0],8212:[0,.43056,.09208,0],8216:[0,.69444,.12417,0],8217:[0,.69444,.12417,0],8220:[0,.69444,.1685,0],8221:[0,.69444,.06961,0],8463:[0,.68889,0,0]},"Main-Regular":{32:[0,0,0,0],33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.08333,.58333,0,0],44:[.19444,.10556,0,0],45:[0,.43056,0,0],46:[0,.10556,0,0],47:[.25,.75,0,0],48:[0,.64444,0,0],49:[0,.64444,0,0],50:[0,.64444,0,0],51:[0,.64444,0,0],52:[0,.64444,0,0],53:[0,.64444,0,0],54:[0,.64444,0,0],55:[0,.64444,0,0],56:[0,.64444,0,0],57:[0,.64444,0,0],58:[0,.43056,0,0],59:[.19444,.43056,0,0],60:[.0391,.5391,0,0],61:[-.13313,.36687,0,0],62:[.0391,.5391,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.68333,0,0],66:[0,.68333,0,0],67:[0,.68333,0,0],68:[0,.68333,0,0],69:[0,.68333,0,0],70:[0,.68333,0,0],71:[0,.68333,0,0],72:[0,.68333,0,0],73:[0,.68333,0,0],74:[0,.68333,0,0],75:[0,.68333,0,0],76:[0,.68333,0,0],77:[0,.68333,0,0],78:[0,.68333,0,0],79:[0,.68333,0,0],80:[0,.68333,0,0],81:[.19444,.68333,0,0],82:[0,.68333,0,0],83:[0,.68333,0,0],84:[0,.68333,0,0],85:[0,.68333,0,0],86:[0,.68333,.01389,0],87:[0,.68333,.01389,0],88:[0,.68333,0,0],89:[0,.68333,.025,0],90:[0,.68333,0,0],91:[.25,.75,0,0],92:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.31,.12056,.02778,0],96:[0,.69444,0,0],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,0],100:[0,.69444,0,0],101:[0,.43056,0,0],102:[0,.69444,.07778,0],103:[.19444,.43056,.01389,0],104:[0,.69444,0,0],105:[0,.66786,0,0],106:[.19444,.66786,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,0],112:[.19444,.43056,0,0],113:[.19444,.43056,0,0],114:[0,.43056,0,0],115:[0,.43056,0,0],116:[0,.61508,0,0],117:[0,.43056,0,0],118:[0,.43056,.01389,0],119:[0,.43056,.01389,0],120:[0,.43056,0,0],121:[.19444,.43056,.01389,0],122:[0,.43056,0,0],123:[.25,.75,0,0],124:[.25,.75,0,0],125:[.25,.75,0,0],126:[.35,.31786,0,0],160:[0,0,0,0],168:[0,.66786,0,0],172:[0,.43056,0,0],175:[0,.56778,0,0],176:[0,.69444,0,0],177:[.08333,.58333,0,0],180:[0,.69444,0,0],215:[.08333,.58333,0,0],247:[.08333,.58333,0,0],305:[0,.43056,0,0],567:[.19444,.43056,0,0],710:[0,.69444,0,0],711:[0,.62847,0,0],713:[0,.56778,0,0],714:[0,.69444,0,0],715:[0,.69444,0,0],728:[0,.69444,0,0],729:[0,.66786,0,0],730:[0,.69444,0,0],732:[0,.66786,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.66786,0,0],772:[0,.56778,0,0],774:[0,.69444,0,0],775:[0,.66786,0,0],776:[0,.66786,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.62847,0,0],824:[.19444,.69444,0,0],915:[0,.68333,0,0],916:[0,.68333,0,0],920:[0,.68333,0,0],923:[0,.68333,0,0],926:[0,.68333,0,0],928:[0,.68333,0,0],931:[0,.68333,0,0],933:[0,.68333,0,0],934:[0,.68333,0,0],936:[0,.68333,0,0],937:[0,.68333,0,0],8211:[0,.43056,.02778,0],8212:[0,.43056,.02778,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0],8224:[.19444,.69444,0,0],8225:[.19444,.69444,0,0],8230:[0,.12,0,0],8242:[0,.55556,0,0],8407:[0,.71444,.15382,0],8463:[0,.68889,0,0],8465:[0,.69444,0,0],8467:[0,.69444,0,.11111],8472:[.19444,.43056,0,.11111],8476:[0,.69444,0,0],8501:[0,.69444,0,0],8592:[-.13313,.36687,0,0],8593:[.19444,.69444,0,0],8594:[-.13313,.36687,0,0],8595:[.19444,.69444,0,0],8596:[-.13313,.36687,0,0],8597:[.25,.75,0,0],8598:[.19444,.69444,0,0],8599:[.19444,.69444,0,0],8600:[.19444,.69444,0,0],8601:[.19444,.69444,0,0],8614:[.011,.511,0,0],8617:[.011,.511,0,0],8618:[.011,.511,0,0],8636:[-.13313,.36687,0,0],8637:[-.13313,.36687,0,0],8640:[-.13313,.36687,0,0],8641:[-.13313,.36687,0,0],8652:[.011,.671,0,0],8656:[-.13313,.36687,0,0],8657:[.19444,.69444,0,0],8658:[-.13313,.36687,0,0],8659:[.19444,.69444,0,0],8660:[-.13313,.36687,0,0],8661:[.25,.75,0,0],8704:[0,.69444,0,0],8706:[0,.69444,.05556,.08334],8707:[0,.69444,0,0],8709:[.05556,.75,0,0],8711:[0,.68333,0,0],8712:[.0391,.5391,0,0],8715:[.0391,.5391,0,0],8722:[.08333,.58333,0,0],8723:[.08333,.58333,0,0],8725:[.25,.75,0,0],8726:[.25,.75,0,0],8727:[-.03472,.46528,0,0],8728:[-.05555,.44445,0,0],8729:[-.05555,.44445,0,0],8730:[.2,.8,0,0],8733:[0,.43056,0,0],8734:[0,.43056,0,0],8736:[0,.69224,0,0],8739:[.25,.75,0,0],8741:[.25,.75,0,0],8743:[0,.55556,0,0],8744:[0,.55556,0,0],8745:[0,.55556,0,0],8746:[0,.55556,0,0],8747:[.19444,.69444,.11111,0],8764:[-.13313,.36687,0,0],8768:[.19444,.69444,0,0],8771:[-.03625,.46375,0,0],8773:[-.022,.589,0,0],8776:[-.01688,.48312,0,0],8781:[-.03625,.46375,0,0],8784:[-.133,.67,0,0],8800:[.215,.716,0,0],8801:[-.03625,.46375,0,0],8804:[.13597,.63597,0,0],8805:[.13597,.63597,0,0],8810:[.0391,.5391,0,0],8811:[.0391,.5391,0,0],8826:[.0391,.5391,0,0],8827:[.0391,.5391,0,0],8834:[.0391,.5391,0,0],8835:[.0391,.5391,0,0],8838:[.13597,.63597,0,0],8839:[.13597,.63597,0,0],8846:[0,.55556,0,0],8849:[.13597,.63597,0,0],8850:[.13597,.63597,0,0],8851:[0,.55556,0,0],8852:[0,.55556,0,0],8853:[.08333,.58333,0,0],8854:[.08333,.58333,0,0],8855:[.08333,.58333,0,0],8856:[.08333,.58333,0,0],8857:[.08333,.58333,0,0],8866:[0,.69444,0,0],8867:[0,.69444,0,0],8868:[0,.69444,0,0],8869:[0,.69444,0,0],8872:[.249,.75,0,0],8900:[-.05555,.44445,0,0],8901:[-.05555,.44445,0,0],8902:[-.03472,.46528,0,0],8904:[.005,.505,0,0],8942:[.03,.9,0,0],8943:[-.19,.31,0,0],8945:[-.1,.82,0,0],8968:[.25,.75,0,0],8969:[.25,.75,0,0],8970:[.25,.75,0,0],8971:[.25,.75,0,0],8994:[-.14236,.35764,0,0],8995:[-.14236,.35764,0,0],9136:[.244,.744,0,0],9137:[.244,.744,0,0],9651:[.19444,.69444,0,0],9657:[-.03472,.46528,0,0],9661:[.19444,.69444,0,0],9667:[-.03472,.46528,0,0],9711:[.19444,.69444,0,0],9824:[.12963,.69444,0,0],9825:[.12963,.69444,0,0],9826:[.12963,.69444,0,0],9827:[.12963,.69444,0,0],9837:[0,.75,0,0],9838:[.19444,.69444,0,0],9839:[.19444,.69444,0,0],10216:[.25,.75,0,0],10217:[.25,.75,0,0],10222:[.244,.744,0,0],10223:[.244,.744,0,0],10229:[.011,.511,0,0],10230:[.011,.511,0,0],10231:[.011,.511,0,0],10232:[.024,.525,0,0],10233:[.024,.525,0,0],10234:[.024,.525,0,0],10236:[.011,.511,0,0],10815:[0,.68333,0,0],10927:[.13597,.63597,0,0],10928:[.13597,.63597,0,0]},"Math-BoldItalic":{47:[.19444,.69444,0,0],65:[0,.68611,0,0],66:[0,.68611,.04835,0],67:[0,.68611,.06979,0],68:[0,.68611,.03194,0],69:[0,.68611,.05451,0],70:[0,.68611,.15972,0],71:[0,.68611,0,0],72:[0,.68611,.08229,0],73:[0,.68611,.07778,0],74:[0,.68611,.10069,0],75:[0,.68611,.06979,0],76:[0,.68611,0,0],77:[0,.68611,.11424,0],78:[0,.68611,.11424,0],79:[0,.68611,.03194,0],80:[0,.68611,.15972,0],81:[.19444,.68611,0,0],82:[0,.68611,.00421,0],83:[0,.68611,.05382,0],84:[0,.68611,.15972,0],85:[0,.68611,.11424,0],86:[0,.68611,.25555,0],87:[0,.68611,.15972,0],88:[0,.68611,.07778,0],89:[0,.68611,.25555,0],90:[0,.68611,.06979,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[.19444,.69444,.11042,0],103:[.19444,.44444,.03704,0],104:[0,.69444,0,0],105:[0,.69326,0,0],106:[.19444,.69326,.0622,0],107:[0,.69444,.01852,0],108:[0,.69444,.0088,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,.03704,0],114:[0,.44444,.03194,0],115:[0,.44444,0,0],116:[0,.63492,0,0],117:[0,.44444,0,0],118:[0,.44444,.03704,0],119:[0,.44444,.02778,0],120:[0,.44444,0,0],121:[.19444,.44444,.03704,0],122:[0,.44444,.04213,0],915:[0,.68611,.15972,0],916:[0,.68611,0,0],920:[0,.68611,.03194,0],923:[0,.68611,0,0],926:[0,.68611,.07458,0],928:[0,.68611,.08229,0],931:[0,.68611,.05451,0],933:[0,.68611,.15972,0],
934:[0,.68611,0,0],936:[0,.68611,.11653,0],937:[0,.68611,.04835,0],945:[0,.44444,0,0],946:[.19444,.69444,.03403,0],947:[.19444,.44444,.06389,0],948:[0,.69444,.03819,0],949:[0,.44444,0,0],950:[.19444,.69444,.06215,0],951:[.19444,.44444,.03704,0],952:[0,.69444,.03194,0],953:[0,.44444,0,0],954:[0,.44444,0,0],955:[0,.69444,0,0],956:[.19444,.44444,0,0],957:[0,.44444,.06898,0],958:[.19444,.69444,.03021,0],959:[0,.44444,0,0],960:[0,.44444,.03704,0],961:[.19444,.44444,0,0],962:[.09722,.44444,.07917,0],963:[0,.44444,.03704,0],964:[0,.44444,.13472,0],965:[0,.44444,.03704,0],966:[.19444,.44444,0,0],967:[.19444,.44444,0,0],968:[.19444,.69444,.03704,0],969:[0,.44444,.03704,0],977:[0,.69444,0,0],981:[.19444,.69444,0,0],982:[0,.44444,.03194,0],1009:[.19444,.44444,0,0],1013:[0,.44444,0,0]},"Math-Italic":{47:[.19444,.69444,0,0],65:[0,.68333,0,.13889],66:[0,.68333,.05017,.08334],67:[0,.68333,.07153,.08334],68:[0,.68333,.02778,.05556],69:[0,.68333,.05764,.08334],70:[0,.68333,.13889,.08334],71:[0,.68333,0,.08334],72:[0,.68333,.08125,.05556],73:[0,.68333,.07847,.11111],74:[0,.68333,.09618,.16667],75:[0,.68333,.07153,.05556],76:[0,.68333,0,.02778],77:[0,.68333,.10903,.08334],78:[0,.68333,.10903,.08334],79:[0,.68333,.02778,.08334],80:[0,.68333,.13889,.08334],81:[.19444,.68333,0,.08334],82:[0,.68333,.00773,.08334],83:[0,.68333,.05764,.08334],84:[0,.68333,.13889,.08334],85:[0,.68333,.10903,.02778],86:[0,.68333,.22222,0],87:[0,.68333,.13889,0],88:[0,.68333,.07847,.08334],89:[0,.68333,.22222,0],90:[0,.68333,.07153,.08334],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,.05556],100:[0,.69444,0,.16667],101:[0,.43056,0,.05556],102:[.19444,.69444,.10764,.16667],103:[.19444,.43056,.03588,.02778],104:[0,.69444,0,0],105:[0,.65952,0,0],106:[.19444,.65952,.05724,0],107:[0,.69444,.03148,0],108:[0,.69444,.01968,.08334],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,.05556],112:[.19444,.43056,0,.08334],113:[.19444,.43056,.03588,.08334],114:[0,.43056,.02778,.05556],115:[0,.43056,0,.05556],116:[0,.61508,0,.08334],117:[0,.43056,0,.02778],118:[0,.43056,.03588,.02778],119:[0,.43056,.02691,.08334],120:[0,.43056,0,.02778],121:[.19444,.43056,.03588,.05556],122:[0,.43056,.04398,.05556],915:[0,.68333,.13889,.08334],916:[0,.68333,0,.16667],920:[0,.68333,.02778,.08334],923:[0,.68333,0,.16667],926:[0,.68333,.07569,.08334],928:[0,.68333,.08125,.05556],931:[0,.68333,.05764,.08334],933:[0,.68333,.13889,.05556],934:[0,.68333,0,.08334],936:[0,.68333,.11,.05556],937:[0,.68333,.05017,.08334],945:[0,.43056,.0037,.02778],946:[.19444,.69444,.05278,.08334],947:[.19444,.43056,.05556,0],948:[0,.69444,.03785,.05556],949:[0,.43056,0,.08334],950:[.19444,.69444,.07378,.08334],951:[.19444,.43056,.03588,.05556],952:[0,.69444,.02778,.08334],953:[0,.43056,0,.05556],954:[0,.43056,0,0],955:[0,.69444,0,0],956:[.19444,.43056,0,.02778],957:[0,.43056,.06366,.02778],958:[.19444,.69444,.04601,.11111],959:[0,.43056,0,.05556],960:[0,.43056,.03588,0],961:[.19444,.43056,0,.08334],962:[.09722,.43056,.07986,.08334],963:[0,.43056,.03588,0],964:[0,.43056,.1132,.02778],965:[0,.43056,.03588,.02778],966:[.19444,.43056,0,.08334],967:[.19444,.43056,0,.05556],968:[.19444,.69444,.03588,.11111],969:[0,.43056,.03588,0],977:[0,.69444,0,.08334],981:[.19444,.69444,0,.08334],982:[0,.43056,.02778,0],1009:[.19444,.43056,0,.08334],1013:[0,.43056,0,.05556]},"Math-Regular":{65:[0,.68333,0,.13889],66:[0,.68333,.05017,.08334],67:[0,.68333,.07153,.08334],68:[0,.68333,.02778,.05556],69:[0,.68333,.05764,.08334],70:[0,.68333,.13889,.08334],71:[0,.68333,0,.08334],72:[0,.68333,.08125,.05556],73:[0,.68333,.07847,.11111],74:[0,.68333,.09618,.16667],75:[0,.68333,.07153,.05556],76:[0,.68333,0,.02778],77:[0,.68333,.10903,.08334],78:[0,.68333,.10903,.08334],79:[0,.68333,.02778,.08334],80:[0,.68333,.13889,.08334],81:[.19444,.68333,0,.08334],82:[0,.68333,.00773,.08334],83:[0,.68333,.05764,.08334],84:[0,.68333,.13889,.08334],85:[0,.68333,.10903,.02778],86:[0,.68333,.22222,0],87:[0,.68333,.13889,0],88:[0,.68333,.07847,.08334],89:[0,.68333,.22222,0],90:[0,.68333,.07153,.08334],97:[0,.43056,0,0],98:[0,.69444,0,0],99:[0,.43056,0,.05556],100:[0,.69444,0,.16667],101:[0,.43056,0,.05556],102:[.19444,.69444,.10764,.16667],103:[.19444,.43056,.03588,.02778],104:[0,.69444,0,0],105:[0,.65952,0,0],106:[.19444,.65952,.05724,0],107:[0,.69444,.03148,0],108:[0,.69444,.01968,.08334],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,.05556],112:[.19444,.43056,0,.08334],113:[.19444,.43056,.03588,.08334],114:[0,.43056,.02778,.05556],115:[0,.43056,0,.05556],116:[0,.61508,0,.08334],117:[0,.43056,0,.02778],118:[0,.43056,.03588,.02778],119:[0,.43056,.02691,.08334],120:[0,.43056,0,.02778],121:[.19444,.43056,.03588,.05556],122:[0,.43056,.04398,.05556],915:[0,.68333,.13889,.08334],916:[0,.68333,0,.16667],920:[0,.68333,.02778,.08334],923:[0,.68333,0,.16667],926:[0,.68333,.07569,.08334],928:[0,.68333,.08125,.05556],931:[0,.68333,.05764,.08334],933:[0,.68333,.13889,.05556],934:[0,.68333,0,.08334],936:[0,.68333,.11,.05556],937:[0,.68333,.05017,.08334],945:[0,.43056,.0037,.02778],946:[.19444,.69444,.05278,.08334],947:[.19444,.43056,.05556,0],948:[0,.69444,.03785,.05556],949:[0,.43056,0,.08334],950:[.19444,.69444,.07378,.08334],951:[.19444,.43056,.03588,.05556],952:[0,.69444,.02778,.08334],953:[0,.43056,0,.05556],954:[0,.43056,0,0],955:[0,.69444,0,0],956:[.19444,.43056,0,.02778],957:[0,.43056,.06366,.02778],958:[.19444,.69444,.04601,.11111],959:[0,.43056,0,.05556],960:[0,.43056,.03588,0],961:[.19444,.43056,0,.08334],962:[.09722,.43056,.07986,.08334],963:[0,.43056,.03588,0],964:[0,.43056,.1132,.02778],965:[0,.43056,.03588,.02778],966:[.19444,.43056,0,.08334],967:[.19444,.43056,0,.05556],968:[.19444,.69444,.03588,.11111],969:[0,.43056,.03588,0],977:[0,.69444,0,.08334],981:[.19444,.69444,0,.08334],982:[0,.43056,.02778,0],1009:[.19444,.43056,0,.08334],1013:[0,.43056,0,.05556]},"SansSerif-Regular":{33:[0,.69444,0,0],34:[0,.69444,0,0],35:[.19444,.69444,0,0],36:[.05556,.75,0,0],37:[.05556,.75,0,0],38:[0,.69444,0,0],39:[0,.69444,0,0],40:[.25,.75,0,0],41:[.25,.75,0,0],42:[0,.75,0,0],43:[.08333,.58333,0,0],44:[.125,.08333,0,0],45:[0,.44444,0,0],46:[0,.08333,0,0],47:[.25,.75,0,0],48:[0,.65556,0,0],49:[0,.65556,0,0],50:[0,.65556,0,0],51:[0,.65556,0,0],52:[0,.65556,0,0],53:[0,.65556,0,0],54:[0,.65556,0,0],55:[0,.65556,0,0],56:[0,.65556,0,0],57:[0,.65556,0,0],58:[0,.44444,0,0],59:[.125,.44444,0,0],61:[-.13,.37,0,0],63:[0,.69444,0,0],64:[0,.69444,0,0],65:[0,.69444,0,0],66:[0,.69444,0,0],67:[0,.69444,0,0],68:[0,.69444,0,0],69:[0,.69444,0,0],70:[0,.69444,0,0],71:[0,.69444,0,0],72:[0,.69444,0,0],73:[0,.69444,0,0],74:[0,.69444,0,0],75:[0,.69444,0,0],76:[0,.69444,0,0],77:[0,.69444,0,0],78:[0,.69444,0,0],79:[0,.69444,0,0],80:[0,.69444,0,0],81:[.125,.69444,0,0],82:[0,.69444,0,0],83:[0,.69444,0,0],84:[0,.69444,0,0],85:[0,.69444,0,0],86:[0,.69444,.01389,0],87:[0,.69444,.01389,0],88:[0,.69444,0,0],89:[0,.69444,.025,0],90:[0,.69444,0,0],91:[.25,.75,0,0],93:[.25,.75,0,0],94:[0,.69444,0,0],95:[.35,.09444,.02778,0],97:[0,.44444,0,0],98:[0,.69444,0,0],99:[0,.44444,0,0],100:[0,.69444,0,0],101:[0,.44444,0,0],102:[0,.69444,.06944,0],103:[.19444,.44444,.01389,0],104:[0,.69444,0,0],105:[0,.67937,0,0],106:[.19444,.67937,0,0],107:[0,.69444,0,0],108:[0,.69444,0,0],109:[0,.44444,0,0],110:[0,.44444,0,0],111:[0,.44444,0,0],112:[.19444,.44444,0,0],113:[.19444,.44444,0,0],114:[0,.44444,.01389,0],115:[0,.44444,0,0],116:[0,.57143,0,0],117:[0,.44444,0,0],118:[0,.44444,.01389,0],119:[0,.44444,.01389,0],120:[0,.44444,0,0],121:[.19444,.44444,.01389,0],122:[0,.44444,0,0],126:[.35,.32659,0,0],305:[0,.44444,0,0],567:[.19444,.44444,0,0],768:[0,.69444,0,0],769:[0,.69444,0,0],770:[0,.69444,0,0],771:[0,.67659,0,0],772:[0,.60889,0,0],774:[0,.69444,0,0],775:[0,.67937,0,0],776:[0,.67937,0,0],778:[0,.69444,0,0],779:[0,.69444,0,0],780:[0,.63194,0,0],915:[0,.69444,0,0],916:[0,.69444,0,0],920:[0,.69444,0,0],923:[0,.69444,0,0],926:[0,.69444,0,0],928:[0,.69444,0,0],931:[0,.69444,0,0],933:[0,.69444,0,0],934:[0,.69444,0,0],936:[0,.69444,0,0],937:[0,.69444,0,0],8211:[0,.44444,.02778,0],8212:[0,.44444,.02778,0],8216:[0,.69444,0,0],8217:[0,.69444,0,0],8220:[0,.69444,0,0],8221:[0,.69444,0,0]},"Script-Regular":{65:[0,.7,.22925,0],66:[0,.7,.04087,0],67:[0,.7,.1689,0],68:[0,.7,.09371,0],69:[0,.7,.18583,0],70:[0,.7,.13634,0],71:[0,.7,.17322,0],72:[0,.7,.29694,0],73:[0,.7,.19189,0],74:[.27778,.7,.19189,0],75:[0,.7,.31259,0],76:[0,.7,.19189,0],77:[0,.7,.15981,0],78:[0,.7,.3525,0],79:[0,.7,.08078,0],80:[0,.7,.08078,0],81:[0,.7,.03305,0],82:[0,.7,.06259,0],83:[0,.7,.19189,0],84:[0,.7,.29087,0],85:[0,.7,.25815,0],86:[0,.7,.27523,0],87:[0,.7,.27523,0],88:[0,.7,.26006,0],89:[0,.7,.2939,0],90:[0,.7,.24037,0]},"Size1-Regular":{40:[.35001,.85,0,0],41:[.35001,.85,0,0],47:[.35001,.85,0,0],91:[.35001,.85,0,0],92:[.35001,.85,0,0],93:[.35001,.85,0,0],123:[.35001,.85,0,0],125:[.35001,.85,0,0],710:[0,.72222,0,0],732:[0,.72222,0,0],770:[0,.72222,0,0],771:[0,.72222,0,0],8214:[-99e-5,.601,0,0],8593:[1e-5,.6,0,0],8595:[1e-5,.6,0,0],8657:[1e-5,.6,0,0],8659:[1e-5,.6,0,0],8719:[.25001,.75,0,0],8720:[.25001,.75,0,0],8721:[.25001,.75,0,0],8730:[.35001,.85,0,0],8739:[-.00599,.606,0,0],8741:[-.00599,.606,0,0],8747:[.30612,.805,.19445,0],8748:[.306,.805,.19445,0],8749:[.306,.805,.19445,0],8750:[.30612,.805,.19445,0],8896:[.25001,.75,0,0],8897:[.25001,.75,0,0],8898:[.25001,.75,0,0],8899:[.25001,.75,0,0],8968:[.35001,.85,0,0],8969:[.35001,.85,0,0],8970:[.35001,.85,0,0],8971:[.35001,.85,0,0],9168:[-99e-5,.601,0,0],10216:[.35001,.85,0,0],10217:[.35001,.85,0,0],10752:[.25001,.75,0,0],10753:[.25001,.75,0,0],10754:[.25001,.75,0,0],10756:[.25001,.75,0,0],10758:[.25001,.75,0,0]},"Size2-Regular":{40:[.65002,1.15,0,0],41:[.65002,1.15,0,0],47:[.65002,1.15,0,0],91:[.65002,1.15,0,0],92:[.65002,1.15,0,0],93:[.65002,1.15,0,0],123:[.65002,1.15,0,0],125:[.65002,1.15,0,0],710:[0,.75,0,0],732:[0,.75,0,0],770:[0,.75,0,0],771:[0,.75,0,0],8719:[.55001,1.05,0,0],8720:[.55001,1.05,0,0],8721:[.55001,1.05,0,0],8730:[.65002,1.15,0,0],8747:[.86225,1.36,.44445,0],8748:[.862,1.36,.44445,0],8749:[.862,1.36,.44445,0],8750:[.86225,1.36,.44445,0],8896:[.55001,1.05,0,0],8897:[.55001,1.05,0,0],8898:[.55001,1.05,0,0],8899:[.55001,1.05,0,0],8968:[.65002,1.15,0,0],8969:[.65002,1.15,0,0],8970:[.65002,1.15,0,0],8971:[.65002,1.15,0,0],10216:[.65002,1.15,0,0],10217:[.65002,1.15,0,0],10752:[.55001,1.05,0,0],10753:[.55001,1.05,0,0],10754:[.55001,1.05,0,0],10756:[.55001,1.05,0,0],10758:[.55001,1.05,0,0]},"Size3-Regular":{40:[.95003,1.45,0,0],41:[.95003,1.45,0,0],47:[.95003,1.45,0,0],91:[.95003,1.45,0,0],92:[.95003,1.45,0,0],93:[.95003,1.45,0,0],123:[.95003,1.45,0,0],125:[.95003,1.45,0,0],710:[0,.75,0,0],732:[0,.75,0,0],770:[0,.75,0,0],771:[0,.75,0,0],8730:[.95003,1.45,0,0],8968:[.95003,1.45,0,0],8969:[.95003,1.45,0,0],8970:[.95003,1.45,0,0],8971:[.95003,1.45,0,0],10216:[.95003,1.45,0,0],10217:[.95003,1.45,0,0]},"Size4-Regular":{40:[1.25003,1.75,0,0],41:[1.25003,1.75,0,0],47:[1.25003,1.75,0,0],91:[1.25003,1.75,0,0],92:[1.25003,1.75,0,0],93:[1.25003,1.75,0,0],123:[1.25003,1.75,0,0],125:[1.25003,1.75,0,0],710:[0,.825,0,0],732:[0,.825,0,0],770:[0,.825,0,0],771:[0,.825,0,0],8730:[1.25003,1.75,0,0],8968:[1.25003,1.75,0,0],8969:[1.25003,1.75,0,0],8970:[1.25003,1.75,0,0],8971:[1.25003,1.75,0,0],9115:[.64502,1.155,0,0],9116:[1e-5,.6,0,0],9117:[.64502,1.155,0,0],9118:[.64502,1.155,0,0],9119:[1e-5,.6,0,0],9120:[.64502,1.155,0,0],9121:[.64502,1.155,0,0],9122:[-99e-5,.601,0,0],9123:[.64502,1.155,0,0],9124:[.64502,1.155,0,0],9125:[-99e-5,.601,0,0],9126:[.64502,1.155,0,0],9127:[1e-5,.9,0,0],9128:[.65002,1.15,0,0],9129:[.90001,0,0,0],9130:[0,.3,0,0],9131:[1e-5,.9,0,0],9132:[.65002,1.15,0,0],9133:[.90001,0,0,0],9143:[.88502,.915,0,0],10216:[1.25003,1.75,0,0],10217:[1.25003,1.75,0,0],57344:[-.00499,.605,0,0],57345:[-.00499,.605,0,0],57680:[0,.12,0,0],57681:[0,.12,0,0],57682:[0,.12,0,0],57683:[0,.12,0,0]},"Typewriter-Regular":{33:[0,.61111,0,0],34:[0,.61111,0,0],35:[0,.61111,0,0],36:[.08333,.69444,0,0],37:[.08333,.69444,0,0],38:[0,.61111,0,0],39:[0,.61111,0,0],40:[.08333,.69444,0,0],41:[.08333,.69444,0,0],42:[0,.52083,0,0],43:[-.08056,.53055,0,0],44:[.13889,.125,0,0],45:[-.08056,.53055,0,0],46:[0,.125,0,0],47:[.08333,.69444,0,0],48:[0,.61111,0,0],49:[0,.61111,0,0],50:[0,.61111,0,0],51:[0,.61111,0,0],52:[0,.61111,0,0],53:[0,.61111,0,0],54:[0,.61111,0,0],55:[0,.61111,0,0],56:[0,.61111,0,0],57:[0,.61111,0,0],58:[0,.43056,0,0],59:[.13889,.43056,0,0],60:[-.05556,.55556,0,0],61:[-.19549,.41562,0,0],62:[-.05556,.55556,0,0],63:[0,.61111,0,0],64:[0,.61111,0,0],65:[0,.61111,0,0],66:[0,.61111,0,0],67:[0,.61111,0,0],68:[0,.61111,0,0],69:[0,.61111,0,0],70:[0,.61111,0,0],71:[0,.61111,0,0],72:[0,.61111,0,0],73:[0,.61111,0,0],74:[0,.61111,0,0],75:[0,.61111,0,0],76:[0,.61111,0,0],77:[0,.61111,0,0],78:[0,.61111,0,0],79:[0,.61111,0,0],80:[0,.61111,0,0],81:[.13889,.61111,0,0],82:[0,.61111,0,0],83:[0,.61111,0,0],84:[0,.61111,0,0],85:[0,.61111,0,0],86:[0,.61111,0,0],87:[0,.61111,0,0],88:[0,.61111,0,0],89:[0,.61111,0,0],90:[0,.61111,0,0],91:[.08333,.69444,0,0],92:[.08333,.69444,0,0],93:[.08333,.69444,0,0],94:[0,.61111,0,0],95:[.09514,0,0,0],96:[0,.61111,0,0],97:[0,.43056,0,0],98:[0,.61111,0,0],99:[0,.43056,0,0],100:[0,.61111,0,0],101:[0,.43056,0,0],102:[0,.61111,0,0],103:[.22222,.43056,0,0],104:[0,.61111,0,0],105:[0,.61111,0,0],106:[.22222,.61111,0,0],107:[0,.61111,0,0],108:[0,.61111,0,0],109:[0,.43056,0,0],110:[0,.43056,0,0],111:[0,.43056,0,0],112:[.22222,.43056,0,0],113:[.22222,.43056,0,0],114:[0,.43056,0,0],115:[0,.43056,0,0],116:[0,.55358,0,0],117:[0,.43056,0,0],118:[0,.43056,0,0],119:[0,.43056,0,0],120:[0,.43056,0,0],121:[.22222,.43056,0,0],122:[0,.43056,0,0],123:[.08333,.69444,0,0],124:[.08333,.69444,0,0],125:[.08333,.69444,0,0],126:[0,.61111,0,0],127:[0,.61111,0,0],305:[0,.43056,0,0],567:[.22222,.43056,0,0],768:[0,.61111,0,0],769:[0,.61111,0,0],770:[0,.61111,0,0],771:[0,.61111,0,0],772:[0,.56555,0,0],774:[0,.61111,0,0],776:[0,.61111,0,0],778:[0,.61111,0,0],780:[0,.56597,0,0],915:[0,.61111,0,0],916:[0,.61111,0,0],920:[0,.61111,0,0],923:[0,.61111,0,0],926:[0,.61111,0,0],928:[0,.61111,0,0],931:[0,.61111,0,0],933:[0,.61111,0,0],934:[0,.61111,0,0],936:[0,.61111,0,0],937:[0,.61111,0,0],2018:[0,.61111,0,0],2019:[0,.61111,0,0],8242:[0,.61111,0,0]}}},{}],23:[function(e,t,r){"use strict";var a=e("./utils");var i=e("./ParseError");var n=e("./parseData");var o=n.ParseNode;function s(e,r,a){if(typeof e==="string"){e=[e]}if(typeof r==="number"){r={numArgs:r}}var i={numArgs:r.numArgs,argTypes:r.argTypes,greediness:r.greediness===undefined?1:r.greediness,allowedInText:!!r.allowedInText,numOptionalArgs:r.numOptionalArgs||0,infix:!!r.infix,handler:a};for(var n=0;n<e.length;++n){t.exports[e[n]]=i}}var l=function e(t){if(t.type==="ordgroup"){return t.value}else{return[t]}};s("\\sqrt",{numArgs:1,numOptionalArgs:1},function(e,t){var r=t[0];var a=t[1];return{type:"sqrt",body:a,index:r}});var u={"\\text":undefined,"\\textrm":"mathrm","\\textsf":"mathsf","\\texttt":"mathtt","\\textnormal":"mathrm","\\textbf":"mathbf","\\textit":"textit"};s(["\\text","\\textrm","\\textsf","\\texttt","\\textnormal","\\textbf","\\textit"],{numArgs:1,argTypes:["text"],greediness:2,allowedInText:true},function(e,t){var r=t[0];return{type:"text",body:l(r),style:u[e.funcName]}});s("\\xmlClass",{numArgs:2,allowedInText:true,greediness:3,argTypes:["string","original"]},function(e,t){var r=t[0];var a=t[1];var i=void 0;if(a.type==="ordgroup"){i=a.value}else{i=[a]}return{type:"xmlClass",cl:r,value:i}});s("\\textcolor",{numArgs:2,allowedInText:true,greediness:3,argTypes:["color","original"]},function(e,t){var r=t[0];var a=t[1];return{type:"color",color:r.value,value:l(a)}});s("\\color",{numArgs:1,allowedInText:true,greediness:3,argTypes:["color"]},null);s("\\overline",{numArgs:1},function(e,t){var r=t[0];return{type:"overline",body:r}});s("\\underline",{numArgs:1},function(e,t){var r=t[0];return{type:"underline",body:r}});s("\\rule",{numArgs:2,numOptionalArgs:1,argTypes:["size","size","size"]},function(e,t){var r=t[0];var a=t[1];var i=t[2];return{type:"rule",shift:r&&r.value,width:a.value,height:i.value}});s("\\cursor",{numArgs:1,numOptionalArgs:1,argTypes:["size","size"]},function(e,t){var r=t[0];var a=t[1];return{type:"cursor",shift:r&&r.value,height:a.value}});s(["\\kern","\\mkern"],{numArgs:1,argTypes:["size"]},function(e,t){return{type:"kern",dimension:t[0].value}});s("\\KaTeX",{numArgs:0},function(e){return{type:"katex"}});s("\\phantom",{numArgs:1},function(e,t){var r=t[0];return{type:"phantom",value:l(r)}});s(["\\mathord","\\mathbin","\\mathrel","\\mathopen","\\mathclose","\\mathpunct","\\mathinner"],{numArgs:1},function(e,t){var r=t[0];return{type:"mclass",mclass:"m"+e.funcName.substr(5),value:l(r)}});s("\\stackrel",{numArgs:2},function(e,t){var r=t[0];var a=t[1];var i=new o("op",{type:"op",limits:true,alwaysHandleSupSub:true,symbol:false,value:l(a)},a.mode);var n=new o("supsub",{base:i,sup:r,sub:null},r.mode);return{type:"mclass",mclass:"mrel",value:[n]}});s("\\bmod",{numArgs:0},function(e,t){return{type:"mod",modType:"bmod",value:null}});s(["\\pod","\\pmod","\\mod"],{numArgs:1},function(e,t){var r=t[0];return{type:"mod",modType:e.funcName.substr(1),value:l(r)}});var h={"\\bigl":{mclass:"mopen",size:1},"\\Bigl":{mclass:"mopen",size:2},"\\biggl":{mclass:"mopen",size:3},"\\Biggl":{mclass:"mopen",size:4},"\\bigr":{mclass:"mclose",size:1},"\\Bigr":{mclass:"mclose",size:2},"\\biggr":{mclass:"mclose",size:3},"\\Biggr":{mclass:"mclose",size:4},"\\bigm":{mclass:"mrel",size:1},"\\Bigm":{mclass:"mrel",size:2},"\\biggm":{mclass:"mrel",size:3},"\\Biggm":{mclass:"mrel",size:4},"\\big":{mclass:"mord",size:1},"\\Big":{mclass:"mord",size:2},"\\bigg":{mclass:"mord",size:3},"\\Bigg":{mclass:"mord",size:4}};var p=["(",")","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","\\lceil","\\rceil","<",">","\\langle","\\rangle","\\lt","\\gt","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","\\lmoustache","\\rmoustache","/","\\backslash","|","\\vert","\\|","\\Vert","\\uparrow","\\Uparrow","\\downarrow","\\Downarrow","\\updownarrow","\\Updownarrow","."];var c={"\\Bbb":"\\mathbb","\\bold":"\\mathbf","\\frak":"\\mathfrak"};s(["\\blue","\\orange","\\pink","\\red","\\green","\\gray","\\purple","\\blueA","\\blueB","\\blueC","\\blueD","\\blueE","\\tealA","\\tealB","\\tealC","\\tealD","\\tealE","\\greenA","\\greenB","\\greenC","\\greenD","\\greenE","\\goldA","\\goldB","\\goldC","\\goldD","\\goldE","\\redA","\\redB","\\redC","\\redD","\\redE","\\maroonA","\\maroonB","\\maroonC","\\maroonD","\\maroonE","\\purpleA","\\purpleB","\\purpleC","\\purpleD","\\purpleE","\\mintA","\\mintB","\\mintC","\\grayA","\\grayB","\\grayC","\\grayD","\\grayE","\\grayF","\\grayG","\\grayH","\\grayI","\\kaBlue","\\kaGreen"],{numArgs:1,allowedInText:true,greediness:3},function(e,t){var r=t[0];return{type:"color",color:"katex-"+e.funcName.slice(1),value:l(r)}});s(["\\arcsin","\\arccos","\\arctan","\\arctg","\\arcctg","\\arg","\\ch","\\cos","\\cosec","\\cosh","\\cot","\\cotg","\\coth","\\csc","\\ctg","\\cth","\\deg","\\dim","\\exp","\\hom","\\ker","\\lg","\\ln","\\log","\\sec","\\sin","\\sinh","\\sh","\\tan","\\tanh","\\tg","\\th"],{numArgs:0},function(e){return{type:"op",limits:false,symbol:false,body:e.funcName}});s(["\\det","\\gcd","\\inf","\\lim","\\liminf","\\limsup","\\max","\\min","\\Pr","\\sup"],{numArgs:0},function(e){return{type:"op",limits:true,symbol:false,body:e.funcName}});s(["\\int","\\iint","\\iiint","\\oint"],{numArgs:0},function(e){return{type:"op",limits:false,symbol:true,body:e.funcName}});s(["\\coprod","\\bigvee","\\bigwedge","\\biguplus","\\bigcap","\\bigcup","\\intop","\\prod","\\sum","\\bigotimes","\\bigoplus","\\bigodot","\\bigsqcup","\\smallint"],{numArgs:0},function(e){return{type:"op",limits:true,symbol:true,body:e.funcName}});s("\\mathop",{numArgs:1},function(e,t){var r=t[0];return{type:"op",limits:false,symbol:false,value:l(r)}});s(["\\dfrac","\\frac","\\tfrac","\\dbinom","\\binom","\\tbinom","\\\\atopfrac"],{numArgs:2,greediness:2},function(e,t){var r=t[0];var a=t[1];var i=void 0;var n=null;var o=null;var s="auto";switch(e.funcName){case"\\dfrac":case"\\frac":case"\\tfrac":i=true;break;case"\\\\atopfrac":i=false;break;case"\\dbinom":case"\\binom":case"\\tbinom":i=false;n="(";o=")";break;default:throw new Error("Unrecognized genfrac command")}switch(e.funcName){case"\\dfrac":case"\\dbinom":s="display";break;case"\\tfrac":case"\\tbinom":s="text";break}return{type:"genfrac",numer:r,denom:a,hasBarLine:i,leftDelim:n,rightDelim:o,size:s}});s(["\\llap","\\rlap"],{numArgs:1,allowedInText:true},function(e,t){var r=t[0];return{type:e.funcName.slice(1),body:r}});var v=function e(t,r){if(a.contains(p,t.value)){return t}else{throw new i("Invalid delimiter: '"+t.value+"' after '"+r.funcName+"'",t)}};s(["\\bigl","\\Bigl","\\biggl","\\Biggl","\\bigr","\\Bigr","\\biggr","\\Biggr","\\bigm","\\Bigm","\\biggm","\\Biggm","\\big","\\Big","\\bigg","\\Bigg"],{numArgs:1},function(e,t){var r=v(t[0],e);return{type:"delimsizing",size:h[e.funcName].size,mclass:h[e.funcName].mclass,value:r.value}});s(["\\left","\\right"],{numArgs:1},function(e,t){var r=v(t[0],e);return{type:"leftright",value:r.value}});s("\\middle",{numArgs:1},function(e,t){var r=v(t[0],e);if(!e.parser.leftrightDepth){throw new i("\\middle without preceding \\left",r)}return{type:"middle",value:r.value}});s(["\\tiny","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"],0,null);s(["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"],0,null);s(["\\rm","\\sf","\\tt","\\bf","\\it"],0,null);s(["\\mathrm","\\mathit","\\mathbf","\\mathbb","\\mathcal","\\mathfrak","\\mathscr","\\mathsf","\\mathtt","\\Bbb","\\bold","\\frak"],{numArgs:1,greediness:2},function(e,t){var r=t[0];var a=e.funcName;if(a in c){a=c[a]}return{type:"font",font:a.slice(1),body:r}});s(["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot","\\widehat","\\widetilde","\\overrightarrow","\\overleftarrow","\\Overrightarrow","\\overleftrightarrow","\\overgroup","\\overlinesegment","\\overleftharpoon","\\overrightharpoon"],{numArgs:1},function(e,t){var r=t[0];var i=!a.contains(["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot"],e.funcName);var n=!i||a.contains(["\\widehat","\\widetilde"],e.funcName);return{type:"accent",label:e.funcName,isStretchy:i,isShifty:n,value:l(r),base:r}});s(["\\overbrace","\\underbrace"],{numArgs:1},function(e,t){var r=t[0];return{type:"horizBrace",label:e.funcName,isOver:/^\\over/.test(e.funcName),base:r}});s(["\\underleftarrow","\\underrightarrow","\\underleftrightarrow","\\undergroup","\\underlinesegment","\\undertilde"],{numArgs:1},function(e,t){var r=t[0];return{type:"accentUnder",label:e.funcName,value:l(r),body:r}});s(["\\xleftarrow","\\xrightarrow","\\xLeftarrow","\\xRightarrow","\\xleftrightarrow","\\xLeftrightarrow","\\xhookleftarrow","\\xhookrightarrow","\\xmapsto","\\xrightharpoondown","\\xrightharpoonup","\\xleftharpoondown","\\xleftharpoonup","\\xrightleftharpoons","\\xleftrightharpoons","\\xLongequal","\\xtwoheadrightarrow","\\xtwoheadleftarrow","\\xLongequal","\\xtofrom"],{numArgs:1,numOptionalArgs:1},function(e,t){var r=t[0];var a=t[1];return{type:"xArrow",label:e.funcName,body:a,below:r}});s(["\\cancel","\\bcancel","\\xcancel","\\sout","\\fbox"],{numArgs:1},function(e,t){var r=t[0];return{type:"enclose",label:e.funcName,body:r}});s(["\\over","\\choose","\\atop"],{numArgs:0,infix:true},function(e){var t=void 0;switch(e.funcName){case"\\over":t="\\frac";break;case"\\choose":t="\\binom";break;case"\\atop":t="\\\\atopfrac";break;default:throw new Error("Unrecognized infix genfrac command")}return{type:"infix",replaceWith:t,token:e.token}});s(["\\\\","\\cr"],{numArgs:0,numOptionalArgs:1,argTypes:["size"]},function(e,t){var r=t[0];return{type:"cr",size:r}});s(["\\begin","\\end"],{numArgs:1,argTypes:["text"]},function(e,t){var r=t[0];if(r.type!=="ordgroup"){throw new i("Invalid environment name",r)}var a="";for(var n=0;n<r.value.length;++n){a+=r.value[n].value}return{type:"environment",name:a,nameGroup:r}})},{"./ParseError":10,"./parseData":26,"./utils":31}],24:[function(e,t,r){"use strict";function a(e,r){t.exports[e]=r}a("\\bgroup","{");a("\\egroup","}");a("\\begingroup","{");a("\\endgroup","}");a("\\overset","\\mathop{#2}\\limits^{#1}");a("\\underset","\\mathop{#2}\\limits_{#1}");a("\\boxed","\\fbox{\\displaystyle{#1}}");a("\\iff","\\;\\Longleftrightarrow\\;");a("\\implies","\\;\\Longrightarrow\\;");a("\\impliedby","\\;\\Longleftarrow\\;");a("\\ordinarycolon",":");a("\\vcentcolon","\\mathrel{\\mathop\\ordinarycolon}");a("\\dblcolon","\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon");a("\\coloneqq","\\vcentcolon\\mathrel{\\mkern-1.2mu}=");a("\\Coloneqq","\\dblcolon\\mathrel{\\mkern-1.2mu}=");a("\\coloneq","\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}");a("\\Coloneq","\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}");a("\\eqqcolon","=\\mathrel{\\mkern-1.2mu}\\vcentcolon");a("\\Eqqcolon","=\\mathrel{\\mkern-1.2mu}\\dblcolon");a("\\eqcolon","\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon");a("\\Eqcolon","\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon");a("\\colonapprox","\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx");a("\\Colonapprox","\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx");a("\\colonsim","\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim");a("\\Colonsim","\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim");a("\\ratio","\\vcentcolon");a("\\coloncolon","\\dblcolon");a("\\colonequals","\\coloneqq");a("\\coloncolonequals","\\Coloneqq");a("\\equalscolon","\\eqqcolon");a("\\equalscoloncolon","\\Eqqcolon");a("\\colonminus","\\coloneq");a("\\coloncolonminus","\\Coloneq");a("\\minuscolon","\\eqcolon");a("\\minuscoloncolon","\\Eqcolon");a("\\coloncolonapprox","\\Colonapprox");a("\\coloncolonsim","\\Colonsim");a("\\simcolon","\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon");a("\\simcoloncolon","\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon");a("\\approxcolon","\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon");a("\\approxcoloncolon","\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon")},{}],25:[function(e,t,r){"use strict";var a=e("./utils");function i(e,t){this.type=e;this.attributes={};this.children=t||[]}i.prototype.setAttribute=function(e,t){this.attributes[e]=t};i.prototype.toNode=function(){var e=document.createElementNS("http://www.w3.org/1998/Math/MathML",this.type);for(var t in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,t)){e.setAttribute(t,this.attributes[t])}}for(var r=0;r<this.children.length;r++){e.appendChild(this.children[r].toNode())}return e};i.prototype.toMarkup=function(){var e="<"+this.type;for(var t in this.attributes){if(Object.prototype.hasOwnProperty.call(this.attributes,t)){e+=" "+t+'="';e+=a.escape(this.attributes[t]);e+='"'}}e+=">";for(var r=0;r<this.children.length;r++){e+=this.children[r].toMarkup()}e+="</"+this.type+">";return e};function n(e){this.text=e}n.prototype.toNode=function(){return document.createTextNode(this.text)};n.prototype.toMarkup=function(){return a.escape(this.text)};t.exports={MathNode:i,TextNode:n}},{"./utils":31}],26:[function(e,t,r){"use strict";function a(e,t,r,a,i){this.type=e;this.value=t;this.mode=r;if(a&&(!i||i.lexer===a.lexer)){this.lexer=a.lexer;this.start=a.start;this.end=(i||a).end}}t.exports={ParseNode:a}},{}],27:[function(e,t,r){"use strict";var a=e("./Parser");var i=function e(t,r){if(!(typeof t==="string"||t instanceof String)){throw new TypeError("KaTeX can only parse string typed expression")}var i=new a(t,r);return i.parse()};t.exports=i},{"./Parser":11}],28:[function(e,t,r){"use strict";var a=e("./buildCommon");var i=e("./mathMLTree");var n=e("./utils");var o={widehat:"^",widetilde:"~",undertilde:"~",overleftarrow:"\u2190",underleftarrow:"\u2190",xleftarrow:"\u2190",overrightarrow:"\u2192",underrightarrow:"\u2192",xrightarrow:"\u2192",underbrace:"\u23b5",overbrace:"\u23de",overleftrightarrow:"\u2194",underleftrightarrow:"\u2194",xleftrightarrow:"\u2194",Overrightarrow:"\u21d2",xRightarrow:"\u21d2",overleftharpoon:"\u21bc",xleftharpoonup:"\u21bc",overrightharpoon:"\u21c0",xrightharpoonup:"\u21c0",xLeftarrow:"\u21d0",xLeftrightarrow:"\u21d4",xhookleftarrow:"\u21a9",xhookrightarrow:"\u21aa",xmapsto:"\u21a6",xrightharpoondown:"\u21c1",xleftharpoondown:"\u21bd",xrightleftharpoons:"\u21cc",xleftrightharpoons:"\u21cb",xtwoheadleftarrow:"\u219e",xtwoheadrightarrow:"\u21a0",xLongequal:"=",xtofrom:"\u21c4"};var s=function e(t){var r=new i.MathNode("mo",[new i.TextNode(o[t.substr(1)])]);r.setAttribute("stretchy","true");return r};var l={overleftarrow:[.522,0,"leftarrow"],underleftarrow:[.522,0,"leftarrow"],xleftarrow:[.261,.261,"leftarrow"],overrightarrow:[.522,0,"rightarrow"],underrightarrow:[.522,0,"rightarrow"],xrightarrow:[.261,.261,"rightarrow"],overbrace:[.548,0,"overbrace"],underbrace:[.548,0,"underbrace"],overleftrightarrow:[.522,0,"leftrightarrow"],underleftrightarrow:[.522,0,"leftrightarrow"],xleftrightarrow:[.261,.261,"leftrightarrow"],Overrightarrow:[.56,0,"doublerightarrow"],xLeftarrow:[.28,.28,"doubleleftarrow"],xRightarrow:[.28,.28,"doublerightarrow"],xLeftrightarrow:[.28,.28,"doubleleftrightarrow"],overleftharpoon:[.522,0,"leftharpoon"],overrightharpoon:[.522,0,"rightharpoon"],xleftharpoonup:[.261,.261,"leftharpoon"],xrightharpoonup:[.261,.261,"rightharpoon"],xhookleftarrow:[.261,.261,"hookleftarrow"],xhookrightarrow:[.261,.261,"hookrightarrow"],overlinesegment:[.414,0,"linesegment"],underlinesegment:[.414,0,"linesegment"],xmapsto:[.261,.261,"mapsto"],xrightharpoondown:[.261,.261,"rightharpoondown"],xleftharpoondown:[.261,.261,"leftharpoondown"],xrightleftharpoons:[.358,.358,"rightleftharpoons"],xleftrightharpoons:[.358,.358,"leftrightharpoons"],overgroup:[.342,0,"overgroup"],undergroup:[.342,0,"undergroup"],xtwoheadleftarrow:[.167,.167,"twoheadleftarrow"],xtwoheadrightarrow:[.167,.167,"twoheadrightarrow"],xLongequal:[.167,.167,"longequal"],xtofrom:[.264,.264,"tofrom"]};var u=function e(t,r){var i=t.value.label.substr(1);var o=0;var s=0;var u=["stretchy"];var h="";if(n.contains(["widehat","widetilde","undertilde"],i)){var p=t.value.value.length;if(p>5){o=.312;h=(i==="widehat"?"widehat":"tilde")+"4"}else{var c=[1,1,2,2,3,3][p];if(i==="widehat"){o=[0,.24,.3,.3,.36,.36][p];h="widehat"+c}else{o=[0,.26,.3,.3,.34,.34][p];h="tilde"+c}}}else{var v=l[i];o=v[0];s=v[1];h=v[2];if(i.substr(0,1)==="x"){u.push("x-arrow")}}var f=void 0;if(r.color){u.push(h);u.push("mask");u.push(h+"-mask");f=a.makeSpan(u,[],r);f.style.backgroundColor=r.color}else{u.push(h);f=a.makeSpan(u,[],r)}f.height=o;f.depth=s;f.maxFontSize=1;return f};var h=function e(t,r,i,n,o){var s=a.makeSpan(["stretchy",i],[],o);if(o.color){if(i==="fbox"){s.style.borderColor=o.color}else{s.classes[2]=i+"-mask";s.style.backgroundColor=o.color}}s.height=t.height+t.depth+2*n;s.style.height=s.height+"em";if(/cancel/.test(i)&&r){s.maxFontSize=1.2}else{s.maxFontSize=1}return s};t.exports={encloseSpan:h,mathMLnode:s,svgSpan:u}},{"./buildCommon":14,"./mathMLTree":25,"./utils":31}],29:[function(e,t,r){"use strict";t.exports={math:{},text:{}};function a(e,r,a,i,n){t.exports[e][n]={font:r,group:a,replace:i}}var i="math";var n="text";var o="main";var s="ams";var l="accent";var u="bin";var h="close";var p="inner";var c="mathord";var v="op";var f="open";var m="punct";var d="rel";var g="spacing";var y="textord";a(i,o,d,"\u2261","\\equiv");a(i,o,d,"\u227a","\\prec");a(i,o,d,"\u227b","\\succ");a(i,o,d,"\u223c","\\sim");a(i,o,d,"\u22a5","\\perp");a(i,o,d,"\u2aaf","\\preceq");a(i,o,d,"\u2ab0","\\succeq");a(i,o,d,"\u2243","\\simeq");a(i,o,d,"\u2223","\\mid");a(i,o,d,"\u226a","\\ll");a(i,o,d,"\u226b","\\gg");a(i,o,d,"\u224d","\\asymp");a(i,o,d,"\u2225","\\parallel");a(i,o,d,"\u22c8","\\bowtie");a(i,o,d,"\u2323","\\smile");a(i,o,d,"\u2291","\\sqsubseteq");a(i,o,d,"\u2292","\\sqsupseteq");a(i,o,d,"\u2250","\\doteq");a(i,o,d,"\u2322","\\frown");a(i,o,d,"\u220b","\\ni");a(i,o,d,"\u221d","\\propto");a(i,o,d,"\u22a2","\\vdash");a(i,o,d,"\u22a3","\\dashv");a(i,o,d,"\u220b","\\owns");
a(i,o,m,".","\\ldotp");a(i,o,m,"\u22c5","\\cdotp");a(i,o,y,"#","\\#");a(n,o,y,"#","\\#");a(i,o,y,"&","\\&");a(n,o,y,"&","\\&");a(i,o,y,"\u2135","\\aleph");a(i,o,y,"\u2200","\\forall");a(i,o,y,"\u210f","\\hbar");a(i,o,y,"\u2203","\\exists");a(i,o,y,"\u2207","\\nabla");a(i,o,y,"\u266d","\\flat");a(i,o,y,"\u2113","\\ell");a(i,o,y,"\u266e","\\natural");a(i,o,y,"\u2663","\\clubsuit");a(i,o,y,"\u2118","\\wp");a(i,o,y,"\u266f","\\sharp");a(i,o,y,"\u2662","\\diamondsuit");a(i,o,y,"\u211c","\\Re");a(i,o,y,"\u2661","\\heartsuit");a(i,o,y,"\u2111","\\Im");a(i,o,y,"\u2660","\\spadesuit");a(i,o,y,"\u2020","\\dag");a(n,o,y,"\u2020","\\dag");a(n,o,y,"\u2020","\\textdagger");a(i,o,y,"\u2021","\\ddag");a(n,o,y,"\u2021","\\ddag");a(n,o,y,"\u2020","\\textdaggerdbl");a(i,o,h,"\u23b1","\\rmoustache");a(i,o,f,"\u23b0","\\lmoustache");a(i,o,h,"\u27ef","\\rgroup");a(i,o,f,"\u27ee","\\lgroup");a(i,o,u,"\u2213","\\mp");a(i,o,u,"\u2296","\\ominus");a(i,o,u,"\u228e","\\uplus");a(i,o,u,"\u2293","\\sqcap");a(i,o,u,"\u2217","\\ast");a(i,o,u,"\u2294","\\sqcup");a(i,o,u,"\u25ef","\\bigcirc");a(i,o,u,"\u2219","\\bullet");a(i,o,u,"\u2021","\\ddagger");a(i,o,u,"\u2240","\\wr");a(i,o,u,"\u2a3f","\\amalg");a(i,o,d,"\u27f5","\\longleftarrow");a(i,o,d,"\u21d0","\\Leftarrow");a(i,o,d,"\u27f8","\\Longleftarrow");a(i,o,d,"\u27f6","\\longrightarrow");a(i,o,d,"\u21d2","\\Rightarrow");a(i,o,d,"\u27f9","\\Longrightarrow");a(i,o,d,"\u2194","\\leftrightarrow");a(i,o,d,"\u27f7","\\longleftrightarrow");a(i,o,d,"\u21d4","\\Leftrightarrow");a(i,o,d,"\u27fa","\\Longleftrightarrow");a(i,o,d,"\u21a6","\\mapsto");a(i,o,d,"\u27fc","\\longmapsto");a(i,o,d,"\u2197","\\nearrow");a(i,o,d,"\u21a9","\\hookleftarrow");a(i,o,d,"\u21aa","\\hookrightarrow");a(i,o,d,"\u2198","\\searrow");a(i,o,d,"\u21bc","\\leftharpoonup");a(i,o,d,"\u21c0","\\rightharpoonup");a(i,o,d,"\u2199","\\swarrow");a(i,o,d,"\u21bd","\\leftharpoondown");a(i,o,d,"\u21c1","\\rightharpoondown");a(i,o,d,"\u2196","\\nwarrow");a(i,o,d,"\u21cc","\\rightleftharpoons");a(i,s,d,"\u226e","\\nless");a(i,s,d,"\ue010","\\nleqslant");a(i,s,d,"\ue011","\\nleqq");a(i,s,d,"\u2a87","\\lneq");a(i,s,d,"\u2268","\\lneqq");a(i,s,d,"\ue00c","\\lvertneqq");a(i,s,d,"\u22e6","\\lnsim");a(i,s,d,"\u2a89","\\lnapprox");a(i,s,d,"\u2280","\\nprec");a(i,s,d,"\u22e0","\\npreceq");a(i,s,d,"\u22e8","\\precnsim");a(i,s,d,"\u2ab9","\\precnapprox");a(i,s,d,"\u2241","\\nsim");a(i,s,d,"\ue006","\\nshortmid");a(i,s,d,"\u2224","\\nmid");a(i,s,d,"\u22ac","\\nvdash");a(i,s,d,"\u22ad","\\nvDash");a(i,s,d,"\u22ea","\\ntriangleleft");a(i,s,d,"\u22ec","\\ntrianglelefteq");a(i,s,d,"\u228a","\\subsetneq");a(i,s,d,"\ue01a","\\varsubsetneq");a(i,s,d,"\u2acb","\\subsetneqq");a(i,s,d,"\ue017","\\varsubsetneqq");a(i,s,d,"\u226f","\\ngtr");a(i,s,d,"\ue00f","\\ngeqslant");a(i,s,d,"\ue00e","\\ngeqq");a(i,s,d,"\u2a88","\\gneq");a(i,s,d,"\u2269","\\gneqq");a(i,s,d,"\ue00d","\\gvertneqq");a(i,s,d,"\u22e7","\\gnsim");a(i,s,d,"\u2a8a","\\gnapprox");a(i,s,d,"\u2281","\\nsucc");a(i,s,d,"\u22e1","\\nsucceq");a(i,s,d,"\u22e9","\\succnsim");a(i,s,d,"\u2aba","\\succnapprox");a(i,s,d,"\u2246","\\ncong");a(i,s,d,"\ue007","\\nshortparallel");a(i,s,d,"\u2226","\\nparallel");a(i,s,d,"\u22af","\\nVDash");a(i,s,d,"\u22eb","\\ntriangleright");a(i,s,d,"\u22ed","\\ntrianglerighteq");a(i,s,d,"\ue018","\\nsupseteqq");a(i,s,d,"\u228b","\\supsetneq");a(i,s,d,"\ue01b","\\varsupsetneq");a(i,s,d,"\u2acc","\\supsetneqq");a(i,s,d,"\ue019","\\varsupsetneqq");a(i,s,d,"\u22ae","\\nVdash");a(i,s,d,"\u2ab5","\\precneqq");a(i,s,d,"\u2ab6","\\succneqq");a(i,s,d,"\ue016","\\nsubseteqq");a(i,s,u,"\u22b4","\\unlhd");a(i,s,u,"\u22b5","\\unrhd");a(i,s,d,"\u219a","\\nleftarrow");a(i,s,d,"\u219b","\\nrightarrow");a(i,s,d,"\u21cd","\\nLeftarrow");a(i,s,d,"\u21cf","\\nRightarrow");a(i,s,d,"\u21ae","\\nleftrightarrow");a(i,s,d,"\u21ce","\\nLeftrightarrow");a(i,s,d,"\u25b3","\\vartriangle");a(i,s,y,"\u210f","\\hslash");a(i,s,y,"\u25bd","\\triangledown");a(i,s,y,"\u25ca","\\lozenge");a(i,s,y,"\u24c8","\\circledS");a(i,s,y,"\xae","\\circledR");a(n,s,y,"\xae","\\circledR");a(i,s,y,"\u2221","\\measuredangle");a(i,s,y,"\u2204","\\nexists");a(i,s,y,"\u2127","\\mho");a(i,s,y,"\u2132","\\Finv");a(i,s,y,"\u2141","\\Game");a(i,s,y,"k","\\Bbbk");a(i,s,y,"\u2035","\\backprime");a(i,s,y,"\u25b2","\\blacktriangle");a(i,s,y,"\u25bc","\\blacktriangledown");a(i,s,y,"\u25a0","\\blacksquare");a(i,s,y,"\u29eb","\\blacklozenge");a(i,s,y,"\u2605","\\bigstar");a(i,s,y,"\u2222","\\sphericalangle");a(i,s,y,"\u2201","\\complement");a(i,s,y,"\xf0","\\eth");a(i,s,y,"\u2571","\\diagup");a(i,s,y,"\u2572","\\diagdown");a(i,s,y,"\u25a1","\\square");a(i,s,y,"\u25a1","\\Box");a(i,s,y,"\u25ca","\\Diamond");a(i,s,y,"\xa5","\\yen");a(i,s,y,"\u2713","\\checkmark");a(n,s,y,"\u2713","\\checkmark");a(i,s,y,"\u2136","\\beth");a(i,s,y,"\u2138","\\daleth");a(i,s,y,"\u2137","\\gimel");a(i,s,y,"\u03dd","\\digamma");a(i,s,y,"\u03f0","\\varkappa");a(i,s,f,"\u250c","\\ulcorner");a(i,s,h,"\u2510","\\urcorner");a(i,s,f,"\u2514","\\llcorner");a(i,s,h,"\u2518","\\lrcorner");a(i,s,d,"\u2266","\\leqq");a(i,s,d,"\u2a7d","\\leqslant");a(i,s,d,"\u2a95","\\eqslantless");a(i,s,d,"\u2272","\\lesssim");a(i,s,d,"\u2a85","\\lessapprox");a(i,s,d,"\u224a","\\approxeq");a(i,s,u,"\u22d6","\\lessdot");a(i,s,d,"\u22d8","\\lll");a(i,s,d,"\u2276","\\lessgtr");a(i,s,d,"\u22da","\\lesseqgtr");a(i,s,d,"\u2a8b","\\lesseqqgtr");a(i,s,d,"\u2251","\\doteqdot");a(i,s,d,"\u2253","\\risingdotseq");a(i,s,d,"\u2252","\\fallingdotseq");a(i,s,d,"\u223d","\\backsim");a(i,s,d,"\u22cd","\\backsimeq");a(i,s,d,"\u2ac5","\\subseteqq");a(i,s,d,"\u22d0","\\Subset");a(i,s,d,"\u228f","\\sqsubset");a(i,s,d,"\u227c","\\preccurlyeq");a(i,s,d,"\u22de","\\curlyeqprec");a(i,s,d,"\u227e","\\precsim");a(i,s,d,"\u2ab7","\\precapprox");a(i,s,d,"\u22b2","\\vartriangleleft");a(i,s,d,"\u22b4","\\trianglelefteq");a(i,s,d,"\u22a8","\\vDash");a(i,s,d,"\u22aa","\\Vvdash");a(i,s,d,"\u2323","\\smallsmile");a(i,s,d,"\u2322","\\smallfrown");a(i,s,d,"\u224f","\\bumpeq");a(i,s,d,"\u224e","\\Bumpeq");a(i,s,d,"\u2267","\\geqq");a(i,s,d,"\u2a7e","\\geqslant");a(i,s,d,"\u2a96","\\eqslantgtr");a(i,s,d,"\u2273","\\gtrsim");a(i,s,d,"\u2a86","\\gtrapprox");a(i,s,u,"\u22d7","\\gtrdot");a(i,s,d,"\u22d9","\\ggg");a(i,s,d,"\u2277","\\gtrless");a(i,s,d,"\u22db","\\gtreqless");a(i,s,d,"\u2a8c","\\gtreqqless");a(i,s,d,"\u2256","\\eqcirc");a(i,s,d,"\u2257","\\circeq");a(i,s,d,"\u225c","\\triangleq");a(i,s,d,"\u223c","\\thicksim");a(i,s,d,"\u2248","\\thickapprox");a(i,s,d,"\u2ac6","\\supseteqq");a(i,s,d,"\u22d1","\\Supset");a(i,s,d,"\u2290","\\sqsupset");a(i,s,d,"\u227d","\\succcurlyeq");a(i,s,d,"\u22df","\\curlyeqsucc");a(i,s,d,"\u227f","\\succsim");a(i,s,d,"\u2ab8","\\succapprox");a(i,s,d,"\u22b3","\\vartriangleright");a(i,s,d,"\u22b5","\\trianglerighteq");a(i,s,d,"\u22a9","\\Vdash");a(i,s,d,"\u2223","\\shortmid");a(i,s,d,"\u2225","\\shortparallel");a(i,s,d,"\u226c","\\between");a(i,s,d,"\u22d4","\\pitchfork");a(i,s,d,"\u221d","\\varpropto");a(i,s,d,"\u25c0","\\blacktriangleleft");a(i,s,d,"\u2234","\\therefore");a(i,s,d,"\u220d","\\backepsilon");a(i,s,d,"\u25b6","\\blacktriangleright");a(i,s,d,"\u2235","\\because");a(i,s,d,"\u22d8","\\llless");a(i,s,d,"\u22d9","\\gggtr");a(i,s,u,"\u22b2","\\lhd");a(i,s,u,"\u22b3","\\rhd");a(i,s,d,"\u2242","\\eqsim");a(i,o,d,"\u22c8","\\Join");a(i,s,d,"\u2251","\\Doteq");a(i,s,u,"\u2214","\\dotplus");a(i,s,u,"\u2216","\\smallsetminus");a(i,s,u,"\u22d2","\\Cap");a(i,s,u,"\u22d3","\\Cup");a(i,s,u,"\u2a5e","\\doublebarwedge");a(i,s,u,"\u229f","\\boxminus");a(i,s,u,"\u229e","\\boxplus");a(i,s,u,"\u22c7","\\divideontimes");a(i,s,u,"\u22c9","\\ltimes");a(i,s,u,"\u22ca","\\rtimes");a(i,s,u,"\u22cb","\\leftthreetimes");a(i,s,u,"\u22cc","\\rightthreetimes");a(i,s,u,"\u22cf","\\curlywedge");a(i,s,u,"\u22ce","\\curlyvee");a(i,s,u,"\u229d","\\circleddash");a(i,s,u,"\u229b","\\circledast");a(i,s,u,"\u22c5","\\centerdot");a(i,s,u,"\u22ba","\\intercal");a(i,s,u,"\u22d2","\\doublecap");a(i,s,u,"\u22d3","\\doublecup");a(i,s,u,"\u22a0","\\boxtimes");a(i,s,d,"\u21e2","\\dashrightarrow");a(i,s,d,"\u21e0","\\dashleftarrow");a(i,s,d,"\u21c7","\\leftleftarrows");a(i,s,d,"\u21c6","\\leftrightarrows");a(i,s,d,"\u21da","\\Lleftarrow");a(i,s,d,"\u219e","\\twoheadleftarrow");a(i,s,d,"\u21a2","\\leftarrowtail");a(i,s,d,"\u21ab","\\looparrowleft");a(i,s,d,"\u21cb","\\leftrightharpoons");a(i,s,d,"\u21b6","\\curvearrowleft");a(i,s,d,"\u21ba","\\circlearrowleft");a(i,s,d,"\u21b0","\\Lsh");a(i,s,d,"\u21c8","\\upuparrows");a(i,s,d,"\u21bf","\\upharpoonleft");a(i,s,d,"\u21c3","\\downharpoonleft");a(i,s,d,"\u22b8","\\multimap");a(i,s,d,"\u21ad","\\leftrightsquigarrow");a(i,s,d,"\u21c9","\\rightrightarrows");a(i,s,d,"\u21c4","\\rightleftarrows");a(i,s,d,"\u21a0","\\twoheadrightarrow");a(i,s,d,"\u21a3","\\rightarrowtail");a(i,s,d,"\u21ac","\\looparrowright");a(i,s,d,"\u21b7","\\curvearrowright");a(i,s,d,"\u21bb","\\circlearrowright");a(i,s,d,"\u21b1","\\Rsh");a(i,s,d,"\u21ca","\\downdownarrows");a(i,s,d,"\u21be","\\upharpoonright");a(i,s,d,"\u21c2","\\downharpoonright");a(i,s,d,"\u21dd","\\rightsquigarrow");a(i,s,d,"\u21dd","\\leadsto");a(i,s,d,"\u21db","\\Rrightarrow");a(i,s,d,"\u21be","\\restriction");a(i,o,y,"\u2018","`");a(i,o,y,"$","\\$");a(n,o,y,"$","\\$");a(n,o,y,"$","\\textdollar");a(i,o,y,"%","\\%");a(n,o,y,"%","\\%");a(i,o,y,"_","\\_");a(n,o,y,"_","\\_");a(n,o,y,"_","\\textunderscore");a(i,o,y,"\u2220","\\angle");a(i,o,y,"\u221e","\\infty");a(i,o,y,"\u2032","\\prime");a(i,o,y,"\u25b3","\\triangle");a(i,o,y,"\u0393","\\Gamma");a(i,o,y,"\u0394","\\Delta");a(i,o,y,"\u0398","\\Theta");a(i,o,y,"\u039b","\\Lambda");a(i,o,y,"\u039e","\\Xi");a(i,o,y,"\u03a0","\\Pi");a(i,o,y,"\u03a3","\\Sigma");a(i,o,y,"\u03a5","\\Upsilon");a(i,o,y,"\u03a6","\\Phi");a(i,o,y,"\u03a8","\\Psi");a(i,o,y,"\u03a9","\\Omega");a(i,o,y,"\xac","\\neg");a(i,o,y,"\xac","\\lnot");a(i,o,y,"\u22a4","\\top");a(i,o,y,"\u22a5","\\bot");a(i,o,y,"\u2205","\\emptyset");a(i,s,y,"\u2205","\\varnothing");a(i,o,c,"\u03b1","\\alpha");a(i,o,c,"\u03b2","\\beta");a(i,o,c,"\u03b3","\\gamma");a(i,o,c,"\u03b4","\\delta");a(i,o,c,"\u03f5","\\epsilon");a(i,o,c,"\u03b6","\\zeta");a(i,o,c,"\u03b7","\\eta");a(i,o,c,"\u03b8","\\theta");a(i,o,c,"\u03b9","\\iota");a(i,o,c,"\u03ba","\\kappa");a(i,o,c,"\u03bb","\\lambda");a(i,o,c,"\u03bc","\\mu");a(i,o,c,"\u03bd","\\nu");a(i,o,c,"\u03be","\\xi");a(i,o,c,"o","\\omicron");a(i,o,c,"\u03c0","\\pi");a(i,o,c,"\u03c1","\\rho");a(i,o,c,"\u03c3","\\sigma");a(i,o,c,"\u03c4","\\tau");a(i,o,c,"\u03c5","\\upsilon");a(i,o,c,"\u03d5","\\phi");a(i,o,c,"\u03c7","\\chi");a(i,o,c,"\u03c8","\\psi");a(i,o,c,"\u03c9","\\omega");a(i,o,c,"\u03b5","\\varepsilon");a(i,o,c,"\u03d1","\\vartheta");a(i,o,c,"\u03d6","\\varpi");a(i,o,c,"\u03f1","\\varrho");a(i,o,c,"\u03c2","\\varsigma");a(i,o,c,"\u03c6","\\varphi");a(i,o,u,"\u2217","*");a(i,o,u,"+","+");a(i,o,u,"\u2212","-");a(i,o,u,"\u22c5","\\cdot");a(i,o,u,"\u2218","\\circ");a(i,o,u,"\xf7","\\div");a(i,o,u,"\xb1","\\pm");a(i,o,u,"\xd7","\\times");a(i,o,u,"\u2229","\\cap");a(i,o,u,"\u222a","\\cup");a(i,o,u,"\u2216","\\setminus");a(i,o,u,"\u2227","\\land");a(i,o,u,"\u2228","\\lor");a(i,o,u,"\u2227","\\wedge");a(i,o,u,"\u2228","\\vee");a(i,o,y,"\u221a","\\surd");a(i,o,f,"(","(");a(i,o,f,"[","[");a(i,o,f,"\u27e8","\\langle");a(i,o,f,"\u2223","\\lvert");a(i,o,f,"\u2225","\\lVert");a(i,o,h,")",")");a(i,o,h,"]","]");a(i,o,h,"?","?");a(i,o,h,"!","!");a(i,o,h,"\u27e9","\\rangle");a(i,o,h,"\u2223","\\rvert");a(i,o,h,"\u2225","\\rVert");a(i,o,d,"=","=");a(i,o,d,"<","<");a(i,o,d,">",">");a(i,o,d,":",":");a(i,o,d,"\u2248","\\approx");a(i,o,d,"\u2245","\\cong");a(i,o,d,"\u2265","\\ge");a(i,o,d,"\u2265","\\geq");a(i,o,d,"\u2190","\\gets");a(i,o,d,">","\\gt");a(i,o,d,"\u2208","\\in");a(i,o,d,"\u2209","\\notin");a(i,o,d,"\u2282","\\subset");a(i,o,d,"\u2283","\\supset");a(i,o,d,"\u2286","\\subseteq");a(i,o,d,"\u2287","\\supseteq");a(i,s,d,"\u2288","\\nsubseteq");a(i,s,d,"\u2289","\\nsupseteq");a(i,o,d,"\u22a8","\\models");a(i,o,d,"\u2190","\\leftarrow");a(i,o,d,"\u2264","\\le");a(i,o,d,"\u2264","\\leq");a(i,o,d,"<","\\lt");a(i,o,d,"\u2260","\\ne");a(i,o,d,"\u2260","\\neq");a(i,o,d,"\u2192","\\rightarrow");a(i,o,d,"\u2192","\\to");a(i,s,d,"\u2271","\\ngeq");a(i,s,d,"\u2270","\\nleq");a(i,o,g,null,"\\!");a(i,o,g,"\xa0","\\ ");a(i,o,g,"\xa0","~");a(i,o,g,null,"\\,");a(i,o,g,null,"\\:");a(i,o,g,null,"\\;");a(i,o,g,null,"\\enspace");a(i,o,g,null,"\\qquad");a(i,o,g,null,"\\quad");a(i,o,g,"\xa0","\\space");a(i,o,m,",",",");a(i,o,m,";",";");a(i,o,m,":","\\colon");a(i,s,u,"\u22bc","\\barwedge");a(i,s,u,"\u22bb","\\veebar");a(i,o,u,"\u2299","\\odot");a(i,o,u,"\u2295","\\oplus");a(i,o,u,"\u2297","\\otimes");a(i,o,y,"\u2202","\\partial");a(i,o,u,"\u2298","\\oslash");a(i,s,u,"\u229a","\\circledcirc");a(i,s,u,"\u22a1","\\boxdot");a(i,o,u,"\u25b3","\\bigtriangleup");a(i,o,u,"\u25bd","\\bigtriangledown");a(i,o,u,"\u2020","\\dagger");a(i,o,u,"\u22c4","\\diamond");a(i,o,u,"\u22c6","\\star");a(i,o,u,"\u25c3","\\triangleleft");a(i,o,u,"\u25b9","\\triangleright");a(i,o,f,"{","\\{");a(n,o,y,"{","\\{");a(n,o,y,"{","\\textbraceleft");a(i,o,h,"}","\\}");a(n,o,y,"}","\\}");a(n,o,y,"}","\\textbraceright");a(i,o,f,"{","\\lbrace");a(i,o,h,"}","\\rbrace");a(i,o,f,"[","\\lbrack");a(i,o,h,"]","\\rbrack");a(n,o,y,"<","\\textless");a(n,o,y,">","\\textgreater");a(i,o,f,"\u230a","\\lfloor");a(i,o,h,"\u230b","\\rfloor");a(i,o,f,"\u2308","\\lceil");a(i,o,h,"\u2309","\\rceil");a(i,o,y,"\\","\\backslash");a(i,o,y,"\u2223","|");a(i,o,y,"\u2223","\\vert");a(n,o,y,"|","\\textbar");a(i,o,y,"\u2225","\\|");a(i,o,y,"\u2225","\\Vert");a(n,o,y,"\u2225","\\textbardbl");a(i,o,d,"\u2191","\\uparrow");a(i,o,d,"\u21d1","\\Uparrow");a(i,o,d,"\u2193","\\downarrow");a(i,o,d,"\u21d3","\\Downarrow");a(i,o,d,"\u2195","\\updownarrow");a(i,o,d,"\u21d5","\\Updownarrow");a(i,o,v,"\u2210","\\coprod");a(i,o,v,"\u22c1","\\bigvee");a(i,o,v,"\u22c0","\\bigwedge");a(i,o,v,"\u2a04","\\biguplus");a(i,o,v,"\u22c2","\\bigcap");a(i,o,v,"\u22c3","\\bigcup");a(i,o,v,"\u222b","\\int");a(i,o,v,"\u222b","\\intop");a(i,o,v,"\u222c","\\iint");a(i,o,v,"\u222d","\\iiint");a(i,o,v,"\u220f","\\prod");a(i,o,v,"\u2211","\\sum");a(i,o,v,"\u2a02","\\bigotimes");a(i,o,v,"\u2a01","\\bigoplus");a(i,o,v,"\u2a00","\\bigodot");a(i,o,v,"\u222e","\\oint");a(i,o,v,"\u2a06","\\bigsqcup");a(i,o,v,"\u222b","\\smallint");a(n,o,p,"\u2026","\\textellipsis");a(i,o,p,"\u2026","\\mathellipsis");a(n,o,p,"\u2026","\\ldots");a(i,o,p,"\u2026","\\ldots");a(i,o,p,"\u22ef","\\cdots");a(i,o,p,"\u22f1","\\ddots");a(i,o,y,"\u22ee","\\vdots");a(i,o,l,"\xb4","\\acute");a(i,o,l,"`","\\grave");a(i,o,l,"\xa8","\\ddot");a(i,o,l,"~","\\tilde");a(i,o,l,"\xaf","\\bar");a(i,o,l,"\u02d8","\\breve");a(i,o,l,"\u02c7","\\check");a(i,o,l,"^","\\hat");a(i,o,l,"\u20d7","\\vec");a(i,o,l,"\u02d9","\\dot");a(i,o,c,"\u0131","\\imath");a(i,o,c,"\u0237","\\jmath");a(n,o,y,"\u2013","--");a(n,o,y,"\u2013","\\textendash");a(n,o,y,"\u2014","---");a(n,o,y,"\u2014","\\textemdash");a(n,o,y,"\u2018","`");a(n,o,y,"\u2018","\\textquoteleft");a(n,o,y,"\u2019","'");a(n,o,y,"\u2019","\\textquoteright");a(n,o,y,"\u201c","``");a(n,o,y,"\u201c","\\textquotedblleft");a(n,o,y,"\u201d","''");a(n,o,y,"\u201d","\\textquotedblright");a(i,o,y,"\xb0","\\degree");a(n,o,y,"\xb0","\\degree");a(i,o,c,"\xa3","\\pounds");a(i,o,c,"\xa3","\\mathsterling");a(n,o,c,"\xa3","\\pounds");a(n,o,c,"\xa3","\\textsterling");a(i,s,y,"\u2720","\\maltese");a(n,s,y,"\u2720","\\maltese");a(n,o,g,"\xa0","\\ ");a(n,o,g,"\xa0"," ");a(n,o,g,"\xa0","~");var x='0123456789/@."';for(var b=0;b<x.length;b++){var w=x.charAt(b);a(i,o,y,w,w)}var k='0123456789!@*()-=+[]<>|";:?/.,';for(var z=0;z<k.length;z++){var M=k.charAt(z);a(n,o,y,M,M)}var S="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";for(var A=0;A<S.length;A++){var N=S.charAt(A);a(i,o,c,N,N);a(n,o,y,N,N)}for(var T=192;T<=214;T++){var q=String.fromCharCode(T);a(n,o,y,q,q)}for(var C=216;C<=246;C++){var E=String.fromCharCode(C);a(n,o,y,E,E)}for(var O=248;O<=255;O++){var R=String.fromCharCode(O);a(n,o,y,R,R)}for(var L=1040;L<=1103;L++){var D=String.fromCharCode(L);a(n,o,y,D,D)}a(n,o,y,"\u2013","\u2013");a(n,o,y,"\u2014","\u2014");a(n,o,y,"\u2018","\u2018");a(n,o,y,"\u2019","\u2019");a(n,o,y,"\u201c","\u201c");a(n,o,y,"\u201d","\u201d")},{}],30:[function(e,t,r){"use strict";var a=/[\uAC00-\uD7AF]/;var i=/[\u3040-\u309F]|[\u30A0-\u30FF]|[\u4E00-\u9FAF]|[\uAC00-\uD7AF]/;t.exports={cjkRegex:i,hangulRegex:a}},{}],31:[function(e,t,r){"use strict";var a=Array.prototype.indexOf;var i=function e(t,r){if(t==null){return-1}if(a&&t.indexOf===a){return t.indexOf(r)}var i=t.length;for(var n=0;n<i;n++){if(t[n]===r){return n}}return-1};var n=function e(t,r){return i(t,r)!==-1};var o=function e(t,r){return t===undefined?r:t};var s=/([A-Z])/g;var l=function e(t){return t.replace(s,"-$1").toLowerCase()};var u={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"};var h=/[&><"']/g;function p(e){return u[e]}function c(e){return(""+e).replace(h,p)}var v=void 0;if(typeof document!=="undefined"){var f=document.createElement("span");if("textContent"in f){v=function e(t,r){t.textContent=r}}else{v=function e(t,r){t.innerText=r}}}function m(e){v(e,"")}t.exports={contains:n,deflt:o,escape:c,hyphenate:l,indexOf:i,setTextContent:v,clearNode:m}},{}]},{},[1])(1)});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],2:[function(require,module,exports){
Mousetrap = require('mousetrap');
katex = require('../lib/katex/katex-modified.min.js');
GuppyUtils = require('./guppy_utils.js');
GuppyDoc = require('./guppy_doc.js');
GuppySymbols = require('./guppy_symbols.js');

String.prototype.splice = function(idx, s){ return (this.slice(0,idx) + s + this.slice(idx)); };
String.prototype.splicen = function(idx, s, n){ return (this.slice(0,idx) + s + this.slice(idx+n));};
String.prototype.search_at = function(idx, s){ return (this.substring(idx-s.length,idx) == s); };

var GuppyBackend = function(config){
    var self = this;
    var config = config || {};
    var events = config['events'] || {};
    var options = config['options'] || {};
    this.parent = config['parent'];
    
    this.blacklist = [];
    this.autoreplace = true;
    this.ready = false;
    this.events = {};
    
    var evts = ["ready", "change", "left_end", "right_end", "done", "completion", "debug", "error", "focus"];
    
    for (var i = 0; i < evts.length; i++){
        var e = evts[i];
        if(e in events) this.events[e] = e in events ? events[e] : null;
    }

    var opts = ["blank_caret", "empty_content", "blacklist", "autoreplace"];
    
    for (var i = 0; i < opts.length; i++){
        var p = opts[i];
        if(p in options) this[p] = options[p];
    }

    this.symbols = {}; //@
    this.doc = new GuppyDoc(options["xml_content"]);
    
    this.clipboard = null;
    this.current = this.doc.root().firstChild;
    //if (!this.current.firstChild)
    //    this.current.appendChild(this.doc.base.createTextNode(""));
    this.caret = 0;
    this.space_caret = 0; //@
    this.sel_start = null;
    this.sel_end = null;
    this.undo_data = [];
    this.undo_now = -1;
    this.sel_status = GuppyBackend.SEL_NONE;
    this.checkpoint();
    if (GuppyBackend.ready && !this.ready){
    	this.ready = true;
	this.symbols = JSON.parse(JSON.stringify(GuppySymbols.symbols));
    	this.fire_event("ready");
    }
}

GuppyBackend.SEL_NONE = 0;
GuppyBackend.SEL_CURSOR_AT_START = 1;
GuppyBackend.SEL_CURSOR_AT_END = 2;

GuppyBackend.prototype.get_content = function(t,r){
    return this.doc.get_content(t,r);
}

GuppyBackend.prototype.set_content = function(xml_data){
    this.doc = new GuppyDoc(xml_data);
    this.clipboard = null;
    this.current = this.doc.root().lastChild;
    this.caret = GuppyUtils.get_length(this.current);
    this.caret = 0;
    this.sel_start = null;
    this.sel_end = null;
    this.undo_data = [];
    this.undo_now = -1;
    this.sel_status = GuppyBackend.SEL_NONE;
    this.checkpoint();
    this.parent.render(true);
}

GuppyBackend.prototype.fire_event = function(event, args){
    args = args || {};
    args.target = this.parent || this;
    if(this.events[event]) this.events[event](args);
}

GuppyBackend.prototype.remove_symbol = function(name){
    if(this.symbols[name]) delete this.symbols[name];
}

GuppyBackend.prototype.add_symbols = function(name, sym){
    var new_syms = GuppySymbols.add_symbols(name, sym);
    for(var s in new_syms){
	this.symbols[s] = new_syms[s];
    }
}

GuppyBackend.prototype.add_symbol_func = function(name, group){
    var new_syms = GuppySymbols.add_symbols("_func", [{"group":group,"symbols":[name]}]);
    for(var s in new_syms)
	this.symbols[s] = new_syms[s];
}

GuppyBackend.prototype.add_symbol_raw = function(name, latex, text, group){
    var s = {}
    s[name] = {"latex":latex,"text":text}
    var new_syms = GuppySymbols.add_symbols("_raw", [{"group":group,"symbols":s}]);
    for(var s in new_syms)
	this.symbols[s] = new_syms[s];
}

GuppyBackend.prototype.select_to = function(loc, sel_cursor, sel_caret, mouse){
    if(loc.current == sel_cursor && loc.caret == sel_caret){
	this.current = loc.current;
	this.caret = loc.caret;
	this.sel_status = GuppyBackend.SEL_NONE;
    }
    else if(loc.pos == "left"){
	this.sel_end = {"node":sel_cursor,"caret":sel_caret};
	this.current = loc.current;
	this.caret = loc.caret;
	this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_START, mouse);
    }
    else if(loc.pos == "right"){
	this.sel_start = {"node":sel_cursor,"caret":sel_caret};
	this.current = loc.current;
	this.caret = loc.caret;
	this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_END, mouse);
    }
}

GuppyBackend.prototype.set_sel_start = function(){
    this.sel_start = {"node":this.current, "caret":this.caret};
}

GuppyBackend.prototype.set_sel_end = function(){
    this.sel_end = {"node":this.current, "caret":this.caret};
}

GuppyBackend.prototype.add_paths = function(n,path){
    if(n.nodeName == "e"){
	n.setAttribute("path",path);
    }
    else{
	var es = 1, fs = 1, cs = 1, ls = 1;
	for(var c = n.firstChild; c != null; c = c.nextSibling){
	    if(c.nodeName == "c"){ this.add_paths(c, path+"_c"+cs); cs++; }
	    else if(c.nodeName == "f"){ this.add_paths(c, path+"_f"+fs); fs++; }
	    else if(c.nodeName == "l"){ this.add_paths(c, path+"_l"+ls); ls++; }
	    else if(c.nodeName == "e"){ this.add_paths(c, path+"_e"+es); es++; }
	}
    }
}

GuppyBackend.prototype.add_classes_cursors = function(n,path){
    if(n.nodeName == "e"){
	var text = n.firstChild.nodeValue;
	ans = "";
	var sel_cursor;
	var text_node = GuppyUtils.is_text(n);
	if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START) sel_cursor = this.sel_end;
	if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END) sel_cursor = this.sel_start;
	if(this.sel_status != GuppyBackend.SEL_NONE){
	    var sel_caret_text = GuppyUtils.is_small(sel_cursor.node) ? GuppyUtils.SMALL_SEL_CARET : GuppyUtils.SEL_CARET;
	    if(!text_node && text.length == 0 && n.parentNode.childElementCount > 1){
		sel_caret_text = "\\blue{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0}{"+sel_caret_text+"}}";
	    }
	    else{
		sel_caret_text = "\\blue{"+sel_caret_text+"}";
	    }
	    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END) sel_caret_text = text_node ? "[" : sel_caret_text + "\\"+GuppyUtils.SEL_COLOR+"{";
	    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START) sel_caret_text = text_node ? "]" : "}" + sel_caret_text;
	}
	var caret_text = "";
	var temp_caret_text = "";
	if(text.length == 0){
	    if(text_node) caret_text = "\\_";
	    else if(n.parentNode.childElementCount == 1){
		if(this.current == n){
		    var blank_caret = this.blank_caret || (GuppyUtils.is_small(this.current) ? GuppyUtils.SMALL_CARET : GuppyUtils.CARET);
		    ans = "\\red{\\xmlClass{main_cursor guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{"+blank_caret+"}}";
		}
		else if(this.temp_cursor.node == n)
		    ans = "\\gray{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{[?]}}";
		else
		    ans = "\\blue{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{[?]}}";
	    }
	    else if(this.temp_cursor.node != n && this.current != n && (!(sel_cursor) || sel_cursor.node != n)){
		// These are the empty e elements at either end of
		// a c or m node, such as the space before and
		// after both the sin and x^2 in sin(x^2)
		//
		// Here, we add in a small element so that we can
		// use the mouse to select these areas
		ans = "\\phantom{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0"+"}{\\cursor[0.1ex]{1ex}}}";
	    }
	}
	for(var i = 0; i < text.length+1; i++){
	    if(n == this.current && i == this.caret && (text.length > 0 || n.parentNode.childElementCount > 1)){
		if(text_node){
		    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START)
			caret_text = "[";
		    else if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END)
			caret_text = "]";
		    else
			caret_text = "\\_";
		}
		else{
		    caret_text = GuppyUtils.is_small(this.current) ? GuppyUtils.SMALL_CARET : GuppyUtils.CARET;
		    if(text.length == 0)
			caret_text = "\\red{\\xmlClass{main_cursor guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0}{"+caret_text+"}}";
		    else{
			caret_text = "\\red{\\xmlClass{main_cursor}{"+caret_text+"}}"
		    }
		    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START)
			caret_text = caret_text + "\\"+GuppyUtils.SEL_COLOR+"{";
		    else if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END)
			caret_text = "}" + caret_text;
		}
		ans += caret_text;
	    }
	    else if(n == this.current && i == this.caret && text_node){
		ans += caret_text;
	    }
	    else if(this.sel_status != GuppyBackend.SEL_NONE && sel_cursor.node == n && i == sel_cursor.caret){
		ans += sel_caret_text;
	    }
	    else if(this.temp_cursor.node == n && i == this.temp_cursor.caret && (text.length > 0 || n.parentNode.childElementCount > 1)){
		if(text_node) 
		    temp_caret_text = ".";
		else{
		    temp_caret_text = GuppyUtils.is_small(this.current) ? GuppyUtils.TEMP_SMALL_CARET : GuppyUtils.TEMP_CARET;
		    if(text.length == 0){
			temp_caret_text = "\\gray{\\xmlClass{guppy_elt guppy_blank guppy_loc_"+n.getAttribute("path")+"_0}{"+temp_caret_text+"}}";
		    }
		    else
			temp_caret_text = "\\gray{"+temp_caret_text+"}";
		}
		ans += temp_caret_text;
	    }
	    if(i < text.length) ans += "\\xmlClass{guppy_elt guppy_loc_"+n.getAttribute("path")+"_"+i+"}{"+text[i]+"}";
	}
	if(text_node && n == this.current){
	    ans = "\\xmlClass{guppy_text_current}{{"+ans+"}}";
	}
	n.setAttribute("render", ans);
	n.removeAttribute("path");
    }
    else{
	for(var c = n.firstChild; c != null; c = c.nextSibling){
	    if(c.nodeName == "c" || c.nodeName == "l" || c.nodeName == "f" || c.nodeName == "e"){ this.add_classes_cursors(c); }
	}
    }
}

GuppyBackend.prototype.remove_cursors_classes = function(n){
    if(n.nodeName == "e"){
	n.removeAttribute("path");
	n.removeAttribute("render");
	n.removeAttribute("current");
	n.removeAttribute("temp");
    }
    else{
	for(var c = n.firstChild; c != null; c = c.nextSibling){
	    if(c.nodeType == 1){ this.remove_cursors_classes(c); }
	}
    }
}

GuppyBackend.prototype.down_from_f = function(){
    var nn = this.current.firstChild;
    while(nn != null && nn.nodeName != 'c' && nn.nodeName != 'l') nn = nn.nextSibling;
    if(nn != null){
	while(nn.nodeName == 'l') nn = nn.firstChild;
	this.current = nn.firstChild;
    }
}

GuppyBackend.prototype.down_from_f_to_blank = function(){
    var nn = this.current.firstChild;
    while(nn != null && !(nn.nodeName == 'c' && nn.children.length == 1 && nn.firstChild.firstChild.nodeValue == "")){
	nn = nn.nextSibling;
    }
    if(nn != null){
	//Sanity check:
	
	while(nn.nodeName == 'l') nn = nn.firstChild;
	if(nn.nodeName != 'c' || nn.firstChild.nodeName != 'e'){
	    this.problem('dfftb');
	    return;
	}
	this.current = nn.firstChild;
    }
    else this.down_from_f();
}

GuppyBackend.prototype.delete_from_f = function(to_insert){
    var n = this.current;
    var p = n.parentNode;
    var prev = n.previousSibling;
    var next = n.nextSibling;
    var middle = to_insert || "";
    var new_node = this.make_e(prev.firstChild.textContent + middle + next.firstChild.textContent);
    this.current = new_node;
    this.caret = prev.firstChild.textContent.length;
    p.insertBefore(new_node, prev);
    p.removeChild(prev);
    p.removeChild(n);
    p.removeChild(next);
}

GuppyBackend.prototype.symbol_to_node = function(sym_name, content){
    // sym_name is a key in the symbols dictionary
    //
    // content is a list of nodes to insert
    var base = this.doc.base;
    var s = this.symbols[sym_name];
    var f = base.createElement("f");
    if("type" in s) f.setAttribute("type",s["type"])
    if("group" in s) f.setAttribute("group",s["group"])
    if(s['char']) f.setAttribute("c","yes");
    
    var first_ref = -1;
    var refs_count = 0;
    var lists = {}
    var first;

    // Make the b nodes for rendering each output    
    for(var t in s["output"]){
	var b = base.createElement("b");
	b.setAttribute("p",t);

	var out = s["output"][t];
	if(typeof out == 'string'){
	    out = out.split(/(\{\$[0-9]+(?:\{[^}]+\})*\})/g);
	    for(var i = 0; i < out.length; i++){
		m = out[i].match(/^\{\$([0-9]+)((?:\{[^}]+\})*)\}$/);
		if(m){
		    //console.log("O",out);
		    out[i] = {'ref':parseInt(m[1])};
		    if(m[2].length > 0){
			mm = m[2].match(/\{[^}]*\}/g);
			out[i]['d'] = mm.length;
			for(var j = 0; j < mm.length; j++){
			    out[i]['sep'+j] = mm[j].substring(1,mm[j].length-1);
			}
		    }
		}
	    }
	}
	for(var i = 0; i < out.length; i++){
	    if(typeof out[i] == 'string' || out[i] instanceof String){
		var nt = base.createTextNode(out[i]);
		b.appendChild(nt);
	    }
	    else{
		var nt = base.createElement("r");
		for(var attr in out[i]){
		    nt.setAttribute(attr,out[i][attr]);
		}
		if(t == 'latex') {
		    if(first_ref == -1) first_ref = out[i]['ref'];
		    if('d' in out[i]) lists[refs_count] = out[i]['d']
		    refs_count++;
		}
		b.appendChild(nt);
	    }
	}
	f.appendChild(b);
    }
    // Now make the c nodes for storing the content
    for(var i = 0; i < refs_count; i++){
	var nc = base.createElement("c");
	if(i in content){
	    var node_list = content[i];
	    for(var se = 0; se < node_list.length; se++){
		nc.appendChild(node_list[se].cloneNode(true));
	    }
	}
	else nc.appendChild(this.make_e(""));
	if(i+1 == first_ref) first = nc.lastChild;
	if(s['attrs'])
	    for(var a in (s['attrs'][i] || {}))
		nc.setAttribute(a,s['attrs'][i][a]);
	    // for(var a in s['attrs'])
	    // 	if(s['attrs'][a][i] != 0) nc.setAttribute(a,s['attrs'][a][i]);
	if(i in lists){
	    var par = f;
	    for(var j = 0; j < lists[i]; j++){
		var nl = base.createElement("l");
		nl.setAttribute("s","1");
		par.appendChild(nl);
		par = nl;
		if(j == lists[i]-1) nl.appendChild(nc);
	    }
	}
	else f.appendChild(nc);
    }
    return {"f":f, "first":first};
}

GuppyBackend.prototype.insert_symbol = function(sym_name){
    var s = this.symbols[sym_name];
    if(this.is_blacklisted(s['type'])){
	return false;
    }
    var node_list = {};
    var content = {};
    var left_piece,right_piece;
    var cur = s['current'] == null ? 0 : parseInt(s['current']);
    var to_remove = [];
    var to_replace = null;
    var replace_f = false;
    
    
    if(cur > 0){
	cur--;
	if(this.sel_status != GuppyBackend.SEL_NONE){
	    var sel = this.sel_get();
	    sel_parent = sel.involved[0].parentNode;
	    to_remove = sel.involved;
	    left_piece = this.make_e(sel.remnant.firstChild.nodeValue.slice(0,this.sel_start.caret));
	    right_piece = this.make_e(sel.remnant.firstChild.nodeValue.slice(this.sel_start.caret));
	    content[cur] = sel.node_list;
	}
	else if(s['current_type'] == 'token'){
	    // If we're at the beginning, then the token is the previous f node
	    if(this.caret == 0 && this.current.previousSibling != null){
		content[cur] = [this.make_e(""), this.current.previousSibling, this.make_e("")];
		to_replace = this.current.previousSibling;
		replace_f = true;
	    }
	    else{
		// look for [0-9.]+|[a-zA-Z] immediately preceeding the caret and use that as token
		var prev = this.current.firstChild.nodeValue.substring(0,this.caret);
		var token = prev.match(/[0-9.]+$|[a-zA-Z]$/);
		if(token != null && token.length > 0){
		    token = token[0];
		    left_piece = this.make_e(this.current.firstChild.nodeValue.slice(0,this.caret-token.length));
		    right_piece = this.make_e(this.current.firstChild.nodeValue.slice(this.caret));
		    content[cur] = [this.make_e(token)];
		}
	    }
	}
    }
    if(!replace_f && (left_piece == null || right_piece == null)){
	left_piece = this.make_e(this.current.firstChild.nodeValue.slice(0,this.caret));
	right_piece = this.make_e(this.current.firstChild.nodeValue.slice(this.caret));
	to_remove = [this.current];
    }

    // By now:
    // 
    // content contains whatever we want to pre-populate the 'current' field with (if any)
    //
    // right_piece contains whatever content was in an involved node
    // to the right of the cursor but is not part of the insertion.
    // Analogously for left_piece
    //
    // Thus all we should have to do now is symbol_to_node(sym_type,
    // content) and then add the left_piece, resulting node, and
    // right_piece in that order.
    
    var new_current = null;
    var current_parent = this.current.parentNode;
    
    var sym = this.symbol_to_node(sym_name,content);
    var f = sym.f;
    var new_current = sym.first;

    var next = this.current.nextSibling;

    if(replace_f){
	current_parent.replaceChild(f,to_replace);
    }
    else{
	if(to_remove.length == 0) this.current.parentNode.removeChild(this.current);
	
	for(var i = 0; i < to_remove.length; i++){
	    if(next == to_remove[i]) next = next.nextSibling;
	    current_parent.removeChild(to_remove[i]);
	}
	current_parent.insertBefore(left_piece, next);
	current_parent.insertBefore(f, next);
	current_parent.insertBefore(right_piece, next);
    }
    
    this.caret = 0;
    this.current = f;
    if(s['char']){
	this.current = this.current.nextSibling;
    }
    else this.down_from_f_to_blank();

    this.sel_clear();
    this.checkpoint();
    return true;
}

GuppyBackend.prototype.sel_get = function(){
    if(this.sel_status == GuppyBackend.SEL_NONE){
	return null;
    }
    var involved = [];
    var node_list = [];
    var remnant = null;

    if(this.sel_start.node == this.sel_end.node){
	return {"node_list":[this.make_e(this.sel_start.node.firstChild.nodeValue.substring(this.sel_start.caret, this.sel_end.caret))],
		"remnant":this.make_e(this.sel_start.node.firstChild.nodeValue.substring(0, this.sel_start.caret) + this.sel_end.node.firstChild.nodeValue.substring(this.sel_end.caret)),
		"involved":[this.sel_start.node]};
    }
    
    node_list.push(this.make_e(this.sel_start.node.firstChild.nodeValue.substring(this.sel_start.caret)));
    involved.push(this.sel_start.node);
    involved.push(this.sel_end.node);
    remnant = this.make_e(this.sel_start.node.firstChild.nodeValue.substring(0, this.sel_start.caret) + this.sel_end.node.firstChild.nodeValue.substring(this.sel_end.caret));
    var n = this.sel_start.node.nextSibling;
    while(n != null && n != this.sel_end.node){
	involved.push(n);
	node_list.push(n);
	n = n.nextSibling;
    }
    node_list.push(this.make_e(this.sel_end.node.firstChild.nodeValue.substring(0, this.sel_end.caret)));
    return {"node_list":node_list,
	    "remnant":remnant,
	    "involved":involved,
	    "cursor":0};
}

// GuppyBackend.prototype.print_selection = function(){
//     var sel = this.sel_get();
//     if(sel == null) return "[none]";
//     var ans = "";
//     ans += "node_list: \n";
//     for(var i = 0; i < sel.node_list.length; i++){
// 	var n = sel.node_list[i];
// 	ans += (new XMLSerializer()).serializeToString(n) + "\n";
//     }
//     ans += "\ninvolved: \n";
//     for(var i = 0; i < sel.involved.length; i++){
// 	var n = sel.involved[i];
// 	ans += (new XMLSerializer()).serializeToString(n) + "\n";
//     }
// }

GuppyBackend.prototype.make_e = function(text){
    var base = this.doc.base;
    var new_node = base.createElement("e");
    new_node.appendChild(base.createTextNode(text));
    return new_node;
}

GuppyBackend.prototype.insert_string = function(s){
    if(this.sel_status != GuppyBackend.SEL_NONE){
	this.sel_delete();
	this.sel_clear();
    }
    this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splice(this.caret,s)
    this.caret += s.length;
    this.checkpoint();
    if(this.autoreplace) this.check_for_symbol();
}

GuppyBackend.prototype.sel_copy = function(){
    var sel = this.sel_get();
    if(!sel) return;
    this.clipboard = [];
    for(var i = 0; i < sel.node_list.length; i++){
	this.clipboard.push(sel.node_list[i].cloneNode(true));
    }
    this.sel_clear();
}

GuppyBackend.prototype.sel_cut = function(){
    var node_list = this.sel_delete();
    if(!node_list) return;
    this.clipboard = [];
    for(var i = 0; i < node_list.length; i++){
	this.clipboard.push(node_list[i].cloneNode(true));
    }
    this.sel_clear();
    this.checkpoint();
}

GuppyBackend.prototype.insert_nodes = function(node_list, move_cursor){
    var real_clipboard = [];
    for(var i = 0; i < node_list.length; i++){
	real_clipboard.push(node_list[i].cloneNode(true));
    }

    if(real_clipboard.length == 1){
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.substring(0,this.caret) + real_clipboard[0].firstChild.nodeValue + this.current.firstChild.nodeValue.substring(this.caret);
	if(move_cursor) this.caret += real_clipboard[0].firstChild.nodeValue.length;
    }
    else{
	var nn = this.make_e(real_clipboard[real_clipboard.length-1].firstChild.nodeValue + this.current.firstChild.nodeValue.substring(this.caret));
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.substring(0,this.caret) + real_clipboard[0].firstChild.nodeValue;
	if(this.current.nextSibling == null)
	    this.current.parentNode.appendChild(nn)
	else
	    this.current.parentNode.insertBefore(nn, this.current.nextSibling)
	for(var i = 1; i < real_clipboard.length - 1; i++)
	    this.current.parentNode.insertBefore(real_clipboard[i], nn);
	if(move_cursor){
	    this.current = nn;
	    this.caret = real_clipboard[real_clipboard.length-1].firstChild.nodeValue.length
	}
    }
}

GuppyBackend.prototype.sel_paste = function(){
    this.sel_delete();
    this.sel_clear();
    if(!(this.clipboard) || this.clipboard.length == 0) return;
    this.insert_nodes(this.clipboard, true);
    this.checkpoint();
    return;
}

GuppyBackend.prototype.sel_clear = function(){
    this.sel_start = null;    
    this.sel_end = null;
    this.sel_status = GuppyBackend.SEL_NONE;
}

GuppyBackend.prototype.sel_delete = function(){
    var sel = this.sel_get();
    if(!sel) return null;
    sel_parent = sel.involved[0].parentNode;
    sel_prev = sel.involved[0].previousSibling;
    for(var i = 0; i < sel.involved.length; i++){
	var n = sel.involved[i];
	sel_parent.removeChild(n);
    }
    if(sel_prev == null){
	if(sel_parent.firstChild == null)
	    sel_parent.appendChild(sel.remnant);
	else
	    sel_parent.insertBefore(sel.remnant, sel_parent.firstChild);
    }
    else if(sel_prev.nodeName == 'f'){
	if(sel_prev.nextSibling == null)
	    sel_parent.appendChild(sel.remnant);
	else
	    sel_parent.insertBefore(sel.remnant, sel_prev.nextSibling);
    }
    this.current = sel.remnant
    this.caret = this.sel_start.caret;
    return sel.node_list;
}

GuppyBackend.prototype.sel_all = function(){
    this.home();
    this.set_sel_start();
    this.end();
    this.set_sel_end();
    if(this.sel_start.node != this.sel_end.node || this.sel_start.caret != this.sel_end.caret)
	this.sel_status = GuppyBackend.SEL_CURSOR_AT_END;
}

GuppyBackend.prototype.sel_right = function(){
    if(this.sel_status == GuppyBackend.SEL_NONE){
	this.set_sel_start();
	this.sel_status = GuppyBackend.SEL_CURSOR_AT_END;
    }
    if(this.caret >= GuppyUtils.get_length(this.current)){
	var nn = this.current.nextSibling;
	if(nn != null){
	    this.current = nn.nextSibling;
	    this.caret = 0;
	    this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_END);
	}
	else{
	    this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_END);
	}
    }
    else{
	this.caret += 1;
	this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_END);
    }
    if(this.sel_start.node == this.sel_end.node && this.sel_start.caret == this.sel_end.caret){
	this.sel_status = GuppyBackend.SEL_NONE;
    }
}

GuppyBackend.prototype.set_sel_boundary = function(sstatus, mouse){
    if(this.sel_status == GuppyBackend.SEL_NONE || mouse) this.sel_status = sstatus;
    if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_START)
	this.set_sel_start();
    else if(this.sel_status == GuppyBackend.SEL_CURSOR_AT_END)
	this.set_sel_end();
}

GuppyBackend.prototype.sel_left = function(){
    if(this.sel_status == GuppyBackend.SEL_NONE){
	this.set_sel_end();
	this.sel_status = GuppyBackend.SEL_CURSOR_AT_START;
    }
    if(this.caret <= 0){
	var nn = this.current.previousSibling;
	if(nn != null){
	    this.current = nn.previousSibling;
	    this.caret = this.current.firstChild.nodeValue.length;
	    this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_START);
	}
	else{
	    this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_START);
	}
    }
    else{
	this.caret -= 1;
	this.set_sel_boundary(GuppyBackend.SEL_CURSOR_AT_START);
    }
    if(this.sel_start.node == this.sel_end.node && this.sel_start.caret == this.sel_end.caret){
	this.sel_status = GuppyBackend.SEL_NONE;
    }
}

GuppyBackend.prototype.list_extend_copy_right = function(){this.list_extend("right", true);}
GuppyBackend.prototype.list_extend_copy_left = function(){this.list_extend("left", true);}
GuppyBackend.prototype.list_extend_right = function(){this.list_extend("right", false);}
GuppyBackend.prototype.list_extend_left = function(){this.list_extend("left", false);}
GuppyBackend.prototype.list_extend_up = function(){this.list_extend("up", false);}
GuppyBackend.prototype.list_extend_down = function(){this.list_extend("down", false);}
GuppyBackend.prototype.list_extend_copy_up = function(){this.list_extend("up", true);}
GuppyBackend.prototype.list_extend_copy_down = function(){this.list_extend("down", true);}

GuppyBackend.prototype.list_vertical_move = function(down){
    var n = this.current;
    while(n.parentNode && n.parentNode.parentNode && !(n.nodeName == 'c' && n.parentNode.nodeName == 'l' && n.parentNode.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    var pos = 1;
    var cc = n;
    while(cc.previousSibling != null){
	pos++;
	cc = cc.previousSibling;
    }
    var new_l = down ? n.parentNode.nextSibling : n.parentNode.previousSibling
    if(!new_l) return;
    var idx = 1;
    var nn = new_l.firstChild;
    while(idx < pos){
	idx++;
	nn = nn.nextSibling;
    }
    this.current = nn.firstChild;
    this.caret = down ? 0 : this.current.firstChild.textContent.length;
}

GuppyBackend.prototype.list_extend = function(direction, copy){
    var base = this.doc.base;
    var vertical = direction == "up" || direction == "down";
    var before = direction == "up" || direction == "left";
    var this_name = vertical ? "l" : "c";
    var n = this.current;
    while(n.parentNode && !(n.nodeName == this_name && n.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    var to_insert;
    
    // check if 2D and horizontal and extend all the other rows if so 
    if(!vertical && n.parentNode.parentNode.nodeName == "l"){
	to_insert = base.createElement("c");
	to_insert.appendChild(this.make_e(""));
	var pos = 1;
	var cc = n;
	while(cc.previousSibling != null){
	    pos++;
	    cc = cc.previousSibling;
	}
	var to_modify = [];
	var iterator = this.doc.xpath_list("./l/c[position()="+pos+"]", n.parentNode.parentNode);
	try{ for(var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext()){ to_modify.push(nn); }}
	catch(e) { this.fire_event("error",{"message":'XML modified during iteration? ' + e}); }
	for(var j = 0; j < to_modify.length; j++){
	    var nn = to_modify[j];
	    if(copy) nn.parentNode.insertBefore(nn.cloneNode(true), before ? nn : nn.nextSibling);
	    else nn.parentNode.insertBefore(to_insert.cloneNode(true), before ? nn : nn.nextSibling);
	    nn.parentNode.setAttribute("s",parseInt(nn.parentNode.getAttribute("s"))+1);
	}
	this.current = before ? n.previousSibling.lastChild : n.nextSibling.firstChild;
	this.caret = this.current.firstChild.textContent.length;
	this.checkpoint();
	return;
    }
    
    if(copy){
	to_insert = n.cloneNode(true);
    }
    else{
	if(vertical){
	    to_insert = base.createElement("l");
	    to_insert.setAttribute("s",n.getAttribute("s"))
	    for(var i = 0; i < parseInt(n.getAttribute("s")); i++){
		var c = base.createElement("c");
		c.appendChild(this.make_e(""));
		to_insert.appendChild(c);
	    }
	}
	else{
	    to_insert = base.createElement("c");
	    to_insert.appendChild(this.make_e(""));
	}
    }
    n.parentNode.setAttribute("s",parseInt(n.parentNode.getAttribute("s"))+1);
    n.parentNode.insertBefore(to_insert, before ? n : n.nextSibling);
    if(vertical) this.current = to_insert.firstChild.firstChild;
    else this.current = to_insert.firstChild;
    this.caret = 0;
    this.checkpoint();
}

GuppyBackend.prototype.list_remove_col = function(){
    var n = this.current;
    while(n.parentNode && n.parentNode.parentNode && !(n.nodeName == 'c' && n.parentNode.nodeName == 'l' && n.parentNode.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    
    // Don't remove if there is only a single column:
    if(n.previousSibling != null){
	this.current = n.previousSibling.lastChild;
	this.caret = n.previousSibling.lastChild.firstChild.textContent.length;
    }
    else if(n.nextSibling != null){
	this.current = n.nextSibling.firstChild;
	this.caret = 0;
    }
    else return;
    
    var pos = 1;
    var cc = n;
    
    // Find position of column
    while(cc.previousSibling != null){
	pos++;
	cc = cc.previousSibling;
    }
    var to_modify = [];
    var iterator = this.doc.xpath_list("./l/c[position()="+pos+"]", n.parentNode.parentNode)
    try{ for(var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext()){ to_modify.push(nn); }}
    catch(e) { this.fire_event("error",{"message":'XML modified during iteration? ' + e}); }
    for(var j = 0; j < to_modify.length; j++){
	var nn = to_modify[j];
	nn.parentNode.setAttribute("s",parseInt(nn.parentNode.getAttribute("s"))-1);
	nn.parentNode.removeChild(nn);
    }
}

GuppyBackend.prototype.list_remove_row = function(){
    var n = this.current;
    while(n.parentNode && !(n.nodeName == 'l' && n.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    // Don't remove if there is only a single row:
    if(n.previousSibling != null){
	this.current = n.previousSibling.firstChild.lastChild;
	this.caret = n.previousSibling.lastChild.firstChild.textContent.length;
    }
    else if(n.nextSibling != null){
	this.current = n.nextSibling.firstChild.firstChild;
	this.caret = 0;
    }
    else return;

    n.parentNode.setAttribute("s",parseInt(n.parentNode.getAttribute("s"))-1);
    n.parentNode.removeChild(n);
}

GuppyBackend.prototype.list_remove = function(){
    var n = this.current;
    while(n.parentNode && !(n.nodeName == 'c' && n.parentNode.nodeName == 'l')){
	n = n.parentNode;
    }
    if(!n.parentNode) return;
    if(n.parentNode.parentNode && n.parentNode.parentNode.nodeName == "l"){
	this.list_remove_col();
	return;
    }
    if(n.previousSibling != null){
	this.current = n.previousSibling.lastChild;
	this.caret = n.previousSibling.lastChild.firstChild.textContent.length;
    }
    else if(n.nextSibling != null){
	this.current = n.nextSibling.firstChild;
	this.caret = 0;
    }
    else return;
    n.parentNode.setAttribute("s",parseInt(n.parentNode.getAttribute("s"))-1);
    n.parentNode.removeChild(n);
}

GuppyBackend.prototype.right = function(){
    this.sel_clear();
    if(this.caret >= GuppyUtils.get_length(this.current)){
	var nn = this.doc.xpath_node("following::e[1]", this.current);
	if(nn != null){
	    this.current = nn;
	    this.caret = 0;
	}
	else{
	    this.fire_event("right_end");
	}
    }
    else{
	this.caret += 1;
    }
}

GuppyBackend.prototype.spacebar = function(){
    if(GuppyUtils.is_text(this.current)) this.insert_string(" ");
    else this.space_caret = this.caret;
}

GuppyBackend.prototype.left = function(){
    this.sel_clear();
    if(this.caret <= 0){
	var pn = this.doc.xpath_node("preceding::e[1]", this.current);
	if(pn != null){
	    this.current = pn;
	    this.caret = this.current.firstChild.nodeValue.length;
	}
	else{
	    this.fire_event("left_end");
	}
    }
    else{
	this.caret -= 1;
    }
}

GuppyBackend.prototype.delete_from_c = function(){
    var pos = 0;
    var c = this.current.parentNode;
    while(c && c.nodeName == "c"){
	pos++;
	c = c.previousSibling;
    }
    var idx = this.current.parentNode.getAttribute("delete");
    var survivor_node = this.doc.xpath_node("./c[position()="+idx+"]", this.current.parentNode.parentNode);
    var survivor_nodes = [];
    for(var n = survivor_node.firstChild; n != null; n = n.nextSibling){
	survivor_nodes.push(n);
    }
    this.current = this.current.parentNode.parentNode;
    this.delete_from_f();
    this.insert_nodes(survivor_nodes, pos > idx);
}

GuppyBackend.prototype.delete_from_e = function(){
    // return false if we deleted something, and true otherwise.
    if(this.caret > 0){
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splicen(this.caret-1,"",1);
	this.caret--;
    }
    else{
	// The order of these is important
	if(this.current.previousSibling != null && this.current.previousSibling.getAttribute("c") == "yes"){
	    // The previous node is an f node but is really just a character.  Delete it.
	    this.current = this.current.previousSibling;
	    this.delete_from_f();
	}
	else if(this.current.previousSibling != null && this.current.previousSibling.nodeName == 'f'){
	    // We're in an e node just after an f node.  Move back into the f node (delete it?)
	    this.left();
	    return false;
	}
	else if(this.current.parentNode.previousSibling != null && this.current.parentNode.previousSibling.nodeName == 'c'){
	    // We're in a c child of an f node, but not the first one.  Go to the previous c
	    if(this.current.parentNode.hasAttribute("delete")){
		this.delete_from_c();
	    }
	    else{
		this.left();
		return false;
	    }
	}
	else if(this.current.previousSibling == null && this.current.parentNode.nodeName == 'c' && (this.current.parentNode.previousSibling == null || this.current.parentNode.previousSibling.nodeName != 'c')){
	    // We're in the first c child of an f node and at the beginning--delete the f node
	    var par = this.current.parentNode;
	    while(par.parentNode.nodeName == 'l' || par.parentNode.nodeName == 'c'){
		par = par.parentNode;
	    }
	    if(par.hasAttribute("delete")){
		this.delete_from_c();
	    }
	    else{
		this.current = par.parentNode;
		this.delete_from_f();
	    }
	}
	else{
	    // We're at the beginning (hopefully!) 
	    return false;
	}
    }
    return true;
}

GuppyBackend.prototype.delete_forward_from_e = function(){
    // return false if we deleted something, and true otherwise.
    if(this.caret < this.current.firstChild.nodeValue.length){
	this.current.firstChild.nodeValue = this.current.firstChild.nodeValue.splicen(this.caret,"",1);
    }
    else{
	//We're at the end
	if(this.current.nextSibling != null){
	    // The next node is an f node.  Delete it.
	    this.current = this.current.nextSibling;
	    this.delete_from_f();
	}
	else if(this.current.parentNode.nodeName == 'c'){
	    // We're in a c child of an f node.  Do nothing
	    return false;
	}
    }
    return true;
}

GuppyBackend.prototype.backspace = function(){
    if(this.sel_status != GuppyBackend.SEL_NONE){
	this.sel_delete();
	this.sel_status = GuppyBackend.SEL_NONE;
	this.checkpoint();
    }
    else if(this.delete_from_e()){
	this.checkpoint();
    }
}

GuppyBackend.prototype.delete_key = function(){
    if(this.sel_status != GuppyBackend.SEL_NONE){
	this.sel_delete();
	this.sel_status = GuppyBackend.SEL_NONE;
	this.checkpoint();
    }
    else if(this.delete_forward_from_e()){
	this.checkpoint();
    }
}

GuppyBackend.prototype.backslash = function(){
    if(GuppyUtils.is_text(this.current)) return;
    this.insert_symbol("sym_name");
}

GuppyBackend.prototype.tab = function(){
    if(!GuppyUtils.is_symbol(this.current)){
	this.check_for_symbol();
	return;
    }
    var sym_name = this.current.firstChild.textContent;
    var candidates = [];
    for(var n in this.symbols){
	if(n.startsWith(sym_name)) candidates.push(n);
    }
    if(candidates.length == 1){
	this.current.firstChild.textContent = candidates[0];
	this.caret = candidates[0].length;
    }
    else {
	this.fire_event("completion",{"candidates":candidates});
    }
}

GuppyBackend.prototype.right_paren = function(){
    if(this.current.nodeName == 'e' && this.caret < this.current.firstChild.nodeValue.length - 1) return;
    else this.right();
}

GuppyBackend.prototype.up = function(){
    this.sel_clear();
    if(this.current.parentNode.hasAttribute("up")){
	var t = parseInt(this.current.parentNode.getAttribute("up"));
	var f = this.current.parentNode.parentNode;
	var n = f.firstChild;
	while(n != null && t > 0){
	    if(n.nodeName == 'c') t--;
	    if(t > 0) n = n.nextSibling;
	}
	this.current = n.lastChild;
	this.caret = this.current.firstChild.nodeValue.length;
    }
    else this.list_vertical_move(false);
}

GuppyBackend.prototype.down = function(){
    this.sel_clear();
    if(this.current.parentNode.hasAttribute("down")){
	var t = parseInt(this.current.parentNode.getAttribute("down"));
	var f = this.current.parentNode.parentNode;
	var n = f.firstChild;
	while(n != null && t > 0){
	    if(n.nodeName == 'c') t--;
	    if(t > 0) n = n.nextSibling;
	}
	this.current = n.lastChild;
	this.caret = this.current.firstChild.nodeValue.length;
    }
    else this.list_vertical_move(true);
}

GuppyBackend.prototype.home = function(){
    this.current = this.doc.root().firstChild;
    this.caret = 0;
}

GuppyBackend.prototype.end = function(){
    this.current = this.doc.root().lastChild;
    this.caret = this.current.firstChild.nodeValue.length;
}

GuppyBackend.prototype.checkpoint = function(){
    var base = this.doc.base;
    this.current.setAttribute("current","yes");
    this.current.setAttribute("caret",this.caret.toString());
    this.undo_now++;
    this.undo_data[this.undo_now] = base.cloneNode(true);
    this.undo_data.splice(this.undo_now+1, this.undo_data.length);
    this.fire_event("change",{"old":this.undo_data[this.undo_now-1],"new":this.undo_data[this.undo_now]});
    this.current.removeAttribute("current");
    this.current.removeAttribute("caret");
    if(this.parent && this.parent.ready) this.parent.render(true);
}

GuppyBackend.prototype.restore = function(t){
    this.doc.base = this.undo_data[t].cloneNode(true);
    this.find_current();
    this.current.removeAttribute("current");
    this.current.removeAttribute("caret");
}

GuppyBackend.prototype.find_current = function(){
    this.current = this.doc.xpath_node("//*[@current='yes']");
    this.caret = parseInt(this.current.getAttribute("caret"));
}

GuppyBackend.prototype.undo = function(){
    this.sel_clear();
    if(this.undo_now <= 0) return;
    this.undo_now--;
    this.restore(this.undo_now);
}

GuppyBackend.prototype.redo = function(){
    this.sel_clear();
    if(this.undo_now >= this.undo_data.length-1) return;
    this.undo_now++;
    this.restore(this.undo_now);
}

GuppyBackend.prototype.done = function(s){
    if(GuppyUtils.is_symbol(this.current)) this.complete_symbol();
    else this.fire_event("done");
}

GuppyBackend.prototype.complete_symbol = function(){
    var sym_name = this.current.firstChild.textContent;
    if(!(this.symbols[sym_name])) return;
    this.current = this.current.parentNode.parentNode;
    this.delete_from_f();
    this.insert_symbol(sym_name);
}

GuppyBackend.prototype.problem = function(message){
    this.fire_event("error",{"message":message});
}

GuppyBackend.prototype.is_blacklisted = function(symb_type){
    for(var i = 0; i < this.blacklist.length; i++)
	if(symb_type == this.blacklist[i]) return true;
    return false;
}

GuppyBackend.prototype.check_for_symbol = function(){
    var instance = this;
    if(GuppyUtils.is_text(this.current)) return;
    for(var s in this.symbols){
	if(instance.current.nodeName == 'e' && s.length <= (instance.caret - instance.space_caret) && !(GuppyUtils.is_blank(instance.current)) && instance.current.firstChild.nodeValue.search_at(instance.caret,s)){
	    var temp = instance.current.firstChild.nodeValue;
	    var temp_caret = instance.caret;
	    instance.current.firstChild.nodeValue = instance.current.firstChild.nodeValue.slice(0,instance.caret-s.length)+instance.current.firstChild.nodeValue.slice(instance.caret);
	    instance.caret -= s.length;
	    var success = instance.insert_symbol(s);
	    if(!success){
		instance.current.firstChild.nodeValue = temp;
		instance.caret = temp_caret;
	    }
	    break;
	}
    }
}

module.exports = GuppyBackend;

},{"../lib/katex/katex-modified.min.js":1,"./guppy_doc.js":3,"./guppy_symbols.js":4,"./guppy_utils.js":5,"mousetrap":6}],3:[function(require,module,exports){
var GuppyDoc = function(doc){
    doc = doc || "<m><e></e></m>";
    this.set_content(doc);
}

GuppyDoc.prototype.is_small = function(nn){
    var n = nn.parentNode;
    while(n != null && n.nodeName != 'm'){
	if(n.getAttribute("small") == "yes") return true;
	n = n.parentNode
	while(n != null && n.nodeName != 'c') n = n.parentNode;
    }
    return false;
}

GuppyDoc.prototype.ensure_text_nodes = function(){
    var l = this.base.getElementsByTagName("e");
    for (var i = 0; i < l.length; i++){
        if (!(l[i].firstChild))
            l[i].appendChild(this.base.createTextNode(""));
    }
}

GuppyDoc.prototype.is_blank = function(){
    if (this.base.getElementsByTagName("f").length > 0)
        return false;
    var l = this.base.getElementsByTagName("e");
    if (l.length == 1 && (!(l[0].firstChild) || l[0].firstChild.textContent == ""))
        return true;
    return false;
}

GuppyDoc.prototype.root = function(){
    return this.base.documentElement;
}

GuppyDoc.prototype.get_content = function(t,r) {
    //@ preprocess
    if (t != "xml")
        return this.manual_render(t, this.root(), r);
    else
        return (new XMLSerializer()).serializeToString(this.base);
}

GuppyDoc.prototype.xpath_node = function(xpath, node){
    node = node || this.root()
    return this.base.evaluate(xpath, node, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
}

GuppyDoc.prototype.xpath_list = function(xpath, node){
    node = node || this.root()
    return this.base.evaluate(xpath, node, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);
}

GuppyDoc.prototype.get_symbols = function(groups){
    var types = {};
    var ans = [];
    var iterator = groups ? this.xpath_list("//f") : this.xpath_list("//f[@group='"+groups[i]+"']");
    for(var nn = iterator.iterateNext(); nn != null; nn = iterator.iterateNext())
	types[nn.getAttribute("type")] = true;
    for(var t in types)
	ans.push(t);
    return ans;
}

GuppyDoc.prototype.set_content = function(xml_data) {
    this.base = (new window.DOMParser()).parseFromString(xml_data, "text/xml");
    this.ensure_text_nodes();
}

GuppyDoc.bracket_xpath = "(count(./*) != 1 and not \
		          ( \
                            count(./e)=2 and \
			    count(./f)=1 and \
			    count(./e[string-length(text())=0])=2 and \
			    ( \
			      (\
                                count(./f/c)=1 and\
			        count(./f/c[@is_bracket='yes'])=1\
			      )\
			      or\
			      (\
			        f/@c='yes' and \
				count(./e[@current='yes'])=0 and \
				count(./e[@temp='yes'])=0 \
			      )\
			    )\
			  )\
			)  \
			or\
		        (\
			  count(./*) = 1 and \
			  string-length(./e/text()) != 1 and \
			  number(./e/text()) != ./e/text() \
			) \
			or \
		        ( \
			  count(./*) = 1 and \
			  ./e/@current = 'yes' \
			) \
			or \
		        ( \
			  count(./*) = 1 and \
			  ./e/@temp = 'yes' \
			)"

GuppyDoc.prototype.manual_render = function(t, n, r) {
    var ans = "";
    if (n.nodeName == "e") {
        if (t == "latex" && r) {
            ans = n.getAttribute("render");
        } else if(t == "text"){
            ans = GuppyUtils.get_value(n);
            if (n.previousSibling && n.nextSibling && ans == "")
                ans = " * ";
            else {
                ans = ans.replace(/(.)([^a-zA-Z0-9.])(.)/g, "$1 $2 $3");
                ans = ans.replace(/([a-zA-Z])(?=\.)/g, "$1 * ");
                ans = ans.replace(/(\.)(?=[a-zA-Z])/g, "$1 * ");
                ans = ans.replace(/([a-zA-Z])(?=[a-zA-Z0-9])/g, "$1 * ");
                ans = ans.replace(/([a-zA-Z0-9])(?=[a-zA-Z])/g, "$1 * ");
                if (n.previousSibling && n.previousSibling.getAttribute("group") != "operations")
                    ans = ans.replace(/^([a-zA-Z0-9])/g, " * $1");
                if (n.nextSibling && n.nextSibling.getAttribute("group") != "operations")
                    ans = ans.replace(/([a-zA-Z0-9])$/g, "$1 * ");
                ans = " " + ans + " ";
            }
        } else {
            ans = GuppyUtils.get_value(n);
        }
    } else if(n.nodeName == "f") {
        var real_type = (t == "latex" && this.is_small(n)) ? "small_latex" : t;
        var nn = this.xpath_node("./b[@p='" + real_type + "']", n) || this.xpath_node("./b[@p='" + t + "']", n);
        if (nn)
            ans = this.manual_render(t, nn, r);
    } else if(n.nodeName == "b") {
        var cs = [];
        var i = 1;
        var par = n.parentNode;
        for (var nn = par.firstChild; nn != null; nn = nn.nextSibling)
            if (nn.nodeName == "c" || nn.nodeName == "l")
                cs[i++] = this.manual_render(t, nn, r);
        for (var nn = n.firstChild; nn != null; nn = nn.nextSibling) {
            if (nn.nodeType == 3)
                ans += nn.textContent;
            else if (nn.nodeType == 1) {
                if(nn.hasAttribute("d")){
                    var dim = parseInt(nn.getAttribute("d"));
                    var joiner = function(d, l) {
                        if (d > 1)
                            for (var k = 0; k < l.length; k++)
                                l[k] = joiner(d-1, l[k]);
                        return l.join(nn.getAttribute('sep' + (d - 1)));
                    };
                    ans += joiner(dim,cs[parseInt(nn.getAttribute("ref"))]);
                } else
                    ans += cs[parseInt(nn.getAttribute("ref"))];
            }
        }
    } else if(n.nodeName == "l") {
        ans = [];
        var i = 0;
        for (var nn = n.firstChild; nn != null; nn = nn.nextSibling){
            ans[i++] = this.manual_render(t, nn, r);
        }
    } else if(n.nodeName == "c" || n.nodeName == "m") {
        for (var nn = n.firstChild; nn != null; nn = nn.nextSibling)
            ans += this.manual_render(t, nn, r);
        if (t == "latex" &&
                n.getAttribute("bracket") == "yes" &&
                this.base.evaluate(GuppyDoc.bracket_xpath, n, null,
                XPathResult.BOOLEAN_TYPE, null).booleanValue) { 
            ans = "\\left(" + ans + "\\right)";
        }
    }
    return ans;
}

GuppyDoc.prototype.path_to = function(n){
    var name = n.nodeName;
    if(name == "m") return "guppy_loc_m";
    var ns = 0;
    for(var nn = n; nn != null; nn = nn.previousSibling) if(nn.nodeType == 1 && nn.nodeName == name) ns++;
    return this.path_to(n.parentNode)+"_"+name+""+ns;
}

module.exports = GuppyDoc;

},{}],4:[function(require,module,exports){
GuppySymbols = {"symbols":{}};

GuppySymbols.symb_raw = function(symb_name,latex_symb,text_symb,group){
    return {"output":{"latex":latex_symb,
		      "text":text_symb},
	    "group":group,
	    "char":true,
	    "type":symb_name};
}

GuppySymbols.symb_func = function(func_name,group){
    return {"output":{"latex":"\\"+func_name+"\\left({$1}\\right)",
		      "text":" " + func_name+"({$1})"},
	    "type":func_name,
	    "group":group,
	    "attrs":[
		{"delete":"1"}
	    ]
	   };
}

GuppySymbols.add_symbols = function(name,sym){
    var symbols = {};
    if(name == "_raw")
	for(var i = 0; i < sym.length; i++)
	    for(var t in sym[i]['symbols'])
		symbols[t] = GuppySymbols.symb_raw(t, sym[i]['symbols'][t]["latex"], sym[i]['symbols'][t]["text"], sym[i]['group']);
    
    else if(name == "_literal")
	for(var j = 0; j < sym.length; j++)
	    for(var i = 0; i < sym[j]['symbols'].length; i++)
		symbols[sym[j]['symbols'][i]] = GuppySymbols.symb_raw(sym[j]['symbols'][i], "\\"+sym[j]['symbols'][i], " $"+sym[j]['symbols'][i]+" ", sym[j]['group']);
    
    else if(name == "_func")
	for(var j = 0; j < sym.length; j++)
	    for(var i = 0; i < sym[j]['symbols'].length; i++)
		symbols[sym[j]['symbols'][i]] = GuppySymbols.symb_func(sym[j]['symbols'][i], sym[j]['group']);
    
    else symbols[name] = sym;
    return symbols
}

module.exports = GuppySymbols;

},{}],5:[function(require,module,exports){
var GuppyUtils = {};

GuppyUtils.CARET = "\\cursor[-0.2ex]{0.7em}"
GuppyUtils.TEMP_SMALL_CARET = "\\cursor[0em]{0.6em}"
GuppyUtils.TEMP_CARET = "\\cursor[-0.2ex]{0.7em}"
GuppyUtils.SMALL_CARET = "\\cursor[-0.05em]{0.5em}"
GuppyUtils.SEL_CARET = "\\cursor[-0.2ex]{0.7em}"
GuppyUtils.SMALL_SEL_CARET = "\\cursor[-0.05em]{0.5em}"
GuppyUtils.SEL_COLOR = "red"

GuppyUtils.is_blank = function(n){
    return n.firstChild == null || n.firstChild.nodeValue == '';
}

GuppyUtils.get_value = function(n) {
    return n.firstChild ? n.firstChild.nodeValue : "";
};

GuppyUtils.get_length = function(n){
    if (GuppyUtils.is_blank(n) || n.nodeName == 'f')
        return 0;
    return n.firstChild.nodeValue.length;
}

GuppyUtils.path_to = function(n){
    var name = n.nodeName;
    if(name == "m") return "guppy_loc_m";
    var ns = 0;
    for(var nn = n; nn != null; nn = nn.previousSibling) if(nn.nodeType == 1 && nn.nodeName == name) ns++;
    return GuppyUtils.path_to(n.parentNode)+"_"+name+""+ns;
}

GuppyUtils.is_text = function(nn){
    return nn.parentNode.getAttribute("mode") && (nn.parentNode.getAttribute("mode") == "text" || nn.parentNode.getAttribute("mode") == "symbol");
}

GuppyUtils.is_symbol = function(nn){
    return nn.parentNode.getAttribute("mode") && nn.parentNode.getAttribute("mode") == "symbol";
}

GuppyUtils.is_small = function(nn){
    var n = nn.parentNode;
    while(n != null && n.nodeName != 'm'){
	if(n.getAttribute("small") == "yes"){
	    return true;
	}
	n = n.parentNode
	while(n != null && n.nodeName != 'c')
	    n = n.parentNode;
    }
    return false;
}

module.exports = GuppyUtils;

},{}],6:[function(require,module,exports){
/*global define:false */
/**
 * Copyright 2012-2017 Craig Campbell
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Mousetrap is a simple keyboard shortcut library for Javascript with
 * no external dependencies
 *
 * @version 1.6.1
 * @url craig.is/killing/mice
 */
(function(window, document, undefined) {

    // Check if mousetrap is used inside browser, if not, return
    if (!window) {
        return;
    }

    /**
     * mapping of special keycodes to their corresponding keys
     *
     * everything in this dictionary cannot use keypress events
     * so it has to be here to map to the correct keycodes for
     * keyup/keydown events
     *
     * @type {Object}
     */
    var _MAP = {
        8: 'backspace',
        9: 'tab',
        13: 'enter',
        16: 'shift',
        17: 'ctrl',
        18: 'alt',
        20: 'capslock',
        27: 'esc',
        32: 'space',
        33: 'pageup',
        34: 'pagedown',
        35: 'end',
        36: 'home',
        37: 'left',
        38: 'up',
        39: 'right',
        40: 'down',
        45: 'ins',
        46: 'del',
        91: 'meta',
        93: 'meta',
        224: 'meta'
    };

    /**
     * mapping for special characters so they can support
     *
     * this dictionary is only used incase you want to bind a
     * keyup or keydown event to one of these keys
     *
     * @type {Object}
     */
    var _KEYCODE_MAP = {
        106: '*',
        107: '+',
        109: '-',
        110: '.',
        111 : '/',
        186: ';',
        187: '=',
        188: ',',
        189: '-',
        190: '.',
        191: '/',
        192: '`',
        219: '[',
        220: '\\',
        221: ']',
        222: '\''
    };

    /**
     * this is a mapping of keys that require shift on a US keypad
     * back to the non shift equivelents
     *
     * this is so you can use keyup events with these keys
     *
     * note that this will only work reliably on US keyboards
     *
     * @type {Object}
     */
    var _SHIFT_MAP = {
        '~': '`',
        '!': '1',
        '@': '2',
        '#': '3',
        '$': '4',
        '%': '5',
        '^': '6',
        '&': '7',
        '*': '8',
        '(': '9',
        ')': '0',
        '_': '-',
        '+': '=',
        ':': ';',
        '\"': '\'',
        '<': ',',
        '>': '.',
        '?': '/',
        '|': '\\'
    };

    /**
     * this is a list of special strings you can use to map
     * to modifier keys when you specify your keyboard shortcuts
     *
     * @type {Object}
     */
    var _SPECIAL_ALIASES = {
        'option': 'alt',
        'command': 'meta',
        'return': 'enter',
        'escape': 'esc',
        'plus': '+',
        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'
    };

    /**
     * variable to store the flipped version of _MAP from above
     * needed to check if we should use keypress or not when no action
     * is specified
     *
     * @type {Object|undefined}
     */
    var _REVERSE_MAP;

    /**
     * loop through the f keys, f1 to f19 and add them to the map
     * programatically
     */
    for (var i = 1; i < 20; ++i) {
        _MAP[111 + i] = 'f' + i;
    }

    /**
     * loop through to map numbers on the numeric keypad
     */
    for (i = 0; i <= 9; ++i) {

        // This needs to use a string cause otherwise since 0 is falsey
        // mousetrap will never fire for numpad 0 pressed as part of a keydown
        // event.
        //
        // @see https://github.com/ccampbell/mousetrap/pull/258
        _MAP[i + 96] = i.toString();
    }

    /**
     * cross browser add event method
     *
     * @param {Element|HTMLDocument} object
     * @param {string} type
     * @param {Function} callback
     * @returns void
     */
    function _addEvent(object, type, callback) {
        if (object.addEventListener) {
            object.addEventListener(type, callback, false);
            return;
        }

        object.attachEvent('on' + type, callback);
    }

    /**
     * takes the event and returns the key character
     *
     * @param {Event} e
     * @return {string}
     */
    function _characterFromEvent(e) {

        // for keypress events we should return the character as is
        if (e.type == 'keypress') {
            var character = String.fromCharCode(e.which);

            // if the shift key is not pressed then it is safe to assume
            // that we want the character to be lowercase.  this means if
            // you accidentally have caps lock on then your key bindings
            // will continue to work
            //
            // the only side effect that might not be desired is if you
            // bind something like 'A' cause you want to trigger an
            // event when capital A is pressed caps lock will no longer
            // trigger the event.  shift+a will though.
            if (!e.shiftKey) {
                character = character.toLowerCase();
            }

            return character;
        }

        // for non keypress events the special maps are needed
        if (_MAP[e.which]) {
            return _MAP[e.which];
        }

        if (_KEYCODE_MAP[e.which]) {
            return _KEYCODE_MAP[e.which];
        }

        // if it is not in the special map

        // with keydown and keyup events the character seems to always
        // come in as an uppercase character whether you are pressing shift
        // or not.  we should make sure it is always lowercase for comparisons
        return String.fromCharCode(e.which).toLowerCase();
    }

    /**
     * checks if two arrays are equal
     *
     * @param {Array} modifiers1
     * @param {Array} modifiers2
     * @returns {boolean}
     */
    function _modifiersMatch(modifiers1, modifiers2) {
        return modifiers1.sort().join(',') === modifiers2.sort().join(',');
    }

    /**
     * takes a key event and figures out what the modifiers are
     *
     * @param {Event} e
     * @returns {Array}
     */
    function _eventModifiers(e) {
        var modifiers = [];

        if (e.shiftKey) {
            modifiers.push('shift');
        }

        if (e.altKey) {
            modifiers.push('alt');
        }

        if (e.ctrlKey) {
            modifiers.push('ctrl');
        }

        if (e.metaKey) {
            modifiers.push('meta');
        }

        return modifiers;
    }

    /**
     * prevents default for this event
     *
     * @param {Event} e
     * @returns void
     */
    function _preventDefault(e) {
        if (e.preventDefault) {
            e.preventDefault();
            return;
        }

        e.returnValue = false;
    }

    /**
     * stops propogation for this event
     *
     * @param {Event} e
     * @returns void
     */
    function _stopPropagation(e) {
        if (e.stopPropagation) {
            e.stopPropagation();
            return;
        }

        e.cancelBubble = true;
    }

    /**
     * determines if the keycode specified is a modifier key or not
     *
     * @param {string} key
     * @returns {boolean}
     */
    function _isModifier(key) {
        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';
    }

    /**
     * reverses the map lookup so that we can look for specific keys
     * to see what can and can't use keypress
     *
     * @return {Object}
     */
    function _getReverseMap() {
        if (!_REVERSE_MAP) {
            _REVERSE_MAP = {};
            for (var key in _MAP) {

                // pull out the numeric keypad from here cause keypress should
                // be able to detect the keys from the character
                if (key > 95 && key < 112) {
                    continue;
                }

                if (_MAP.hasOwnProperty(key)) {
                    _REVERSE_MAP[_MAP[key]] = key;
                }
            }
        }
        return _REVERSE_MAP;
    }

    /**
     * picks the best action based on the key combination
     *
     * @param {string} key - character for key
     * @param {Array} modifiers
     * @param {string=} action passed in
     */
    function _pickBestAction(key, modifiers, action) {

        // if no action was picked in we should try to pick the one
        // that we think would work best for this key
        if (!action) {
            action = _getReverseMap()[key] ? 'keydown' : 'keypress';
        }

        // modifier keys don't work as expected with keypress,
        // switch to keydown
        if (action == 'keypress' && modifiers.length) {
            action = 'keydown';
        }

        return action;
    }

    /**
     * Converts from a string key combination to an array
     *
     * @param  {string} combination like "command+shift+l"
     * @return {Array}
     */
    function _keysFromString(combination) {
        if (combination === '+') {
            return ['+'];
        }

        combination = combination.replace(/\+{2}/g, '+plus');
        return combination.split('+');
    }

    /**
     * Gets info for a specific key combination
     *
     * @param  {string} combination key combination ("command+s" or "a" or "*")
     * @param  {string=} action
     * @returns {Object}
     */
    function _getKeyInfo(combination, action) {
        var keys;
        var key;
        var i;
        var modifiers = [];

        // take the keys from this pattern and figure out what the actual
        // pattern is all about
        keys = _keysFromString(combination);

        for (i = 0; i < keys.length; ++i) {
            key = keys[i];

            // normalize key names
            if (_SPECIAL_ALIASES[key]) {
                key = _SPECIAL_ALIASES[key];
            }

            // if this is not a keypress event then we should
            // be smart about using shift keys
            // this will only work for US keyboards however
            if (action && action != 'keypress' && _SHIFT_MAP[key]) {
                key = _SHIFT_MAP[key];
                modifiers.push('shift');
            }

            // if this key is a modifier then add it to the list of modifiers
            if (_isModifier(key)) {
                modifiers.push(key);
            }
        }

        // depending on what the key combination is
        // we will try to pick the best event for it
        action = _pickBestAction(key, modifiers, action);

        return {
            key: key,
            modifiers: modifiers,
            action: action
        };
    }

    function _belongsTo(element, ancestor) {
        if (element === null || element === document) {
            return false;
        }

        if (element === ancestor) {
            return true;
        }

        return _belongsTo(element.parentNode, ancestor);
    }

    function Mousetrap(targetElement) {
        var self = this;

        targetElement = targetElement || document;

        if (!(self instanceof Mousetrap)) {
            return new Mousetrap(targetElement);
        }

        /**
         * element to attach key events to
         *
         * @type {Element}
         */
        self.target = targetElement;

        /**
         * a list of all the callbacks setup via Mousetrap.bind()
         *
         * @type {Object}
         */
        self._callbacks = {};

        /**
         * direct map of string combinations to callbacks used for trigger()
         *
         * @type {Object}
         */
        self._directMap = {};

        /**
         * keeps track of what level each sequence is at since multiple
         * sequences can start out with the same sequence
         *
         * @type {Object}
         */
        var _sequenceLevels = {};

        /**
         * variable to store the setTimeout call
         *
         * @type {null|number}
         */
        var _resetTimer;

        /**
         * temporary state where we will ignore the next keyup
         *
         * @type {boolean|string}
         */
        var _ignoreNextKeyup = false;

        /**
         * temporary state where we will ignore the next keypress
         *
         * @type {boolean}
         */
        var _ignoreNextKeypress = false;

        /**
         * are we currently inside of a sequence?
         * type of action ("keyup" or "keydown" or "keypress") or false
         *
         * @type {boolean|string}
         */
        var _nextExpectedAction = false;

        /**
         * resets all sequence counters except for the ones passed in
         *
         * @param {Object} doNotReset
         * @returns void
         */
        function _resetSequences(doNotReset) {
            doNotReset = doNotReset || {};

            var activeSequences = false,
                key;

            for (key in _sequenceLevels) {
                if (doNotReset[key]) {
                    activeSequences = true;
                    continue;
                }
                _sequenceLevels[key] = 0;
            }

            if (!activeSequences) {
                _nextExpectedAction = false;
            }
        }

        /**
         * finds all callbacks that match based on the keycode, modifiers,
         * and action
         *
         * @param {string} character
         * @param {Array} modifiers
         * @param {Event|Object} e
         * @param {string=} sequenceName - name of the sequence we are looking for
         * @param {string=} combination
         * @param {number=} level
         * @returns {Array}
         */
        function _getMatches(character, modifiers, e, sequenceName, combination, level) {
            var i;
            var callback;
            var matches = [];
            var action = e.type;

            // if there are no events related to this keycode
            if (!self._callbacks[character]) {
                return [];
            }

            // if a modifier key is coming up on its own we should allow it
            if (action == 'keyup' && _isModifier(character)) {
                modifiers = [character];
            }

            // loop through all callbacks for the key that was pressed
            // and see if any of them match
            for (i = 0; i < self._callbacks[character].length; ++i) {
                callback = self._callbacks[character][i];

                // if a sequence name is not specified, but this is a sequence at
                // the wrong level then move onto the next match
                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {
                    continue;
                }

                // if the action we are looking for doesn't match the action we got
                // then we should keep going
                if (action != callback.action) {
                    continue;
                }

                // if this is a keypress event and the meta key and control key
                // are not pressed that means that we need to only look at the
                // character, otherwise check the modifiers as well
                //
                // chrome will not fire a keypress if meta or control is down
                // safari will fire a keypress if meta or meta+shift is down
                // firefox will fire a keypress if meta or control is down
                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {

                    // when you bind a combination or sequence a second time it
                    // should overwrite the first one.  if a sequenceName or
                    // combination is specified in this call it does just that
                    //
                    // @todo make deleting its own method?
                    var deleteCombo = !sequenceName && callback.combo == combination;
                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;
                    if (deleteCombo || deleteSequence) {
                        self._callbacks[character].splice(i, 1);
                    }

                    matches.push(callback);
                }
            }

            return matches;
        }

        /**
         * actually calls the callback function
         *
         * if your callback function returns false this will use the jquery
         * convention - prevent default and stop propogation on the event
         *
         * @param {Function} callback
         * @param {Event} e
         * @returns void
         */
        function _fireCallback(callback, e, combo, sequence) {

            // if this event should not happen stop here
            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {
                return;
            }

            if (callback(e, combo) === false) {
                _preventDefault(e);
                _stopPropagation(e);
            }
        }

        /**
         * handles a character key event
         *
         * @param {string} character
         * @param {Array} modifiers
         * @param {Event} e
         * @returns void
         */
        self._handleKey = function(character, modifiers, e) {
            var callbacks = _getMatches(character, modifiers, e);
            var i;
            var doNotReset = {};
            var maxLevel = 0;
            var processedSequenceCallback = false;

            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence
            for (i = 0; i < callbacks.length; ++i) {
                if (callbacks[i].seq) {
                    maxLevel = Math.max(maxLevel, callbacks[i].level);
                }
            }

            // loop through matching callbacks for this key event
            for (i = 0; i < callbacks.length; ++i) {

                // fire for all sequence callbacks
                // this is because if for example you have multiple sequences
                // bound such as "g i" and "g t" they both need to fire the
                // callback for matching g cause otherwise you can only ever
                // match the first one
                if (callbacks[i].seq) {

                    // only fire callbacks for the maxLevel to prevent
                    // subsequences from also firing
                    //
                    // for example 'a option b' should not cause 'option b' to fire
                    // even though 'option b' is part of the other sequence
                    //
                    // any sequences that do not match here will be discarded
                    // below by the _resetSequences call
                    if (callbacks[i].level != maxLevel) {
                        continue;
                    }

                    processedSequenceCallback = true;

                    // keep a list of which sequences were matches for later
                    doNotReset[callbacks[i].seq] = 1;
                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);
                    continue;
                }

                // if there were no sequence matches but we are still here
                // that means this is a regular match so we should fire that
                if (!processedSequenceCallback) {
                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);
                }
            }

            // if the key you pressed matches the type of sequence without
            // being a modifier (ie "keyup" or "keypress") then we should
            // reset all sequences that were not matched by this event
            //
            // this is so, for example, if you have the sequence "h a t" and you
            // type "h e a r t" it does not match.  in this case the "e" will
            // cause the sequence to reset
            //
            // modifier keys are ignored because you can have a sequence
            // that contains modifiers such as "enter ctrl+space" and in most
            // cases the modifier key will be pressed before the next key
            //
            // also if you have a sequence such as "ctrl+b a" then pressing the
            // "b" key will trigger a "keypress" and a "keydown"
            //
            // the "keydown" is expected when there is a modifier, but the
            // "keypress" ends up matching the _nextExpectedAction since it occurs
            // after and that causes the sequence to reset
            //
            // we ignore keypresses in a sequence that directly follow a keydown
            // for the same character
            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;
            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {
                _resetSequences(doNotReset);
            }

            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';
        };

        /**
         * handles a keydown event
         *
         * @param {Event} e
         * @returns void
         */
        function _handleKeyEvent(e) {

            // normalize e.which for key events
            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion
            if (typeof e.which !== 'number') {
                e.which = e.keyCode;
            }

            var character = _characterFromEvent(e);

            // no character found then stop
            if (!character) {
                return;
            }

            // need to use === for the character check because the character can be 0
            if (e.type == 'keyup' && _ignoreNextKeyup === character) {
                _ignoreNextKeyup = false;
                return;
            }

            self.handleKey(character, _eventModifiers(e), e);
        }

        /**
         * called to set a 1 second timeout on the specified sequence
         *
         * this is so after each key press in the sequence you have 1 second
         * to press the next key before you have to start over
         *
         * @returns void
         */
        function _resetSequenceTimer() {
            clearTimeout(_resetTimer);
            _resetTimer = setTimeout(_resetSequences, 1000);
        }

        /**
         * binds a key sequence to an event
         *
         * @param {string} combo - combo specified in bind call
         * @param {Array} keys
         * @param {Function} callback
         * @param {string=} action
         * @returns void
         */
        function _bindSequence(combo, keys, callback, action) {

            // start off by adding a sequence level record for this combination
            // and setting the level to 0
            _sequenceLevels[combo] = 0;

            /**
             * callback to increase the sequence level for this sequence and reset
             * all other sequences that were active
             *
             * @param {string} nextAction
             * @returns {Function}
             */
            function _increaseSequence(nextAction) {
                return function() {
                    _nextExpectedAction = nextAction;
                    ++_sequenceLevels[combo];
                    _resetSequenceTimer();
                };
            }

            /**
             * wraps the specified callback inside of another function in order
             * to reset all sequence counters as soon as this sequence is done
             *
             * @param {Event} e
             * @returns void
             */
            function _callbackAndReset(e) {
                _fireCallback(callback, e, combo);

                // we should ignore the next key up if the action is key down
                // or keypress.  this is so if you finish a sequence and
                // release the key the final key will not trigger a keyup
                if (action !== 'keyup') {
                    _ignoreNextKeyup = _characterFromEvent(e);
                }

                // weird race condition if a sequence ends with the key
                // another sequence begins with
                setTimeout(_resetSequences, 10);
            }

            // loop through keys one at a time and bind the appropriate callback
            // function.  for any key leading up to the final one it should
            // increase the sequence. after the final, it should reset all sequences
            //
            // if an action is specified in the original bind call then that will
            // be used throughout.  otherwise we will pass the action that the
            // next key in the sequence should match.  this allows a sequence
            // to mix and match keypress and keydown events depending on which
            // ones are better suited to the key provided
            for (var i = 0; i < keys.length; ++i) {
                var isFinal = i + 1 === keys.length;
                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);
                _bindSingle(keys[i], wrappedCallback, action, combo, i);
            }
        }

        /**
         * binds a single keyboard combination
         *
         * @param {string} combination
         * @param {Function} callback
         * @param {string=} action
         * @param {string=} sequenceName - name of sequence if part of sequence
         * @param {number=} level - what part of the sequence the command is
         * @returns void
         */
        function _bindSingle(combination, callback, action, sequenceName, level) {

            // store a direct mapped reference for use with Mousetrap.trigger
            self._directMap[combination + ':' + action] = callback;

            // make sure multiple spaces in a row become a single space
            combination = combination.replace(/\s+/g, ' ');

            var sequence = combination.split(' ');
            var info;

            // if this pattern is a sequence of keys then run through this method
            // to reprocess each pattern one key at a time
            if (sequence.length > 1) {
                _bindSequence(combination, sequence, callback, action);
                return;
            }

            info = _getKeyInfo(combination, action);

            // make sure to initialize array if this is the first time
            // a callback is added for this key
            self._callbacks[info.key] = self._callbacks[info.key] || [];

            // remove an existing match if there is one
            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);

            // add this call back to the array
            // if it is a sequence put it at the beginning
            // if not put it at the end
            //
            // this is important because the way these are processed expects
            // the sequence ones to come first
            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({
                callback: callback,
                modifiers: info.modifiers,
                action: info.action,
                seq: sequenceName,
                level: level,
                combo: combination
            });
        }

        /**
         * binds multiple combinations to the same callback
         *
         * @param {Array} combinations
         * @param {Function} callback
         * @param {string|undefined} action
         * @returns void
         */
        self._bindMultiple = function(combinations, callback, action) {
            for (var i = 0; i < combinations.length; ++i) {
                _bindSingle(combinations[i], callback, action);
            }
        };

        // start!
        _addEvent(targetElement, 'keypress', _handleKeyEvent);
        _addEvent(targetElement, 'keydown', _handleKeyEvent);
        _addEvent(targetElement, 'keyup', _handleKeyEvent);
    }

    /**
     * binds an event to mousetrap
     *
     * can be a single key, a combination of keys separated with +,
     * an array of keys, or a sequence of keys separated by spaces
     *
     * be sure to list the modifier keys first to make sure that the
     * correct key ends up getting bound (the last key in the pattern)
     *
     * @param {string|Array} keys
     * @param {Function} callback
     * @param {string=} action - 'keypress', 'keydown', or 'keyup'
     * @returns void
     */
    Mousetrap.prototype.bind = function(keys, callback, action) {
        var self = this;
        keys = keys instanceof Array ? keys : [keys];
        self._bindMultiple.call(self, keys, callback, action);
        return self;
    };

    /**
     * unbinds an event to mousetrap
     *
     * the unbinding sets the callback function of the specified key combo
     * to an empty function and deletes the corresponding key in the
     * _directMap dict.
     *
     * TODO: actually remove this from the _callbacks dictionary instead
     * of binding an empty function
     *
     * the keycombo+action has to be exactly the same as
     * it was defined in the bind method
     *
     * @param {string|Array} keys
     * @param {string} action
     * @returns void
     */
    Mousetrap.prototype.unbind = function(keys, action) {
        var self = this;
        return self.bind.call(self, keys, function() {}, action);
    };

    /**
     * triggers an event that has already been bound
     *
     * @param {string} keys
     * @param {string=} action
     * @returns void
     */
    Mousetrap.prototype.trigger = function(keys, action) {
        var self = this;
        if (self._directMap[keys + ':' + action]) {
            self._directMap[keys + ':' + action]({}, keys);
        }
        return self;
    };

    /**
     * resets the library back to its initial state.  this is useful
     * if you want to clear out the current keyboard shortcuts and bind
     * new ones - for example if you switch to another page
     *
     * @returns void
     */
    Mousetrap.prototype.reset = function() {
        var self = this;
        self._callbacks = {};
        self._directMap = {};
        return self;
    };

    /**
     * should we stop this event before firing off callbacks
     *
     * @param {Event} e
     * @param {Element} element
     * @return {boolean}
     */
    Mousetrap.prototype.stopCallback = function(e, element) {
        var self = this;

        // if the element has the class "mousetrap" then no need to stop
        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {
            return false;
        }

        if (_belongsTo(element, self.target)) {
            return false;
        }

        // stop for input, select, and textarea
        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;
    };

    /**
     * exposes _handleKey publicly so it can be overwritten by extensions
     */
    Mousetrap.prototype.handleKey = function() {
        var self = this;
        return self._handleKey.apply(self, arguments);
    };

    /**
     * allow custom key mappings
     */
    Mousetrap.addKeycodes = function(object) {
        for (var key in object) {
            if (object.hasOwnProperty(key)) {
                _MAP[key] = object[key];
            }
        }
        _REVERSE_MAP = null;
    };

    /**
     * Init the global mousetrap functions
     *
     * This method is needed to allow the global mousetrap functions to work
     * now that mousetrap is a constructor function.
     */
    Mousetrap.init = function() {
        var documentMousetrap = Mousetrap(document);
        for (var method in documentMousetrap) {
            if (method.charAt(0) !== '_') {
                Mousetrap[method] = (function(method) {
                    return function() {
                        return documentMousetrap[method].apply(documentMousetrap, arguments);
                    };
                } (method));
            }
        }
    };

    Mousetrap.init();

    // expose mousetrap to the global object
    window.Mousetrap = Mousetrap;

    // expose as a common js module
    if (typeof module !== 'undefined' && module.exports) {
        module.exports = Mousetrap;
    }

    // expose mousetrap as an AMD module
    if (typeof define === 'function' && define.amd) {
        define(function() {
            return Mousetrap;
        });
    }
}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);

},{}]},{},[2])(2)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJsaWIva2F0ZXgva2F0ZXgtbW9kaWZpZWQubWluLmpzIiwic3JjL2d1cHB5X2JhY2tlbmQuanMiLCJzcmMvZ3VwcHlfZG9jLmpzIiwic3JjL2d1cHB5X3N5bWJvbHMuanMiLCJzcmMvZ3VwcHlfdXRpbHMuanMiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvbW91c2V0cmFwL21vdXNldHJhcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNockNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDM0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDM0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3REQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIoZnVuY3Rpb24oZSl7aWYodHlwZW9mIGV4cG9ydHM9PT1cIm9iamVjdFwiJiZ0eXBlb2YgbW9kdWxlIT09XCJ1bmRlZmluZWRcIil7bW9kdWxlLmV4cG9ydHM9ZSgpfWVsc2UgaWYodHlwZW9mIGRlZmluZT09PVwiZnVuY3Rpb25cIiYmZGVmaW5lLmFtZCl7ZGVmaW5lKFtdLGUpfWVsc2V7dmFyIHQ7aWYodHlwZW9mIHdpbmRvdyE9PVwidW5kZWZpbmVkXCIpe3Q9d2luZG93fWVsc2UgaWYodHlwZW9mIGdsb2JhbCE9PVwidW5kZWZpbmVkXCIpe3Q9Z2xvYmFsfWVsc2UgaWYodHlwZW9mIHNlbGYhPT1cInVuZGVmaW5lZFwiKXt0PXNlbGZ9ZWxzZXt0PXRoaXN9dC5rYXRleD1lKCl9fSkoZnVuY3Rpb24oKXt2YXIgZSx0LHI7cmV0dXJuIGZ1bmN0aW9uIGUodCxyLGEpe2Z1bmN0aW9uIGkobyxzKXtpZighcltvXSl7aWYoIXRbb10pe3ZhciBsPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXMmJmwpcmV0dXJuIGwobywhMCk7aWYobilyZXR1cm4gbihvLCEwKTt2YXIgdT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IHUuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIix1fXZhciBoPXJbb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChoLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIHI9dFtvXVsxXVtlXTtyZXR1cm4gaShyP3I6ZSl9LGgsaC5leHBvcnRzLGUsdCxyLGEpfXJldHVybiByW29dLmV4cG9ydHN9dmFyIG49dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPGEubGVuZ3RoO28rKylpKGFbb10pO3JldHVybiBpfSh7MTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL3NyYy9QYXJzZUVycm9yXCIpO3ZhciBpPWUoXCIuL3NyYy9TZXR0aW5nc1wiKTt2YXIgbj1lKFwiLi9zcmMvYnVpbGRUcmVlXCIpO3ZhciBvPWUoXCIuL3NyYy9wYXJzZVRyZWVcIik7dmFyIHM9ZShcIi4vc3JjL3V0aWxzXCIpO3ZhciBsPWZ1bmN0aW9uIGUodCxyLGEpe3MuY2xlYXJOb2RlKHIpO3ZhciBsPW5ldyBpKGEpO3ZhciB1PW8odCxsKTt2YXIgaD1uKHUsdCxsKS50b05vZGUoKTtyLmFwcGVuZENoaWxkKGgpfTtpZih0eXBlb2YgZG9jdW1lbnQhPT1cInVuZGVmaW5lZFwiKXtpZihkb2N1bWVudC5jb21wYXRNb2RlIT09XCJDU1MxQ29tcGF0XCIpe3R5cGVvZiBjb25zb2xlIT09XCJ1bmRlZmluZWRcIiYmY29uc29sZS53YXJuKFwiV2FybmluZzogS2FUZVggZG9lc24ndCB3b3JrIGluIHF1aXJrcyBtb2RlLiBNYWtlIHN1cmUgeW91ciBcIitcIndlYnNpdGUgaGFzIGEgc3VpdGFibGUgZG9jdHlwZS5cIik7bD1mdW5jdGlvbiBlKCl7dGhyb3cgbmV3IGEoXCJLYVRlWCBkb2Vzbid0IHdvcmsgaW4gcXVpcmtzIG1vZGUuXCIpfX19dmFyIHU9ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPW5ldyBpKHIpO3ZhciBzPW8odCxhKTtyZXR1cm4gbihzLHQsYSkudG9NYXJrdXAoKX07dmFyIGg9ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPW5ldyBpKHIpO3JldHVybiBvKHQsYSl9O3QuZXhwb3J0cz17cmVuZGVyOmwscmVuZGVyVG9TdHJpbmc6dSxfX3BhcnNlOmgsUGFyc2VFcnJvcjphfX0se1wiLi9zcmMvUGFyc2VFcnJvclwiOjEwLFwiLi9zcmMvU2V0dGluZ3NcIjoxMixcIi4vc3JjL2J1aWxkVHJlZVwiOjE3LFwiLi9zcmMvcGFyc2VUcmVlXCI6MjcsXCIuL3NyYy91dGlsc1wiOjMxfV0sMjpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ZGVmYXVsdDplKFwiY29yZS1qcy9saWJyYXJ5L2ZuL2pzb24vc3RyaW5naWZ5XCIpLF9fZXNNb2R1bGU6dHJ1ZX19LHtcImNvcmUtanMvbGlicmFyeS9mbi9qc29uL3N0cmluZ2lmeVwiOjN9XSwzOltmdW5jdGlvbihlLHQscil7dmFyIGE9ZShcIi4uLy4uL21vZHVsZXMvX2NvcmVcIiksaT1hLkpTT058fChhLkpTT049e3N0cmluZ2lmeTpKU09OLnN0cmluZ2lmeX0pO3QuZXhwb3J0cz1mdW5jdGlvbiBlKHQpe3JldHVybiBpLnN0cmluZ2lmeS5hcHBseShpLGFyZ3VtZW50cyl9fSx7XCIuLi8uLi9tb2R1bGVzL19jb3JlXCI6NH1dLDQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgYT10LmV4cG9ydHM9e3ZlcnNpb246XCIyLjQuMFwifTtpZih0eXBlb2YgX19lPT1cIm51bWJlclwiKV9fZT1hfSx7fV0sNTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGEoZSl7aWYoIWUuX19tYXRjaEF0UmVsb2NhdGFibGUpe3ZhciB0PWUuc291cmNlK1wifCgpXCI7dmFyIHI9XCJnXCIrKGUuaWdub3JlQ2FzZT9cImlcIjpcIlwiKSsoZS5tdWx0aWxpbmU/XCJtXCI6XCJcIikrKGUudW5pY29kZT9cInVcIjpcIlwiKTtlLl9fbWF0Y2hBdFJlbG9jYXRhYmxlPW5ldyBSZWdFeHAodCxyKX1yZXR1cm4gZS5fX21hdGNoQXRSZWxvY2F0YWJsZX1mdW5jdGlvbiBpKGUsdCxyKXtpZihlLmdsb2JhbHx8ZS5zdGlja3kpe3Rocm93IG5ldyBFcnJvcihcIm1hdGNoQXQoLi4uKTogT25seSBub24tZ2xvYmFsIHJlZ2V4ZXMgYXJlIHN1cHBvcnRlZFwiKX12YXIgaT1hKGUpO2kubGFzdEluZGV4PXI7dmFyIG49aS5leGVjKHQpO2lmKG5bbi5sZW5ndGgtMV09PW51bGwpe24ubGVuZ3RoPW4ubGVuZ3RoLTE7cmV0dXJuIG59ZWxzZXtyZXR1cm4gbnVsbH19dC5leHBvcnRzPWl9LHt9XSw2OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9sczt2YXIgaT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O3ZhciBuPU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7ZnVuY3Rpb24gbyhlKXtpZihlPT09bnVsbHx8ZT09PXVuZGVmaW5lZCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIk9iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkXCIpfXJldHVybiBPYmplY3QoZSl9ZnVuY3Rpb24gcygpe3RyeXtpZighT2JqZWN0LmFzc2lnbil7cmV0dXJuIGZhbHNlfXZhciBlPW5ldyBTdHJpbmcoXCJhYmNcIik7ZVs1XT1cImRlXCI7aWYoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoZSlbMF09PT1cIjVcIil7cmV0dXJuIGZhbHNlfXZhciB0PXt9O2Zvcih2YXIgcj0wO3I8MTA7cisrKXt0W1wiX1wiK1N0cmluZy5mcm9tQ2hhckNvZGUocildPXJ9dmFyIGE9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModCkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiB0W2VdfSk7aWYoYS5qb2luKFwiXCIpIT09XCIwMTIzNDU2Nzg5XCIpe3JldHVybiBmYWxzZX12YXIgaT17fTtcImFiY2RlZmdoaWprbG1ub3BxcnN0XCIuc3BsaXQoXCJcIikuZm9yRWFjaChmdW5jdGlvbihlKXtpW2VdPWV9KTtpZihPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LGkpKS5qb2luKFwiXCIpIT09XCJhYmNkZWZnaGlqa2xtbm9wcXJzdFwiKXtyZXR1cm4gZmFsc2V9cmV0dXJuIHRydWV9Y2F0Y2goZSl7cmV0dXJuIGZhbHNlfX10LmV4cG9ydHM9cygpP09iamVjdC5hc3NpZ246ZnVuY3Rpb24oZSx0KXt2YXIgcjt2YXIgcz1vKGUpO3ZhciBsO2Zvcih2YXIgdT0xO3U8YXJndW1lbnRzLmxlbmd0aDt1Kyspe3I9T2JqZWN0KGFyZ3VtZW50c1t1XSk7Zm9yKHZhciBoIGluIHIpe2lmKGkuY2FsbChyLGgpKXtzW2hdPXJbaF19fWlmKGEpe2w9YShyKTtmb3IodmFyIHA9MDtwPGwubGVuZ3RoO3ArKyl7aWYobi5jYWxsKHIsbFtwXSkpe3NbbFtwXV09cltsW3BdXX19fX1yZXR1cm4gc319LHt9XSw3OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIm1hdGNoLWF0XCIpO3ZhciBpPWUoXCIuL1BhcnNlRXJyb3JcIik7ZnVuY3Rpb24gbihlKXt0aGlzLmlucHV0PWU7dGhpcy5wb3M9MH1mdW5jdGlvbiBvKGUsdCxyLGEpe3RoaXMudGV4dD1lO3RoaXMuc3RhcnQ9dDt0aGlzLmVuZD1yO3RoaXMubGV4ZXI9YX1vLnByb3RvdHlwZS5yYW5nZT1mdW5jdGlvbihlLHQpe2lmKGUubGV4ZXIhPT10aGlzLmxleGVyKXtyZXR1cm4gbmV3IG8odCl9cmV0dXJuIG5ldyBvKHQsdGhpcy5zdGFydCxlLmVuZCx0aGlzLmxleGVyKX07dmFyIHM9bmV3IFJlZ0V4cChcIihbIFxcclxcblxcdF0rKXxcIitcIihbIS1cXFxcW1xcXFxdLVxcdTIwMjdcXHUyMDJhLVxcdWQ3ZmZcXHVmOTAwLVxcdWZmZmZdXCIrXCJ8W1xcdWQ4MDAtXFx1ZGJmZl1bXFx1ZGMwMC1cXHVkZmZmXVwiK1wifFxcXFxcXFxcKD86W2EtekEtWl0rfFteXFx1ZDgwMC1cXHVkZmZmXSlcIitcIilcIik7bi5wcm90b3R5cGUubGV4PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5pbnB1dDt2YXIgdD10aGlzLnBvcztpZih0PT09ZS5sZW5ndGgpe3JldHVybiBuZXcgbyhcIkVPRlwiLHQsdCx0aGlzKX12YXIgcj1hKHMsZSx0KTtpZihyPT09bnVsbCl7dGhyb3cgbmV3IGkoXCJVbmV4cGVjdGVkIGNoYXJhY3RlcjogJ1wiK2VbdF0rXCInXCIsbmV3IG8oZVt0XSx0LHQrMSx0aGlzKSl9dmFyIG49clsyXXx8XCIgXCI7dmFyIGw9dGhpcy5wb3M7dGhpcy5wb3MrPXJbMF0ubGVuZ3RoO3ZhciB1PXRoaXMucG9zO3JldHVybiBuZXcgbyhuLGwsdSx0aGlzKX07dC5leHBvcnRzPW59LHtcIi4vUGFyc2VFcnJvclwiOjEwLFwibWF0Y2gtYXRcIjo1fV0sODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL0xleGVyXCIpO3ZhciBpPWUoXCIuL21hY3Jvc1wiKTt2YXIgbj1lKFwiLi9QYXJzZUVycm9yXCIpO3ZhciBvPWUoXCJvYmplY3QtYXNzaWduXCIpO2Z1bmN0aW9uIHMoZSx0KXt0aGlzLmxleGVyPW5ldyBhKGUpO3RoaXMubWFjcm9zPW8oe30saSx0KTt0aGlzLnN0YWNrPVtdO3RoaXMuZGlzY2FyZGVkV2hpdGVTcGFjZT1bXX1zLnByb3RvdHlwZS5uZXh0VG9rZW49ZnVuY3Rpb24oKXtmb3IoOzspe2lmKHRoaXMuc3RhY2subGVuZ3RoPT09MCl7dGhpcy5zdGFjay5wdXNoKHRoaXMubGV4ZXIubGV4KCkpfXZhciBlPXRoaXMuc3RhY2sucG9wKCk7dmFyIHQ9ZS50ZXh0O2lmKCEodC5jaGFyQXQoMCk9PT1cIlxcXFxcIiYmdGhpcy5tYWNyb3MuaGFzT3duUHJvcGVydHkodCkpKXtyZXR1cm4gZX12YXIgcj12b2lkIDA7dmFyIGk9dGhpcy5tYWNyb3NbdF07aWYodHlwZW9mIGk9PT1cInN0cmluZ1wiKXt2YXIgbz0wO2lmKGkuaW5kZXhPZihcIiNcIikhPT0tMSl7dmFyIHM9aS5yZXBsYWNlKC8jIy9nLFwiXCIpO3doaWxlKHMuaW5kZXhPZihcIiNcIisobysxKSkhPT0tMSl7KytvfX12YXIgbD1uZXcgYShpKTtpPVtdO3I9bC5sZXgoKTt3aGlsZShyLnRleHQhPT1cIkVPRlwiKXtpLnB1c2gocik7cj1sLmxleCgpfWkucmV2ZXJzZSgpO2kubnVtQXJncz1vO3RoaXMubWFjcm9zW3RdPWl9aWYoaS5udW1BcmdzKXt2YXIgdT1bXTt2YXIgaD12b2lkIDA7Zm9yKGg9MDtoPGkubnVtQXJnczsrK2gpe3ZhciBwPXRoaXMuZ2V0KHRydWUpO2lmKHAudGV4dD09PVwie1wiKXt2YXIgYz1bXTt2YXIgdj0xO3doaWxlKHYhPT0wKXtyPXRoaXMuZ2V0KGZhbHNlKTtjLnB1c2gocik7aWYoci50ZXh0PT09XCJ7XCIpeysrdn1lbHNlIGlmKHIudGV4dD09PVwifVwiKXstLXZ9ZWxzZSBpZihyLnRleHQ9PT1cIkVPRlwiKXt0aHJvdyBuZXcgbihcIkVuZCBvZiBpbnB1dCBpbiBtYWNybyBhcmd1bWVudFwiLHApfX1jLnBvcCgpO2MucmV2ZXJzZSgpO3VbaF09Y31lbHNlIGlmKHAudGV4dD09PVwiRU9GXCIpe3Rocm93IG5ldyBuKFwiRW5kIG9mIGlucHV0IGV4cGVjdGluZyBtYWNybyBhcmd1bWVudFwiLGUpfWVsc2V7dVtoXT1bcF19fWk9aS5zbGljZSgpO2ZvcihoPWkubGVuZ3RoLTE7aD49MDstLWgpe3I9aVtoXTtpZihyLnRleHQ9PT1cIiNcIil7aWYoaD09PTApe3Rocm93IG5ldyBuKFwiSW5jb21wbGV0ZSBwbGFjZWhvbGRlciBhdCBlbmQgb2YgbWFjcm8gYm9keVwiLHIpfXI9aVstLWhdO2lmKHIudGV4dD09PVwiI1wiKXtpLnNwbGljZShoKzEsMSl9ZWxzZSBpZigvXlsxLTldJC8udGVzdChyLnRleHQpKXtpLnNwbGljZS5hcHBseShpLFtoLDJdLmNvbmNhdCh1W3IudGV4dC0xXSkpfWVsc2V7dGhyb3cgbmV3IG4oXCJOb3QgYSB2YWxpZCBhcmd1bWVudCBudW1iZXJcIixyKX19fX10aGlzLnN0YWNrPXRoaXMuc3RhY2suY29uY2F0KGkpfX07cy5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKGUpe3RoaXMuZGlzY2FyZGVkV2hpdGVTcGFjZT1bXTt2YXIgdD10aGlzLm5leHRUb2tlbigpO2lmKGUpe3doaWxlKHQudGV4dD09PVwiIFwiKXt0aGlzLmRpc2NhcmRlZFdoaXRlU3BhY2UucHVzaCh0KTt0PXRoaXMubmV4dFRva2VuKCl9fXJldHVybiB0fTtzLnByb3RvdHlwZS51bmdldD1mdW5jdGlvbihlKXt0aGlzLnN0YWNrLnB1c2goZSk7d2hpbGUodGhpcy5kaXNjYXJkZWRXaGl0ZVNwYWNlLmxlbmd0aCE9PTApe3RoaXMuc3RhY2sucHVzaCh0aGlzLmRpc2NhcmRlZFdoaXRlU3BhY2UucG9wKCkpfX07dC5leHBvcnRzPXN9LHtcIi4vTGV4ZXJcIjo3LFwiLi9QYXJzZUVycm9yXCI6MTAsXCIuL21hY3Jvc1wiOjI0LFwib2JqZWN0LWFzc2lnblwiOjZ9XSw5OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4vZm9udE1ldHJpY3NcIik7dmFyIGk9Njt2YXIgbj1bWzEsMSwxXSxbMiwxLDFdLFszLDEsMV0sWzQsMiwxXSxbNSwyLDFdLFs2LDMsMV0sWzcsNCwyXSxbOCw2LDNdLFs5LDcsNl0sWzEwLDgsN10sWzExLDEwLDldXTt2YXIgbz1bLjUsLjYsLjcsLjgsLjksMSwxLjIsMS40NCwxLjcyOCwyLjA3NCwyLjQ4OF07ZnVuY3Rpb24gcyhlKXt0aGlzLnN0eWxlPWUuc3R5bGU7dGhpcy5jb2xvcj1lLmNvbG9yO3RoaXMuc2l6ZT1lLnNpemV8fGk7dGhpcy50ZXh0U2l6ZT1lLnRleHRTaXplfHx0aGlzLnNpemU7dGhpcy5waGFudG9tPWUucGhhbnRvbTt0aGlzLmZvbnQ9ZS5mb250O3RoaXMuc2l6ZU11bHRpcGxpZXI9b1t0aGlzLnNpemUtMV07dGhpcy5fZm9udE1ldHJpY3M9bnVsbH1zLnByb3RvdHlwZS5leHRlbmQ9ZnVuY3Rpb24oZSl7dmFyIHQ9e3N0eWxlOnRoaXMuc3R5bGUsc2l6ZTp0aGlzLnNpemUsdGV4dFNpemU6dGhpcy50ZXh0U2l6ZSxjb2xvcjp0aGlzLmNvbG9yLHBoYW50b206dGhpcy5waGFudG9tLGZvbnQ6dGhpcy5mb250fTtmb3IodmFyIHIgaW4gZSl7aWYoZS5oYXNPd25Qcm9wZXJ0eShyKSl7dFtyXT1lW3JdfX1yZXR1cm4gbmV3IHModCl9O2Z1bmN0aW9uIGwoZSx0KXtyZXR1cm4gdC5zaXplPDI/ZTpuW2UtMV1bdC5zaXplLTFdfXMucHJvdG90eXBlLmhhdmluZ1N0eWxlPWZ1bmN0aW9uKGUpe2lmKHRoaXMuc3R5bGU9PT1lKXtyZXR1cm4gdGhpc31lbHNle3JldHVybiB0aGlzLmV4dGVuZCh7c3R5bGU6ZSxzaXplOmwodGhpcy50ZXh0U2l6ZSxlKX0pfX07cy5wcm90b3R5cGUuaGF2aW5nQ3JhbXBlZFN0eWxlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaGF2aW5nU3R5bGUodGhpcy5zdHlsZS5jcmFtcCgpKX07cy5wcm90b3R5cGUuaGF2aW5nU2l6ZT1mdW5jdGlvbihlKXtpZih0aGlzLnNpemU9PT1lJiZ0aGlzLnRleHRTaXplPT09ZSl7cmV0dXJuIHRoaXN9ZWxzZXtyZXR1cm4gdGhpcy5leHRlbmQoe3N0eWxlOnRoaXMuc3R5bGUudGV4dCgpLHNpemU6ZSx0ZXh0U2l6ZTplfSl9fTtzLnByb3RvdHlwZS5oYXZpbmdCYXNlU3R5bGU9ZnVuY3Rpb24oZSl7ZT1lfHx0aGlzLnN0eWxlLnRleHQoKTt2YXIgdD1sKGksZSk7aWYodGhpcy5zaXplPT09dCYmdGhpcy50ZXh0U2l6ZT09PWkmJnRoaXMuc3R5bGU9PT1lKXtyZXR1cm4gdGhpc31lbHNle3JldHVybiB0aGlzLmV4dGVuZCh7c3R5bGU6ZSxzaXplOnQsYmFzZVNpemU6aX0pfX07cy5wcm90b3R5cGUud2l0aENvbG9yPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmV4dGVuZCh7Y29sb3I6ZX0pfTtzLnByb3RvdHlwZS53aXRoUGhhbnRvbT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmV4dGVuZCh7cGhhbnRvbTp0cnVlfSl9O3MucHJvdG90eXBlLndpdGhGb250PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmV4dGVuZCh7Zm9udDplfHx0aGlzLmZvbnR9KX07cy5wcm90b3R5cGUuc2l6aW5nQ2xhc3Nlcz1mdW5jdGlvbihlKXtpZihlLnNpemUhPT10aGlzLnNpemUpe3JldHVybltcInNpemluZ1wiLFwicmVzZXQtc2l6ZVwiK2Uuc2l6ZSxcInNpemVcIit0aGlzLnNpemVdfWVsc2V7cmV0dXJuW119fTtzLnByb3RvdHlwZS5iYXNlU2l6aW5nQ2xhc3Nlcz1mdW5jdGlvbigpe2lmKHRoaXMuc2l6ZSE9PWkpe3JldHVybltcInNpemluZ1wiLFwicmVzZXQtc2l6ZVwiK3RoaXMuc2l6ZSxcInNpemVcIitpXX1lbHNle3JldHVybltdfX07cy5wcm90b3R5cGUuZm9udE1ldHJpY3M9ZnVuY3Rpb24oKXtpZighdGhpcy5fZm9udE1ldHJpY3Mpe3RoaXMuX2ZvbnRNZXRyaWNzPWEuZ2V0Rm9udE1ldHJpY3ModGhpcy5zaXplKX1yZXR1cm4gdGhpcy5fZm9udE1ldHJpY3N9O3ZhciB1PXtcImthdGV4LWJsdWVcIjpcIiM2NDk1ZWRcIixcImthdGV4LW9yYW5nZVwiOlwiI2ZmYTUwMFwiLFwia2F0ZXgtcGlua1wiOlwiI2ZmMDBhZlwiLFwia2F0ZXgtcmVkXCI6XCIjZGYwMDMwXCIsXCJrYXRleC1ncmVlblwiOlwiIzI4YWU3YlwiLFwia2F0ZXgtZ3JheVwiOlwiZ3JheVwiLFwia2F0ZXgtcHVycGxlXCI6XCIjOWQzOGJkXCIsXCJrYXRleC1ibHVlQVwiOlwiI2NjZmFmZlwiLFwia2F0ZXgtYmx1ZUJcIjpcIiM4MGY2ZmZcIixcImthdGV4LWJsdWVDXCI6XCIjNjNkOWVhXCIsXCJrYXRleC1ibHVlRFwiOlwiIzExYWNjZFwiLFwia2F0ZXgtYmx1ZUVcIjpcIiMwYzdmOTlcIixcImthdGV4LXRlYWxBXCI6XCIjOTRmZmY1XCIsXCJrYXRleC10ZWFsQlwiOlwiIzI2ZWRkNVwiLFwia2F0ZXgtdGVhbENcIjpcIiMwMWQxYzFcIixcImthdGV4LXRlYWxEXCI6XCIjMDFhOTk1XCIsXCJrYXRleC10ZWFsRVwiOlwiIzIwODE3MFwiLFwia2F0ZXgtZ3JlZW5BXCI6XCIjYjZmZmIwXCIsXCJrYXRleC1ncmVlbkJcIjpcIiM4YWYyODFcIixcImthdGV4LWdyZWVuQ1wiOlwiIzc0Y2Y3MFwiLFwia2F0ZXgtZ3JlZW5EXCI6XCIjMWZhYjU0XCIsXCJrYXRleC1ncmVlbkVcIjpcIiMwZDkyM2ZcIixcImthdGV4LWdvbGRBXCI6XCIjZmZkMGE5XCIsXCJrYXRleC1nb2xkQlwiOlwiI2ZmYmI3MVwiLFwia2F0ZXgtZ29sZENcIjpcIiNmZjljMzlcIixcImthdGV4LWdvbGREXCI6XCIjZTA3ZDEwXCIsXCJrYXRleC1nb2xkRVwiOlwiI2E3NWEwNVwiLFwia2F0ZXgtcmVkQVwiOlwiI2ZjYTlhOVwiLFwia2F0ZXgtcmVkQlwiOlwiI2ZmODQ4MlwiLFwia2F0ZXgtcmVkQ1wiOlwiI2Y5Njg1ZFwiLFwia2F0ZXgtcmVkRFwiOlwiI2U4NGQzOVwiLFwia2F0ZXgtcmVkRVwiOlwiI2JjMjYxMlwiLFwia2F0ZXgtbWFyb29uQVwiOlwiI2ZmYmRlMFwiLFwia2F0ZXgtbWFyb29uQlwiOlwiI2ZmOTJjNlwiLFwia2F0ZXgtbWFyb29uQ1wiOlwiI2VkNWZhNlwiLFwia2F0ZXgtbWFyb29uRFwiOlwiI2NhMzM3Y1wiLFwia2F0ZXgtbWFyb29uRVwiOlwiIzllMDM0ZVwiLFwia2F0ZXgtcHVycGxlQVwiOlwiI2RkZDdmZlwiLFwia2F0ZXgtcHVycGxlQlwiOlwiI2M2YjlmY1wiLFwia2F0ZXgtcHVycGxlQ1wiOlwiI2FhODdmZlwiLFwia2F0ZXgtcHVycGxlRFwiOlwiIzc4NTRhYlwiLFwia2F0ZXgtcHVycGxlRVwiOlwiIzU0M2I3OFwiLFwia2F0ZXgtbWludEFcIjpcIiNmNWY5ZThcIixcImthdGV4LW1pbnRCXCI6XCIjZWRmMmRmXCIsXCJrYXRleC1taW50Q1wiOlwiI2UwZTVjY1wiLFwia2F0ZXgtZ3JheUFcIjpcIiNmNmY3ZjdcIixcImthdGV4LWdyYXlCXCI6XCIjZjBmMWYyXCIsXCJrYXRleC1ncmF5Q1wiOlwiI2UzZTVlNlwiLFwia2F0ZXgtZ3JheURcIjpcIiNkNmQ4ZGFcIixcImthdGV4LWdyYXlFXCI6XCIjYmFiZWMyXCIsXCJrYXRleC1ncmF5RlwiOlwiIzg4OGQ5M1wiLFwia2F0ZXgtZ3JheUdcIjpcIiM2MjY1NjlcIixcImthdGV4LWdyYXlIXCI6XCIjM2IzZTQwXCIsXCJrYXRleC1ncmF5SVwiOlwiIzIxMjQyY1wiLFwia2F0ZXgta2FCbHVlXCI6XCIjMzE0NDUzXCIsXCJrYXRleC1rYUdyZWVuXCI6XCIjNzFCMzA3XCJ9O3MucHJvdG90eXBlLmdldENvbG9yPWZ1bmN0aW9uKCl7aWYodGhpcy5waGFudG9tKXtyZXR1cm5cInRyYW5zcGFyZW50XCJ9ZWxzZXtyZXR1cm4gdVt0aGlzLmNvbG9yXXx8dGhpcy5jb2xvcn19O3MuQkFTRVNJWkU9aTt0LmV4cG9ydHM9c30se1wiLi9mb250TWV0cmljc1wiOjIxfV0sMTA6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUsdCl7dmFyIHI9XCJLYVRlWCBwYXJzZSBlcnJvcjogXCIrZTt2YXIgaT12b2lkIDA7dmFyIG49dm9pZCAwO2lmKHQmJnQubGV4ZXImJnQuc3RhcnQ8PXQuZW5kKXt2YXIgbz10LmxleGVyLmlucHV0O2k9dC5zdGFydDtuPXQuZW5kO2lmKGk9PT1vLmxlbmd0aCl7cis9XCIgYXQgZW5kIG9mIGlucHV0OiBcIn1lbHNle3IrPVwiIGF0IHBvc2l0aW9uIFwiKyhpKzEpK1wiOiBcIn12YXIgcz1vLnNsaWNlKGksbikucmVwbGFjZSgvW15dL2csXCIkJlxcdTAzMzJcIik7dmFyIGw9dm9pZCAwO2lmKGk+MTUpe2w9XCJcXHUyMDI2XCIrby5zbGljZShpLTE1LGkpfWVsc2V7bD1vLnNsaWNlKDAsaSl9dmFyIHU9dm9pZCAwO2lmKG4rMTU8by5sZW5ndGgpe3U9by5zbGljZShuLG4rMTUpK1wiXFx1MjAyNlwifWVsc2V7dT1vLnNsaWNlKG4pfXIrPWwrcyt1fXZhciBoPW5ldyBFcnJvcihyKTtoLm5hbWU9XCJQYXJzZUVycm9yXCI7aC5fX3Byb3RvX189YS5wcm90b3R5cGU7aC5wb3NpdGlvbj1pO3JldHVybiBofWEucHJvdG90eXBlLl9fcHJvdG9fXz1FcnJvci5wcm90b3R5cGU7dC5leHBvcnRzPWF9LHt9XSwxMTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL2Z1bmN0aW9uc1wiKTt2YXIgaT1lKFwiLi9lbnZpcm9ubWVudHNcIik7dmFyIG49ZShcIi4vTWFjcm9FeHBhbmRlclwiKTt2YXIgbz1lKFwiLi9zeW1ib2xzXCIpO3ZhciBzPWUoXCIuL3V0aWxzXCIpO3ZhciBsPWUoXCIuL3VuaWNvZGVSZWdleGVzXCIpLmNqa1JlZ2V4O3ZhciB1PWUoXCIuL3BhcnNlRGF0YVwiKTt2YXIgaD1lKFwiLi9QYXJzZUVycm9yXCIpO2Z1bmN0aW9uIHAoZSx0KXt0aGlzLmd1bGxldD1uZXcgbihlLHQubWFjcm9zKTtpZih0LmNvbG9ySXNUZXh0Q29sb3Ipe3RoaXMuZ3VsbGV0Lm1hY3Jvc1tcIlxcXFxjb2xvclwiXT1cIlxcXFx0ZXh0Y29sb3JcIn10aGlzLnNldHRpbmdzPXQ7dGhpcy5sZWZ0cmlnaHREZXB0aD0wfXZhciBjPXUuUGFyc2VOb2RlO2Z1bmN0aW9uIHYoZSx0LHIpe3RoaXMucmVzdWx0PWU7dGhpcy5pc0Z1bmN0aW9uPXQ7dGhpcy50b2tlbj1yfXAucHJvdG90eXBlLmV4cGVjdD1mdW5jdGlvbihlLHQpe2lmKHRoaXMubmV4dFRva2VuLnRleHQhPT1lKXt0aHJvdyBuZXcgaChcIkV4cGVjdGVkICdcIitlK1wiJywgZ290ICdcIit0aGlzLm5leHRUb2tlbi50ZXh0K1wiJ1wiLHRoaXMubmV4dFRva2VuKX1pZih0IT09ZmFsc2Upe3RoaXMuY29uc3VtZSgpfX07cC5wcm90b3R5cGUuY29uc3VtZT1mdW5jdGlvbigpe3RoaXMubmV4dFRva2VuPXRoaXMuZ3VsbGV0LmdldCh0aGlzLm1vZGU9PT1cIm1hdGhcIil9O3AucHJvdG90eXBlLnN3aXRjaE1vZGU9ZnVuY3Rpb24oZSl7dGhpcy5ndWxsZXQudW5nZXQodGhpcy5uZXh0VG9rZW4pO3RoaXMubW9kZT1lO3RoaXMuY29uc3VtZSgpfTtwLnByb3RvdHlwZS5wYXJzZT1mdW5jdGlvbigpe3RoaXMubW9kZT1cIm1hdGhcIjt0aGlzLmNvbnN1bWUoKTt2YXIgZT10aGlzLnBhcnNlSW5wdXQoKTtyZXR1cm4gZX07cC5wcm90b3R5cGUucGFyc2VJbnB1dD1mdW5jdGlvbigpe3ZhciBlPXRoaXMucGFyc2VFeHByZXNzaW9uKGZhbHNlKTt0aGlzLmV4cGVjdChcIkVPRlwiLGZhbHNlKTtyZXR1cm4gZX07dmFyIGY9W1wifVwiLFwiXFxcXGVuZFwiLFwiXFxcXHJpZ2h0XCIsXCImXCIsXCJcXFxcXFxcXFwiLFwiXFxcXGNyXCJdO3AucHJvdG90eXBlLnBhcnNlRXhwcmVzc2lvbj1mdW5jdGlvbihlLHQpe3ZhciByPVtdO3doaWxlKHRydWUpe3ZhciBpPXRoaXMubmV4dFRva2VuO2lmKGYuaW5kZXhPZihpLnRleHQpIT09LTEpe2JyZWFrfWlmKHQmJmkudGV4dD09PXQpe2JyZWFrfWlmKGUmJmFbaS50ZXh0XSYmYVtpLnRleHRdLmluZml4KXticmVha312YXIgbj10aGlzLnBhcnNlQXRvbSgpO2lmKCFuKXtpZighdGhpcy5zZXR0aW5ncy50aHJvd09uRXJyb3ImJmkudGV4dFswXT09PVwiXFxcXFwiKXt2YXIgbz10aGlzLmhhbmRsZVVuc3VwcG9ydGVkQ21kKCk7ci5wdXNoKG8pO2NvbnRpbnVlfWJyZWFrfXIucHVzaChuKX1yZXR1cm4gdGhpcy5oYW5kbGVJbmZpeE5vZGVzKHIpfTtwLnByb3RvdHlwZS5oYW5kbGVJbmZpeE5vZGVzPWZ1bmN0aW9uKGUpe3ZhciB0PS0xO3ZhciByPXZvaWQgMDtmb3IodmFyIGE9MDthPGUubGVuZ3RoO2ErKyl7dmFyIGk9ZVthXTtpZihpLnR5cGU9PT1cImluZml4XCIpe2lmKHQhPT0tMSl7dGhyb3cgbmV3IGgoXCJvbmx5IG9uZSBpbmZpeCBvcGVyYXRvciBwZXIgZ3JvdXBcIixpLnZhbHVlLnRva2VuKX10PWE7cj1pLnZhbHVlLnJlcGxhY2VXaXRofX1pZih0IT09LTEpe3ZhciBuPXZvaWQgMDt2YXIgbz12b2lkIDA7dmFyIHM9ZS5zbGljZSgwLHQpO3ZhciBsPWUuc2xpY2UodCsxKTtpZihzLmxlbmd0aD09PTEmJnNbMF0udHlwZT09PVwib3JkZ3JvdXBcIil7bj1zWzBdfWVsc2V7bj1uZXcgYyhcIm9yZGdyb3VwXCIscyx0aGlzLm1vZGUpfWlmKGwubGVuZ3RoPT09MSYmbFswXS50eXBlPT09XCJvcmRncm91cFwiKXtvPWxbMF19ZWxzZXtvPW5ldyBjKFwib3JkZ3JvdXBcIixsLHRoaXMubW9kZSl9dmFyIHU9dGhpcy5jYWxsRnVuY3Rpb24ocixbbixvXSxudWxsKTtyZXR1cm5bbmV3IGModS50eXBlLHUsdGhpcy5tb2RlKV19ZWxzZXtyZXR1cm4gZX19O3ZhciBtPTE7cC5wcm90b3R5cGUuaGFuZGxlU3VwU3Vic2NyaXB0PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMubmV4dFRva2VuO3ZhciByPXQudGV4dDt0aGlzLmNvbnN1bWUoKTt2YXIgaT10aGlzLnBhcnNlR3JvdXAoKTtpZighaSl7aWYoIXRoaXMuc2V0dGluZ3MudGhyb3dPbkVycm9yJiZ0aGlzLm5leHRUb2tlbi50ZXh0WzBdPT09XCJcXFxcXCIpe3JldHVybiB0aGlzLmhhbmRsZVVuc3VwcG9ydGVkQ21kKCl9ZWxzZXt0aHJvdyBuZXcgaChcIkV4cGVjdGVkIGdyb3VwIGFmdGVyICdcIityK1wiJ1wiLHQpfX1lbHNlIGlmKGkuaXNGdW5jdGlvbil7dmFyIG49YVtpLnJlc3VsdF0uZ3JlZWRpbmVzcztpZihuPm0pe3JldHVybiB0aGlzLnBhcnNlRnVuY3Rpb24oaSl9ZWxzZXt0aHJvdyBuZXcgaChcIkdvdCBmdW5jdGlvbiAnXCIraS5yZXN1bHQrXCInIHdpdGggbm8gYXJndW1lbnRzIFwiK1wiYXMgXCIrZSx0KX19ZWxzZXtyZXR1cm4gaS5yZXN1bHR9fTtwLnByb3RvdHlwZS5oYW5kbGVVbnN1cHBvcnRlZENtZD1mdW5jdGlvbigpe3ZhciBlPXRoaXMubmV4dFRva2VuLnRleHQ7dmFyIHQ9W107Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspe3QucHVzaChuZXcgYyhcInRleHRvcmRcIixlW3JdLFwidGV4dFwiKSl9dmFyIGE9bmV3IGMoXCJ0ZXh0XCIse2JvZHk6dCx0eXBlOlwidGV4dFwifSx0aGlzLm1vZGUpO3ZhciBpPW5ldyBjKFwiY29sb3JcIix7Y29sb3I6dGhpcy5zZXR0aW5ncy5lcnJvckNvbG9yLHZhbHVlOlthXSx0eXBlOlwiY29sb3JcIn0sdGhpcy5tb2RlKTt0aGlzLmNvbnN1bWUoKTtyZXR1cm4gaX07cC5wcm90b3R5cGUucGFyc2VBdG9tPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wYXJzZUltcGxpY2l0R3JvdXAoKTtpZih0aGlzLm1vZGU9PT1cInRleHRcIil7cmV0dXJuIGV9dmFyIHQ9dm9pZCAwO3ZhciByPXZvaWQgMDt3aGlsZSh0cnVlKXt2YXIgYT10aGlzLm5leHRUb2tlbjtpZihhLnRleHQ9PT1cIlxcXFxsaW1pdHNcInx8YS50ZXh0PT09XCJcXFxcbm9saW1pdHNcIil7aWYoIWV8fGUudHlwZSE9PVwib3BcIil7dGhyb3cgbmV3IGgoXCJMaW1pdCBjb250cm9scyBtdXN0IGZvbGxvdyBhIG1hdGggb3BlcmF0b3JcIixhKX1lbHNle3ZhciBpPWEudGV4dD09PVwiXFxcXGxpbWl0c1wiO2UudmFsdWUubGltaXRzPWk7ZS52YWx1ZS5hbHdheXNIYW5kbGVTdXBTdWI9dHJ1ZX10aGlzLmNvbnN1bWUoKX1lbHNlIGlmKGEudGV4dD09PVwiXlwiKXtpZih0KXt0aHJvdyBuZXcgaChcIkRvdWJsZSBzdXBlcnNjcmlwdFwiLGEpfXQ9dGhpcy5oYW5kbGVTdXBTdWJzY3JpcHQoXCJzdXBlcnNjcmlwdFwiKX1lbHNlIGlmKGEudGV4dD09PVwiX1wiKXtpZihyKXt0aHJvdyBuZXcgaChcIkRvdWJsZSBzdWJzY3JpcHRcIixhKX1yPXRoaXMuaGFuZGxlU3VwU3Vic2NyaXB0KFwic3Vic2NyaXB0XCIpfWVsc2UgaWYoYS50ZXh0PT09XCInXCIpe2lmKHQpe3Rocm93IG5ldyBoKFwiRG91YmxlIHN1cGVyc2NyaXB0XCIsYSl9dmFyIG49bmV3IGMoXCJ0ZXh0b3JkXCIsXCJcXFxccHJpbWVcIix0aGlzLm1vZGUpO3ZhciBvPVtuXTt0aGlzLmNvbnN1bWUoKTt3aGlsZSh0aGlzLm5leHRUb2tlbi50ZXh0PT09XCInXCIpe28ucHVzaChuKTt0aGlzLmNvbnN1bWUoKX1pZih0aGlzLm5leHRUb2tlbi50ZXh0PT09XCJeXCIpe28ucHVzaCh0aGlzLmhhbmRsZVN1cFN1YnNjcmlwdChcInN1cGVyc2NyaXB0XCIpKX10PW5ldyBjKFwib3JkZ3JvdXBcIixvLHRoaXMubW9kZSl9ZWxzZXticmVha319aWYodHx8cil7cmV0dXJuIG5ldyBjKFwic3Vwc3ViXCIse2Jhc2U6ZSxzdXA6dCxzdWI6cn0sdGhpcy5tb2RlKX1lbHNle3JldHVybiBlfX07dmFyIGQ9W1wiXFxcXHRpbnlcIixcIlxcXFxzaXhwdHNpemVcIixcIlxcXFxzY3JpcHRzaXplXCIsXCJcXFxcZm9vdG5vdGVzaXplXCIsXCJcXFxcc21hbGxcIixcIlxcXFxub3JtYWxzaXplXCIsXCJcXFxcbGFyZ2VcIixcIlxcXFxMYXJnZVwiLFwiXFxcXExBUkdFXCIsXCJcXFxcaHVnZVwiLFwiXFxcXEh1Z2VcIl07dmFyIGc9W1wiXFxcXGRpc3BsYXlzdHlsZVwiLFwiXFxcXHRleHRzdHlsZVwiLFwiXFxcXHNjcmlwdHN0eWxlXCIsXCJcXFxcc2NyaXB0c2NyaXB0c3R5bGVcIl07dmFyIHk9e1wiXFxcXHJtXCI6XCJtYXRocm1cIixcIlxcXFxzZlwiOlwibWF0aHNmXCIsXCJcXFxcdHRcIjpcIm1hdGh0dFwiLFwiXFxcXGJmXCI6XCJtYXRoYmZcIixcIlxcXFxpdFwiOlwibWF0aGl0XCJ9O3AucHJvdG90eXBlLnBhcnNlSW1wbGljaXRHcm91cD1mdW5jdGlvbigpe3ZhciBlPXRoaXMucGFyc2VTeW1ib2woKTtpZihlPT1udWxsKXtyZXR1cm4gdGhpcy5wYXJzZUZ1bmN0aW9uKCl9dmFyIHQ9ZS5yZXN1bHQ7aWYodD09PVwiXFxcXGxlZnRcIil7dmFyIHI9dGhpcy5wYXJzZUZ1bmN0aW9uKGUpOysrdGhpcy5sZWZ0cmlnaHREZXB0aDt2YXIgYT10aGlzLnBhcnNlRXhwcmVzc2lvbihmYWxzZSk7LS10aGlzLmxlZnRyaWdodERlcHRoO3RoaXMuZXhwZWN0KFwiXFxcXHJpZ2h0XCIsZmFsc2UpO3ZhciBuPXRoaXMucGFyc2VGdW5jdGlvbigpO3JldHVybiBuZXcgYyhcImxlZnRyaWdodFwiLHtib2R5OmEsbGVmdDpyLnZhbHVlLnZhbHVlLHJpZ2h0Om4udmFsdWUudmFsdWV9LHRoaXMubW9kZSl9ZWxzZSBpZih0PT09XCJcXFxcYmVnaW5cIil7dmFyIG89dGhpcy5wYXJzZUZ1bmN0aW9uKGUpO3ZhciBsPW8udmFsdWUubmFtZTtpZighaS5oYXNPd25Qcm9wZXJ0eShsKSl7dGhyb3cgbmV3IGgoXCJObyBzdWNoIGVudmlyb25tZW50OiBcIitsLG8udmFsdWUubmFtZUdyb3VwKX12YXIgdT1pW2xdO3ZhciBwPXRoaXMucGFyc2VBcmd1bWVudHMoXCJcXFxcYmVnaW57XCIrbCtcIn1cIix1KTt2YXIgdj17bW9kZTp0aGlzLm1vZGUsZW52TmFtZTpsLHBhcnNlcjp0aGlzLHBvc2l0aW9uczpwLnBvcCgpfTt2YXIgZj11LmhhbmRsZXIodixwKTt0aGlzLmV4cGVjdChcIlxcXFxlbmRcIixmYWxzZSk7dmFyIG09dGhpcy5uZXh0VG9rZW47dmFyIHg9dGhpcy5wYXJzZUZ1bmN0aW9uKCk7aWYoeC52YWx1ZS5uYW1lIT09bCl7dGhyb3cgbmV3IGgoXCJNaXNtYXRjaDogXFxcXGJlZ2lue1wiK2wrXCJ9IG1hdGNoZWQgXCIrXCJieSBcXFxcZW5ke1wiK3gudmFsdWUubmFtZStcIn1cIixtKX1mLnBvc2l0aW9uPXgucG9zaXRpb247cmV0dXJuIGZ9ZWxzZSBpZihzLmNvbnRhaW5zKGQsdCkpe3RoaXMuY29uc3VtZVNwYWNlcygpO3ZhciBiPXRoaXMucGFyc2VFeHByZXNzaW9uKGZhbHNlKTtyZXR1cm4gbmV3IGMoXCJzaXppbmdcIix7c2l6ZTpzLmluZGV4T2YoZCx0KSsxLHZhbHVlOmJ9LHRoaXMubW9kZSl9ZWxzZSBpZihzLmNvbnRhaW5zKGcsdCkpe3RoaXMuY29uc3VtZVNwYWNlcygpO3ZhciB3PXRoaXMucGFyc2VFeHByZXNzaW9uKHRydWUpO3JldHVybiBuZXcgYyhcInN0eWxpbmdcIix7c3R5bGU6dC5zbGljZSgxLHQubGVuZ3RoLTUpLHZhbHVlOnd9LHRoaXMubW9kZSl9ZWxzZSBpZih0IGluIHkpe3ZhciBrPXlbdF07dGhpcy5jb25zdW1lU3BhY2VzKCk7dmFyIHo9dGhpcy5wYXJzZUV4cHJlc3Npb24odHJ1ZSk7aWYoay5zbGljZSgwLDQpPT09XCJ0ZXh0XCIpe3JldHVybiBuZXcgYyhcInRleHRcIix7c3R5bGU6ayxib2R5Om5ldyBjKFwib3JkZ3JvdXBcIix6LHRoaXMubW9kZSl9LHRoaXMubW9kZSl9ZWxzZXtyZXR1cm4gbmV3IGMoXCJmb250XCIse2ZvbnQ6ayxib2R5Om5ldyBjKFwib3JkZ3JvdXBcIix6LHRoaXMubW9kZSl9LHRoaXMubW9kZSl9fWVsc2UgaWYodD09PVwiXFxcXGNvbG9yXCIpe3ZhciBNPXRoaXMucGFyc2VDb2xvckdyb3VwKGZhbHNlKTtpZighTSl7dGhyb3cgbmV3IGgoXCJcXFxcY29sb3Igbm90IGZvbGxvd2VkIGJ5IGNvbG9yXCIpfXZhciBTPXRoaXMucGFyc2VFeHByZXNzaW9uKHRydWUpO3JldHVybiBuZXcgYyhcImNvbG9yXCIse3R5cGU6XCJjb2xvclwiLGNvbG9yOk0ucmVzdWx0LnZhbHVlLHZhbHVlOlN9LHRoaXMubW9kZSl9ZWxzZSBpZih0PT09XCIkXCIpe2lmKHRoaXMubW9kZT09PVwibWF0aFwiKXt0aHJvdyBuZXcgaChcIiQgd2l0aGluIG1hdGggbW9kZVwiKX10aGlzLmNvbnN1bWUoKTt2YXIgQT10aGlzLm1vZGU7dGhpcy5zd2l0Y2hNb2RlKFwibWF0aFwiKTt2YXIgTj10aGlzLnBhcnNlRXhwcmVzc2lvbihmYWxzZSxcIiRcIik7dGhpcy5leHBlY3QoXCIkXCIsdHJ1ZSk7dGhpcy5zd2l0Y2hNb2RlKEEpO3JldHVybiBuZXcgYyhcInN0eWxpbmdcIix7c3R5bGU6XCJ0ZXh0XCIsdmFsdWU6Tn0sXCJtYXRoXCIpfWVsc2V7cmV0dXJuIHRoaXMucGFyc2VGdW5jdGlvbihlKX19O3AucHJvdG90eXBlLnBhcnNlRnVuY3Rpb249ZnVuY3Rpb24oZSl7aWYoIWUpe2U9dGhpcy5wYXJzZUdyb3VwKCl9aWYoZSl7aWYoZS5pc0Z1bmN0aW9uKXt2YXIgdD1lLnJlc3VsdDt2YXIgcj1hW3RdO2lmKHRoaXMubW9kZT09PVwidGV4dFwiJiYhci5hbGxvd2VkSW5UZXh0KXt0aHJvdyBuZXcgaChcIkNhbid0IHVzZSBmdW5jdGlvbiAnXCIrdCtcIicgaW4gdGV4dCBtb2RlXCIsZS50b2tlbil9dmFyIGk9dGhpcy5wYXJzZUFyZ3VtZW50cyh0LHIpO3ZhciBuPWUudG9rZW47dmFyIG89dGhpcy5jYWxsRnVuY3Rpb24odCxpLGkucG9wKCksbik7cmV0dXJuIG5ldyBjKG8udHlwZSxvLHRoaXMubW9kZSl9ZWxzZXtyZXR1cm4gZS5yZXN1bHR9fWVsc2V7cmV0dXJuIG51bGx9fTtwLnByb3RvdHlwZS5jYWxsRnVuY3Rpb249ZnVuY3Rpb24oZSx0LHIsaSl7dmFyIG49e2Z1bmNOYW1lOmUscGFyc2VyOnRoaXMscG9zaXRpb25zOnIsdG9rZW46aX07cmV0dXJuIGFbZV0uaGFuZGxlcihuLHQpfTtwLnByb3RvdHlwZS5wYXJzZUFyZ3VtZW50cz1mdW5jdGlvbihlLHQpe3ZhciByPXQubnVtQXJncyt0Lm51bU9wdGlvbmFsQXJncztpZihyPT09MCl7cmV0dXJuW1t0aGlzLnBvc11dfXZhciBpPXQuZ3JlZWRpbmVzczt2YXIgbj1bdGhpcy5wb3NdO3ZhciBvPVtdO2Zvcih2YXIgcz0wO3M8cjtzKyspe3ZhciBsPXRoaXMubmV4dFRva2VuO3ZhciB1PXQuYXJnVHlwZXMmJnQuYXJnVHlwZXNbc107dmFyIHA9dm9pZCAwO2lmKHM8dC5udW1PcHRpb25hbEFyZ3Mpe2lmKHUpe3A9dGhpcy5wYXJzZUdyb3VwT2ZUeXBlKHUsdHJ1ZSl9ZWxzZXtwPXRoaXMucGFyc2VHcm91cCh0cnVlKX1pZighcCl7by5wdXNoKG51bGwpO24ucHVzaCh0aGlzLnBvcyk7Y29udGludWV9fWVsc2V7aWYodSl7cD10aGlzLnBhcnNlR3JvdXBPZlR5cGUodSl9ZWxzZXtwPXRoaXMucGFyc2VHcm91cCgpfWlmKCFwKXtpZighdGhpcy5zZXR0aW5ncy50aHJvd09uRXJyb3ImJnRoaXMubmV4dFRva2VuLnRleHRbMF09PT1cIlxcXFxcIil7cD1uZXcgdih0aGlzLmhhbmRsZVVuc3VwcG9ydGVkQ21kKHRoaXMubmV4dFRva2VuLnRleHQpLGZhbHNlKX1lbHNle3Rocm93IG5ldyBoKFwiRXhwZWN0ZWQgZ3JvdXAgYWZ0ZXIgJ1wiK2UrXCInXCIsbCl9fX12YXIgYz12b2lkIDA7aWYocC5pc0Z1bmN0aW9uKXt2YXIgZj1hW3AucmVzdWx0XS5ncmVlZGluZXNzO2lmKGY+aSl7Yz10aGlzLnBhcnNlRnVuY3Rpb24ocCl9ZWxzZXt0aHJvdyBuZXcgaChcIkdvdCBmdW5jdGlvbiAnXCIrcC5yZXN1bHQrXCInIGFzIFwiK1wiYXJndW1lbnQgdG8gJ1wiK2UrXCInXCIsbCl9fWVsc2V7Yz1wLnJlc3VsdH1vLnB1c2goYyk7bi5wdXNoKHRoaXMucG9zKX1vLnB1c2gobik7cmV0dXJuIG99O3AucHJvdG90eXBlLnBhcnNlR3JvdXBPZlR5cGU9ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLm1vZGU7aWYoZT09PVwib3JpZ2luYWxcIil7ZT1yfWlmKGU9PT1cImNvbG9yXCIpe3JldHVybiB0aGlzLnBhcnNlQ29sb3JHcm91cCh0KX1pZihlPT09XCJzaXplXCIpe3JldHVybiB0aGlzLnBhcnNlU2l6ZUdyb3VwKHQpfWlmKGU9PT1cInN0cmluZ1wiKXt2YXIgYT10aGlzLnBhcnNlU3RyaW5nR3JvdXAoXCJzdHJpbmdcIix0KTtyZXR1cm4gbmV3IHYoYS50ZXh0LGZhbHNlKX10aGlzLnN3aXRjaE1vZGUoZSk7aWYoZT09PVwidGV4dFwiKXt0aGlzLmNvbnN1bWVTcGFjZXMoKX12YXIgaT10aGlzLnBhcnNlR3JvdXAodCk7dGhpcy5zd2l0Y2hNb2RlKHIpO3JldHVybiBpfTtwLnByb3RvdHlwZS5jb25zdW1lU3BhY2VzPWZ1bmN0aW9uKCl7d2hpbGUodGhpcy5uZXh0VG9rZW4udGV4dD09PVwiIFwiKXt0aGlzLmNvbnN1bWUoKX19O3AucHJvdG90eXBlLnBhcnNlU3RyaW5nR3JvdXA9ZnVuY3Rpb24oZSx0KXtpZih0JiZ0aGlzLm5leHRUb2tlbi50ZXh0IT09XCJbXCIpe3JldHVybiBudWxsfXZhciByPXRoaXMubW9kZTt0aGlzLm1vZGU9XCJ0ZXh0XCI7dGhpcy5leHBlY3QodD9cIltcIjpcIntcIik7dmFyIGE9XCJcIjt2YXIgaT10aGlzLm5leHRUb2tlbjt2YXIgbj1pO3doaWxlKHRoaXMubmV4dFRva2VuLnRleHQhPT0odD9cIl1cIjpcIn1cIikpe2lmKHRoaXMubmV4dFRva2VuLnRleHQ9PT1cIkVPRlwiKXt0aHJvdyBuZXcgaChcIlVuZXhwZWN0ZWQgZW5kIG9mIGlucHV0IGluIFwiK2UsaS5yYW5nZSh0aGlzLm5leHRUb2tlbixhKSl9bj10aGlzLm5leHRUb2tlbjthKz1uLnRleHQ7dGhpcy5jb25zdW1lKCl9dGhpcy5tb2RlPXI7dGhpcy5leHBlY3QodD9cIl1cIjpcIn1cIik7cmV0dXJuIGkucmFuZ2UobixhKX07cC5wcm90b3R5cGUucGFyc2VSZWdleEdyb3VwPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcy5tb2RlO3RoaXMubW9kZT1cInRleHRcIjt2YXIgYT10aGlzLm5leHRUb2tlbjt2YXIgaT1hO3ZhciBuPVwiXCI7d2hpbGUodGhpcy5uZXh0VG9rZW4udGV4dCE9PVwiRU9GXCImJmUudGVzdChuK3RoaXMubmV4dFRva2VuLnRleHQpKXtpPXRoaXMubmV4dFRva2VuO24rPWkudGV4dDt0aGlzLmNvbnN1bWUoKX1pZihuPT09XCJcIil7dGhyb3cgbmV3IGgoXCJJbnZhbGlkIFwiK3QrXCI6ICdcIithLnRleHQrXCInXCIsYSl9dGhpcy5tb2RlPXI7cmV0dXJuIGEucmFuZ2UoaSxuKX07cC5wcm90b3R5cGUucGFyc2VDb2xvckdyb3VwPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMucGFyc2VTdHJpbmdHcm91cChcImNvbG9yXCIsZSk7aWYoIXQpe3JldHVybiBudWxsfXZhciByPS9eKCNbYS16MC05XSt8W2Etel0rKSQvaS5leGVjKHQudGV4dCk7aWYoIXIpe3Rocm93IG5ldyBoKFwiSW52YWxpZCBjb2xvcjogJ1wiK3QudGV4dCtcIidcIix0KX1yZXR1cm4gbmV3IHYobmV3IGMoXCJjb2xvclwiLHJbMF0sdGhpcy5tb2RlKSxmYWxzZSl9O3AucHJvdG90eXBlLnBhcnNlU2l6ZUdyb3VwPWZ1bmN0aW9uKGUpe3ZhciB0PXZvaWQgMDtpZighZSYmdGhpcy5uZXh0VG9rZW4udGV4dCE9PVwie1wiKXt0PXRoaXMucGFyc2VSZWdleEdyb3VwKC9eWy0rXT8gKig/OiR8XFxkK3xcXGQrXFwuXFxkKnxcXC5cXGQqKSAqW2Etel17MCwyfSAqJC8sXCJzaXplXCIpfWVsc2V7dD10aGlzLnBhcnNlU3RyaW5nR3JvdXAoXCJzaXplXCIsZSl9aWYoIXQpe3JldHVybiBudWxsfXZhciByPS8oWy0rXT8pICooXFxkKyg/OlxcLlxcZCopP3xcXC5cXGQrKSAqKFthLXpdezJ9KS8uZXhlYyh0LnRleHQpO2lmKCFyKXt0aHJvdyBuZXcgaChcIkludmFsaWQgc2l6ZTogJ1wiK3QudGV4dCtcIidcIix0KX12YXIgYT17bnVtYmVyOisoclsxXStyWzJdKSx1bml0OnJbM119O2lmKGEudW5pdCE9PVwiZW1cIiYmYS51bml0IT09XCJleFwiJiZhLnVuaXQhPT1cIm11XCIpe3Rocm93IG5ldyBoKFwiSW52YWxpZCB1bml0OiAnXCIrYS51bml0K1wiJ1wiLHQpfXJldHVybiBuZXcgdihuZXcgYyhcImNvbG9yXCIsYSx0aGlzLm1vZGUpLGZhbHNlKX07cC5wcm90b3R5cGUucGFyc2VHcm91cD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLm5leHRUb2tlbjtpZih0aGlzLm5leHRUb2tlbi50ZXh0PT09KGU/XCJbXCI6XCJ7XCIpKXt0aGlzLmNvbnN1bWUoKTt2YXIgcj10aGlzLnBhcnNlRXhwcmVzc2lvbihmYWxzZSxlP1wiXVwiOm51bGwpO3ZhciBhPXRoaXMubmV4dFRva2VuO3RoaXMuZXhwZWN0KGU/XCJdXCI6XCJ9XCIpO2lmKHRoaXMubW9kZT09PVwidGV4dFwiKXt0aGlzLmZvcm1MaWdhdHVyZXMocil9cmV0dXJuIG5ldyB2KG5ldyBjKFwib3JkZ3JvdXBcIixyLHRoaXMubW9kZSx0LGEpLGZhbHNlKX1lbHNle3JldHVybiBlP251bGw6dGhpcy5wYXJzZVN5bWJvbCgpfX07cC5wcm90b3R5cGUuZm9ybUxpZ2F0dXJlcz1mdW5jdGlvbihlKXt2YXIgdD1lLmxlbmd0aC0xO2Zvcih2YXIgcj0wO3I8dDsrK3Ipe3ZhciBhPWVbcl07dmFyIGk9YS52YWx1ZTtpZihpPT09XCItXCImJmVbcisxXS52YWx1ZT09PVwiLVwiKXtpZihyKzE8dCYmZVtyKzJdLnZhbHVlPT09XCItXCIpe2Uuc3BsaWNlKHIsMyxuZXcgYyhcInRleHRvcmRcIixcIi0tLVwiLFwidGV4dFwiLGEsZVtyKzJdKSk7dC09Mn1lbHNle2Uuc3BsaWNlKHIsMixuZXcgYyhcInRleHRvcmRcIixcIi0tXCIsXCJ0ZXh0XCIsYSxlW3IrMV0pKTt0LT0xfX1pZigoaT09PVwiJ1wifHxpPT09XCJgXCIpJiZlW3IrMV0udmFsdWU9PT1pKXtlLnNwbGljZShyLDIsbmV3IGMoXCJ0ZXh0b3JkXCIsaStpLFwidGV4dFwiLGEsZVtyKzFdKSk7dC09MX19fTtwLnByb3RvdHlwZS5wYXJzZVN5bWJvbD1mdW5jdGlvbigpe3ZhciBlPXRoaXMubmV4dFRva2VuO2lmKGFbZS50ZXh0XSl7dGhpcy5jb25zdW1lKCk7cmV0dXJuIG5ldyB2KGUudGV4dCx0cnVlLGUpfWVsc2UgaWYob1t0aGlzLm1vZGVdW2UudGV4dF0pe3RoaXMuY29uc3VtZSgpO3JldHVybiBuZXcgdihuZXcgYyhvW3RoaXMubW9kZV1bZS50ZXh0XS5ncm91cCxlLnRleHQsdGhpcy5tb2RlLGUpLGZhbHNlLGUpfWVsc2UgaWYodGhpcy5tb2RlPT09XCJ0ZXh0XCImJmwudGVzdChlLnRleHQpKXt0aGlzLmNvbnN1bWUoKTtyZXR1cm4gbmV3IHYobmV3IGMoXCJ0ZXh0b3JkXCIsZS50ZXh0LHRoaXMubW9kZSxlKSxmYWxzZSxlKX1lbHNlIGlmKGUudGV4dD09PVwiJFwiKXtyZXR1cm4gbmV3IHYoZS50ZXh0LGZhbHNlLGUpfWVsc2V7cmV0dXJuIG51bGx9fTtwLnByb3RvdHlwZS5QYXJzZU5vZGU9Yzt0LmV4cG9ydHM9cH0se1wiLi9NYWNyb0V4cGFuZGVyXCI6OCxcIi4vUGFyc2VFcnJvclwiOjEwLFwiLi9lbnZpcm9ubWVudHNcIjoyMCxcIi4vZnVuY3Rpb25zXCI6MjMsXCIuL3BhcnNlRGF0YVwiOjI2LFwiLi9zeW1ib2xzXCI6MjksXCIuL3VuaWNvZGVSZWdleGVzXCI6MzAsXCIuL3V0aWxzXCI6MzF9XSwxMjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL3V0aWxzXCIpO2Z1bmN0aW9uIGkoZSl7ZT1lfHx7fTt0aGlzLmRpc3BsYXlNb2RlPWEuZGVmbHQoZS5kaXNwbGF5TW9kZSxmYWxzZSk7dGhpcy50aHJvd09uRXJyb3I9YS5kZWZsdChlLnRocm93T25FcnJvcix0cnVlKTt0aGlzLmVycm9yQ29sb3I9YS5kZWZsdChlLmVycm9yQ29sb3IsXCIjY2MwMDAwXCIpO3RoaXMubWFjcm9zPWUubWFjcm9zfHx7fTt0aGlzLmNvbG9ySXNUZXh0Q29sb3I9YS5kZWZsdChlLmNvbG9ySXNUZXh0Q29sb3IsZmFsc2UpfXQuZXhwb3J0cz1pfSx7XCIuL3V0aWxzXCI6MzF9XSwxMzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGEoZSx0LHIpe3RoaXMuaWQ9ZTt0aGlzLnNpemU9dDt0aGlzLmNyYW1wZWQ9cn1hLnByb3RvdHlwZS5zdXA9ZnVuY3Rpb24oKXtyZXR1cm4gY1t2W3RoaXMuaWRdXX07YS5wcm90b3R5cGUuc3ViPWZ1bmN0aW9uKCl7cmV0dXJuIGNbZlt0aGlzLmlkXV19O2EucHJvdG90eXBlLmZyYWNOdW09ZnVuY3Rpb24oKXtyZXR1cm4gY1ttW3RoaXMuaWRdXX07YS5wcm90b3R5cGUuZnJhY0Rlbj1mdW5jdGlvbigpe3JldHVybiBjW2RbdGhpcy5pZF1dfTthLnByb3RvdHlwZS5jcmFtcD1mdW5jdGlvbigpe3JldHVybiBjW2dbdGhpcy5pZF1dfTthLnByb3RvdHlwZS50ZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIGNbeVt0aGlzLmlkXV19O2EucHJvdG90eXBlLmlzVGlnaHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zaXplPj0yfTt2YXIgaT0wO3ZhciBuPTE7dmFyIG89Mjt2YXIgcz0zO3ZhciBsPTQ7dmFyIHU9NTt2YXIgaD02O3ZhciBwPTc7dmFyIGM9W25ldyBhKGksMCxmYWxzZSksbmV3IGEobiwwLHRydWUpLG5ldyBhKG8sMSxmYWxzZSksbmV3IGEocywxLHRydWUpLG5ldyBhKGwsMixmYWxzZSksbmV3IGEodSwyLHRydWUpLG5ldyBhKGgsMyxmYWxzZSksbmV3IGEocCwzLHRydWUpXTt2YXIgdj1bbCx1LGwsdSxoLHAsaCxwXTt2YXIgZj1bdSx1LHUsdSxwLHAscCxwXTt2YXIgbT1bbyxzLGwsdSxoLHAsaCxwXTt2YXIgZD1bcyxzLHUsdSxwLHAscCxwXTt2YXIgZz1bbixuLHMscyx1LHUscCxwXTt2YXIgeT1baSxuLG8scyxvLHMsbyxzXTt0LmV4cG9ydHM9e0RJU1BMQVk6Y1tpXSxURVhUOmNbb10sU0NSSVBUOmNbbF0sU0NSSVBUU0NSSVBUOmNbaF19fSx7fV0sMTQ6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi9kb21UcmVlXCIpO3ZhciBpPWUoXCIuL2ZvbnRNZXRyaWNzXCIpO3ZhciBuPWUoXCIuL3N5bWJvbHNcIik7dmFyIG89ZShcIi4vdXRpbHNcIik7dmFyIHM9W1wiXFxcXGltYXRoXCIsXCJcXFxcam1hdGhcIixcIlxcXFxwb3VuZHNcIl07dmFyIGw9ZnVuY3Rpb24gZSh0LHIsYSl7aWYoblthXVt0XSYmblthXVt0XS5yZXBsYWNlKXt0PW5bYV1bdF0ucmVwbGFjZX1yZXR1cm57dmFsdWU6dCxtZXRyaWNzOmkuZ2V0Q2hhcmFjdGVyTWV0cmljcyh0LHIpfX07dmFyIHU9ZnVuY3Rpb24gZSh0LHIsaSxuLG8pe3ZhciBzPWwodCxyLGkpO3ZhciB1PXMubWV0cmljczt0PXMudmFsdWU7dmFyIGg9dm9pZCAwO2lmKHUpe3ZhciBwPXUuaXRhbGljO2lmKGk9PT1cInRleHRcIil7cD0wfWg9bmV3IGEuc3ltYm9sTm9kZSh0LHUuaGVpZ2h0LHUuZGVwdGgscCx1LnNrZXcsbyl9ZWxzZXt0eXBlb2YgY29uc29sZSE9PVwidW5kZWZpbmVkXCImJmNvbnNvbGUud2FybihcIk5vIGNoYXJhY3RlciBtZXRyaWNzIGZvciAnXCIrdCtcIicgaW4gc3R5bGUgJ1wiK3IrXCInXCIpO2g9bmV3IGEuc3ltYm9sTm9kZSh0LDAsMCwwLDAsbyl9aWYobil7aC5tYXhGb250U2l6ZT1uLnNpemVNdWx0aXBsaWVyO2lmKG4uc3R5bGUuaXNUaWdodCgpKXtoLmNsYXNzZXMucHVzaChcIm10aWdodFwiKX1pZihuLmdldENvbG9yKCkpe2guc3R5bGUuY29sb3I9bi5nZXRDb2xvcigpfX1yZXR1cm4gaH07dmFyIGg9ZnVuY3Rpb24gZSh0LHIsYSxpKXtpZih0PT09XCJcXFxcXCJ8fG5bcl1bdF0uZm9udD09PVwibWFpblwiKXtyZXR1cm4gdSh0LFwiTWFpbi1SZWd1bGFyXCIscixhLGkpfWVsc2V7cmV0dXJuIHUodCxcIkFNUy1SZWd1bGFyXCIscixhLGkuY29uY2F0KFtcImFtc3JtXCJdKSl9fTt2YXIgcD1mdW5jdGlvbiBlKHQscixhLGksbyl7aWYobz09PVwibWF0aG9yZFwiKXt2YXIgcz1jKHQscixhLGkpO3JldHVybiB1KHQscy5mb250TmFtZSxyLGEsaS5jb25jYXQoW3MuZm9udENsYXNzXSkpfWVsc2UgaWYobz09PVwidGV4dG9yZFwiKXt2YXIgbD1uW3JdW3RdJiZuW3JdW3RdLmZvbnQ7aWYobD09PVwiYW1zXCIpe3JldHVybiB1KHQsXCJBTVMtUmVndWxhclwiLHIsYSxpLmNvbmNhdChbXCJhbXNybVwiXSkpfWVsc2V7cmV0dXJuIHUodCxcIk1haW4tUmVndWxhclwiLHIsYSxpLmNvbmNhdChbXCJtYXRocm1cIl0pKX19ZWxzZXt0aHJvdyBuZXcgRXJyb3IoXCJ1bmV4cGVjdGVkIHR5cGU6IFwiK28rXCIgaW4gbWF0aERlZmF1bHRcIil9fTt2YXIgYz1mdW5jdGlvbiBlKHQscixhLGkpe2lmKC9bMC05XS8udGVzdCh0LmNoYXJBdCgwKSl8fG8uY29udGFpbnMocyx0KSl7cmV0dXJue2ZvbnROYW1lOlwiTWFpbi1JdGFsaWNcIixmb250Q2xhc3M6XCJtYWluaXRcIn19ZWxzZXtyZXR1cm57Zm9udE5hbWU6XCJNYXRoLUl0YWxpY1wiLGZvbnRDbGFzczpcIm1hdGhpdFwifX19O3ZhciB2PWZ1bmN0aW9uIGUodCxyLGEpe3ZhciBpPXQubW9kZTt2YXIgbj10LnZhbHVlO3ZhciBoPVtcIm1vcmRcIl07dmFyIHY9ci5mb250O2lmKHYpe3ZhciBmPXZvaWQgMDtpZih2PT09XCJtYXRoaXRcInx8by5jb250YWlucyhzLG4pKXtmPWMobixpLHIsaCl9ZWxzZXtmPXdbdl19aWYobChuLGYuZm9udE5hbWUsaSkubWV0cmljcyl7cmV0dXJuIHUobixmLmZvbnROYW1lLGkscixoLmNvbmNhdChbZi5mb250Q2xhc3N8fHZdKSl9ZWxzZXtyZXR1cm4gcChuLGkscixoLGEpfX1lbHNle3JldHVybiBwKG4saSxyLGgsYSl9fTt2YXIgZj1mdW5jdGlvbiBlKHQpe3ZhciByPTA7dmFyIGE9MDt2YXIgaT0wO2lmKHQuY2hpbGRyZW4pe2Zvcih2YXIgbj0wO248dC5jaGlsZHJlbi5sZW5ndGg7bisrKXtpZih0LmNoaWxkcmVuW25dLmhlaWdodD5yKXtyPXQuY2hpbGRyZW5bbl0uaGVpZ2h0fWlmKHQuY2hpbGRyZW5bbl0uZGVwdGg+YSl7YT10LmNoaWxkcmVuW25dLmRlcHRofWlmKHQuY2hpbGRyZW5bbl0ubWF4Rm9udFNpemU+aSl7aT10LmNoaWxkcmVuW25dLm1heEZvbnRTaXplfX19dC5oZWlnaHQ9cjt0LmRlcHRoPWE7dC5tYXhGb250U2l6ZT1pfTt2YXIgbT1mdW5jdGlvbiBlKHQscixpKXt2YXIgbj1uZXcgYS5zcGFuKHQscixpKTtmKG4pO3JldHVybiBufTt2YXIgZD1mdW5jdGlvbiBlKHQscil7dC5jaGlsZHJlbj1yLmNvbmNhdCh0LmNoaWxkcmVuKTtmKHQpfTt2YXIgZz1mdW5jdGlvbiBlKHQscil7dmFyIGk9bmV3IGEuZG9jdW1lbnRGcmFnbWVudCh0LHIpO2YoaSk7cmV0dXJuIGl9O3ZhciB5PWZ1bmN0aW9uIGUodCxyKXt2YXIgaT1tKFtdLFtuZXcgYS5zeW1ib2xOb2RlKFwiXFx1MjAwYlwiKV0pO2kuc3R5bGUuZm9udFNpemU9citcImVtXCI7dmFyIG49bShbXCJmb250c2l6ZS1lbnN1cmVyXCJdLmNvbmNhdCh0LmJhc2VTaXppbmdDbGFzc2VzKCkpLFtpXSk7cmV0dXJuIG59O3ZhciB4PWZ1bmN0aW9uIGUodCxyLGksbil7dmFyIG89dm9pZCAwO3ZhciBzPXZvaWQgMDt2YXIgbD12b2lkIDA7aWYocj09PVwiaW5kaXZpZHVhbFNoaWZ0XCIpe3ZhciB1PXQ7dD1bdVswXV07bz0tdVswXS5zaGlmdC11WzBdLmVsZW0uZGVwdGg7cz1vO2ZvcihsPTE7bDx1Lmxlbmd0aDtsKyspe3ZhciBoPS11W2xdLnNoaWZ0LXMtdVtsXS5lbGVtLmRlcHRoO3ZhciBwPWgtKHVbbC0xXS5lbGVtLmhlaWdodCt1W2wtMV0uZWxlbS5kZXB0aCk7cz1zK2g7dC5wdXNoKHt0eXBlOlwia2VyblwiLHNpemU6cH0pO3QucHVzaCh1W2xdKX19ZWxzZSBpZihyPT09XCJ0b3BcIil7dmFyIGM9aTtmb3IobD0wO2w8dC5sZW5ndGg7bCsrKXtpZih0W2xdLnR5cGU9PT1cImtlcm5cIil7Yy09dFtsXS5zaXplfWVsc2V7Yy09dFtsXS5lbGVtLmhlaWdodCt0W2xdLmVsZW0uZGVwdGh9fW89Y31lbHNlIGlmKHI9PT1cImJvdHRvbVwiKXtvPS1pfWVsc2UgaWYocj09PVwic2hpZnRcIil7bz0tdFswXS5lbGVtLmRlcHRoLWl9ZWxzZSBpZihyPT09XCJmaXJzdEJhc2VsaW5lXCIpe289LXRbMF0uZWxlbS5kZXB0aH1lbHNle289MH12YXIgdj0wO2ZvcihsPTA7bDx0Lmxlbmd0aDtsKyspe2lmKHRbbF0udHlwZT09PVwiZWxlbVwiKXt2PU1hdGgubWF4KHYsdFtsXS5lbGVtLm1heEZvbnRTaXplKX19dmFyIGY9eShuLHYpO3ZhciBkPVtdO3M9bztmb3IobD0wO2w8dC5sZW5ndGg7bCsrKXtpZih0W2xdLnR5cGU9PT1cImtlcm5cIil7cys9dFtsXS5zaXplfWVsc2V7dmFyIGc9dFtsXS5lbGVtO3ZhciB4PS1nLmRlcHRoLXM7cys9Zy5oZWlnaHQrZy5kZXB0aDt2YXIgYj1tKFtdLFtmLGddKTtiLmhlaWdodC09eDtiLmRlcHRoKz14O2Iuc3R5bGUudG9wPXgrXCJlbVwiO2QucHVzaChiKX19dmFyIHc9bShbXCJiYXNlbGluZS1maXhcIl0sW2YsbmV3IGEuc3ltYm9sTm9kZShcIlxcdTIwMGJcIildKTtkLnB1c2godyk7dmFyIGs9bShbXCJ2bGlzdFwiXSxkKTtrLmhlaWdodD1NYXRoLm1heChzLGsuaGVpZ2h0KTtrLmRlcHRoPU1hdGgubWF4KC1vLGsuZGVwdGgpO3JldHVybiBrfTt2YXIgYj17XCJcXFxccXF1YWRcIjp7c2l6ZTpcIjJlbVwiLGNsYXNzTmFtZTpcInFxdWFkXCJ9LFwiXFxcXHF1YWRcIjp7c2l6ZTpcIjFlbVwiLGNsYXNzTmFtZTpcInF1YWRcIn0sXCJcXFxcZW5zcGFjZVwiOntzaXplOlwiMC41ZW1cIixjbGFzc05hbWU6XCJlbnNwYWNlXCJ9LFwiXFxcXDtcIjp7c2l6ZTpcIjAuMjc3Nzc4ZW1cIixjbGFzc05hbWU6XCJ0aGlja3NwYWNlXCJ9LFwiXFxcXDpcIjp7c2l6ZTpcIjAuMjIyMjJlbVwiLGNsYXNzTmFtZTpcIm1lZGl1bXNwYWNlXCJ9LFwiXFxcXCxcIjp7c2l6ZTpcIjAuMTY2NjdlbVwiLGNsYXNzTmFtZTpcInRoaW5zcGFjZVwifSxcIlxcXFwhXCI6e3NpemU6XCItMC4xNjY2N2VtXCIsY2xhc3NOYW1lOlwibmVnYXRpdmV0aGluc3BhY2VcIn19O3ZhciB3PXttYXRoYmY6e3ZhcmlhbnQ6XCJib2xkXCIsZm9udE5hbWU6XCJNYWluLUJvbGRcIn0sbWF0aHJtOnt2YXJpYW50Olwibm9ybWFsXCIsZm9udE5hbWU6XCJNYWluLVJlZ3VsYXJcIn0sdGV4dGl0Ont2YXJpYW50OlwiaXRhbGljXCIsZm9udE5hbWU6XCJNYWluLUl0YWxpY1wifSxtYXRoYmI6e3ZhcmlhbnQ6XCJkb3VibGUtc3RydWNrXCIsZm9udE5hbWU6XCJBTVMtUmVndWxhclwifSxtYXRoY2FsOnt2YXJpYW50Olwic2NyaXB0XCIsZm9udE5hbWU6XCJDYWxpZ3JhcGhpYy1SZWd1bGFyXCJ9LG1hdGhmcmFrOnt2YXJpYW50OlwiZnJha3R1clwiLGZvbnROYW1lOlwiRnJha3R1ci1SZWd1bGFyXCJ9LG1hdGhzY3I6e3ZhcmlhbnQ6XCJzY3JpcHRcIixmb250TmFtZTpcIlNjcmlwdC1SZWd1bGFyXCJ9LG1hdGhzZjp7dmFyaWFudDpcInNhbnMtc2VyaWZcIixmb250TmFtZTpcIlNhbnNTZXJpZi1SZWd1bGFyXCJ9LG1hdGh0dDp7dmFyaWFudDpcIm1vbm9zcGFjZVwiLGZvbnROYW1lOlwiVHlwZXdyaXRlci1SZWd1bGFyXCJ9fTt0LmV4cG9ydHM9e2ZvbnRNYXA6dyxtYWtlU3ltYm9sOnUsbWF0aHN5bTpoLG1ha2VTcGFuOm0sbWFrZUZyYWdtZW50OmcsbWFrZVZMaXN0OngsbWFrZU9yZDp2LHByZXBlbmRDaGlsZHJlbjpkLHNwYWNpbmdGdW5jdGlvbnM6Yn19LHtcIi4vZG9tVHJlZVwiOjE5LFwiLi9mb250TWV0cmljc1wiOjIxLFwiLi9zeW1ib2xzXCI6MjksXCIuL3V0aWxzXCI6MzF9XSwxNTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCJiYWJlbC1ydW50aW1lL2NvcmUtanMvanNvbi9zdHJpbmdpZnlcIik7dmFyIGk9bihhKTtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX12YXIgbz1lKFwiLi9QYXJzZUVycm9yXCIpO3ZhciBzPWUoXCIuL1N0eWxlXCIpO3ZhciBsPWUoXCIuL2J1aWxkQ29tbW9uXCIpO3ZhciB1PWUoXCIuL2RlbGltaXRlclwiKTt2YXIgaD1lKFwiLi9kb21UcmVlXCIpO3ZhciBwPWUoXCIuL3V0aWxzXCIpO3ZhciBjPWUoXCIuL3N0cmV0Y2h5XCIpO3ZhciB2PWwubWFrZVNwYW47dmFyIGY9ZnVuY3Rpb24gZSh0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIGguc3BhbiYmdC5jbGFzc2VzWzBdPT09XCJtc3BhY2VcIn07dmFyIG09ZnVuY3Rpb24gZSh0KXtyZXR1cm4gdCYmdC5jbGFzc2VzWzBdPT09XCJtYmluXCJ9O3ZhciBkPWZ1bmN0aW9uIGUodCxyKXtpZih0KXtyZXR1cm4gcC5jb250YWlucyhbXCJtYmluXCIsXCJtb3BlblwiLFwibXJlbFwiLFwibW9wXCIsXCJtcHVuY3RcIl0sdC5jbGFzc2VzWzBdKX1lbHNle3JldHVybiByfX07dmFyIGc9ZnVuY3Rpb24gZSh0LHIpe2lmKHQpe3JldHVybiBwLmNvbnRhaW5zKFtcIm1yZWxcIixcIm1jbG9zZVwiLFwibXB1bmN0XCJdLHQuY2xhc3Nlc1swXSl9ZWxzZXtyZXR1cm4gcn19O3ZhciB5PWZ1bmN0aW9uIGUodCxyKXt2YXIgYT1yO3doaWxlKGE8dC5sZW5ndGgmJmYodFthXSkpe2ErK31pZihhPT09cil7cmV0dXJuIG51bGx9ZWxzZXtyZXR1cm4gdC5zcGxpY2UocixhLXIpfX07dmFyIHg9ZnVuY3Rpb24gZSh0LHIsYSl7dmFyIGk9W107Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciBvPXRbbl07dmFyIHM9cShvLHIpO2lmKHMgaW5zdGFuY2VvZiBoLmRvY3VtZW50RnJhZ21lbnQpe0FycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KGkscy5jaGlsZHJlbil9ZWxzZXtpLnB1c2gocyl9fWZvcih2YXIgdT0wO3U8aS5sZW5ndGg7dSsrKXt2YXIgcD15KGksdSk7aWYocCl7aWYodTxpLmxlbmd0aCl7aWYoaVt1XWluc3RhbmNlb2YgaC5zeW1ib2xOb2RlKXtpW3VdPXYoW10uY29uY2F0KGlbdV0uY2xhc3NlcyksW2lbdV1dKX1sLnByZXBlbmRDaGlsZHJlbihpW3VdLHApfWVsc2V7QXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkoaSxwKTticmVha319fWZvcih2YXIgYz0wO2M8aS5sZW5ndGg7YysrKXt2YXIgZj0xO3ZhciB4PTE7d2hpbGUoaVtjLWZdJiZpW2MtZl0uY2xhc3Nlc1swXT09PVwiY3Vyc29yXCIpe2YrK313aGlsZShpW2MreF0mJmlbYyt4XS5jbGFzc2VzWzBdPT09XCJjdXJzb3JcIil7eCsrfWlmKG0oaVtjXSkmJihkKGlbYy1mXSxhKXx8ZyhpW2MreF0sYSkpKXtpW2NdLmNsYXNzZXNbMF09XCJtb3JkXCJ9fXJldHVybiBpfTt2YXIgYj1mdW5jdGlvbiBlKHQpe2lmKHQgaW5zdGFuY2VvZiBoLmRvY3VtZW50RnJhZ21lbnQpe2lmKHQuY2hpbGRyZW4ubGVuZ3RoKXtyZXR1cm4gZSh0LmNoaWxkcmVuW3QuY2hpbGRyZW4ubGVuZ3RoLTFdKX19ZWxzZXtpZihwLmNvbnRhaW5zKFtcIm1vcmRcIixcIm1vcFwiLFwibWJpblwiLFwibXJlbFwiLFwibW9wZW5cIixcIm1jbG9zZVwiLFwibXB1bmN0XCIsXCJtaW5uZXJcIl0sdC5jbGFzc2VzWzBdKSl7cmV0dXJuIHQuY2xhc3Nlc1swXX19cmV0dXJuIG51bGx9O3ZhciB3PWZ1bmN0aW9uIGUodCxyKXtpZighdC52YWx1ZS5iYXNlKXtyZXR1cm4gZmFsc2V9ZWxzZXt2YXIgYT10LnZhbHVlLmJhc2U7aWYoYS50eXBlPT09XCJvcFwiKXtyZXR1cm4gYS52YWx1ZS5saW1pdHMmJihyLnN0eWxlLnNpemU9PT1zLkRJU1BMQVkuc2l6ZXx8YS52YWx1ZS5hbHdheXNIYW5kbGVTdXBTdWIpfWVsc2UgaWYoYS50eXBlPT09XCJhY2NlbnRcIil7cmV0dXJuIHooYS52YWx1ZS5iYXNlKX1lbHNlIGlmKGEudHlwZT09PVwiaG9yaXpCcmFjZVwiKXt2YXIgaT10LnZhbHVlLnN1Yj9mYWxzZTp0cnVlO3JldHVybiBpPT09YS52YWx1ZS5pc092ZXJ9ZWxzZXtyZXR1cm4gbnVsbH19fTt2YXIgaz1mdW5jdGlvbiBlKHQpe2lmKCF0KXtyZXR1cm4gZmFsc2V9ZWxzZSBpZih0LnR5cGU9PT1cIm9yZGdyb3VwXCIpe2lmKHQudmFsdWUubGVuZ3RoPT09MSl7cmV0dXJuIGUodC52YWx1ZVswXSl9ZWxzZXtyZXR1cm4gdH19ZWxzZSBpZih0LnR5cGU9PT1cImNvbG9yXCIpe2lmKHQudmFsdWUudmFsdWUubGVuZ3RoPT09MSl7cmV0dXJuIGUodC52YWx1ZS52YWx1ZVswXSl9ZWxzZXtyZXR1cm4gdH19ZWxzZSBpZih0LnR5cGU9PT1cImZvbnRcIil7cmV0dXJuIGUodC52YWx1ZS5ib2R5KX1lbHNle3JldHVybiB0fX07dmFyIHo9ZnVuY3Rpb24gZSh0KXt2YXIgcj1rKHQpO3JldHVybiByLnR5cGU9PT1cIm1hdGhvcmRcInx8ci50eXBlPT09XCJ0ZXh0b3JkXCJ8fHIudHlwZT09PVwiYmluXCJ8fHIudHlwZT09PVwicmVsXCJ8fHIudHlwZT09PVwiaW5uZXJcInx8ci50eXBlPT09XCJvcGVuXCJ8fHIudHlwZT09PVwiY2xvc2VcInx8ci50eXBlPT09XCJwdW5jdFwifTt2YXIgTT1mdW5jdGlvbiBlKHQscil7dmFyIGE9W1wibnVsbGRlbGltaXRlclwiXS5jb25jYXQodC5iYXNlU2l6aW5nQ2xhc3NlcygpKTtyZXR1cm4gdihyLmNvbmNhdChhKSl9O3ZhciBTPXt9O1MubWF0aG9yZD1mdW5jdGlvbihlLHQpe3JldHVybiBsLm1ha2VPcmQoZSx0LFwibWF0aG9yZFwiKX07Uy50ZXh0b3JkPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGwubWFrZU9yZChlLHQsXCJ0ZXh0b3JkXCIpfTtTLmJpbj1mdW5jdGlvbihlLHQpe3JldHVybiBsLm1hdGhzeW0oZS52YWx1ZSxlLm1vZGUsdCxbXCJtYmluXCJdKX07Uy5yZWw9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbC5tYXRoc3ltKGUudmFsdWUsZS5tb2RlLHQsW1wibXJlbFwiXSl9O1Mub3Blbj1mdW5jdGlvbihlLHQpe3JldHVybiBsLm1hdGhzeW0oZS52YWx1ZSxlLm1vZGUsdCxbXCJtb3BlblwiXSl9O1MuY2xvc2U9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbC5tYXRoc3ltKGUudmFsdWUsZS5tb2RlLHQsW1wibWNsb3NlXCJdKX07Uy5pbm5lcj1mdW5jdGlvbihlLHQpe3JldHVybiBsLm1hdGhzeW0oZS52YWx1ZSxlLm1vZGUsdCxbXCJtaW5uZXJcIl0pfTtTLnB1bmN0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGwubWF0aHN5bShlLnZhbHVlLGUubW9kZSx0LFtcIm1wdW5jdFwiXSl9O1Mub3JkZ3JvdXA9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdihbXCJtb3JkXCJdLHgoZS52YWx1ZSx0LHRydWUpLHQpfTtTLnRleHQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj10LndpdGhGb250KGUudmFsdWUuc3R5bGUpO3ZhciBhPXgoZS52YWx1ZS5ib2R5LHIsdHJ1ZSk7Zm9yKHZhciBpPTA7aTxhLmxlbmd0aC0xO2krKyl7aWYoYVtpXS50cnlDb21iaW5lKGFbaSsxXSkpe2Euc3BsaWNlKGkrMSwxKTtpLS19fXJldHVybiB2KFtcIm1vcmRcIixcInRleHRcIl0sYSxyKX07Uy54bWxDbGFzcz1mdW5jdGlvbihlLHQscil7dmFyIGE9eChlLnZhbHVlLnZhbHVlLHQscik7cmV0dXJuIG5ldyBsLm1ha2VGcmFnbWVudChhLFtlLnZhbHVlLmNsXSl9O1MuY29sb3I9ZnVuY3Rpb24oZSx0KXt2YXIgcj14KGUudmFsdWUudmFsdWUsdC53aXRoQ29sb3IoZS52YWx1ZS5jb2xvciksZmFsc2UpO3JldHVybiBuZXcgbC5tYWtlRnJhZ21lbnQocil9O1Muc3Vwc3ViPWZ1bmN0aW9uKGUsdCl7aWYodyhlLHQpKXtyZXR1cm4gU1tlLnZhbHVlLmJhc2UudHlwZV0oZSx0KX12YXIgcj1xKGUudmFsdWUuYmFzZSx0KTt2YXIgYT12b2lkIDA7dmFyIGk9dm9pZCAwO3ZhciBuPXQuZm9udE1ldHJpY3MoKTt2YXIgbz12b2lkIDA7dmFyIHU9MDt2YXIgcD0wO2lmKGUudmFsdWUuc3VwKXtvPXQuaGF2aW5nU3R5bGUodC5zdHlsZS5zdXAoKSk7YT1xKGUudmFsdWUuc3VwLG8sdCk7aWYoIXooZS52YWx1ZS5iYXNlKSl7dT1yLmhlaWdodC1vLmZvbnRNZXRyaWNzKCkuc3VwRHJvcCpvLnNpemVNdWx0aXBsaWVyL3Quc2l6ZU11bHRpcGxpZXJ9fWlmKGUudmFsdWUuc3ViKXtvPXQuaGF2aW5nU3R5bGUodC5zdHlsZS5zdWIoKSk7aT1xKGUudmFsdWUuc3ViLG8sdCk7aWYoIXooZS52YWx1ZS5iYXNlKSl7cD1yLmRlcHRoK28uZm9udE1ldHJpY3MoKS5zdWJEcm9wKm8uc2l6ZU11bHRpcGxpZXIvdC5zaXplTXVsdGlwbGllcn19dmFyIGM9dm9pZCAwO2lmKHQuc3R5bGU9PT1zLkRJU1BMQVkpe2M9bi5zdXAxfWVsc2UgaWYodC5zdHlsZS5jcmFtcGVkKXtjPW4uc3VwM31lbHNle2M9bi5zdXAyfXZhciBmPXQuc2l6ZU11bHRpcGxpZXI7dmFyIG09LjUvbi5wdFBlckVtL2YrXCJlbVwiO3ZhciBkPXZvaWQgMDtpZighZS52YWx1ZS5zdXApe3A9TWF0aC5tYXgocCxuLnN1YjEsaS5oZWlnaHQtLjgqbi54SGVpZ2h0KTtkPWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOml9XSxcInNoaWZ0XCIscCx0KTtkLmNoaWxkcmVuWzBdLnN0eWxlLm1hcmdpblJpZ2h0PW07aWYociBpbnN0YW5jZW9mIGguc3ltYm9sTm9kZSl7ZC5jaGlsZHJlblswXS5zdHlsZS5tYXJnaW5MZWZ0PS1yLml0YWxpYytcImVtXCJ9fWVsc2UgaWYoIWUudmFsdWUuc3ViKXt1PU1hdGgubWF4KHUsYyxhLmRlcHRoKy4yNSpuLnhIZWlnaHQpO2Q9bC5tYWtlVkxpc3QoW3t0eXBlOlwiZWxlbVwiLGVsZW06YX1dLFwic2hpZnRcIiwtdSx0KTtkLmNoaWxkcmVuWzBdLnN0eWxlLm1hcmdpblJpZ2h0PW19ZWxzZXt1PU1hdGgubWF4KHUsYyxhLmRlcHRoKy4yNSpuLnhIZWlnaHQpO3A9TWF0aC5tYXgocCxuLnN1YjIpO3ZhciBnPW4uZGVmYXVsdFJ1bGVUaGlja25lc3M7aWYodS1hLmRlcHRoLShpLmhlaWdodC1wKTw0Kmcpe3A9NCpnLSh1LWEuZGVwdGgpK2kuaGVpZ2h0O3ZhciB5PS44Km4ueEhlaWdodC0odS1hLmRlcHRoKTtpZih5PjApe3UrPXk7cC09eX19ZD1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTppLHNoaWZ0OnB9LHt0eXBlOlwiZWxlbVwiLGVsZW06YSxzaGlmdDotdX1dLFwiaW5kaXZpZHVhbFNoaWZ0XCIsbnVsbCx0KTtpZihyIGluc3RhbmNlb2YgaC5zeW1ib2xOb2RlKXtkLmNoaWxkcmVuWzBdLnN0eWxlLm1hcmdpbkxlZnQ9LXIuaXRhbGljK1wiZW1cIn1kLmNoaWxkcmVuWzBdLnN0eWxlLm1hcmdpblJpZ2h0PW07ZC5jaGlsZHJlblsxXS5zdHlsZS5tYXJnaW5SaWdodD1tfXZhciB4PWIocil8fFwibW9yZFwiO3JldHVybiB2KFt4XSxbcix2KFtcIm1zdXBzdWJcIl0sW2RdKV0sdCl9O1MuZ2VuZnJhYz1mdW5jdGlvbihlLHQpe3ZhciByPXQuc3R5bGU7aWYoZS52YWx1ZS5zaXplPT09XCJkaXNwbGF5XCIpe3I9cy5ESVNQTEFZfWVsc2UgaWYoZS52YWx1ZS5zaXplPT09XCJ0ZXh0XCIpe3I9cy5URVhUfXZhciBhPXIuZnJhY051bSgpO3ZhciBpPXIuZnJhY0RlbigpO3ZhciBuPXZvaWQgMDtuPXQuaGF2aW5nU3R5bGUoYSk7dmFyIG89cShlLnZhbHVlLm51bWVyLG4sdCk7bj10LmhhdmluZ1N0eWxlKGkpO3ZhciBoPXEoZS52YWx1ZS5kZW5vbSxuLHQpO3ZhciBwPXZvaWQgMDtpZihlLnZhbHVlLmhhc0JhckxpbmUpe3A9TihcImZyYWMtbGluZVwiLHQpfWVsc2V7cD1udWxsfXZhciBjPXA/cC5oZWlnaHQ6MDt2YXIgZj12b2lkIDA7dmFyIG09dm9pZCAwO3ZhciBkPXZvaWQgMDtpZihyLnNpemU9PT1zLkRJU1BMQVkuc2l6ZSl7Zj10LmZvbnRNZXRyaWNzKCkubnVtMTtpZihjPjApe209MypjfWVsc2V7bT03KnQuZm9udE1ldHJpY3MoKS5kZWZhdWx0UnVsZVRoaWNrbmVzc31kPXQuZm9udE1ldHJpY3MoKS5kZW5vbTF9ZWxzZXtpZihjPjApe2Y9dC5mb250TWV0cmljcygpLm51bTI7bT1jfWVsc2V7Zj10LmZvbnRNZXRyaWNzKCkubnVtMzttPTMqdC5mb250TWV0cmljcygpLmRlZmF1bHRSdWxlVGhpY2tuZXNzO1xufWQ9dC5mb250TWV0cmljcygpLmRlbm9tMn12YXIgZz12b2lkIDA7aWYoYz09PTApe3ZhciB5PWYtby5kZXB0aC0oaC5oZWlnaHQtZCk7aWYoeTxtKXtmKz0uNSoobS15KTtkKz0uNSoobS15KX1nPWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOmgsc2hpZnQ6ZH0se3R5cGU6XCJlbGVtXCIsZWxlbTpvLHNoaWZ0Oi1mfV0sXCJpbmRpdmlkdWFsU2hpZnRcIixudWxsLHQpfWVsc2V7dmFyIHg9dC5mb250TWV0cmljcygpLmF4aXNIZWlnaHQ7aWYoZi1vLmRlcHRoLSh4Ky41KmMpPG0pe2YrPW0tKGYtby5kZXB0aC0oeCsuNSpjKSl9aWYoeC0uNSpjLShoLmhlaWdodC1kKTxtKXtkKz1tLSh4LS41KmMtKGguaGVpZ2h0LWQpKX12YXIgYj0tKHgtLjUqYyk7Zz1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpoLHNoaWZ0OmR9LHt0eXBlOlwiZWxlbVwiLGVsZW06cCxzaGlmdDpifSx7dHlwZTpcImVsZW1cIixlbGVtOm8sc2hpZnQ6LWZ9XSxcImluZGl2aWR1YWxTaGlmdFwiLG51bGwsdCl9bj10LmhhdmluZ1N0eWxlKHIpO2cuaGVpZ2h0Kj1uLnNpemVNdWx0aXBsaWVyL3Quc2l6ZU11bHRpcGxpZXI7Zy5kZXB0aCo9bi5zaXplTXVsdGlwbGllci90LnNpemVNdWx0aXBsaWVyO3ZhciB3PXZvaWQgMDtpZihyLnNpemU9PT1zLkRJU1BMQVkuc2l6ZSl7dz10LmZvbnRNZXRyaWNzKCkuZGVsaW0xfWVsc2V7dz10LmZvbnRNZXRyaWNzKCkuZGVsaW0yfXZhciBrPXZvaWQgMDt2YXIgej12b2lkIDA7aWYoZS52YWx1ZS5sZWZ0RGVsaW09PW51bGwpe2s9TSh0LFtcIm1vcGVuXCJdKX1lbHNle2s9dS5jdXN0b21TaXplZERlbGltKGUudmFsdWUubGVmdERlbGltLHcsdHJ1ZSx0LmhhdmluZ1N0eWxlKHIpLGUubW9kZSxbXCJtb3BlblwiXSl9aWYoZS52YWx1ZS5yaWdodERlbGltPT1udWxsKXt6PU0odCxbXCJtY2xvc2VcIl0pfWVsc2V7ej11LmN1c3RvbVNpemVkRGVsaW0oZS52YWx1ZS5yaWdodERlbGltLHcsdHJ1ZSx0LmhhdmluZ1N0eWxlKHIpLGUubW9kZSxbXCJtY2xvc2VcIl0pfXJldHVybiB2KFtcIm1vcmRcIl0uY29uY2F0KG4uc2l6aW5nQ2xhc3Nlcyh0KSksW2ssdihbXCJtZnJhY1wiXSxbZ10pLHpdLHQpfTt2YXIgQT1mdW5jdGlvbiBlKHQscil7dmFyIGE9dC5udW1iZXI7aWYodC51bml0PT09XCJleFwiKXthKj1yLmZvbnRNZXRyaWNzKCkuZW1QZXJFeH1lbHNlIGlmKHQudW5pdD09PVwibXVcIil7YS89MTh9cmV0dXJuIGF9O1MuYXJyYXk9ZnVuY3Rpb24oZSx0KXt2YXIgcj12b2lkIDA7dmFyIGE9dm9pZCAwO3ZhciBpPWUudmFsdWUuYm9keS5sZW5ndGg7dmFyIG49MDt2YXIgcz1uZXcgQXJyYXkoaSk7dmFyIHU9MS90LmZvbnRNZXRyaWNzKCkucHRQZXJFbTt2YXIgaD01KnU7dmFyIGM9MTIqdTt2YXIgZj0zKnU7dmFyIG09cC5kZWZsdChlLnZhbHVlLmFycmF5c3RyZXRjaCwxKTt2YXIgZD1tKmM7dmFyIGc9LjcqZDt2YXIgeT0uMypkO3ZhciB4PTA7Zm9yKHI9MDtyPGUudmFsdWUuYm9keS5sZW5ndGg7KytyKXt2YXIgYj1lLnZhbHVlLmJvZHlbcl07dmFyIHc9Zzt2YXIgaz15O2lmKG48Yi5sZW5ndGgpe249Yi5sZW5ndGh9dmFyIHo9bmV3IEFycmF5KGIubGVuZ3RoKTtmb3IoYT0wO2E8Yi5sZW5ndGg7KythKXt2YXIgTT1xKGJbYV0sdCk7aWYoazxNLmRlcHRoKXtrPU0uZGVwdGh9aWYodzxNLmhlaWdodCl7dz1NLmhlaWdodH16W2FdPU19dmFyIFM9MDtpZihlLnZhbHVlLnJvd0dhcHNbcl0pe1M9QShlLnZhbHVlLnJvd0dhcHNbcl0udmFsdWUsdCk7aWYoUz4wKXtTKz15O2lmKGs8Uyl7az1TfVM9MH19aWYoZS52YWx1ZS5hZGRKb3Qpe2srPWZ9ei5oZWlnaHQ9dzt6LmRlcHRoPWs7eCs9dzt6LnBvcz14O3grPWsrUztzW3JdPXp9dmFyIE49eC8yK3QuZm9udE1ldHJpY3MoKS5heGlzSGVpZ2h0O3ZhciBUPWUudmFsdWUuY29sc3x8W107dmFyIEM9W107dmFyIEU9dm9pZCAwO3ZhciBPPXZvaWQgMDtmb3IoYT0wLE89MDthPG58fE88VC5sZW5ndGg7KythLCsrTyl7dmFyIFI9VFtPXXx8e307dmFyIEw9dHJ1ZTt3aGlsZShSLnR5cGU9PT1cInNlcGFyYXRvclwiKXtpZighTCl7RT12KFtcImFycmF5Y29sc2VwXCJdLFtdKTtFLnN0eWxlLndpZHRoPXQuZm9udE1ldHJpY3MoKS5kb3VibGVSdWxlU2VwK1wiZW1cIjtDLnB1c2goRSl9aWYoUi5zZXBhcmF0b3I9PT1cInxcIil7dmFyIEQ9dihbXCJ2ZXJ0aWNhbC1zZXBhcmF0b3JcIl0sW10pO0Quc3R5bGUuaGVpZ2h0PXgrXCJlbVwiO0Quc3R5bGUudmVydGljYWxBbGlnbj0tKHgtTikrXCJlbVwiO0MucHVzaChEKX1lbHNle3Rocm93IG5ldyBvKFwiSW52YWxpZCBzZXBhcmF0b3IgdHlwZTogXCIrUi5zZXBhcmF0b3IpfU8rKztSPVRbT118fHt9O0w9ZmFsc2V9aWYoYT49bil7Y29udGludWV9dmFyIFA9dm9pZCAwO2lmKGE+MHx8ZS52YWx1ZS5oc2tpcEJlZm9yZUFuZEFmdGVyKXtQPXAuZGVmbHQoUi5wcmVnYXAsaCk7aWYoUCE9PTApe0U9dihbXCJhcnJheWNvbHNlcFwiXSxbXSk7RS5zdHlsZS53aWR0aD1QK1wiZW1cIjtDLnB1c2goRSl9fXZhciBCPVtdO2ZvcihyPTA7cjxpOysrcil7dmFyIEY9c1tyXTt2YXIgST1GW2FdO2lmKCFJKXtjb250aW51ZX12YXIgVj1GLnBvcy1OO0kuZGVwdGg9Ri5kZXB0aDtJLmhlaWdodD1GLmhlaWdodDtCLnB1c2goe3R5cGU6XCJlbGVtXCIsZWxlbTpJLHNoaWZ0OlZ9KX1CPWwubWFrZVZMaXN0KEIsXCJpbmRpdmlkdWFsU2hpZnRcIixudWxsLHQpO0I9dihbXCJjb2wtYWxpZ24tXCIrKFIuYWxpZ258fFwiY1wiKV0sW0JdKTtDLnB1c2goQik7aWYoYTxuLTF8fGUudmFsdWUuaHNraXBCZWZvcmVBbmRBZnRlcil7UD1wLmRlZmx0KFIucG9zdGdhcCxoKTtpZihQIT09MCl7RT12KFtcImFycmF5Y29sc2VwXCJdLFtdKTtFLnN0eWxlLndpZHRoPVArXCJlbVwiO0MucHVzaChFKX19fXM9dihbXCJtdGFibGVcIl0sQyk7cmV0dXJuIHYoW1wibW9yZFwiXSxbc10sdCl9O1Muc3BhY2luZz1mdW5jdGlvbihlLHQpe2lmKGUudmFsdWU9PT1cIlxcXFwgXCJ8fGUudmFsdWU9PT1cIlxcXFxzcGFjZVwifHxlLnZhbHVlPT09XCIgXCJ8fGUudmFsdWU9PT1cIn5cIil7aWYoZS5tb2RlPT09XCJ0ZXh0XCIpe3JldHVybiBsLm1ha2VPcmQoZSx0LFwidGV4dG9yZFwiKX1lbHNle3JldHVybiB2KFtcIm1zcGFjZVwiXSxbbC5tYXRoc3ltKGUudmFsdWUsZS5tb2RlLHQpXSx0KX19ZWxzZXtyZXR1cm4gdihbXCJtc3BhY2VcIixsLnNwYWNpbmdGdW5jdGlvbnNbZS52YWx1ZV0uY2xhc3NOYW1lXSxbXSx0KX19O1MubGxhcD1mdW5jdGlvbihlLHQpe3ZhciByPXYoW1wiaW5uZXJcIl0sW3EoZS52YWx1ZS5ib2R5LHQpXSk7dmFyIGE9dihbXCJmaXhcIl0sW10pO3JldHVybiB2KFtcIm1vcmRcIixcImxsYXBcIl0sW3IsYV0sdCl9O1MucmxhcD1mdW5jdGlvbihlLHQpe3ZhciByPXYoW1wiaW5uZXJcIl0sW3EoZS52YWx1ZS5ib2R5LHQpXSk7dmFyIGE9dihbXCJmaXhcIl0sW10pO3JldHVybiB2KFtcIm1vcmRcIixcInJsYXBcIl0sW3IsYV0sdCl9O1Mub3A9ZnVuY3Rpb24oZSx0KXt2YXIgcj12b2lkIDA7dmFyIGE9dm9pZCAwO3ZhciBpPWZhbHNlO2lmKGUudHlwZT09PVwic3Vwc3ViXCIpe3I9ZS52YWx1ZS5zdXA7YT1lLnZhbHVlLnN1YjtlPWUudmFsdWUuYmFzZTtpPXRydWV9dmFyIG49dC5zdHlsZTt2YXIgbz1bXCJcXFxcc21hbGxpbnRcIl07dmFyIHU9ZmFsc2U7aWYobi5zaXplPT09cy5ESVNQTEFZLnNpemUmJmUudmFsdWUuc3ltYm9sJiYhcC5jb250YWlucyhvLGUudmFsdWUuYm9keSkpe3U9dHJ1ZX12YXIgYz12b2lkIDA7aWYoZS52YWx1ZS5zeW1ib2wpe3ZhciBmPXU/XCJTaXplMi1SZWd1bGFyXCI6XCJTaXplMS1SZWd1bGFyXCI7Yz1sLm1ha2VTeW1ib2woZS52YWx1ZS5ib2R5LGYsXCJtYXRoXCIsdCxbXCJtb3BcIixcIm9wLXN5bWJvbFwiLHU/XCJsYXJnZS1vcFwiOlwic21hbGwtb3BcIl0pfWVsc2UgaWYoZS52YWx1ZS52YWx1ZSl7dmFyIG09eChlLnZhbHVlLnZhbHVlLHQsdHJ1ZSk7aWYobS5sZW5ndGg9PT0xJiZtWzBdaW5zdGFuY2VvZiBoLnN5bWJvbE5vZGUpe2M9bVswXTtjLmNsYXNzZXNbMF09XCJtb3BcIn1lbHNle2M9dihbXCJtb3BcIl0sbSx0KX19ZWxzZXt2YXIgZD1bXTtmb3IodmFyIGc9MTtnPGUudmFsdWUuYm9keS5sZW5ndGg7ZysrKXtkLnB1c2gobC5tYXRoc3ltKGUudmFsdWUuYm9keVtnXSxlLm1vZGUpKX1jPXYoW1wibW9wXCJdLGQsdCl9dmFyIHk9MDt2YXIgYj0wO2lmKGMgaW5zdGFuY2VvZiBoLnN5bWJvbE5vZGUpe3k9KGMuaGVpZ2h0LWMuZGVwdGgpLzItdC5mb250TWV0cmljcygpLmF4aXNIZWlnaHQ7Yj1jLml0YWxpY31pZihpKXtjPXYoW10sW2NdKTt2YXIgdz12b2lkIDA7dmFyIGs9dm9pZCAwO3ZhciB6PXZvaWQgMDt2YXIgTT12b2lkIDA7dmFyIFM9dm9pZCAwO2lmKHIpe1M9dC5oYXZpbmdTdHlsZShuLnN1cCgpKTt3PXEocixTLHQpO2s9TWF0aC5tYXgodC5mb250TWV0cmljcygpLmJpZ09wU3BhY2luZzEsdC5mb250TWV0cmljcygpLmJpZ09wU3BhY2luZzMtdy5kZXB0aCl9aWYoYSl7Uz10LmhhdmluZ1N0eWxlKG4uc3ViKCkpO3o9cShhLFMsdCk7TT1NYXRoLm1heCh0LmZvbnRNZXRyaWNzKCkuYmlnT3BTcGFjaW5nMix0LmZvbnRNZXRyaWNzKCkuYmlnT3BTcGFjaW5nNC16LmhlaWdodCl9dmFyIEE9dm9pZCAwO3ZhciBOPXZvaWQgMDt2YXIgVD12b2lkIDA7aWYoIXIpe049Yy5oZWlnaHQteTtBPWwubWFrZVZMaXN0KFt7dHlwZTpcImtlcm5cIixzaXplOnQuZm9udE1ldHJpY3MoKS5iaWdPcFNwYWNpbmc1fSx7dHlwZTpcImVsZW1cIixlbGVtOnp9LHt0eXBlOlwia2VyblwiLHNpemU6TX0se3R5cGU6XCJlbGVtXCIsZWxlbTpjfV0sXCJ0b3BcIixOLHQpO0EuY2hpbGRyZW5bMF0uc3R5bGUubWFyZ2luTGVmdD0tYitcImVtXCJ9ZWxzZSBpZighYSl7VD1jLmRlcHRoK3k7QT1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpjfSx7dHlwZTpcImtlcm5cIixzaXplOmt9LHt0eXBlOlwiZWxlbVwiLGVsZW06d30se3R5cGU6XCJrZXJuXCIsc2l6ZTp0LmZvbnRNZXRyaWNzKCkuYmlnT3BTcGFjaW5nNX1dLFwiYm90dG9tXCIsVCx0KTtBLmNoaWxkcmVuWzFdLnN0eWxlLm1hcmdpbkxlZnQ9YitcImVtXCJ9ZWxzZSBpZighciYmIWEpe3JldHVybiBjfWVsc2V7VD10LmZvbnRNZXRyaWNzKCkuYmlnT3BTcGFjaW5nNSt6LmhlaWdodCt6LmRlcHRoK00rYy5kZXB0aCt5O0E9bC5tYWtlVkxpc3QoW3t0eXBlOlwia2VyblwiLHNpemU6dC5mb250TWV0cmljcygpLmJpZ09wU3BhY2luZzV9LHt0eXBlOlwiZWxlbVwiLGVsZW06en0se3R5cGU6XCJrZXJuXCIsc2l6ZTpNfSx7dHlwZTpcImVsZW1cIixlbGVtOmN9LHt0eXBlOlwia2VyblwiLHNpemU6a30se3R5cGU6XCJlbGVtXCIsZWxlbTp3fSx7dHlwZTpcImtlcm5cIixzaXplOnQuZm9udE1ldHJpY3MoKS5iaWdPcFNwYWNpbmc1fV0sXCJib3R0b21cIixULHQpO0EuY2hpbGRyZW5bMF0uc3R5bGUubWFyZ2luTGVmdD0tYitcImVtXCI7QS5jaGlsZHJlblsyXS5zdHlsZS5tYXJnaW5MZWZ0PWIrXCJlbVwifXJldHVybiB2KFtcIm1vcFwiLFwib3AtbGltaXRzXCJdLFtBXSx0KX1lbHNle2lmKHkpe2Muc3R5bGUucG9zaXRpb249XCJyZWxhdGl2ZVwiO2Muc3R5bGUudG9wPXkrXCJlbVwifXJldHVybiBjfX07Uy5tb2Q9ZnVuY3Rpb24oZSx0KXt2YXIgcj1bXTtpZihlLnZhbHVlLm1vZFR5cGU9PT1cImJtb2RcIil7aWYoIXQuc3R5bGUuaXNUaWdodCgpKXtyLnB1c2godihbXCJtc3BhY2VcIixcIm5lZ2F0aXZlbWVkaXVtc3BhY2VcIl0sW10sdCkpfXIucHVzaCh2KFtcIm1zcGFjZVwiLFwidGhpY2tzcGFjZVwiXSxbXSx0KSl9ZWxzZSBpZih0LnN0eWxlLnNpemU9PT1zLkRJU1BMQVkuc2l6ZSl7ci5wdXNoKHYoW1wibXNwYWNlXCIsXCJxdWFkXCJdLFtdLHQpKX1lbHNlIGlmKGUudmFsdWUubW9kVHlwZT09PVwibW9kXCIpe3IucHVzaCh2KFtcIm1zcGFjZVwiLFwidHdlbHZlbXVzcGFjZVwiXSxbXSx0KSl9ZWxzZXtyLnB1c2godihbXCJtc3BhY2VcIixcImVpZ2h0bXVzcGFjZVwiXSxbXSx0KSl9aWYoZS52YWx1ZS5tb2RUeXBlPT09XCJwb2RcInx8ZS52YWx1ZS5tb2RUeXBlPT09XCJwbW9kXCIpe3IucHVzaChsLm1hdGhzeW0oXCIoXCIsZS5tb2RlKSl9aWYoZS52YWx1ZS5tb2RUeXBlIT09XCJwb2RcIil7dmFyIGE9W2wubWF0aHN5bShcIm1cIixlLm1vZGUpLGwubWF0aHN5bShcIm9cIixlLm1vZGUpLGwubWF0aHN5bShcImRcIixlLm1vZGUpXTtpZihlLnZhbHVlLm1vZFR5cGU9PT1cImJtb2RcIil7ci5wdXNoKHYoW1wibWJpblwiXSxhLHQpKTtyLnB1c2godihbXCJtc3BhY2VcIixcInRoaWNrc3BhY2VcIl0sW10sdCkpO2lmKCF0LnN0eWxlLmlzVGlnaHQoKSl7ci5wdXNoKHYoW1wibXNwYWNlXCIsXCJuZWdhdGl2ZW1lZGl1bXNwYWNlXCJdLFtdLHQpKX19ZWxzZXtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShyLGEpO3IucHVzaCh2KFtcIm1zcGFjZVwiLFwic2l4bXVzcGFjZVwiXSxbXSx0KSl9fWlmKGUudmFsdWUudmFsdWUpe0FycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHIseChlLnZhbHVlLnZhbHVlLHQsZmFsc2UpKX1pZihlLnZhbHVlLm1vZFR5cGU9PT1cInBvZFwifHxlLnZhbHVlLm1vZFR5cGU9PT1cInBtb2RcIil7ci5wdXNoKGwubWF0aHN5bShcIilcIixlLm1vZGUpKX1yZXR1cm4gbC5tYWtlRnJhZ21lbnQocil9O1Mua2F0ZXg9ZnVuY3Rpb24oZSx0KXt2YXIgcj12KFtcImtcIl0sW2wubWF0aHN5bShcIktcIixlLm1vZGUpXSx0KTt2YXIgYT12KFtcImFcIl0sW2wubWF0aHN5bShcIkFcIixlLm1vZGUpXSx0KTthLmhlaWdodD0oYS5oZWlnaHQrLjIpKi43NTthLmRlcHRoPShhLmhlaWdodC0uMikqLjc1O3ZhciBpPXYoW1widFwiXSxbbC5tYXRoc3ltKFwiVFwiLGUubW9kZSldLHQpO3ZhciBuPXYoW1wiZVwiXSxbbC5tYXRoc3ltKFwiRVwiLGUubW9kZSldLHQpO24uaGVpZ2h0PW4uaGVpZ2h0LS4yMTU1O24uZGVwdGg9bi5kZXB0aCsuMjE1NTt2YXIgbz12KFtcInhcIl0sW2wubWF0aHN5bShcIlhcIixlLm1vZGUpXSx0KTtyZXR1cm4gdihbXCJtb3JkXCIsXCJrYXRleC1sb2dvXCJdLFtyLGEsaSxuLG9dLHQpfTt2YXIgTj1mdW5jdGlvbiBlKHQscil7dmFyIGE9ci5oYXZpbmdCYXNlU3R5bGUoKTt2YXIgaT12KFt0XS5jb25jYXQoYS5zaXppbmdDbGFzc2VzKHIpKSxbXSxyKTtpLmhlaWdodD1yLmZvbnRNZXRyaWNzKCkuZGVmYXVsdFJ1bGVUaGlja25lc3Mvci5zaXplTXVsdGlwbGllcjtpLm1heEZvbnRTaXplPTE7cmV0dXJuIGl9O1Mub3ZlcmxpbmU9ZnVuY3Rpb24oZSx0KXt2YXIgcj1xKGUudmFsdWUuYm9keSx0LmhhdmluZ0NyYW1wZWRTdHlsZSgpKTt2YXIgYT1OKFwib3ZlcmxpbmUtbGluZVwiLHQpO3ZhciBpPWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOnJ9LHt0eXBlOlwia2VyblwiLHNpemU6MyphLmhlaWdodH0se3R5cGU6XCJlbGVtXCIsZWxlbTphfSx7dHlwZTpcImtlcm5cIixzaXplOmEuaGVpZ2h0fV0sXCJmaXJzdEJhc2VsaW5lXCIsbnVsbCx0KTtyZXR1cm4gdihbXCJtb3JkXCIsXCJvdmVybGluZVwiXSxbaV0sdCl9O1MudW5kZXJsaW5lPWZ1bmN0aW9uKGUsdCl7dmFyIHI9cShlLnZhbHVlLmJvZHksdCk7dmFyIGE9TihcInVuZGVybGluZS1saW5lXCIsdCk7dmFyIGk9bC5tYWtlVkxpc3QoW3t0eXBlOlwia2VyblwiLHNpemU6YS5oZWlnaHR9LHt0eXBlOlwiZWxlbVwiLGVsZW06YX0se3R5cGU6XCJrZXJuXCIsc2l6ZTozKmEuaGVpZ2h0fSx7dHlwZTpcImVsZW1cIixlbGVtOnJ9XSxcInRvcFwiLHIuaGVpZ2h0LHQpO3JldHVybiB2KFtcIm1vcmRcIixcInVuZGVybGluZVwiXSxbaV0sdCl9O1Muc3FydD1mdW5jdGlvbihlLHQpe3ZhciByPXEoZS52YWx1ZS5ib2R5LHQuaGF2aW5nQ3JhbXBlZFN0eWxlKCkpO3ZhciBhPU4oXCJzcXJ0LWxpbmVcIix0KTt2YXIgaT1hLmhlaWdodDt2YXIgbj1pO2lmKHQuc3R5bGUuaWQ8cy5URVhULmlkKXtuPXQuZm9udE1ldHJpY3MoKS54SGVpZ2h0KnQuc2l6ZU11bHRpcGxpZXJ9dmFyIG89aStuLzQ7dmFyIGg9KHIuaGVpZ2h0K3IuZGVwdGgrbytpKSp0LnNpemVNdWx0aXBsaWVyO3ZhciBwPXYoW1wic3FydC1zaWduXCJdLFt1LmN1c3RvbVNpemVkRGVsaW0oXCJcXFxcc3VyZFwiLGgsZmFsc2UsdCxlLm1vZGUpXSx0KTt2YXIgYz1wLmhlaWdodCtwLmRlcHRoLWk7aWYoYz5yLmhlaWdodCtyLmRlcHRoK28pe289KG8rYy1yLmhlaWdodC1yLmRlcHRoKS8yfXZhciBmPS0oci5oZWlnaHQrbytpKStwLmhlaWdodDtwLnN0eWxlLnRvcD1mK1wiZW1cIjtwLmhlaWdodC09ZjtwLmRlcHRoKz1mO3ZhciBtPXZvaWQgMDtpZihyLmhlaWdodD09PTAmJnIuZGVwdGg9PT0wKXttPXYoKX1lbHNle209bC5tYWtlVkxpc3QoW3t0eXBlOlwiZWxlbVwiLGVsZW06cn0se3R5cGU6XCJrZXJuXCIsc2l6ZTpvfSx7dHlwZTpcImVsZW1cIixlbGVtOmF9LHt0eXBlOlwia2VyblwiLHNpemU6aX1dLFwiZmlyc3RCYXNlbGluZVwiLG51bGwsdCl9aWYoIWUudmFsdWUuaW5kZXgpe3JldHVybiB2KFtcIm1vcmRcIixcInNxcnRcIl0sW3AsbV0sdCl9ZWxzZXt2YXIgZD10LmhhdmluZ1N0eWxlKHMuU0NSSVBUU0NSSVBUKTt2YXIgZz1xKGUudmFsdWUuaW5kZXgsZCx0KTt2YXIgeT1NYXRoLm1heChwLmhlaWdodCxtLmhlaWdodCk7dmFyIHg9TWF0aC5tYXgocC5kZXB0aCxtLmRlcHRoKTt2YXIgYj0uNiooeS14KTt2YXIgdz1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpnfV0sXCJzaGlmdFwiLC1iLHQpO3ZhciBrPXYoW1wicm9vdFwiXSxbd10pO3JldHVybiB2KFtcIm1vcmRcIixcInNxcnRcIl0sW2sscCxtXSx0KX19O2Z1bmN0aW9uIFQoZSx0LHIpe3ZhciBhPXgoZSx0LGZhbHNlKTt2YXIgaT10LnNpemVNdWx0aXBsaWVyL3Iuc2l6ZU11bHRpcGxpZXI7Zm9yKHZhciBuPTA7bjxhLmxlbmd0aDtuKyspe3ZhciBvPXAuaW5kZXhPZihhW25dLmNsYXNzZXMsXCJzaXppbmdcIik7aWYobzwwKXtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShhW25dLmNsYXNzZXMsdC5zaXppbmdDbGFzc2VzKHIpKX1lbHNlIGlmKGFbbl0uY2xhc3Nlc1tvKzFdPT09XCJyZXNldC1zaXplXCIrdC5zaXplKXthW25dLmNsYXNzZXNbbysxXT1cInJlc2V0LXNpemVcIityLnNpemV9YVtuXS5oZWlnaHQqPWk7YVtuXS5kZXB0aCo9aX1yZXR1cm4gbC5tYWtlRnJhZ21lbnQoYSl9Uy5zaXppbmc9ZnVuY3Rpb24oZSx0KXt2YXIgcj10LmhhdmluZ1NpemUoZS52YWx1ZS5zaXplKTtyZXR1cm4gVChlLnZhbHVlLnZhbHVlLHIsdCl9O1Muc3R5bGluZz1mdW5jdGlvbihlLHQpe3ZhciByPXtkaXNwbGF5OnMuRElTUExBWSx0ZXh0OnMuVEVYVCxzY3JpcHQ6cy5TQ1JJUFQsc2NyaXB0c2NyaXB0OnMuU0NSSVBUU0NSSVBUfTt2YXIgYT1yW2UudmFsdWUuc3R5bGVdO3ZhciBpPXQuaGF2aW5nU3R5bGUoYSk7cmV0dXJuIFQoZS52YWx1ZS52YWx1ZSxpLHQpfTtTLmZvbnQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLnZhbHVlLmZvbnQ7cmV0dXJuIHEoZS52YWx1ZS5ib2R5LHQud2l0aEZvbnQocikpfTtTLmRlbGltc2l6aW5nPWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS52YWx1ZS52YWx1ZTtpZihyPT09XCIuXCIpe3JldHVybiB2KFtlLnZhbHVlLm1jbGFzc10pfXJldHVybiB1LnNpemVkRGVsaW0ocixlLnZhbHVlLnNpemUsdCxlLm1vZGUsW2UudmFsdWUubWNsYXNzXSl9O1MubGVmdHJpZ2h0PWZ1bmN0aW9uKGUsdCl7dmFyIHI9eChlLnZhbHVlLmJvZHksdCx0cnVlKTt2YXIgYT0wO3ZhciBpPTA7dmFyIG49ZmFsc2U7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspe2lmKHJbb10uaXNNaWRkbGUpe249dHJ1ZX1lbHNle2E9TWF0aC5tYXgocltvXS5oZWlnaHQsYSk7aT1NYXRoLm1heChyW29dLmRlcHRoLGkpfX1hKj10LnNpemVNdWx0aXBsaWVyO2kqPXQuc2l6ZU11bHRpcGxpZXI7dmFyIHM9dm9pZCAwO2lmKGUudmFsdWUubGVmdD09PVwiLlwiKXtzPU0odCxbXCJtb3BlblwiXSl9ZWxzZXtzPXUubGVmdFJpZ2h0RGVsaW0oZS52YWx1ZS5sZWZ0LGEsaSx0LGUubW9kZSxbXCJtb3BlblwiXSl9ci51bnNoaWZ0KHMpO2lmKG4pe2Zvcih2YXIgaD0xO2g8ci5sZW5ndGg7aCsrKXt2YXIgcD1yW2hdO2lmKHAuaXNNaWRkbGUpe3JbaF09dS5sZWZ0UmlnaHREZWxpbShwLmlzTWlkZGxlLnZhbHVlLGEsaSxwLmlzTWlkZGxlLm9wdGlvbnMsZS5tb2RlLFtdKTt2YXIgYz15KHAuY2hpbGRyZW4sMCk7aWYoYyl7bC5wcmVwZW5kQ2hpbGRyZW4ocltoXSxjKX19fX12YXIgZj12b2lkIDA7aWYoZS52YWx1ZS5yaWdodD09PVwiLlwiKXtmPU0odCxbXCJtY2xvc2VcIl0pfWVsc2V7Zj11LmxlZnRSaWdodERlbGltKGUudmFsdWUucmlnaHQsYSxpLHQsZS5tb2RlLFtcIm1jbG9zZVwiXSl9ci5wdXNoKGYpO3JldHVybiB2KFtcIm1pbm5lclwiXSxyLHQpfTtTLmN1cnNvcj1mdW5jdGlvbihlLHQscil7dmFyIGE9dihbXCJjdXJzb3JcIl0sW10sdCk7dmFyIGk9MDt2YXIgbj1BKGUudmFsdWUuaGVpZ2h0LHQpO2lmKGUudmFsdWUuc2hpZnQpe2k9QShlLnZhbHVlLnNoaWZ0LHQpfWkvPXQuc2l6ZU11bHRpcGxpZXI7bi89dC5zaXplTXVsdGlwbGllcjthLnN0eWxlLm1hcmdpblJpZ2h0PVwiLTFweFwiO2Euc3R5bGUuYm9yZGVyUmlnaHQ9XCIxcHggc29saWRcIjthLnN0eWxlLm1hcmdpbkJvdHRvbT1pK1wiZW1cIjthLnN0eWxlLmhlaWdodD1uK1wiZW1cIjthLndpZHRoPTE7YS5oZWlnaHQ9bitpO2EuZGVwdGg9LWk7ZS52YWx1ZS5wcmV2aW91cz1yO3JldHVybiBhfTtTLm1pZGRsZT1mdW5jdGlvbihlLHQpe3ZhciByPXZvaWQgMDtpZihlLnZhbHVlLnZhbHVlPT09XCIuXCIpe3I9TSh0LFtdKX1lbHNle3I9dS5zaXplZERlbGltKGUudmFsdWUudmFsdWUsMSx0LGUubW9kZSxbXSk7ci5pc01pZGRsZT17dmFsdWU6ZS52YWx1ZS52YWx1ZSxvcHRpb25zOnR9fXJldHVybiByfTtTLnJ1bGU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBhPXYoW1wibW9yZFwiLFwicnVsZVwiXSxbXSx0KTt2YXIgaT0wO2lmKGUudmFsdWUuc2hpZnQpe2k9QShlLnZhbHVlLnNoaWZ0LHQpfXZhciBuPUEoZS52YWx1ZS53aWR0aCx0KTt2YXIgbz1BKGUudmFsdWUuaGVpZ2h0LHQpO2kvPXQuc2l6ZU11bHRpcGxpZXI7bi89dC5zaXplTXVsdGlwbGllcjtvLz10LnNpemVNdWx0aXBsaWVyO2Euc3R5bGUuYm9yZGVyUmlnaHRXaWR0aD1uK1wiZW1cIjthLnN0eWxlLmJvcmRlclRvcFdpZHRoPW8rXCJlbVwiO2Euc3R5bGUuYm90dG9tPWkrXCJlbVwiO2Eud2lkdGg9bjthLmhlaWdodD1vK2k7YS5kZXB0aD0taTtyZXR1cm4gYX07Uy5rZXJuPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dihbXCJtb3JkXCIsXCJydWxlXCJdLFtdLHQpO3ZhciBhPTA7aWYoZS52YWx1ZS5kaW1lbnNpb24pe2E9QShlLnZhbHVlLmRpbWVuc2lvbix0KX1hLz10LnNpemVNdWx0aXBsaWVyO3Iuc3R5bGUubWFyZ2luTGVmdD1hK1wiZW1cIjtyZXR1cm4gcn07Uy5hY2NlbnQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLnZhbHVlLmJhc2U7dmFyIGE9dm9pZCAwO2lmKGUudHlwZT09PVwic3Vwc3ViXCIpe3ZhciBpPWU7ZT1pLnZhbHVlLmJhc2U7cj1lLnZhbHVlLmJhc2U7aS52YWx1ZS5iYXNlPXI7YT1xKGksdCl9dmFyIG49cShyLHQuaGF2aW5nQ3JhbXBlZFN0eWxlKCkpO3ZhciBvPWUudmFsdWUuaXNTaGlmdHkmJnoocik7dmFyIHM9MDtpZihvKXt2YXIgdT1rKHIpO3ZhciBoPXEodSx0LmhhdmluZ0NyYW1wZWRTdHlsZSgpKTtzPWguc2tld312YXIgcD1NYXRoLm1pbihuLmhlaWdodCx0LmZvbnRNZXRyaWNzKCkueEhlaWdodCk7dmFyIGY9dm9pZCAwO2lmKCFlLnZhbHVlLmlzU3RyZXRjaHkpe3ZhciBtPWwubWFrZVN5bWJvbChlLnZhbHVlLmxhYmVsLFwiTWFpbi1SZWd1bGFyXCIsXCJtYXRoXCIsdCk7bS5pdGFsaWM9MDt2YXIgZD1lLnZhbHVlLmxhYmVsPT09XCJcXFxcdmVjXCI/XCJhY2NlbnQtdmVjXCI6bnVsbDtmPXYoW1wiYWNjZW50LWJvZHlcIixkXSxbdihbXSxbbV0pXSk7Zi5zdHlsZS5tYXJnaW5MZWZ0PTIqcytcImVtXCI7Zj1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpufSx7dHlwZTpcImtlcm5cIixzaXplOi1wfSx7dHlwZTpcImVsZW1cIixlbGVtOmZ9XSxcImZpcnN0QmFzZWxpbmVcIixudWxsLHQpfWVsc2V7Zj1jLnN2Z1NwYW4oZSx0KTtpZihzPjApe3ZhciBnPVwiY2FsYygxMDAlIC0gXCIrMipzK1wiZW0pIDEwMCVcIjtmLnN0eWxlLmJhY2tncm91bmRTaXplPWd9Zj1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpufSx7dHlwZTpcImVsZW1cIixlbGVtOmZ9XSxcImZpcnN0QmFzZWxpbmVcIixudWxsLHQpfXZhciB5PXYoW1wibW9yZFwiLFwiYWNjZW50XCJdLFtmXSx0KTtpZihhKXthLmNoaWxkcmVuWzBdPXk7YS5oZWlnaHQ9TWF0aC5tYXgoeS5oZWlnaHQsYS5oZWlnaHQpO2EuY2xhc3Nlc1swXT1cIm1vcmRcIjtyZXR1cm4gYX1lbHNle3JldHVybiB5fX07Uy5ob3JpekJyYWNlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dC5zdHlsZTt2YXIgYT1lLnR5cGU9PT1cInN1cHN1YlwiO3ZhciBpPXZvaWQgMDt2YXIgbj12b2lkIDA7aWYoYSl7aWYoZS52YWx1ZS5zdXApe249dC5oYXZpbmdTdHlsZShyLnN1cCgpKTtpPXEoZS52YWx1ZS5zdXAsbix0KX1lbHNle249dC5oYXZpbmdTdHlsZShyLnN1YigpKTtpPXEoZS52YWx1ZS5zdWIsbix0KX1lPWUudmFsdWUuYmFzZX12YXIgbz1xKGUudmFsdWUuYmFzZSx0LmhhdmluZ1N0eWxlKHIuY3JhbXAoKSkpO3ZhciBzPWMuc3ZnU3BhbihlLHQpO3ZhciB1PXZvaWQgMDtpZihlLnZhbHVlLmlzT3Zlcil7dT1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpvfSx7dHlwZTpcImtlcm5cIixzaXplOi4xfSx7dHlwZTpcImVsZW1cIixlbGVtOnN9XSxcImZpcnN0QmFzZWxpbmVcIixudWxsLHQpfWVsc2V7dT1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpzfSx7dHlwZTpcImtlcm5cIixzaXplOi4xfSx7dHlwZTpcImVsZW1cIixlbGVtOm99XSxcImJvdHRvbVwiLG8uZGVwdGgrLjErcy5oZWlnaHQsdCl9aWYoYSl7dmFyIGg9dihbXCJtb3JkXCIsZS52YWx1ZS5pc092ZXI/XCJtb3ZlclwiOlwibXVuZGVyXCJdLFt1XSx0KTtpZihlLnZhbHVlLmlzT3Zlcil7dT1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTpofSx7dHlwZTpcImtlcm5cIixzaXplOi4yfSx7dHlwZTpcImVsZW1cIixlbGVtOml9XSxcImZpcnN0QmFzZWxpbmVcIixudWxsLHQpfWVsc2V7dT1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTppfSx7dHlwZTpcImtlcm5cIixzaXplOi4yfSx7dHlwZTpcImVsZW1cIixlbGVtOmh9XSxcImJvdHRvbVwiLGguZGVwdGgrLjIraS5oZWlnaHQsdCl9fXJldHVybiB2KFtcIm1vcmRcIixlLnZhbHVlLmlzT3Zlcj9cIm1vdmVyXCI6XCJtdW5kZXJcIl0sW3VdLHQpfTtTLmFjY2VudFVuZGVyPWZ1bmN0aW9uKGUsdCl7dmFyIHI9cShlLnZhbHVlLmJvZHksdCk7dmFyIGE9Yy5zdmdTcGFuKGUsdCk7dmFyIGk9L3RpbGRlLy50ZXN0KGUudmFsdWUubGFiZWwpPy4xMjowO3ZhciBuPWwubWFrZVZMaXN0KFt7dHlwZTpcImVsZW1cIixlbGVtOmF9LHt0eXBlOlwia2VyblwiLHNpemU6aX0se3R5cGU6XCJlbGVtXCIsZWxlbTpyfV0sXCJib3R0b21cIixhLmhlaWdodCtpLHQpO3JldHVybiB2KFtcIm1vcmRcIixcImFjY2VudHVuZGVyXCJdLFtuXSx0KX07Uy5lbmNsb3NlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9cShlLnZhbHVlLmJvZHksdCk7dmFyIGE9ZS52YWx1ZS5sYWJlbC5zdWJzdHIoMSk7dmFyIGk9dC5zaXplTXVsdGlwbGllcjt2YXIgbj12b2lkIDA7dmFyIG89MDt2YXIgcz0wO2lmKGE9PT1cInNvdXRcIil7bj12KFtcInN0cmV0Y2h5XCIsXCJzb3V0XCJdKTtuLmhlaWdodD10LmZvbnRNZXRyaWNzKCkuZGVmYXVsdFJ1bGVUaGlja25lc3MvaTtuLm1heEZvbnRTaXplPTE7cz0tLjUqdC5mb250TWV0cmljcygpLnhIZWlnaHR9ZWxzZXtyLmNsYXNzZXMucHVzaChhPT09XCJmYm94XCI/XCJib3hwYWRcIjpcImNhbmNlbC1wYWRcIik7dmFyIHU9eihlLnZhbHVlLmJvZHkpO289YT09PVwiZmJveFwiPy4zNDp1Py4yOjA7cz1yLmRlcHRoK287bj1jLmVuY2xvc2VTcGFuKHIsdSxhLG8sdCl9dmFyIGg9bC5tYWtlVkxpc3QoW3t0eXBlOlwiZWxlbVwiLGVsZW06cixzaGlmdDowfSx7dHlwZTpcImVsZW1cIixlbGVtOm4sc2hpZnQ6c31dLFwiaW5kaXZpZHVhbFNoaWZ0XCIsbnVsbCx0KTtpZihuLmhlaWdodD5oLm1heEZvbnRTaXplKXtoLmNoaWxkcmVuWzFdLnN0eWxlLnRvcD0tKHIuaGVpZ2h0K28tLjkvaSkrXCJlbVwifWlmKC9jYW5jZWwvLnRlc3QoYSkpe3JldHVybiB2KFtcIm1vcmRcIixcImNhbmNlbC1sYXBcIl0sW2hdLHQpfWVsc2V7cmV0dXJuIHYoW1wibW9yZFwiXSxbaF0sdCl9fTtTLnhBcnJvdz1mdW5jdGlvbihlLHQpe3ZhciByPXQuc3R5bGU7dmFyIGE9dC5oYXZpbmdTdHlsZShyLnN1cCgpKTt2YXIgaT1xKGUudmFsdWUuYm9keSxhLHQpO3ZhciBuPXZvaWQgMDtpZihlLnZhbHVlLmJlbG93KXthPXQuaGF2aW5nU3R5bGUoci5zdWIoKSk7bj1xKGUudmFsdWUuYmVsb3csYSx0KX12YXIgbz1jLnN2Z1NwYW4oZSx0KTt2YXIgcz0tdC5mb250TWV0cmljcygpLmF4aXNIZWlnaHQrby5kZXB0aDt2YXIgdT0tdC5mb250TWV0cmljcygpLmF4aXNIZWlnaHQtby5oZWlnaHQtLjExMTt2YXIgaD12b2lkIDA7aWYoZS52YWx1ZS5iZWxvdyl7dmFyIHA9LXQuZm9udE1ldHJpY3MoKS5heGlzSGVpZ2h0K24uaGVpZ2h0K28uaGVpZ2h0Ky4xMTE7aD1sLm1ha2VWTGlzdChbe3R5cGU6XCJlbGVtXCIsZWxlbTppLHNoaWZ0OnV9LHt0eXBlOlwiZWxlbVwiLGVsZW06byxzaGlmdDpzfSx7dHlwZTpcImVsZW1cIixlbGVtOm4sc2hpZnQ6cH1dLFwiaW5kaXZpZHVhbFNoaWZ0XCIsbnVsbCx0KX1lbHNle2g9bC5tYWtlVkxpc3QoW3t0eXBlOlwiZWxlbVwiLGVsZW06aSxzaGlmdDp1fSx7dHlwZTpcImVsZW1cIixlbGVtOm8sc2hpZnQ6c31dLFwiaW5kaXZpZHVhbFNoaWZ0XCIsbnVsbCx0KX12YXIgZj12KFtcIm1yZWxcIixcIngtYXJyb3dcIl0sW2hdLHQpO2YuZGVwdGg9Zi5kZXB0aDtmLmhlaWdodD1mLmhlaWdodDtyZXR1cm4gZn07Uy5waGFudG9tPWZ1bmN0aW9uKGUsdCl7dmFyIHI9eChlLnZhbHVlLnZhbHVlLHQud2l0aFBoYW50b20oKSxmYWxzZSk7cmV0dXJuIG5ldyBsLm1ha2VGcmFnbWVudChyKX07Uy5tY2xhc3M9ZnVuY3Rpb24oZSx0KXt2YXIgcj14KGUudmFsdWUudmFsdWUsdCx0cnVlKTtyZXR1cm4gdihbZS52YWx1ZS5tY2xhc3NdLHIsdCl9O3ZhciBxPWZ1bmN0aW9uIGUodCxyLGEpe2lmKCF0KXtyZXR1cm4gdigpfWlmKFNbdC50eXBlXSl7dmFyIGk9U1t0LnR5cGVdKHQscik7aWYoYSYmci5zaXplIT09YS5zaXplKXtpPXYoci5zaXppbmdDbGFzc2VzKGEpLFtpXSxyKTt2YXIgbj1yLnNpemVNdWx0aXBsaWVyL2Euc2l6ZU11bHRpcGxpZXI7aS5oZWlnaHQqPW47aS5kZXB0aCo9bn1yZXR1cm4gaX1lbHNle3Rocm93IG5ldyBvKFwiR290IGdyb3VwIG9mIHVua25vd24gdHlwZTogJ1wiK3QudHlwZStcIidcIil9fTt2YXIgQz1mdW5jdGlvbiBlKHQscil7dD1KU09OLnBhcnNlKCgwLGkuZGVmYXVsdCkodCkpO3ZhciBhPXgodCxyLHRydWUpO3ZhciBuPXYoW1wiYmFzZVwiXSxhLHIpO3ZhciBvPXYoW1wic3RydXRcIl0pO3ZhciBzPXYoW1wic3RydXRcIixcImJvdHRvbVwiXSk7by5zdHlsZS5oZWlnaHQ9bi5oZWlnaHQrXCJlbVwiO3Muc3R5bGUuaGVpZ2h0PW4uaGVpZ2h0K24uZGVwdGgrXCJlbVwiO3Muc3R5bGUudmVydGljYWxBbGlnbj0tbi5kZXB0aCtcImVtXCI7dmFyIGw9dihbXCJrYXRleC1odG1sXCJdLFtvLHMsbl0pO2wuc2V0QXR0cmlidXRlKFwiYXJpYS1oaWRkZW5cIixcInRydWVcIik7cmV0dXJuIGx9O3QuZXhwb3J0cz1DfSx7XCIuL1BhcnNlRXJyb3JcIjoxMCxcIi4vU3R5bGVcIjoxMyxcIi4vYnVpbGRDb21tb25cIjoxNCxcIi4vZGVsaW1pdGVyXCI6MTgsXCIuL2RvbVRyZWVcIjoxOSxcIi4vc3RyZXRjaHlcIjoyOCxcIi4vdXRpbHNcIjozMSxcImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9qc29uL3N0cmluZ2lmeVwiOjJ9XSwxNjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL2J1aWxkQ29tbW9uXCIpO3ZhciBpPWUoXCIuL2ZvbnRNZXRyaWNzXCIpO3ZhciBuPWUoXCIuL21hdGhNTFRyZWVcIik7dmFyIG89ZShcIi4vUGFyc2VFcnJvclwiKTt2YXIgcz1lKFwiLi9zeW1ib2xzXCIpO3ZhciBsPWUoXCIuL3V0aWxzXCIpO3ZhciB1PWUoXCIuL3N0cmV0Y2h5XCIpO3ZhciBoPWEubWFrZVNwYW47dmFyIHA9YS5mb250TWFwO3ZhciBjPWZ1bmN0aW9uIGUodCxyKXtpZihzW3JdW3RdJiZzW3JdW3RdLnJlcGxhY2Upe3Q9c1tyXVt0XS5yZXBsYWNlfXJldHVybiBuZXcgbi5UZXh0Tm9kZSh0KX07dmFyIHY9ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPXIuZm9udDtpZighYSl7cmV0dXJuIG51bGx9dmFyIG49dC5tb2RlO2lmKGE9PT1cIm1hdGhpdFwiKXtyZXR1cm5cIml0YWxpY1wifXZhciBvPXQudmFsdWU7aWYobC5jb250YWlucyhbXCJcXFxcaW1hdGhcIixcIlxcXFxqbWF0aFwiXSxvKSl7cmV0dXJuIG51bGx9aWYoc1tuXVtvXSYmc1tuXVtvXS5yZXBsYWNlKXtvPXNbbl1bb10ucmVwbGFjZX12YXIgdT1wW2FdLmZvbnROYW1lO2lmKGkuZ2V0Q2hhcmFjdGVyTWV0cmljcyhvLHUpKXtyZXR1cm4gcFtyLmZvbnRdLnZhcmlhbnR9cmV0dXJuIG51bGx9O3ZhciBmPXt9O3ZhciBtPXttaTpcIml0YWxpY1wiLG1uOlwibm9ybWFsXCIsbXRleHQ6XCJub3JtYWxcIn07Zi5tYXRob3JkPWZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IG4uTWF0aE5vZGUoXCJtaVwiLFtjKGUudmFsdWUsZS5tb2RlKV0pO3ZhciBhPXYoZSx0KXx8XCJpdGFsaWNcIjtpZihhIT09bVtyLnR5cGVdKXtyLnNldEF0dHJpYnV0ZShcIm1hdGh2YXJpYW50XCIsYSl9cmV0dXJuIHJ9O2YudGV4dG9yZD1mdW5jdGlvbihlLHQpe3ZhciByPWMoZS52YWx1ZSxlLm1vZGUpO3ZhciBhPXYoZSx0KXx8XCJub3JtYWxcIjt2YXIgaT12b2lkIDA7aWYoZS5tb2RlPT09XCJ0ZXh0XCIpe2k9bmV3IG4uTWF0aE5vZGUoXCJtdGV4dFwiLFtyXSl9ZWxzZSBpZigvWzAtOV0vLnRlc3QoZS52YWx1ZSkpe2k9bmV3IG4uTWF0aE5vZGUoXCJtblwiLFtyXSl9ZWxzZXtpPW5ldyBuLk1hdGhOb2RlKFwibWlcIixbcl0pfWlmKGEhPT1tW2kudHlwZV0pe2kuc2V0QXR0cmlidXRlKFwibWF0aHZhcmlhbnRcIixhKX1yZXR1cm4gaX07Zi5iaW49ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtjKGUudmFsdWUsZS5tb2RlKV0pO3JldHVybiB0fTtmLnJlbD1mdW5jdGlvbihlKXt2YXIgdD1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW2MoZS52YWx1ZSxlLm1vZGUpXSk7cmV0dXJuIHR9O2Yub3Blbj1mdW5jdGlvbihlKXt2YXIgdD1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW2MoZS52YWx1ZSxlLm1vZGUpXSk7cmV0dXJuIHR9O2YuY2xvc2U9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtjKGUudmFsdWUsZS5tb2RlKV0pO3JldHVybiB0fTtmLmlubmVyPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBuLk1hdGhOb2RlKFwibW9cIixbYyhlLnZhbHVlLGUubW9kZSldKTtyZXR1cm4gdH07Zi5wdW5jdD1mdW5jdGlvbihlKXt2YXIgdD1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW2MoZS52YWx1ZSxlLm1vZGUpXSk7dC5zZXRBdHRyaWJ1dGUoXCJzZXBhcmF0b3JcIixcInRydWVcIik7cmV0dXJuIHR9O2Yub3JkZ3JvdXA9ZnVuY3Rpb24oZSx0KXt2YXIgcj1kKGUudmFsdWUsdCk7dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtcm93XCIscik7cmV0dXJuIGF9O2YudGV4dD1mdW5jdGlvbihlLHQpe3ZhciByPWUudmFsdWUuYm9keTt2YXIgYT1bXTt2YXIgaT1udWxsO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXt2YXIgcz1nKHJbb10sdCk7aWYocy50eXBlPT09XCJtdGV4dFwiJiZpIT1udWxsKXtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShpLmNoaWxkcmVuLHMuY2hpbGRyZW4pfWVsc2V7YS5wdXNoKHMpO2lmKHMudHlwZT09PVwibXRleHRcIil7aT1zfX19aWYoYS5sZW5ndGg9PT0xKXtyZXR1cm4gYVswXX1lbHNle3JldHVybiBuZXcgbi5NYXRoTm9kZShcIm1yb3dcIixhKX19O2YuY29sb3I9ZnVuY3Rpb24oZSx0KXt2YXIgcj1kKGUudmFsdWUudmFsdWUsdCk7dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtc3R5bGVcIixyKTthLnNldEF0dHJpYnV0ZShcIm1hdGhjb2xvclwiLGUudmFsdWUuY29sb3IpO3JldHVybiBhfTtmLnhtbENsYXNzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZChlLnZhbHVlLnZhbHVlLHQpO3ZhciBhPW5ldyBuLk1hdGhOb2RlKFwibXN0eWxlXCIscik7YS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLGUudmFsdWUuY2wpO3JldHVybiBhfTtmLnN1cHN1Yj1mdW5jdGlvbihlLHQpe3ZhciByPWZhbHNlO3ZhciBhPXZvaWQgMDt2YXIgaT12b2lkIDA7aWYoZS52YWx1ZS5iYXNlKXtpZihlLnZhbHVlLmJhc2UudmFsdWUudHlwZT09PVwiaG9yaXpCcmFjZVwiKXtpPWUudmFsdWUuc3VwP3RydWU6ZmFsc2U7aWYoaT09PWUudmFsdWUuYmFzZS52YWx1ZS5pc092ZXIpe3I9dHJ1ZTthPWUudmFsdWUuYmFzZS52YWx1ZS5pc092ZXJ9fX12YXIgbz1bZyhlLnZhbHVlLmJhc2UsdCldO2lmKGUudmFsdWUuc3ViKXtvLnB1c2goZyhlLnZhbHVlLnN1Yix0KSl9aWYoZS52YWx1ZS5zdXApe28ucHVzaChnKGUudmFsdWUuc3VwLHQpKX12YXIgcz12b2lkIDA7aWYocil7cz1hP1wibW92ZXJcIjpcIm11bmRlclwifWVsc2UgaWYoIWUudmFsdWUuc3ViKXtzPVwibXN1cFwifWVsc2UgaWYoIWUudmFsdWUuc3VwKXtzPVwibXN1YlwifWVsc2V7cz1cIm1zdWJzdXBcIn12YXIgbD1uZXcgbi5NYXRoTm9kZShzLG8pO3JldHVybiBsfTtmLmdlbmZyYWM9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgbi5NYXRoTm9kZShcIm1mcmFjXCIsW2coZS52YWx1ZS5udW1lcix0KSxnKGUudmFsdWUuZGVub20sdCldKTtpZighZS52YWx1ZS5oYXNCYXJMaW5lKXtyLnNldEF0dHJpYnV0ZShcImxpbmV0aGlja25lc3NcIixcIjBweFwiKX1pZihlLnZhbHVlLmxlZnREZWxpbSE9bnVsbHx8ZS52YWx1ZS5yaWdodERlbGltIT1udWxsKXt2YXIgYT1bXTtpZihlLnZhbHVlLmxlZnREZWxpbSE9bnVsbCl7dmFyIGk9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtuZXcgbi5UZXh0Tm9kZShlLnZhbHVlLmxlZnREZWxpbSldKTtpLnNldEF0dHJpYnV0ZShcImZlbmNlXCIsXCJ0cnVlXCIpO2EucHVzaChpKX1hLnB1c2gocik7aWYoZS52YWx1ZS5yaWdodERlbGltIT1udWxsKXt2YXIgbz1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW25ldyBuLlRleHROb2RlKGUudmFsdWUucmlnaHREZWxpbSldKTtvLnNldEF0dHJpYnV0ZShcImZlbmNlXCIsXCJ0cnVlXCIpO2EucHVzaChvKX12YXIgcz1uZXcgbi5NYXRoTm9kZShcIm1yb3dcIixhKTtyZXR1cm4gc31yZXR1cm4gcn07Zi5hcnJheT1mdW5jdGlvbihlLHQpe3JldHVybiBuZXcgbi5NYXRoTm9kZShcIm10YWJsZVwiLGUudmFsdWUuYm9keS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBuLk1hdGhOb2RlKFwibXRyXCIsZS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBuLk1hdGhOb2RlKFwibXRkXCIsW2coZSx0KV0pfSkpfSkpfTtmLnNxcnQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj12b2lkIDA7aWYoZS52YWx1ZS5pbmRleCl7cj1uZXcgbi5NYXRoTm9kZShcIm1yb290XCIsW2coZS52YWx1ZS5ib2R5LHQpLGcoZS52YWx1ZS5pbmRleCx0KV0pfWVsc2V7cj1uZXcgbi5NYXRoTm9kZShcIm1zcXJ0XCIsW2coZS52YWx1ZS5ib2R5LHQpXSl9cmV0dXJuIHJ9O2YubGVmdHJpZ2h0PWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZChlLnZhbHVlLmJvZHksdCk7aWYoZS52YWx1ZS5sZWZ0IT09XCIuXCIpe3ZhciBhPW5ldyBuLk1hdGhOb2RlKFwibW9cIixbYyhlLnZhbHVlLmxlZnQsZS5tb2RlKV0pO2Euc2V0QXR0cmlidXRlKFwiZmVuY2VcIixcInRydWVcIik7ci51bnNoaWZ0KGEpfWlmKGUudmFsdWUucmlnaHQhPT1cIi5cIil7dmFyIGk9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtjKGUudmFsdWUucmlnaHQsZS5tb2RlKV0pO2kuc2V0QXR0cmlidXRlKFwiZmVuY2VcIixcInRydWVcIik7ci5wdXNoKGkpfXZhciBvPW5ldyBuLk1hdGhOb2RlKFwibXJvd1wiLHIpO3JldHVybiBvfTtmLm1pZGRsZT1mdW5jdGlvbihlLHQpe3ZhciByPW5ldyBuLk1hdGhOb2RlKFwibW9cIixbYyhlLnZhbHVlLm1pZGRsZSxlLm1vZGUpXSk7ci5zZXRBdHRyaWJ1dGUoXCJmZW5jZVwiLFwidHJ1ZVwiKTtyZXR1cm4gcn07Zi5hY2NlbnQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj12b2lkIDA7aWYoZS52YWx1ZS5pc1N0cmV0Y2h5KXtyPXUubWF0aE1Mbm9kZShlLnZhbHVlLmxhYmVsKX1lbHNle3I9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtjKGUudmFsdWUubGFiZWwsZS5tb2RlKV0pfXZhciBhPW5ldyBuLk1hdGhOb2RlKFwibW92ZXJcIixbZyhlLnZhbHVlLmJhc2UsdCkscl0pO2Euc2V0QXR0cmlidXRlKFwiYWNjZW50XCIsXCJ0cnVlXCIpO3JldHVybiBhfTtmLnNwYWNpbmc9ZnVuY3Rpb24oZSl7dmFyIHQ9dm9pZCAwO2lmKGUudmFsdWU9PT1cIlxcXFwgXCJ8fGUudmFsdWU9PT1cIlxcXFxzcGFjZVwifHxlLnZhbHVlPT09XCIgXCJ8fGUudmFsdWU9PT1cIn5cIil7dD1uZXcgbi5NYXRoTm9kZShcIm10ZXh0XCIsW25ldyBuLlRleHROb2RlKFwiXFx4YTBcIildKX1lbHNle3Q9bmV3IG4uTWF0aE5vZGUoXCJtc3BhY2VcIik7dC5zZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiLGEuc3BhY2luZ0Z1bmN0aW9uc1tlLnZhbHVlXS5zaXplKX1yZXR1cm4gdH07Zi5vcD1mdW5jdGlvbihlLHQpe3ZhciByPXZvaWQgMDtpZihlLnZhbHVlLnN5bWJvbCl7cj1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW2MoZS52YWx1ZS5ib2R5LGUubW9kZSldKX1lbHNlIGlmKGUudmFsdWUudmFsdWUpe3I9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLGQoZS52YWx1ZS52YWx1ZSx0KSl9ZWxzZXtyPW5ldyBuLk1hdGhOb2RlKFwibWlcIixbbmV3IG4uVGV4dE5vZGUoZS52YWx1ZS5ib2R5LnNsaWNlKDEpKV0pfXJldHVybiByfTtmLmN1cnNvcj1mdW5jdGlvbihlKXt2YXIgdD1uZXcgbi5NYXRoTm9kZShcIm10ZXh0XCIsW25ldyBuLlRleHROb2RlKFwifFwiKV0pO3JldHVybiB0fTtmLm1vZD1mdW5jdGlvbihlLHQpe3ZhciByPVtdO2lmKGUudmFsdWUubW9kVHlwZT09PVwicG9kXCJ8fGUudmFsdWUubW9kVHlwZT09PVwicG1vZFwiKXtyLnB1c2gobmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtjKFwiKFwiLGUubW9kZSldKSl9aWYoZS52YWx1ZS5tb2RUeXBlIT09XCJwb2RcIil7ci5wdXNoKG5ldyBuLk1hdGhOb2RlKFwibW9cIixbYyhcIm1vZFwiLGUubW9kZSldKSl9aWYoZS52YWx1ZS52YWx1ZSl7dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtc3BhY2VcIik7YS5zZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiLFwiMC4zMzMzMzNlbVwiKTtyLnB1c2goYSk7cj1yLmNvbmNhdChkKGUudmFsdWUudmFsdWUsdCkpfWlmKGUudmFsdWUubW9kVHlwZT09PVwicG9kXCJ8fGUudmFsdWUubW9kVHlwZT09PVwicG1vZFwiKXtyLnB1c2gobmV3IG4uTWF0aE5vZGUoXCJtb1wiLFtjKFwiKVwiLGUubW9kZSldKSl9cmV0dXJuIG5ldyBuLk1hdGhOb2RlKFwibW9cIixyKX07Zi5rYXRleD1mdW5jdGlvbihlKXt2YXIgdD1uZXcgbi5NYXRoTm9kZShcIm10ZXh0XCIsW25ldyBuLlRleHROb2RlKFwiS2FUZVhcIildKTtyZXR1cm4gdH07Zi5mb250PWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS52YWx1ZS5mb250O3JldHVybiBnKGUudmFsdWUuYm9keSx0LndpdGhGb250KHIpKX07Zi5kZWxpbXNpemluZz1mdW5jdGlvbihlKXt2YXIgdD1bXTtpZihlLnZhbHVlLnZhbHVlIT09XCIuXCIpe3QucHVzaChjKGUudmFsdWUudmFsdWUsZS5tb2RlKSl9dmFyIHI9bmV3IG4uTWF0aE5vZGUoXCJtb1wiLHQpO2lmKGUudmFsdWUubWNsYXNzPT09XCJtb3BlblwifHxlLnZhbHVlLm1jbGFzcz09PVwibWNsb3NlXCIpe3Iuc2V0QXR0cmlidXRlKFwiZmVuY2VcIixcInRydWVcIil9ZWxzZXtyLnNldEF0dHJpYnV0ZShcImZlbmNlXCIsXCJmYWxzZVwiKX1yZXR1cm4gcn07Zi5zdHlsaW5nPWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZChlLnZhbHVlLnZhbHVlLHQpO3ZhciBhPW5ldyBuLk1hdGhOb2RlKFwibXN0eWxlXCIscik7dmFyIGk9e2Rpc3BsYXk6W1wiMFwiLFwidHJ1ZVwiXSx0ZXh0OltcIjBcIixcImZhbHNlXCJdLHNjcmlwdDpbXCIxXCIsXCJmYWxzZVwiXSxzY3JpcHRzY3JpcHQ6W1wiMlwiLFwiZmFsc2VcIl19O3ZhciBvPWlbZS52YWx1ZS5zdHlsZV07YS5zZXRBdHRyaWJ1dGUoXCJzY3JpcHRsZXZlbFwiLG9bMF0pO2Euc2V0QXR0cmlidXRlKFwiZGlzcGxheXN0eWxlXCIsb1sxXSk7cmV0dXJuIGF9O2Yuc2l6aW5nPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dC5oYXZpbmdTaXplKGUudmFsdWUuc2l6ZSk7dmFyIGE9ZChlLnZhbHVlLnZhbHVlLHIpO3ZhciBpPW5ldyBuLk1hdGhOb2RlKFwibXN0eWxlXCIsYSk7aS5zZXRBdHRyaWJ1dGUoXCJtYXRoc2l6ZVwiLHIuc2l6ZU11bHRpcGxpZXIrXCJlbVwiKTtyZXR1cm4gaX07Zi5vdmVybGluZT1mdW5jdGlvbihlLHQpe3ZhciByPW5ldyBuLk1hdGhOb2RlKFwibW9cIixbbmV3IG4uVGV4dE5vZGUoXCJcXHUyMDNlXCIpXSk7ci5zZXRBdHRyaWJ1dGUoXCJzdHJldGNoeVwiLFwidHJ1ZVwiKTt2YXIgYT1uZXcgbi5NYXRoTm9kZShcIm1vdmVyXCIsW2coZS52YWx1ZS5ib2R5LHQpLHJdKTthLnNldEF0dHJpYnV0ZShcImFjY2VudFwiLFwidHJ1ZVwiKTtyZXR1cm4gYX07Zi51bmRlcmxpbmU9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgbi5NYXRoTm9kZShcIm1vXCIsW25ldyBuLlRleHROb2RlKFwiXFx1MjAzZVwiKV0pO3Iuc2V0QXR0cmlidXRlKFwic3RyZXRjaHlcIixcInRydWVcIik7dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtdW5kZXJcIixbZyhlLnZhbHVlLmJvZHksdCkscl0pO2Euc2V0QXR0cmlidXRlKFwiYWNjZW50dW5kZXJcIixcInRydWVcIik7cmV0dXJuIGF9O2YuYWNjZW50VW5kZXI9ZnVuY3Rpb24oZSx0KXt2YXIgcj11Lm1hdGhNTG5vZGUoZS52YWx1ZS5sYWJlbCk7dmFyIGE9bmV3IG4uTWF0aE5vZGUoXCJtdW5kZXJcIixbZyhlLnZhbHVlLmJvZHksdCkscl0pO2Euc2V0QXR0cmlidXRlKFwiYWNjZW50dW5kZXJcIixcInRydWVcIik7cmV0dXJuIGF9O2YuZW5jbG9zZT1mdW5jdGlvbihlLHQpe3ZhciByPW5ldyBuLk1hdGhOb2RlKFwibWVuY2xvc2VcIixbZyhlLnZhbHVlLmJvZHksdCldKTt2YXIgYT1cIlwiO3N3aXRjaChlLnZhbHVlLmxhYmVsKXtjYXNlXCJcXFxcYmNhbmNlbFwiOmE9XCJkb3duZGlhZ29uYWxzdHJpa2VcIjticmVhaztjYXNlXCJcXFxcc291dFwiOmE9XCJob3Jpem9udGFsc3RyaWtlXCI7YnJlYWs7Y2FzZVwiXFxcXGZib3hcIjphPVwiYm94XCI7YnJlYWs7ZGVmYXVsdDphPVwidXBkaWFnb25hbHN0cmlrZVwifXIuc2V0QXR0cmlidXRlKFwibm90YXRpb25cIixhKTtyZXR1cm4gcn07Zi5ob3JpekJyYWNlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dS5tYXRoTUxub2RlKGUudmFsdWUubGFiZWwpO3JldHVybiBuZXcgbi5NYXRoTm9kZShlLnZhbHVlLmlzT3Zlcj9cIm1vdmVyXCI6XCJtdW5kZXJcIixbZyhlLnZhbHVlLmJhc2UsdCkscl0pfTtmLnhBcnJvdz1mdW5jdGlvbihlLHQpe3ZhciByPXUubWF0aE1Mbm9kZShlLnZhbHVlLmxhYmVsKTt2YXIgYT12b2lkIDA7dmFyIGk9dm9pZCAwO2lmKGUudmFsdWUuYm9keSl7dmFyIG89ZyhlLnZhbHVlLmJvZHksdCk7aWYoZS52YWx1ZS5iZWxvdyl7aT1nKGUudmFsdWUuYmVsb3csdCk7YT1uZXcgbi5NYXRoTm9kZShcIm11bmRlcm92ZXJcIixbcixpLG9dKX1lbHNle2E9bmV3IG4uTWF0aE5vZGUoXCJtb3ZlclwiLFtyLG9dKX19ZWxzZSBpZihlLnZhbHVlLmJlbG93KXtpPWcoZS52YWx1ZS5iZWxvdyx0KTthPW5ldyBuLk1hdGhOb2RlKFwibXVuZGVyXCIsW3IsaV0pfWVsc2V7YT1uZXcgbi5NYXRoTm9kZShcIm1vdmVyXCIsW3JdKX1yZXR1cm4gYX07Zi5ydWxlPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBuLk1hdGhOb2RlKFwibXJvd1wiKTtyZXR1cm4gdH07Zi5rZXJuPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBuLk1hdGhOb2RlKFwibXJvd1wiKTtyZXR1cm4gdH07Zi5sbGFwPWZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IG4uTWF0aE5vZGUoXCJtcGFkZGVkXCIsW2coZS52YWx1ZS5ib2R5LHQpXSk7ci5zZXRBdHRyaWJ1dGUoXCJsc3BhY2VcIixcIi0xd2lkdGhcIik7ci5zZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiLFwiMHB4XCIpO3JldHVybiByfTtmLnJsYXA9ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgbi5NYXRoTm9kZShcIm1wYWRkZWRcIixbZyhlLnZhbHVlLmJvZHksdCldKTtyLnNldEF0dHJpYnV0ZShcIndpZHRoXCIsXCIwcHhcIik7cmV0dXJuIHJ9O2YucGhhbnRvbT1mdW5jdGlvbihlLHQpe3ZhciByPWQoZS52YWx1ZS52YWx1ZSx0KTtyZXR1cm4gbmV3IG4uTWF0aE5vZGUoXCJtcGhhbnRvbVwiLHIpfTtmLm1jbGFzcz1mdW5jdGlvbihlLHQpe3ZhciByPWQoZS52YWx1ZS52YWx1ZSx0KTtyZXR1cm4gbmV3IG4uTWF0aE5vZGUoXCJtc3R5bGVcIixyKX07dmFyIGQ9ZnVuY3Rpb24gZSh0LHIpe3ZhciBhPVtdO2Zvcih2YXIgaT0wO2k8dC5sZW5ndGg7aSsrKXt2YXIgbj10W2ldO2EucHVzaChnKG4scikpfXJldHVybiBhfTt2YXIgZz1mdW5jdGlvbiBlKHQscil7aWYoIXQpe3JldHVybiBuZXcgbi5NYXRoTm9kZShcIm1yb3dcIil9aWYoZlt0LnR5cGVdKXtyZXR1cm4gZlt0LnR5cGVdKHQscil9ZWxzZXt0aHJvdyBuZXcgbyhcIkdvdCBncm91cCBvZiB1bmtub3duIHR5cGU6ICdcIit0LnR5cGUrXCInXCIpfX07dmFyIHk9ZnVuY3Rpb24gZSh0LHIsYSl7dmFyIGk9ZCh0LGEpO3ZhciBvPW5ldyBuLk1hdGhOb2RlKFwibXJvd1wiLGkpO3ZhciBzPW5ldyBuLk1hdGhOb2RlKFwiYW5ub3RhdGlvblwiLFtuZXcgbi5UZXh0Tm9kZShyKV0pO3Muc2V0QXR0cmlidXRlKFwiZW5jb2RpbmdcIixcImFwcGxpY2F0aW9uL3gtdGV4XCIpO3ZhciBsPW5ldyBuLk1hdGhOb2RlKFwic2VtYW50aWNzXCIsW28sc10pO3ZhciB1PW5ldyBuLk1hdGhOb2RlKFwibWF0aFwiLFtsXSk7cmV0dXJuIGgoW1wia2F0ZXgtbWF0aG1sXCJdLFt1XSl9O3QuZXhwb3J0cz15fSx7XCIuL1BhcnNlRXJyb3JcIjoxMCxcIi4vYnVpbGRDb21tb25cIjoxNCxcIi4vZm9udE1ldHJpY3NcIjoyMSxcIi4vbWF0aE1MVHJlZVwiOjI1LFwiLi9zdHJldGNoeVwiOjI4LFwiLi9zeW1ib2xzXCI6MjksXCIuL3V0aWxzXCI6MzF9XSwxNzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL2J1aWxkSFRNTFwiKTt2YXIgaT1lKFwiLi9idWlsZE1hdGhNTFwiKTt2YXIgbj1lKFwiLi9idWlsZENvbW1vblwiKTt2YXIgbz1lKFwiLi9PcHRpb25zXCIpO3ZhciBzPWUoXCIuL1NldHRpbmdzXCIpO3ZhciBsPWUoXCIuL1N0eWxlXCIpO3ZhciB1PW4ubWFrZVNwYW47dmFyIGg9ZnVuY3Rpb24gZSh0LHIsbil7bj1ufHxuZXcgcyh7fSk7dmFyIGg9bC5URVhUO2lmKG4uZGlzcGxheU1vZGUpe2g9bC5ESVNQTEFZfXZhciBwPW5ldyBvKHtzdHlsZTpofSk7dmFyIGM9aSh0LHIscCk7dmFyIHY9YSh0LHApO3ZhciBmPXUoW1wia2F0ZXhcIl0sW2Msdl0pO2lmKG4uZGlzcGxheU1vZGUpe3JldHVybiB1KFtcImthdGV4LWRpc3BsYXlcIl0sW2ZdKX1lbHNle3JldHVybiBmfX07dC5leHBvcnRzPWh9LHtcIi4vT3B0aW9uc1wiOjksXCIuL1NldHRpbmdzXCI6MTIsXCIuL1N0eWxlXCI6MTMsXCIuL2J1aWxkQ29tbW9uXCI6MTQsXCIuL2J1aWxkSFRNTFwiOjE1LFwiLi9idWlsZE1hdGhNTFwiOjE2fV0sMTg6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi9QYXJzZUVycm9yXCIpO3ZhciBpPWUoXCIuL1N0eWxlXCIpO3ZhciBuPWUoXCIuL2J1aWxkQ29tbW9uXCIpO3ZhciBvPWUoXCIuL2ZvbnRNZXRyaWNzXCIpO3ZhciBzPWUoXCIuL3N5bWJvbHNcIik7dmFyIGw9ZShcIi4vdXRpbHNcIik7dmFyIHU9bi5tYWtlU3Bhbjt2YXIgaD1mdW5jdGlvbiBlKHQscil7aWYocy5tYXRoW3RdJiZzLm1hdGhbdF0ucmVwbGFjZSl7cmV0dXJuIG8uZ2V0Q2hhcmFjdGVyTWV0cmljcyhzLm1hdGhbdF0ucmVwbGFjZSxyKX1lbHNle3JldHVybiBvLmdldENoYXJhY3Rlck1ldHJpY3ModCxyKX19O3ZhciBwPWZ1bmN0aW9uIGUodCxyLGEsaSl7dmFyIG49YS5oYXZpbmdCYXNlU3R5bGUocik7dmFyIG89dSgoaXx8W10pLmNvbmNhdChuLnNpemluZ0NsYXNzZXMoYSkpLFt0XSxhKTtvLmhlaWdodCo9bi5zaXplTXVsdGlwbGllci9hLnNpemVNdWx0aXBsaWVyO28uZGVwdGgqPW4uc2l6ZU11bHRpcGxpZXIvYS5zaXplTXVsdGlwbGllcjtvLm1heEZvbnRTaXplPW4uc2l6ZU11bHRpcGxpZXI7cmV0dXJuIG99O3ZhciBjPWZ1bmN0aW9uIGUodCxyLGEpe3ZhciBpPXIuaGF2aW5nQmFzZVN0eWxlKGEpO3ZhciBuPSgxLXIuc2l6ZU11bHRpcGxpZXIvaS5zaXplTXVsdGlwbGllcikqci5mb250TWV0cmljcygpLmF4aXNIZWlnaHQ7dC5jbGFzc2VzLnB1c2goXCJkZWxpbWNlbnRlclwiKTt0LnN0eWxlLnRvcD1uK1wiZW1cIjt0LmhlaWdodC09bjt0LmRlcHRoKz1ufTt2YXIgdj1mdW5jdGlvbiBlKHQscixhLGksbyxzKXt2YXIgbD1uLm1ha2VTeW1ib2wodCxcIk1haW4tUmVndWxhclwiLG8saSk7dmFyIHU9cChsLHIsaSxzKTtpZihhKXtjKHUsaSxyKX1yZXR1cm4gdX07dmFyIGY9ZnVuY3Rpb24gZSh0LHIsYSxpKXtyZXR1cm4gbi5tYWtlU3ltYm9sKHQsXCJTaXplXCIrcitcIi1SZWd1bGFyXCIsYSxpKX07dmFyIG09ZnVuY3Rpb24gZSh0LHIsYSxuLG8scyl7dmFyIGw9Zih0LHIsbyxuKTt2YXIgaD1wKHUoW1wiZGVsaW1zaXppbmdcIixcInNpemVcIityXSxbbF0sbiksaS5URVhULG4scyk7aWYoYSl7YyhoLG4saS5URVhUKX1yZXR1cm4gaH07dmFyIGQ9ZnVuY3Rpb24gZSh0LHIsYSl7dmFyIGk9dm9pZCAwO2lmKHI9PT1cIlNpemUxLVJlZ3VsYXJcIil7aT1cImRlbGltLXNpemUxXCJ9ZWxzZSBpZihyPT09XCJTaXplNC1SZWd1bGFyXCIpe2k9XCJkZWxpbS1zaXplNFwifXZhciBvPXUoW1wiZGVsaW1zaXppbmdpbm5lclwiLGldLFt1KFtdLFtuLm1ha2VTeW1ib2wodCxyLGEpXSldKTtyZXR1cm57dHlwZTpcImVsZW1cIixlbGVtOm99fTt2YXIgZz1mdW5jdGlvbiBlKHQscixhLG8scyxsKXt2YXIgYz12b2lkIDA7dmFyIHY9dm9pZCAwO3ZhciBmPXZvaWQgMDt2YXIgbT12b2lkIDA7Yz1mPW09dDt2PW51bGw7dmFyIGc9XCJTaXplMS1SZWd1bGFyXCI7aWYodD09PVwiXFxcXHVwYXJyb3dcIil7Zj1tPVwiXFx1MjNkMFwifWVsc2UgaWYodD09PVwiXFxcXFVwYXJyb3dcIil7Zj1tPVwiXFx1MjAxNlwifWVsc2UgaWYodD09PVwiXFxcXGRvd25hcnJvd1wiKXtjPWY9XCJcXHUyM2QwXCJ9ZWxzZSBpZih0PT09XCJcXFxcRG93bmFycm93XCIpe2M9Zj1cIlxcdTIwMTZcIn1lbHNlIGlmKHQ9PT1cIlxcXFx1cGRvd25hcnJvd1wiKXtjPVwiXFxcXHVwYXJyb3dcIjtmPVwiXFx1MjNkMFwiO209XCJcXFxcZG93bmFycm93XCJ9ZWxzZSBpZih0PT09XCJcXFxcVXBkb3duYXJyb3dcIil7Yz1cIlxcXFxVcGFycm93XCI7Zj1cIlxcdTIwMTZcIjttPVwiXFxcXERvd25hcnJvd1wifWVsc2UgaWYodD09PVwiW1wifHx0PT09XCJcXFxcbGJyYWNrXCIpe2M9XCJcXHUyM2ExXCI7Zj1cIlxcdTIzYTJcIjttPVwiXFx1MjNhM1wiO2c9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCJdXCJ8fHQ9PT1cIlxcXFxyYnJhY2tcIil7Yz1cIlxcdTIzYTRcIjtmPVwiXFx1MjNhNVwiO209XCJcXHUyM2E2XCI7Zz1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIlxcXFxsZmxvb3JcIil7Zj1jPVwiXFx1MjNhMlwiO209XCJcXHUyM2EzXCI7Zz1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIlxcXFxsY2VpbFwiKXtjPVwiXFx1MjNhMVwiO2Y9bT1cIlxcdTIzYTJcIjtnPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXHJmbG9vclwiKXtmPWM9XCJcXHUyM2E1XCI7bT1cIlxcdTIzYTZcIjtnPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXHJjZWlsXCIpe2M9XCJcXHUyM2E0XCI7Zj1tPVwiXFx1MjNhNVwiO2c9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCIoXCIpe2M9XCJcXHUyMzliXCI7Zj1cIlxcdTIzOWNcIjttPVwiXFx1MjM5ZFwiO2c9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCIpXCIpe2M9XCJcXHUyMzllXCI7Zj1cIlxcdTIzOWZcIjttPVwiXFx1MjNhMFwiO2c9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCJcXFxce1wifHx0PT09XCJcXFxcbGJyYWNlXCIpe2M9XCJcXHUyM2E3XCI7dj1cIlxcdTIzYThcIjttPVwiXFx1MjNhOVwiO2Y9XCJcXHUyM2FhXCI7Zz1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIlxcXFx9XCJ8fHQ9PT1cIlxcXFxyYnJhY2VcIil7Yz1cIlxcdTIzYWJcIjt2PVwiXFx1MjNhY1wiO209XCJcXHUyM2FkXCI7Zj1cIlxcdTIzYWFcIjtnPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXGxncm91cFwiKXtjPVwiXFx1MjNhN1wiO209XCJcXHUyM2E5XCI7Zj1cIlxcdTIzYWFcIjtnPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXHJncm91cFwiKXtjPVwiXFx1MjNhYlwiO209XCJcXHUyM2FkXCI7Zj1cIlxcdTIzYWFcIjtnPVwiU2l6ZTQtUmVndWxhclwifWVsc2UgaWYodD09PVwiXFxcXGxtb3VzdGFjaGVcIil7Yz1cIlxcdTIzYTdcIjttPVwiXFx1MjNhZFwiO2Y9XCJcXHUyM2FhXCI7Zz1cIlNpemU0LVJlZ3VsYXJcIn1lbHNlIGlmKHQ9PT1cIlxcXFxybW91c3RhY2hlXCIpe2M9XCJcXHUyM2FiXCI7bT1cIlxcdTIzYTlcIjtmPVwiXFx1MjNhYVwiO2c9XCJTaXplNC1SZWd1bGFyXCJ9ZWxzZSBpZih0PT09XCJcXFxcc3VyZFwiKXtjPVwiXFx1ZTAwMVwiO209XCJcXHUyM2I3XCI7Zj1cIlxcdWUwMDBcIjtnPVwiU2l6ZTQtUmVndWxhclwifXZhciB5PWgoYyxnKTt2YXIgeD15LmhlaWdodCt5LmRlcHRoO3ZhciBiPWgoZixnKTt2YXIgdz1iLmhlaWdodCtiLmRlcHRoO3ZhciBrPWgobSxnKTt2YXIgej1rLmhlaWdodCtrLmRlcHRoO3ZhciBNPTA7dmFyIFM9MTtpZih2IT09bnVsbCl7dmFyIEE9aCh2LGcpO009QS5oZWlnaHQrQS5kZXB0aDtTPTJ9dmFyIE49eCt6K007dmFyIFQ9TWF0aC5jZWlsKChyLU4pLyhTKncpKTt2YXIgcT1OK1QqUyp3O3ZhciBDPW8uZm9udE1ldHJpY3MoKS5heGlzSGVpZ2h0O2lmKGEpe0MqPW8uc2l6ZU11bHRpcGxpZXJ9dmFyIEU9cS8yLUM7dmFyIE89W107Ty5wdXNoKGQobSxnLHMpKTtpZih2PT09bnVsbCl7Zm9yKHZhciBSPTA7UjxUO1IrKyl7Ty5wdXNoKGQoZixnLHMpKX19ZWxzZXtmb3IodmFyIEw9MDtMPFQ7TCsrKXtPLnB1c2goZChmLGcscykpfU8ucHVzaChkKHYsZyxzKSk7Zm9yKHZhciBEPTA7RDxUO0QrKyl7Ty5wdXNoKGQoZixnLHMpKX19Ty5wdXNoKGQoYyxnLHMpKTt2YXIgUD1vLmhhdmluZ0Jhc2VTdHlsZShpLlRFWFQpO3ZhciBCPW4ubWFrZVZMaXN0KE8sXCJib3R0b21cIixFLFApO3JldHVybiBwKHUoW1wiZGVsaW1zaXppbmdcIixcIm11bHRcIl0sW0JdLFApLGkuVEVYVCxvLGwpfTt2YXIgeT1bXCIoXCIsXCIpXCIsXCJbXCIsXCJcXFxcbGJyYWNrXCIsXCJdXCIsXCJcXFxccmJyYWNrXCIsXCJcXFxce1wiLFwiXFxcXGxicmFjZVwiLFwiXFxcXH1cIixcIlxcXFxyYnJhY2VcIixcIlxcXFxsZmxvb3JcIixcIlxcXFxyZmxvb3JcIixcIlxcXFxsY2VpbFwiLFwiXFxcXHJjZWlsXCIsXCJcXFxcc3VyZFwiXTt2YXIgeD1bXCJcXFxcdXBhcnJvd1wiLFwiXFxcXGRvd25hcnJvd1wiLFwiXFxcXHVwZG93bmFycm93XCIsXCJcXFxcVXBhcnJvd1wiLFwiXFxcXERvd25hcnJvd1wiLFwiXFxcXFVwZG93bmFycm93XCIsXCJ8XCIsXCJcXFxcfFwiLFwiXFxcXHZlcnRcIixcIlxcXFxWZXJ0XCIsXCJcXFxcbHZlcnRcIixcIlxcXFxydmVydFwiLFwiXFxcXGxWZXJ0XCIsXCJcXFxcclZlcnRcIixcIlxcXFxsZ3JvdXBcIixcIlxcXFxyZ3JvdXBcIixcIlxcXFxsbW91c3RhY2hlXCIsXCJcXFxccm1vdXN0YWNoZVwiXTt2YXIgYj1bXCI8XCIsXCI+XCIsXCJcXFxcbGFuZ2xlXCIsXCJcXFxccmFuZ2xlXCIsXCIvXCIsXCJcXFxcYmFja3NsYXNoXCIsXCJcXFxcbHRcIixcIlxcXFxndFwiXTt2YXIgdz1bMCwxLjIsMS44LDIuNCwzXTt2YXIgaz1mdW5jdGlvbiBlKHQscixpLG4sbyl7aWYodD09PVwiPFwifHx0PT09XCJcXFxcbHRcIil7dD1cIlxcXFxsYW5nbGVcIn1lbHNlIGlmKHQ9PT1cIj5cInx8dD09PVwiXFxcXGd0XCIpe3Q9XCJcXFxccmFuZ2xlXCJ9aWYobC5jb250YWlucyh5LHQpfHxsLmNvbnRhaW5zKGIsdCkpe3JldHVybiBtKHQscixmYWxzZSxpLG4sbyl9ZWxzZSBpZihsLmNvbnRhaW5zKHgsdCkpe3JldHVybiBnKHQsd1tyXSxmYWxzZSxpLG4sbyl9ZWxzZXt0aHJvdyBuZXcgYShcIklsbGVnYWwgZGVsaW1pdGVyOiAnXCIrdCtcIidcIil9fTt2YXIgej1be3R5cGU6XCJzbWFsbFwiLHN0eWxlOmkuU0NSSVBUU0NSSVBUfSx7dHlwZTpcInNtYWxsXCIsc3R5bGU6aS5TQ1JJUFR9LHt0eXBlOlwic21hbGxcIixzdHlsZTppLlRFWFR9LHt0eXBlOlwibGFyZ2VcIixzaXplOjF9LHt0eXBlOlwibGFyZ2VcIixzaXplOjJ9LHt0eXBlOlwibGFyZ2VcIixzaXplOjN9LHt0eXBlOlwibGFyZ2VcIixzaXplOjR9XTt2YXIgTT1be3R5cGU6XCJzbWFsbFwiLHN0eWxlOmkuU0NSSVBUU0NSSVBUfSx7dHlwZTpcInNtYWxsXCIsc3R5bGU6aS5TQ1JJUFR9LHt0eXBlOlwic21hbGxcIixzdHlsZTppLlRFWFR9LHt0eXBlOlwic3RhY2tcIn1dO3ZhciBTPVt7dHlwZTpcInNtYWxsXCIsc3R5bGU6aS5TQ1JJUFRTQ1JJUFR9LHt0eXBlOlwic21hbGxcIixzdHlsZTppLlNDUklQVH0se3R5cGU6XCJzbWFsbFwiLHN0eWxlOmkuVEVYVH0se3R5cGU6XCJsYXJnZVwiLHNpemU6MX0se3R5cGU6XCJsYXJnZVwiLHNpemU6Mn0se3R5cGU6XCJsYXJnZVwiLHNpemU6M30se3R5cGU6XCJsYXJnZVwiLHNpemU6NH0se3R5cGU6XCJzdGFja1wifV07dmFyIEE9ZnVuY3Rpb24gZSh0KXtpZih0LnR5cGU9PT1cInNtYWxsXCIpe3JldHVyblwiTWFpbi1SZWd1bGFyXCJ9ZWxzZSBpZih0LnR5cGU9PT1cImxhcmdlXCIpe3JldHVyblwiU2l6ZVwiK3Quc2l6ZStcIi1SZWd1bGFyXCJ9ZWxzZSBpZih0LnR5cGU9PT1cInN0YWNrXCIpe3JldHVyblwiU2l6ZTQtUmVndWxhclwifX07dmFyIE49ZnVuY3Rpb24gZSh0LHIsYSxpKXt2YXIgbj1NYXRoLm1pbigyLDMtaS5zdHlsZS5zaXplKTtmb3IodmFyIG89bjtvPGEubGVuZ3RoO28rKyl7aWYoYVtvXS50eXBlPT09XCJzdGFja1wiKXticmVha312YXIgcz1oKHQsQShhW29dKSk7dmFyIGw9cy5oZWlnaHQrcy5kZXB0aDtpZihhW29dLnR5cGU9PT1cInNtYWxsXCIpe3ZhciB1PWkuaGF2aW5nQmFzZVN0eWxlKGFbb10uc3R5bGUpO2wqPXUuc2l6ZU11bHRpcGxpZXJ9aWYobD5yKXtyZXR1cm4gYVtvXX19cmV0dXJuIGFbYS5sZW5ndGgtMV19O3ZhciBUPWZ1bmN0aW9uIGUodCxyLGEsaSxuLG8pe2lmKHQ9PT1cIjxcInx8dD09PVwiXFxcXGx0XCIpe3Q9XCJcXFxcbGFuZ2xlXCJ9ZWxzZSBpZih0PT09XCI+XCJ8fHQ9PT1cIlxcXFxndFwiKXt0PVwiXFxcXHJhbmdsZVwifXZhciBzPXZvaWQgMDtpZihsLmNvbnRhaW5zKGIsdCkpe3M9en1lbHNlIGlmKGwuY29udGFpbnMoeSx0KSl7cz1TfWVsc2V7cz1NfXZhciB1PU4odCxyLHMsaSk7aWYodS50eXBlPT09XCJzbWFsbFwiKXtyZXR1cm4gdih0LHUuc3R5bGUsYSxpLG4sbyl9ZWxzZSBpZih1LnR5cGU9PT1cImxhcmdlXCIpe3JldHVybiBtKHQsdS5zaXplLGEsaSxuLG8pfWVsc2UgaWYodS50eXBlPT09XCJzdGFja1wiKXtyZXR1cm4gZyh0LHIsYSxpLG4sbyl9fTt2YXIgcT1mdW5jdGlvbiBlKHQscixhLGksbixvKXt2YXIgcz1pLmZvbnRNZXRyaWNzKCkuYXhpc0hlaWdodCppLnNpemVNdWx0aXBsaWVyO3ZhciBsPTkwMTt2YXIgdT01L2kuZm9udE1ldHJpY3MoKS5wdFBlckVtO3ZhciBoPU1hdGgubWF4KHItcyxhK3MpO3ZhciBwPU1hdGgubWF4KGgvNTAwKmwsMipoLXUpO3JldHVybiBUKHQscCx0cnVlLGksbixvKX07dC5leHBvcnRzPXtzaXplZERlbGltOmssY3VzdG9tU2l6ZWREZWxpbTpULGxlZnRSaWdodERlbGltOnF9fSx7XCIuL1BhcnNlRXJyb3JcIjoxMCxcIi4vU3R5bGVcIjoxMyxcIi4vYnVpbGRDb21tb25cIjoxNCxcIi4vZm9udE1ldHJpY3NcIjoyMSxcIi4vc3ltYm9sc1wiOjI5LFwiLi91dGlsc1wiOjMxfV0sMTk6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi91bmljb2RlUmVnZXhlc1wiKTt2YXIgaT1lKFwiLi91dGlsc1wiKTt2YXIgbj1mdW5jdGlvbiBlKHQpe3Q9dC5zbGljZSgpO2Zvcih2YXIgcj10Lmxlbmd0aC0xO3I+PTA7ci0tKXtpZighdFtyXSl7dC5zcGxpY2UociwxKX19cmV0dXJuIHQuam9pbihcIiBcIil9O2Z1bmN0aW9uIG8oZSx0LHIpe3RoaXMuY2xhc3Nlcz1lfHxbXTt0aGlzLmNoaWxkcmVuPXR8fFtdO3RoaXMuaGVpZ2h0PTA7dGhpcy5kZXB0aD0wO3RoaXMubWF4Rm9udFNpemU9MDt0aGlzLnN0eWxlPXt9O3RoaXMuYXR0cmlidXRlcz17fTtpZihyKXtpZihyLnN0eWxlLmlzVGlnaHQoKSl7dGhpcy5jbGFzc2VzLnB1c2goXCJtdGlnaHRcIil9aWYoci5nZXRDb2xvcigpKXt0aGlzLnN0eWxlLmNvbG9yPXIuZ2V0Q29sb3IoKX19fW8ucHJvdG90eXBlLnNldEF0dHJpYnV0ZT1mdW5jdGlvbihlLHQpe3RoaXMuYXR0cmlidXRlc1tlXT10fTtvLnByb3RvdHlwZS50cnlDb21iaW5lPWZ1bmN0aW9uKGUpe3JldHVybiBmYWxzZX07by5wcm90b3R5cGUudG9Ob2RlPWZ1bmN0aW9uKCl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7ZS5jbGFzc05hbWU9bih0aGlzLmNsYXNzZXMpO2Zvcih2YXIgdCBpbiB0aGlzLnN0eWxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcy5zdHlsZSx0KSl7ZS5zdHlsZVt0XT10aGlzLnN0eWxlW3RdfX1mb3IodmFyIHIgaW4gdGhpcy5hdHRyaWJ1dGVzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcy5hdHRyaWJ1dGVzLHIpKXtlLnNldEF0dHJpYnV0ZShyLHRoaXMuYXR0cmlidXRlc1tyXSl9fWZvcih2YXIgYT0wO2E8dGhpcy5jaGlsZHJlbi5sZW5ndGg7YSsrKXtlLmFwcGVuZENoaWxkKHRoaXMuY2hpbGRyZW5bYV0udG9Ob2RlKCkpfXJldHVybiBlfTtvLnByb3RvdHlwZS50b01hcmt1cD1mdW5jdGlvbigpe3ZhciBlPVwiPHNwYW5cIjtpZih0aGlzLmNsYXNzZXMubGVuZ3RoKXtlKz0nIGNsYXNzPVwiJztlKz1pLmVzY2FwZShuKHRoaXMuY2xhc3NlcykpO2UrPSdcIid9dmFyIHQ9XCJcIjtmb3IodmFyIHIgaW4gdGhpcy5zdHlsZSl7aWYodGhpcy5zdHlsZS5oYXNPd25Qcm9wZXJ0eShyKSl7dCs9aS5oeXBoZW5hdGUocikrXCI6XCIrdGhpcy5zdHlsZVtyXStcIjtcIn19aWYodCl7ZSs9JyBzdHlsZT1cIicraS5lc2NhcGUodCkrJ1wiJ31mb3IodmFyIGEgaW4gdGhpcy5hdHRyaWJ1dGVzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcy5hdHRyaWJ1dGVzLGEpKXtlKz1cIiBcIithKyc9XCInO2UrPWkuZXNjYXBlKHRoaXMuYXR0cmlidXRlc1thXSk7ZSs9J1wiJ319ZSs9XCI+XCI7Zm9yKHZhciBvPTA7bzx0aGlzLmNoaWxkcmVuLmxlbmd0aDtvKyspe2UrPXRoaXMuY2hpbGRyZW5bb10udG9NYXJrdXAoKTtcbn1lKz1cIjwvc3Bhbj5cIjtyZXR1cm4gZX07ZnVuY3Rpb24gcyhlLHQpe3RoaXMuY2hpbGRyZW49ZXx8W107dGhpcy5oZWlnaHQ9MDt0aGlzLmRlcHRoPTA7dGhpcy5tYXhGb250U2l6ZT0wO2lmKHQpe2Zvcih2YXIgcj0wO3I8dGhpcy5jaGlsZHJlbi5sZW5ndGg7cisrKXtmb3IodmFyIGE9MDthPHQubGVuZ3RoO2ErKyl7dGhpcy5jaGlsZHJlbltyXS5jbGFzc2VzLnB1c2godFthXSl9fX10aGlzLmNsYXNzZXM9dHx8W119cy5wcm90b3R5cGUudG9Ob2RlPWZ1bmN0aW9uKCl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO2Zvcih2YXIgdD0wO3Q8dGhpcy5jaGlsZHJlbi5sZW5ndGg7dCsrKXtlLmFwcGVuZENoaWxkKHRoaXMuY2hpbGRyZW5bdF0udG9Ob2RlKCkpfXJldHVybiBlfTtzLnByb3RvdHlwZS50b01hcmt1cD1mdW5jdGlvbigpe3ZhciBlPVwiXCI7Zm9yKHZhciB0PTA7dDx0aGlzLmNoaWxkcmVuLmxlbmd0aDt0Kyspe2UrPXRoaXMuY2hpbGRyZW5bdF0udG9NYXJrdXAoKX1yZXR1cm4gZX07dmFyIGw9e1wiXFx4ZWVcIjpcIlxcdTAxMzFcXHUwMzAyXCIsXCJcXHhlZlwiOlwiXFx1MDEzMVxcdTAzMDhcIixcIlxceGVkXCI6XCJcXHUwMTMxXFx1MDMwMVwiLFwiXFx4ZWNcIjpcIlxcdTAxMzFcXHUwMzAwXCJ9O2Z1bmN0aW9uIHUoZSx0LHIsaSxuLG8scyl7dGhpcy52YWx1ZT1lfHxcIlwiO3RoaXMuaGVpZ2h0PXR8fDA7dGhpcy5kZXB0aD1yfHwwO3RoaXMuaXRhbGljPWl8fDA7dGhpcy5za2V3PW58fDA7dGhpcy5jbGFzc2VzPW98fFtdO3RoaXMuc3R5bGU9c3x8e307dGhpcy5tYXhGb250U2l6ZT0wO2lmKGEuY2prUmVnZXgudGVzdChlKSl7aWYoYS5oYW5ndWxSZWdleC50ZXN0KGUpKXt0aGlzLmNsYXNzZXMucHVzaChcImhhbmd1bF9mYWxsYmFja1wiKX1lbHNle3RoaXMuY2xhc3Nlcy5wdXNoKFwiY2prX2ZhbGxiYWNrXCIpfX1pZigvW1xceGVlXFx4ZWZcXHhlZFxceGVjXS8udGVzdCh0aGlzLnZhbHVlKSl7dGhpcy52YWx1ZT1sW3RoaXMudmFsdWVdfX11LnByb3RvdHlwZS50cnlDb21iaW5lPWZ1bmN0aW9uKGUpe2lmKCFlfHwhKGUgaW5zdGFuY2VvZiB1KXx8dGhpcy5pdGFsaWM+MHx8bih0aGlzLmNsYXNzZXMpIT09bihlLmNsYXNzZXMpfHx0aGlzLnNrZXchPT1lLnNrZXd8fHRoaXMubWF4Rm9udFNpemUhPT1lLm1heEZvbnRTaXplKXtyZXR1cm4gZmFsc2V9Zm9yKHZhciB0IGluIHRoaXMuc3R5bGUpe2lmKHRoaXMuc3R5bGUuaGFzT3duUHJvcGVydHkodCkmJnRoaXMuc3R5bGVbdF0hPT1lLnN0eWxlW3RdKXtyZXR1cm4gZmFsc2V9fWZvcih2YXIgciBpbiBlLnN0eWxlKXtpZihlLnN0eWxlLmhhc093blByb3BlcnR5KHIpJiZ0aGlzLnN0eWxlW3JdIT09ZS5zdHlsZVtyXSl7cmV0dXJuIGZhbHNlfX10aGlzLnZhbHVlKz1lLnZhbHVlO3RoaXMuaGVpZ2h0PU1hdGgubWF4KHRoaXMuaGVpZ2h0LGUuaGVpZ2h0KTt0aGlzLmRlcHRoPU1hdGgubWF4KHRoaXMuZGVwdGgsZS5kZXB0aCk7dGhpcy5pdGFsaWM9ZS5pdGFsaWM7cmV0dXJuIHRydWV9O3UucHJvdG90eXBlLnRvTm9kZT1mdW5jdGlvbigpe3ZhciBlPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHRoaXMudmFsdWUpO3ZhciB0PW51bGw7aWYodGhpcy5pdGFsaWM+MCl7dD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTt0LnN0eWxlLm1hcmdpblJpZ2h0PXRoaXMuaXRhbGljK1wiZW1cIn1pZih0aGlzLmNsYXNzZXMubGVuZ3RoPjApe3Q9dHx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7dC5jbGFzc05hbWU9bih0aGlzLmNsYXNzZXMpfWZvcih2YXIgciBpbiB0aGlzLnN0eWxlKXtpZih0aGlzLnN0eWxlLmhhc093blByb3BlcnR5KHIpKXt0PXR8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO3Quc3R5bGVbcl09dGhpcy5zdHlsZVtyXX19aWYodCl7dC5hcHBlbmRDaGlsZChlKTtyZXR1cm4gdH1lbHNle3JldHVybiBlfX07dS5wcm90b3R5cGUudG9NYXJrdXA9ZnVuY3Rpb24oKXt2YXIgZT1mYWxzZTt2YXIgdD1cIjxzcGFuXCI7aWYodGhpcy5jbGFzc2VzLmxlbmd0aCl7ZT10cnVlO3QrPScgY2xhc3M9XCInO3QrPWkuZXNjYXBlKG4odGhpcy5jbGFzc2VzKSk7dCs9J1wiJ312YXIgcj1cIlwiO2lmKHRoaXMuaXRhbGljPjApe3IrPVwibWFyZ2luLXJpZ2h0OlwiK3RoaXMuaXRhbGljK1wiZW07XCJ9Zm9yKHZhciBhIGluIHRoaXMuc3R5bGUpe2lmKHRoaXMuc3R5bGUuaGFzT3duUHJvcGVydHkoYSkpe3IrPWkuaHlwaGVuYXRlKGEpK1wiOlwiK3RoaXMuc3R5bGVbYV0rXCI7XCJ9fWlmKHIpe2U9dHJ1ZTt0Kz0nIHN0eWxlPVwiJytpLmVzY2FwZShyKSsnXCInfXZhciBvPWkuZXNjYXBlKHRoaXMudmFsdWUpO2lmKGUpe3QrPVwiPlwiO3QrPW87dCs9XCI8L3NwYW4+XCI7cmV0dXJuIHR9ZWxzZXtyZXR1cm4gb319O3QuZXhwb3J0cz17c3BhbjpvLGRvY3VtZW50RnJhZ21lbnQ6cyxzeW1ib2xOb2RlOnV9fSx7XCIuL3VuaWNvZGVSZWdleGVzXCI6MzAsXCIuL3V0aWxzXCI6MzF9XSwyMDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL3BhcnNlRGF0YVwiKTt2YXIgaT1lKFwiLi9QYXJzZUVycm9yXCIpO3ZhciBuPWEuUGFyc2VOb2RlO2Z1bmN0aW9uIG8oZSx0LHIpe3ZhciBhPVtdO3ZhciBvPVthXTt2YXIgcz1bXTt3aGlsZSh0cnVlKXt2YXIgbD1lLnBhcnNlRXhwcmVzc2lvbihmYWxzZSxudWxsKTtsPW5ldyBuKFwib3JkZ3JvdXBcIixsLGUubW9kZSk7aWYocil7bD1uZXcgbihcInN0eWxpbmdcIix7c3R5bGU6cix2YWx1ZTpbbF19LGUubW9kZSl9YS5wdXNoKGwpO3ZhciB1PWUubmV4dFRva2VuLnRleHQ7aWYodT09PVwiJlwiKXtlLmNvbnN1bWUoKX1lbHNlIGlmKHU9PT1cIlxcXFxlbmRcIil7YnJlYWt9ZWxzZSBpZih1PT09XCJcXFxcXFxcXFwifHx1PT09XCJcXFxcY3JcIil7dmFyIGg9ZS5wYXJzZUZ1bmN0aW9uKCk7cy5wdXNoKGgudmFsdWUuc2l6ZSk7YT1bXTtvLnB1c2goYSl9ZWxzZXt0aHJvdyBuZXcgaShcIkV4cGVjdGVkICYgb3IgXFxcXFxcXFwgb3IgXFxcXGVuZFwiLGUubmV4dFRva2VuKX19dC5ib2R5PW87dC5yb3dHYXBzPXM7cmV0dXJuIG5ldyBuKHQudHlwZSx0LGUubW9kZSl9ZnVuY3Rpb24gcyhlLHIsYSl7aWYodHlwZW9mIGU9PT1cInN0cmluZ1wiKXtlPVtlXX1pZih0eXBlb2Ygcj09PVwibnVtYmVyXCIpe3I9e251bUFyZ3M6cn19dmFyIGk9e251bUFyZ3M6ci5udW1BcmdzfHwwLGFyZ1R5cGVzOnIuYXJnVHlwZXMsZ3JlZWRpbmVzczoxLGFsbG93ZWRJblRleHQ6ISFyLmFsbG93ZWRJblRleHQsbnVtT3B0aW9uYWxBcmdzOnIubnVtT3B0aW9uYWxBcmdzfHwwLGhhbmRsZXI6YX07Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDsrK24pe3QuZXhwb3J0c1tlW25dXT1pfX1mdW5jdGlvbiBsKGUpe2lmKGUuc3Vic3RyKDAsMSk9PT1cImRcIil7cmV0dXJuXCJkaXNwbGF5XCJ9ZWxzZXtyZXR1cm5cInRleHRcIn19cyhbXCJhcnJheVwiLFwiZGFycmF5XCJdLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyPXIudmFsdWUubWFwP3IudmFsdWU6W3JdO3ZhciBhPXIubWFwKGZ1bmN0aW9uKGUpe3ZhciB0PWUudmFsdWU7aWYoXCJsY3JcIi5pbmRleE9mKHQpIT09LTEpe3JldHVybnt0eXBlOlwiYWxpZ25cIixhbGlnbjp0fX1lbHNlIGlmKHQ9PT1cInxcIil7cmV0dXJue3R5cGU6XCJzZXBhcmF0b3JcIixzZXBhcmF0b3I6XCJ8XCJ9fXRocm93IG5ldyBpKFwiVW5rbm93biBjb2x1bW4gYWxpZ25tZW50OiBcIitlLnZhbHVlLGUpfSk7dmFyIG49e3R5cGU6XCJhcnJheVwiLGNvbHM6YSxoc2tpcEJlZm9yZUFuZEFmdGVyOnRydWV9O249byhlLnBhcnNlcixuLGwoZS5lbnZOYW1lKSk7cmV0dXJuIG59KTtzKFtcIm1hdHJpeFwiLFwicG1hdHJpeFwiLFwiYm1hdHJpeFwiLFwiQm1hdHJpeFwiLFwidm1hdHJpeFwiLFwiVm1hdHJpeFwiXSx7fSxmdW5jdGlvbihlKXt2YXIgdD17bWF0cml4Om51bGwscG1hdHJpeDpbXCIoXCIsXCIpXCJdLGJtYXRyaXg6W1wiW1wiLFwiXVwiXSxCbWF0cml4OltcIlxcXFx7XCIsXCJcXFxcfVwiXSx2bWF0cml4OltcInxcIixcInxcIl0sVm1hdHJpeDpbXCJcXFxcVmVydFwiLFwiXFxcXFZlcnRcIl19W2UuZW52TmFtZV07dmFyIHI9e3R5cGU6XCJhcnJheVwiLGhza2lwQmVmb3JlQW5kQWZ0ZXI6ZmFsc2V9O3I9byhlLnBhcnNlcixyLGwoZS5lbnZOYW1lKSk7aWYodCl7cj1uZXcgbihcImxlZnRyaWdodFwiLHtib2R5OltyXSxsZWZ0OnRbMF0scmlnaHQ6dFsxXX0sZS5tb2RlKX1yZXR1cm4gcn0pO3MoW1wiY2FzZXNcIixcImRjYXNlc1wiXSx7fSxmdW5jdGlvbihlKXt2YXIgdD17dHlwZTpcImFycmF5XCIsYXJyYXlzdHJldGNoOjEuMixjb2xzOlt7dHlwZTpcImFsaWduXCIsYWxpZ246XCJsXCIscHJlZ2FwOjAscG9zdGdhcDoxfSx7dHlwZTpcImFsaWduXCIsYWxpZ246XCJsXCIscHJlZ2FwOjAscG9zdGdhcDowfV19O3Q9byhlLnBhcnNlcix0LGwoZS5lbnZOYW1lKSk7dD1uZXcgbihcImxlZnRyaWdodFwiLHtib2R5Olt0XSxsZWZ0OlwiXFxcXHtcIixyaWdodDpcIi5cIn0sZS5tb2RlKTtyZXR1cm4gdH0pO3MoXCJhbGlnbmVkXCIse30sZnVuY3Rpb24oZSl7dmFyIHQ9e3R5cGU6XCJhcnJheVwiLGNvbHM6W10sYWRkSm90OnRydWV9O3Q9byhlLnBhcnNlcix0LFwiZGlzcGxheVwiKTt2YXIgcj1uZXcgbihcIm9yZGdyb3VwXCIsW10sZS5tb2RlKTt2YXIgYT0wO3QudmFsdWUuYm9keS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8ZS5sZW5ndGg7dCs9Mil7dmFyIGk9ZVt0XS52YWx1ZS52YWx1ZVswXTtpLnZhbHVlLnVuc2hpZnQocil9aWYoYTxlLmxlbmd0aCl7YT1lLmxlbmd0aH19KTtmb3IodmFyIGk9MDtpPGE7KytpKXt2YXIgcz1cInJcIjt2YXIgbD0wO2lmKGklMj09PTEpe3M9XCJsXCJ9ZWxzZSBpZihpPjApe2w9Mn10LnZhbHVlLmNvbHNbaV09e3R5cGU6XCJhbGlnblwiLGFsaWduOnMscHJlZ2FwOmwscG9zdGdhcDowfX1yZXR1cm4gdH0pO3MoXCJnYXRoZXJlZFwiLHt9LGZ1bmN0aW9uKGUpe3ZhciB0PXt0eXBlOlwiYXJyYXlcIixjb2xzOlt7dHlwZTpcImFsaWduXCIsYWxpZ246XCJjXCJ9XSxhZGRKb3Q6dHJ1ZX07dD1vKGUucGFyc2VyLHQsXCJkaXNwbGF5XCIpO3JldHVybiB0fSl9LHtcIi4vUGFyc2VFcnJvclwiOjEwLFwiLi9wYXJzZURhdGFcIjoyNn1dLDIxOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4vdW5pY29kZVJlZ2V4ZXNcIikuY2prUmVnZXg7dmFyIGk9e3NsYW50OlsuMjUsLjI1LC4yNV0sc3BhY2U6WzAsMCwwXSxzdHJldGNoOlswLDAsMF0sc2hyaW5rOlswLDAsMF0seEhlaWdodDpbLjQzMSwuNDMxLC40MzFdLHF1YWQ6WzEsMS4xNzEsMS40NzJdLGV4dHJhU3BhY2U6WzAsMCwwXSxudW0xOlsuNjc3LC43MzIsLjkyNV0sbnVtMjpbLjM5NCwuMzg0LC4zODddLG51bTM6Wy40NDQsLjQ3MSwuNTA0XSxkZW5vbTE6Wy42ODYsLjc1MiwxLjAyNV0sZGVub20yOlsuMzQ1LC4zNDQsLjUzMl0sc3VwMTpbLjQxMywuNTAzLC41MDRdLHN1cDI6Wy4zNjMsLjQzMSwuNDA0XSxzdXAzOlsuMjg5LC4yODYsLjI5NF0sc3ViMTpbLjE1LC4xNDMsLjJdLHN1YjI6Wy4yNDcsLjI4NiwuNF0sc3VwRHJvcDpbLjM4NiwuMzUzLC40OTRdLHN1YkRyb3A6Wy4wNSwuMDcxLC4xXSxkZWxpbTE6WzIuMzksMS43LDEuOThdLGRlbGltMjpbMS4wMSwxLjE1NywxLjQyXSxheGlzSGVpZ2h0OlsuMjUsLjI1LC4yNV0sZGVmYXVsdFJ1bGVUaGlja25lc3M6Wy4wNCwuMDQsLjA0XSxiaWdPcFNwYWNpbmcxOlsuMTExLC4xMTEsLjExMV0sYmlnT3BTcGFjaW5nMjpbLjE2NiwuMTY2LC4xNjZdLGJpZ09wU3BhY2luZzM6Wy4yLC4yLC4yXSxiaWdPcFNwYWNpbmc0OlsuNiwuNiwuNl0sYmlnT3BTcGFjaW5nNTpbLjEsLjEsLjFdLHB0UGVyRW06WzEwLDEwLDEwXSxkb3VibGVSdWxlU2VwOlsuMiwuMiwuMl19O3ZhciBuPWUoXCIuL2ZvbnRNZXRyaWNzRGF0YVwiKTt2YXIgbz17XCJcXHhjMFwiOlwiQVwiLFwiXFx4YzFcIjpcIkFcIixcIlxceGMyXCI6XCJBXCIsXCJcXHhjM1wiOlwiQVwiLFwiXFx4YzRcIjpcIkFcIixcIlxceGM1XCI6XCJBXCIsXCJcXHhjNlwiOlwiQVwiLFwiXFx4YzdcIjpcIkNcIixcIlxceGM4XCI6XCJFXCIsXCJcXHhjOVwiOlwiRVwiLFwiXFx4Y2FcIjpcIkVcIixcIlxceGNiXCI6XCJFXCIsXCJcXHhjY1wiOlwiSVwiLFwiXFx4Y2RcIjpcIklcIixcIlxceGNlXCI6XCJJXCIsXCJcXHhjZlwiOlwiSVwiLFwiXFx4ZDBcIjpcIkRcIixcIlxceGQxXCI6XCJOXCIsXCJcXHhkMlwiOlwiT1wiLFwiXFx4ZDNcIjpcIk9cIixcIlxceGQ0XCI6XCJPXCIsXCJcXHhkNVwiOlwiT1wiLFwiXFx4ZDZcIjpcIk9cIixcIlxceGQ4XCI6XCJPXCIsXCJcXHhkOVwiOlwiVVwiLFwiXFx4ZGFcIjpcIlVcIixcIlxceGRiXCI6XCJVXCIsXCJcXHhkY1wiOlwiVVwiLFwiXFx4ZGRcIjpcIllcIixcIlxceGRlXCI6XCJvXCIsXCJcXHhkZlwiOlwiQlwiLFwiXFx4ZTBcIjpcImFcIixcIlxceGUxXCI6XCJhXCIsXCJcXHhlMlwiOlwiYVwiLFwiXFx4ZTNcIjpcImFcIixcIlxceGU0XCI6XCJhXCIsXCJcXHhlNVwiOlwiYVwiLFwiXFx4ZTZcIjpcImFcIixcIlxceGU3XCI6XCJjXCIsXCJcXHhlOFwiOlwiZVwiLFwiXFx4ZTlcIjpcImVcIixcIlxceGVhXCI6XCJlXCIsXCJcXHhlYlwiOlwiZVwiLFwiXFx4ZWNcIjpcImlcIixcIlxceGVkXCI6XCJpXCIsXCJcXHhlZVwiOlwiaVwiLFwiXFx4ZWZcIjpcImlcIixcIlxceGYwXCI6XCJkXCIsXCJcXHhmMVwiOlwiblwiLFwiXFx4ZjJcIjpcIm9cIixcIlxceGYzXCI6XCJvXCIsXCJcXHhmNFwiOlwib1wiLFwiXFx4ZjVcIjpcIm9cIixcIlxceGY2XCI6XCJvXCIsXCJcXHhmOFwiOlwib1wiLFwiXFx4ZjlcIjpcInVcIixcIlxceGZhXCI6XCJ1XCIsXCJcXHhmYlwiOlwidVwiLFwiXFx4ZmNcIjpcInVcIixcIlxceGZkXCI6XCJ5XCIsXCJcXHhmZVwiOlwib1wiLFwiXFx4ZmZcIjpcInlcIixcIlxcdTA0MTBcIjpcIkFcIixcIlxcdTA0MTFcIjpcIkJcIixcIlxcdTA0MTJcIjpcIkJcIixcIlxcdTA0MTNcIjpcIkZcIixcIlxcdTA0MTRcIjpcIkFcIixcIlxcdTA0MTVcIjpcIkVcIixcIlxcdTA0MTZcIjpcIktcIixcIlxcdTA0MTdcIjpcIjNcIixcIlxcdTA0MThcIjpcIk5cIixcIlxcdTA0MTlcIjpcIk5cIixcIlxcdTA0MWFcIjpcIktcIixcIlxcdTA0MWJcIjpcIk5cIixcIlxcdTA0MWNcIjpcIk1cIixcIlxcdTA0MWRcIjpcIkhcIixcIlxcdTA0MWVcIjpcIk9cIixcIlxcdTA0MWZcIjpcIk5cIixcIlxcdTA0MjBcIjpcIlBcIixcIlxcdTA0MjFcIjpcIkNcIixcIlxcdTA0MjJcIjpcIlRcIixcIlxcdTA0MjNcIjpcInlcIixcIlxcdTA0MjRcIjpcIk9cIixcIlxcdTA0MjVcIjpcIlhcIixcIlxcdTA0MjZcIjpcIlVcIixcIlxcdTA0MjdcIjpcImhcIixcIlxcdTA0MjhcIjpcIldcIixcIlxcdTA0MjlcIjpcIldcIixcIlxcdTA0MmFcIjpcIkJcIixcIlxcdTA0MmJcIjpcIlhcIixcIlxcdTA0MmNcIjpcIkJcIixcIlxcdTA0MmRcIjpcIjNcIixcIlxcdTA0MmVcIjpcIlhcIixcIlxcdTA0MmZcIjpcIlJcIixcIlxcdTA0MzBcIjpcImFcIixcIlxcdTA0MzFcIjpcImJcIixcIlxcdTA0MzJcIjpcImFcIixcIlxcdTA0MzNcIjpcInJcIixcIlxcdTA0MzRcIjpcInlcIixcIlxcdTA0MzVcIjpcImVcIixcIlxcdTA0MzZcIjpcIm1cIixcIlxcdTA0MzdcIjpcImVcIixcIlxcdTA0MzhcIjpcIm5cIixcIlxcdTA0MzlcIjpcIm5cIixcIlxcdTA0M2FcIjpcIm5cIixcIlxcdTA0M2JcIjpcIm5cIixcIlxcdTA0M2NcIjpcIm1cIixcIlxcdTA0M2RcIjpcIm5cIixcIlxcdTA0M2VcIjpcIm9cIixcIlxcdTA0M2ZcIjpcIm5cIixcIlxcdTA0NDBcIjpcInBcIixcIlxcdTA0NDFcIjpcImNcIixcIlxcdTA0NDJcIjpcIm9cIixcIlxcdTA0NDNcIjpcInlcIixcIlxcdTA0NDRcIjpcImJcIixcIlxcdTA0NDVcIjpcInhcIixcIlxcdTA0NDZcIjpcIm5cIixcIlxcdTA0NDdcIjpcIm5cIixcIlxcdTA0NDhcIjpcIndcIixcIlxcdTA0NDlcIjpcIndcIixcIlxcdTA0NGFcIjpcImFcIixcIlxcdTA0NGJcIjpcIm1cIixcIlxcdTA0NGNcIjpcImFcIixcIlxcdTA0NGRcIjpcImVcIixcIlxcdTA0NGVcIjpcIm1cIixcIlxcdTA0NGZcIjpcInJcIn07dmFyIHM9ZnVuY3Rpb24gZSh0LHIpe3ZhciBpPXQuY2hhckNvZGVBdCgwKTtpZih0WzBdaW4gbyl7aT1vW3RbMF1dLmNoYXJDb2RlQXQoMCl9ZWxzZSBpZihhLnRlc3QodFswXSkpe2k9XCJNXCIuY2hhckNvZGVBdCgwKX12YXIgcz1uW3JdW2ldO2lmKHMpe3JldHVybntkZXB0aDpzWzBdLGhlaWdodDpzWzFdLGl0YWxpYzpzWzJdLHNrZXc6c1szXSx3aWR0aDpzWzRdfX19O3ZhciBsPXt9O3ZhciB1PWZ1bmN0aW9uIGUodCl7dmFyIHI9dm9pZCAwO2lmKHQ+PTUpe3I9MH1lbHNlIGlmKHQ+PTMpe3I9MX1lbHNle3I9Mn1pZighbFtyXSl7dmFyIGE9bFtyXT17fTtmb3IodmFyIG4gaW4gaSl7aWYoaS5oYXNPd25Qcm9wZXJ0eShuKSl7YVtuXT1pW25dW3JdfX1hLmVtUGVyRXg9YS54SGVpZ2h0L2EucXVhZH1yZXR1cm4gbFtyXX07dC5leHBvcnRzPXtnZXRGb250TWV0cmljczp1LGdldENoYXJhY3Rlck1ldHJpY3M6c319LHtcIi4vZm9udE1ldHJpY3NEYXRhXCI6MjIsXCIuL3VuaWNvZGVSZWdleGVzXCI6MzB9XSwyMjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3QuZXhwb3J0cz17XCJBTVMtUmVndWxhclwiOns2NTpbMCwuNjg4ODksMCwwXSw2NjpbMCwuNjg4ODksMCwwXSw2NzpbMCwuNjg4ODksMCwwXSw2ODpbMCwuNjg4ODksMCwwXSw2OTpbMCwuNjg4ODksMCwwXSw3MDpbMCwuNjg4ODksMCwwXSw3MTpbMCwuNjg4ODksMCwwXSw3MjpbMCwuNjg4ODksMCwwXSw3MzpbMCwuNjg4ODksMCwwXSw3NDpbLjE2NjY3LC42ODg4OSwwLDBdLDc1OlswLC42ODg4OSwwLDBdLDc2OlswLC42ODg4OSwwLDBdLDc3OlswLC42ODg4OSwwLDBdLDc4OlswLC42ODg4OSwwLDBdLDc5OlsuMTY2NjcsLjY4ODg5LDAsMF0sODA6WzAsLjY4ODg5LDAsMF0sODE6Wy4xNjY2NywuNjg4ODksMCwwXSw4MjpbMCwuNjg4ODksMCwwXSw4MzpbMCwuNjg4ODksMCwwXSw4NDpbMCwuNjg4ODksMCwwXSw4NTpbMCwuNjg4ODksMCwwXSw4NjpbMCwuNjg4ODksMCwwXSw4NzpbMCwuNjg4ODksMCwwXSw4ODpbMCwuNjg4ODksMCwwXSw4OTpbMCwuNjg4ODksMCwwXSw5MDpbMCwuNjg4ODksMCwwXSwxMDc6WzAsLjY4ODg5LDAsMF0sMTY1OlswLC42NzUsLjAyNSwwXSwxNzQ6Wy4xNTU1OSwuNjkyMjQsMCwwXSwyNDA6WzAsLjY4ODg5LDAsMF0sMjk1OlswLC42ODg4OSwwLDBdLDcxMDpbMCwuODI1LDAsMF0sNzMyOlswLC45LDAsMF0sNzcwOlswLC44MjUsMCwwXSw3NzE6WzAsLjksMCwwXSw5ODk6Wy4wODE2NywuNTgxNjcsMCwwXSwxMDA4OlswLC40MzA1NiwuMDQwMjgsMF0sODI0NTpbMCwuNTQ5ODYsMCwwXSw4NDYzOlswLC42ODg4OSwwLDBdLDg0ODc6WzAsLjY4ODg5LDAsMF0sODQ5ODpbMCwuNjg4ODksMCwwXSw4NTAyOlswLC42ODg4OSwwLDBdLDg1MDM6WzAsLjY4ODg5LDAsMF0sODUwNDpbMCwuNjg4ODksMCwwXSw4NTEzOlswLC42ODg4OSwwLDBdLDg1OTI6Wy0uMDM1OTgsLjQ2NDAyLDAsMF0sODU5NDpbLS4wMzU5OCwuNDY0MDIsMCwwXSw4NjAyOlstLjEzMzEzLC4zNjY4NywwLDBdLDg2MDM6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODYwNjpbLjAxMzU0LC41MjIzOSwwLDBdLDg2MDg6Wy4wMTM1NCwuNTIyMzksMCwwXSw4NjEwOlsuMDEzNTQsLjUyMjM5LDAsMF0sODYxMTpbLjAxMzU0LC41MjIzOSwwLDBdLDg2MTk6WzAsLjU0OTg2LDAsMF0sODYyMDpbMCwuNTQ5ODYsMCwwXSw4NjIxOlstLjEzMzEzLC4zNzc4OCwwLDBdLDg2MjI6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODYyNDpbMCwuNjkyMjQsMCwwXSw4NjI1OlswLC42OTIyNCwwLDBdLDg2MzA6WzAsLjQzMDU2LDAsMF0sODYzMTpbMCwuNDMwNTYsMCwwXSw4NjM0OlsuMDgxOTgsLjU4MTk4LDAsMF0sODYzNTpbLjA4MTk4LC41ODE5OCwwLDBdLDg2Mzg6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4NjM5OlsuMTk0NDQsLjY5MjI0LDAsMF0sODY0MjpbLjE5NDQ0LC42OTIyNCwwLDBdLDg2NDM6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4NjQ0OlsuMTgwOCwuNjc1LDAsMF0sODY0NjpbLjE4MDgsLjY3NSwwLDBdLDg2NDc6Wy4xODA4LC42NzUsMCwwXSw4NjQ4OlsuMTk0NDQsLjY5MjI0LDAsMF0sODY0OTpbLjE4MDgsLjY3NSwwLDBdLDg2NTA6Wy4xOTQ0NCwuNjkyMjQsMCwwXSw4NjUxOlsuMDEzNTQsLjUyMjM5LDAsMF0sODY1MjpbLjAxMzU0LC41MjIzOSwwLDBdLDg2NTM6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODY1NDpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjU1OlstLjEzMzEzLC4zNjY4NywwLDBdLDg2NjY6Wy4xMzY2NywuNjM2NjcsMCwwXSw4NjY3OlsuMTM2NjcsLjYzNjY3LDAsMF0sODY2OTpbLS4xMzMxMywuMzc3ODgsMCwwXSw4NjcyOlstLjA2NCwuNDM3LDAsMF0sODY3NDpbLS4wNjQsLjQzNywwLDBdLDg3MDU6WzAsLjgyNSwwLDBdLDg3MDg6WzAsLjY4ODg5LDAsMF0sODcwOTpbLjA4MTY3LC41ODE2NywwLDBdLDg3MTc6WzAsLjQzMDU2LDAsMF0sODcyMjpbLS4wMzU5OCwuNDY0MDIsMCwwXSw4NzI0OlsuMDgxOTgsLjY5MjI0LDAsMF0sODcyNjpbLjA4MTY3LC41ODE2NywwLDBdLDg3MzM6WzAsLjY5MjI0LDAsMF0sODczNjpbMCwuNjkyMjQsMCwwXSw4NzM3OlswLC42OTIyNCwwLDBdLDg3Mzg6Wy4wMzUxNywuNTIyMzksMCwwXSw4NzM5OlsuMDgxNjcsLjU4MTY3LDAsMF0sODc0MDpbLjI1MTQyLC43NDExMSwwLDBdLDg3NDE6Wy4wODE2NywuNTgxNjcsMCwwXSw4NzQyOlsuMjUxNDIsLjc0MTExLDAsMF0sODc1NjpbMCwuNjkyMjQsMCwwXSw4NzU3OlswLC42OTIyNCwwLDBdLDg3NjQ6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODc2NTpbLS4xMzMxMywuMzc3ODgsMCwwXSw4NzY5OlstLjEzMzEzLC4zNjY4NywwLDBdLDg3NzA6Wy0uMDM2MjUsLjQ2Mzc1LDAsMF0sODc3NDpbLjMwMjc0LC43OTM4MywwLDBdLDg3NzY6Wy0uMDE2ODgsLjQ4MzEyLDAsMF0sODc3ODpbLjA4MTY3LC41ODE2NywwLDBdLDg3ODI6Wy4wNjA2MiwuNTQ5ODYsMCwwXSw4NzgzOlsuMDYwNjIsLjU0OTg2LDAsMF0sODc4NTpbLjA4MTk4LC41ODE5OCwwLDBdLDg3ODY6Wy4wODE5OCwuNTgxOTgsMCwwXSw4Nzg3OlsuMDgxOTgsLjU4MTk4LDAsMF0sODc5MDpbMCwuNjkyMjQsMCwwXSw4NzkxOlsuMjI5NTgsLjcyOTU4LDAsMF0sODc5NjpbLjA4MTk4LC45MTY2NywwLDBdLDg4MDY6Wy4yNTU4MywuNzU1ODMsMCwwXSw4ODA3OlsuMjU1ODMsLjc1NTgzLDAsMF0sODgwODpbLjI1MTQyLC43NTcyNiwwLDBdLDg4MDk6Wy4yNTE0MiwuNzU3MjYsMCwwXSw4ODEyOlsuMjU1ODMsLjc1NTgzLDAsMF0sODgxNDpbLjIwNTc2LC43MDU3NiwwLDBdLDg4MTU6Wy4yMDU3NiwuNzA1NzYsMCwwXSw4ODE2OlsuMzAyNzQsLjc5MzgzLDAsMF0sODgxNzpbLjMwMjc0LC43OTM4MywwLDBdLDg4MTg6Wy4yMjk1OCwuNzI5NTgsMCwwXSw4ODE5OlsuMjI5NTgsLjcyOTU4LDAsMF0sODgyMjpbLjE4MDgsLjY3NSwwLDBdLDg4MjM6Wy4xODA4LC42NzUsMCwwXSw4ODI4OlsuMTM2NjcsLjYzNjY3LDAsMF0sODgyOTpbLjEzNjY3LC42MzY2NywwLDBdLDg4MzA6Wy4yMjk1OCwuNzI5NTgsMCwwXSw4ODMxOlsuMjI5NTgsLjcyOTU4LDAsMF0sODgzMjpbLjIwNTc2LC43MDU3NiwwLDBdLDg4MzM6Wy4yMDU3NiwuNzA1NzYsMCwwXSw4ODQwOlsuMzAyNzQsLjc5MzgzLDAsMF0sODg0MTpbLjMwMjc0LC43OTM4MywwLDBdLDg4NDI6Wy4xMzU5NywuNjM1OTcsMCwwXSw4ODQzOlsuMTM1OTcsLjYzNTk3LDAsMF0sODg0NzpbLjAzNTE3LC41NDk4NiwwLDBdLDg4NDg6Wy4wMzUxNywuNTQ5ODYsMCwwXSw4ODU4OlsuMDgxOTgsLjU4MTk4LDAsMF0sODg1OTpbLjA4MTk4LC41ODE5OCwwLDBdLDg4NjE6Wy4wODE5OCwuNTgxOTgsMCwwXSw4ODYyOlswLC42NzUsMCwwXSw4ODYzOlswLC42NzUsMCwwXSw4ODY0OlswLC42NzUsMCwwXSw4ODY1OlswLC42NzUsMCwwXSw4ODcyOlswLC42OTIyNCwwLDBdLDg4NzM6WzAsLjY5MjI0LDAsMF0sODg3NDpbMCwuNjkyMjQsMCwwXSw4ODc2OlswLC42ODg4OSwwLDBdLDg4Nzc6WzAsLjY4ODg5LDAsMF0sODg3ODpbMCwuNjg4ODksMCwwXSw4ODc5OlswLC42ODg4OSwwLDBdLDg4ODI6Wy4wMzUxNywuNTQ5ODYsMCwwXSw4ODgzOlsuMDM1MTcsLjU0OTg2LDAsMF0sODg4NDpbLjEzNjY3LC42MzY2NywwLDBdLDg4ODU6Wy4xMzY2NywuNjM2NjcsMCwwXSw4ODg4OlswLC41NDk4NiwwLDBdLDg4OTA6Wy4xOTQ0NCwuNDMwNTYsMCwwXSw4ODkxOlsuMTk0NDQsLjY5MjI0LDAsMF0sODg5MjpbLjE5NDQ0LC42OTIyNCwwLDBdLDg5MDE6WzAsLjU0OTg2LDAsMF0sODkwMzpbLjA4MTY3LC41ODE2NywwLDBdLDg5MDU6Wy4wODE2NywuNTgxNjcsMCwwXSw4OTA2OlsuMDgxNjcsLjU4MTY3LDAsMF0sODkwNzpbMCwuNjkyMjQsMCwwXSw4OTA4OlswLC42OTIyNCwwLDBdLDg5MDk6Wy0uMDM1OTgsLjQ2NDAyLDAsMF0sODkxMDpbMCwuNTQ5ODYsMCwwXSw4OTExOlswLC41NDk4NiwwLDBdLDg5MTI6Wy4wMzUxNywuNTQ5ODYsMCwwXSw4OTEzOlsuMDM1MTcsLjU0OTg2LDAsMF0sODkxNDpbMCwuNTQ5ODYsMCwwXSw4OTE1OlswLC41NDk4NiwwLDBdLDg5MTY6WzAsLjY5MjI0LDAsMF0sODkxODpbLjAzOTEsLjUzOTEsMCwwXSw4OTE5OlsuMDM5MSwuNTM5MSwwLDBdLDg5MjA6Wy4wMzUxNywuNTQ5ODYsMCwwXSw4OTIxOlsuMDM1MTcsLjU0OTg2LDAsMF0sODkyMjpbLjM4NTY5LC44ODU2OSwwLDBdLDg5MjM6Wy4zODU2OSwuODg1NjksMCwwXSw4OTI2OlsuMTM2NjcsLjYzNjY3LDAsMF0sODkyNzpbLjEzNjY3LC42MzY2NywwLDBdLDg5Mjg6Wy4zMDI3NCwuNzkzODMsMCwwXSw4OTI5OlsuMzAyNzQsLjc5MzgzLDAsMF0sODkzNDpbLjIzMjIyLC43NDExMSwwLDBdLDg5MzU6Wy4yMzIyMiwuNzQxMTEsMCwwXSw4OTM2OlsuMjMyMjIsLjc0MTExLDAsMF0sODkzNzpbLjIzMjIyLC43NDExMSwwLDBdLDg5Mzg6Wy4yMDU3NiwuNzA1NzYsMCwwXSw4OTM5OlsuMjA1NzYsLjcwNTc2LDAsMF0sODk0MDpbLjMwMjc0LC43OTM4MywwLDBdLDg5NDE6Wy4zMDI3NCwuNzkzODMsMCwwXSw4OTk0OlsuMTk0NDQsLjY5MjI0LDAsMF0sODk5NTpbLjE5NDQ0LC42OTIyNCwwLDBdLDk0MTY6Wy4xNTU1OSwuNjkyMjQsMCwwXSw5NDg0OlswLC42OTIyNCwwLDBdLDk0ODg6WzAsLjY5MjI0LDAsMF0sOTQ5MjpbMCwuMzc3ODgsMCwwXSw5NDk2OlswLC4zNzc4OCwwLDBdLDk1ODU6Wy4xOTQ0NCwuNjg4ODksMCwwXSw5NTg2OlsuMTk0NDQsLjc0MTExLDAsMF0sOTYzMjpbMCwuNjc1LDAsMF0sOTYzMzpbMCwuNjc1LDAsMF0sOTY1MDpbMCwuNTQ5ODYsMCwwXSw5NjUxOlswLC41NDk4NiwwLDBdLDk2NTQ6Wy4wMzUxNywuNTQ5ODYsMCwwXSw5NjYwOlswLC41NDk4NiwwLDBdLDk2NjE6WzAsLjU0OTg2LDAsMF0sOTY2NDpbLjAzNTE3LC41NDk4NiwwLDBdLDk2NzQ6Wy4xMTExMSwuNjkyMjQsMCwwXSw5NzMzOlsuMTk0NDQsLjY5MjI0LDAsMF0sMTAwMDM6WzAsLjY5MjI0LDAsMF0sMTAwMTY6WzAsLjY5MjI0LDAsMF0sMTA3MzE6Wy4xMTExMSwuNjkyMjQsMCwwXSwxMDg0NjpbLjE5NDQ0LC43NTU4MywwLDBdLDEwODc3OlsuMTM2NjcsLjYzNjY3LDAsMF0sMTA4Nzg6Wy4xMzY2NywuNjM2NjcsMCwwXSwxMDg4NTpbLjI1NTgzLC43NTU4MywwLDBdLDEwODg2OlsuMjU1ODMsLjc1NTgzLDAsMF0sMTA4ODc6Wy4xMzU5NywuNjM1OTcsMCwwXSwxMDg4ODpbLjEzNTk3LC42MzU5NywwLDBdLDEwODg5OlsuMjYxNjcsLjc1NzI2LDAsMF0sMTA4OTA6Wy4yNjE2NywuNzU3MjYsMCwwXSwxMDg5MTpbLjQ4MjU2LC45ODI1NiwwLDBdLDEwODkyOlsuNDgyNTYsLjk4MjU2LDAsMF0sMTA5MDE6Wy4xMzY2NywuNjM2NjcsMCwwXSwxMDkwMjpbLjEzNjY3LC42MzY2NywwLDBdLDEwOTMzOlsuMjUxNDIsLjc1NzI2LDAsMF0sMTA5MzQ6Wy4yNTE0MiwuNzU3MjYsMCwwXSwxMDkzNTpbLjI2MTY3LC43NTcyNiwwLDBdLDEwOTM2OlsuMjYxNjcsLjc1NzI2LDAsMF0sMTA5Mzc6Wy4yNjE2NywuNzU3MjYsMCwwXSwxMDkzODpbLjI2MTY3LC43NTcyNiwwLDBdLDEwOTQ5OlsuMjU1ODMsLjc1NTgzLDAsMF0sMTA5NTA6Wy4yNTU4MywuNzU1ODMsMCwwXSwxMDk1NTpbLjI4NDgxLC43OTM4MywwLDBdLDEwOTU2OlsuMjg0ODEsLjc5MzgzLDAsMF0sNTczNTA6Wy4wODE2NywuNTgxNjcsMCwwXSw1NzM1MTpbLjA4MTY3LC41ODE2NywwLDBdLDU3MzUyOlsuMDgxNjcsLjU4MTY3LDAsMF0sNTczNTM6WzAsLjQzMDU2LC4wNDAyOCwwXSw1NzM1NjpbLjI1MTQyLC43NTcyNiwwLDBdLDU3MzU3OlsuMjUxNDIsLjc1NzI2LDAsMF0sNTczNTg6Wy40MTk1MSwuOTE5NTEsMCwwXSw1NzM1OTpbLjMwMjc0LC43OTM4MywwLDBdLDU3MzYwOlsuMzAyNzQsLjc5MzgzLDAsMF0sNTczNjE6Wy40MTk1MSwuOTE5NTEsMCwwXSw1NzM2NjpbLjI1MTQyLC43NTcyNiwwLDBdLDU3MzY3OlsuMjUxNDIsLjc1NzI2LDAsMF0sNTczNjg6Wy4yNTE0MiwuNzU3MjYsMCwwXSw1NzM2OTpbLjI1MTQyLC43NTcyNiwwLDBdLDU3MzcwOlsuMTM1OTcsLjYzNTk3LDAsMF0sNTczNzE6Wy4xMzU5NywuNjM1OTcsMCwwXX0sXCJDYWxpZ3JhcGhpYy1SZWd1bGFyXCI6ezQ4OlswLC40MzA1NiwwLDBdLDQ5OlswLC40MzA1NiwwLDBdLDUwOlswLC40MzA1NiwwLDBdLDUxOlsuMTk0NDQsLjQzMDU2LDAsMF0sNTI6Wy4xOTQ0NCwuNDMwNTYsMCwwXSw1MzpbLjE5NDQ0LC40MzA1NiwwLDBdLDU0OlswLC42NDQ0NCwwLDBdLDU1OlsuMTk0NDQsLjQzMDU2LDAsMF0sNTY6WzAsLjY0NDQ0LDAsMF0sNTc6Wy4xOTQ0NCwuNDMwNTYsMCwwXSw2NTpbMCwuNjgzMzMsMCwuMTk0NDVdLDY2OlswLC42ODMzMywuMDMwNDEsLjEzODg5XSw2NzpbMCwuNjgzMzMsLjA1ODM0LC4xMzg4OV0sNjg6WzAsLjY4MzMzLC4wMjc3OCwuMDgzMzRdLDY5OlswLC42ODMzMywuMDg5NDQsLjExMTExXSw3MDpbMCwuNjgzMzMsLjA5OTMxLC4xMTExMV0sNzE6Wy4wOTcyMiwuNjgzMzMsLjA1OTMsLjExMTExXSw3MjpbMCwuNjgzMzMsLjAwOTY1LC4xMTExMV0sNzM6WzAsLjY4MzMzLC4wNzM4MiwwXSw3NDpbLjA5NzIyLC42ODMzMywuMTg0NzIsLjE2NjY3XSw3NTpbMCwuNjgzMzMsLjAxNDQ1LC4wNTU1Nl0sNzY6WzAsLjY4MzMzLDAsLjEzODg5XSw3NzpbMCwuNjgzMzMsMCwuMTM4ODldLDc4OlswLC42ODMzMywuMTQ3MzYsLjA4MzM0XSw3OTpbMCwuNjgzMzMsLjAyNzc4LC4xMTExMV0sODA6WzAsLjY4MzMzLC4wODIyMiwuMDgzMzRdLDgxOlsuMDk3MjIsLjY4MzMzLDAsLjExMTExXSw4MjpbMCwuNjgzMzMsMCwuMDgzMzRdLDgzOlswLC42ODMzMywuMDc1LC4xMzg4OV0sODQ6WzAsLjY4MzMzLC4yNTQxNywwXSw4NTpbMCwuNjgzMzMsLjA5OTMxLC4wODMzNF0sODY6WzAsLjY4MzMzLC4wODIyMiwwXSw4NzpbMCwuNjgzMzMsLjA4MjIyLC4wODMzNF0sODg6WzAsLjY4MzMzLC4xNDY0MywuMTM4ODldLDg5OlsuMDk3MjIsLjY4MzMzLC4wODIyMiwuMDgzMzRdLDkwOlswLC42ODMzMywuMDc5NDQsLjEzODg5XX0sXCJGcmFrdHVyLVJlZ3VsYXJcIjp7MzM6WzAsLjY5MTQxLDAsMF0sMzQ6WzAsLjY5MTQxLDAsMF0sMzg6WzAsLjY5MTQxLDAsMF0sMzk6WzAsLjY5MTQxLDAsMF0sNDA6Wy4yNDk4MiwuNzQ5NDcsMCwwXSw0MTpbLjI0OTgyLC43NDk0NywwLDBdLDQyOlswLC42MjExOSwwLDBdLDQzOlsuMDgzMTksLjU4MjgzLDAsMF0sNDQ6WzAsLjEwODAzLDAsMF0sNDU6Wy4wODMxOSwuNTgyODMsMCwwXSw0NjpbMCwuMTA4MDMsMCwwXSw0NzpbLjI0OTgyLC43NDk0NywwLDBdLDQ4OlswLC40NzUzNCwwLDBdLDQ5OlswLC40NzUzNCwwLDBdLDUwOlswLC40NzUzNCwwLDBdLDUxOlsuMTg5MDYsLjQ3NTM0LDAsMF0sNTI6Wy4xODkwNiwuNDc1MzQsMCwwXSw1MzpbLjE4OTA2LC40NzUzNCwwLDBdLDU0OlswLC42OTE0MSwwLDBdLDU1OlsuMTg5MDYsLjQ3NTM0LDAsMF0sNTY6WzAsLjY5MTQxLDAsMF0sNTc6Wy4xODkwNiwuNDc1MzQsMCwwXSw1ODpbMCwuNDc1MzQsMCwwXSw1OTpbLjEyNjA0LC40NzUzNCwwLDBdLDYxOlstLjEzMDk5LC4zNjg2NiwwLDBdLDYzOlswLC42OTE0MSwwLDBdLDY1OlswLC42OTE0MSwwLDBdLDY2OlswLC42OTE0MSwwLDBdLDY3OlswLC42OTE0MSwwLDBdLDY4OlswLC42OTE0MSwwLDBdLDY5OlswLC42OTE0MSwwLDBdLDcwOlsuMTI2MDQsLjY5MTQxLDAsMF0sNzE6WzAsLjY5MTQxLDAsMF0sNzI6Wy4wNjMwMiwuNjkxNDEsMCwwXSw3MzpbMCwuNjkxNDEsMCwwXSw3NDpbLjEyNjA0LC42OTE0MSwwLDBdLDc1OlswLC42OTE0MSwwLDBdLDc2OlswLC42OTE0MSwwLDBdLDc3OlswLC42OTE0MSwwLDBdLDc4OlswLC42OTE0MSwwLDBdLDc5OlswLC42OTE0MSwwLDBdLDgwOlsuMTg5MDYsLjY5MTQxLDAsMF0sODE6Wy4wMzc4MSwuNjkxNDEsMCwwXSw4MjpbMCwuNjkxNDEsMCwwXSw4MzpbMCwuNjkxNDEsMCwwXSw4NDpbMCwuNjkxNDEsMCwwXSw4NTpbMCwuNjkxNDEsMCwwXSw4NjpbMCwuNjkxNDEsMCwwXSw4NzpbMCwuNjkxNDEsMCwwXSw4ODpbMCwuNjkxNDEsMCwwXSw4OTpbLjE4OTA2LC42OTE0MSwwLDBdLDkwOlsuMTI2MDQsLjY5MTQxLDAsMF0sOTE6Wy4yNDk4MiwuNzQ5NDcsMCwwXSw5MzpbLjI0OTgyLC43NDk0NywwLDBdLDk0OlswLC42OTE0MSwwLDBdLDk3OlswLC40NzUzNCwwLDBdLDk4OlswLC42OTE0MSwwLDBdLDk5OlswLC40NzUzNCwwLDBdLDEwMDpbMCwuNjIxMTksMCwwXSwxMDE6WzAsLjQ3NTM0LDAsMF0sMTAyOlsuMTg5MDYsLjY5MTQxLDAsMF0sMTAzOlsuMTg5MDYsLjQ3NTM0LDAsMF0sMTA0OlsuMTg5MDYsLjY5MTQxLDAsMF0sMTA1OlswLC42OTE0MSwwLDBdLDEwNjpbMCwuNjkxNDEsMCwwXSwxMDc6WzAsLjY5MTQxLDAsMF0sMTA4OlswLC42OTE0MSwwLDBdLDEwOTpbMCwuNDc1MzQsMCwwXSwxMTA6WzAsLjQ3NTM0LDAsMF0sMTExOlswLC40NzUzNCwwLDBdLDExMjpbLjE4OTA2LC41MjM5NiwwLDBdLDExMzpbLjE4OTA2LC40NzUzNCwwLDBdLDExNDpbMCwuNDc1MzQsMCwwXSwxMTU6WzAsLjQ3NTM0LDAsMF0sMTE2OlswLC42MjExOSwwLDBdLDExNzpbMCwuNDc1MzQsMCwwXSwxMTg6WzAsLjUyMzk2LDAsMF0sMTE5OlswLC41MjM5NiwwLDBdLDEyMDpbLjE4OTA2LC40NzUzNCwwLDBdLDEyMTpbLjE4OTA2LC40NzUzNCwwLDBdLDEyMjpbLjE4OTA2LC40NzUzNCwwLDBdLDgyMTY6WzAsLjY5MTQxLDAsMF0sODIxNzpbMCwuNjkxNDEsMCwwXSw1ODExMjpbMCwuNjIxMTksMCwwXSw1ODExMzpbMCwuNjIxMTksMCwwXSw1ODExNDpbLjE4OTA2LC42OTE0MSwwLDBdLDU4MTE1OlsuMTg5MDYsLjY5MTQxLDAsMF0sNTgxMTY6Wy4xODkwNiwuNDc1MzQsMCwwXSw1ODExNzpbMCwuNjkxNDEsMCwwXSw1ODExODpbMCwuNjIxMTksMCwwXSw1ODExOTpbMCwuNDc1MzQsMCwwXX0sXCJNYWluLUJvbGRcIjp7MzM6WzAsLjY5NDQ0LDAsMF0sMzQ6WzAsLjY5NDQ0LDAsMF0sMzU6Wy4xOTQ0NCwuNjk0NDQsMCwwXSwzNjpbLjA1NTU2LC43NSwwLDBdLDM3OlsuMDU1NTYsLjc1LDAsMF0sMzg6WzAsLjY5NDQ0LDAsMF0sMzk6WzAsLjY5NDQ0LDAsMF0sNDA6Wy4yNSwuNzUsMCwwXSw0MTpbLjI1LC43NSwwLDBdLDQyOlswLC43NSwwLDBdLDQzOlsuMTMzMzMsLjYzMzMzLDAsMF0sNDQ6Wy4xOTQ0NCwuMTU1NTYsMCwwXSw0NTpbMCwuNDQ0NDQsMCwwXSw0NjpbMCwuMTU1NTYsMCwwXSw0NzpbLjI1LC43NSwwLDBdLDQ4OlswLC42NDQ0NCwwLDBdLDQ5OlswLC42NDQ0NCwwLDBdLDUwOlswLC42NDQ0NCwwLDBdLDUxOlswLC42NDQ0NCwwLDBdLDUyOlswLC42NDQ0NCwwLDBdLDUzOlswLC42NDQ0NCwwLDBdLDU0OlswLC42NDQ0NCwwLDBdLDU1OlswLC42NDQ0NCwwLDBdLDU2OlswLC42NDQ0NCwwLDBdLDU3OlswLC42NDQ0NCwwLDBdLDU4OlswLC40NDQ0NCwwLDBdLDU5OlsuMTk0NDQsLjQ0NDQ0LDAsMF0sNjA6Wy4wODU1NiwuNTg1NTYsMCwwXSw2MTpbLS4xMDg4OSwuMzkxMTEsMCwwXSw2MjpbLjA4NTU2LC41ODU1NiwwLDBdLDYzOlswLC42OTQ0NCwwLDBdLDY0OlswLC42OTQ0NCwwLDBdLDY1OlswLC42ODYxMSwwLDBdLDY2OlswLC42ODYxMSwwLDBdLDY3OlswLC42ODYxMSwwLDBdLDY4OlswLC42ODYxMSwwLDBdLDY5OlswLC42ODYxMSwwLDBdLDcwOlswLC42ODYxMSwwLDBdLDcxOlswLC42ODYxMSwwLDBdLDcyOlswLC42ODYxMSwwLDBdLDczOlswLC42ODYxMSwwLDBdLDc0OlswLC42ODYxMSwwLDBdLDc1OlswLC42ODYxMSwwLDBdLDc2OlswLC42ODYxMSwwLDBdLDc3OlswLC42ODYxMSwwLDBdLDc4OlswLC42ODYxMSwwLDBdLDc5OlswLC42ODYxMSwwLDBdLDgwOlswLC42ODYxMSwwLDBdLDgxOlsuMTk0NDQsLjY4NjExLDAsMF0sODI6WzAsLjY4NjExLDAsMF0sODM6WzAsLjY4NjExLDAsMF0sODQ6WzAsLjY4NjExLDAsMF0sODU6WzAsLjY4NjExLDAsMF0sODY6WzAsLjY4NjExLC4wMTU5NywwXSw4NzpbMCwuNjg2MTEsLjAxNTk3LDBdLDg4OlswLC42ODYxMSwwLDBdLDg5OlswLC42ODYxMSwuMDI4NzUsMF0sOTA6WzAsLjY4NjExLDAsMF0sOTE6Wy4yNSwuNzUsMCwwXSw5MjpbLjI1LC43NSwwLDBdLDkzOlsuMjUsLjc1LDAsMF0sOTQ6WzAsLjY5NDQ0LDAsMF0sOTU6Wy4zMSwuMTM0NDQsLjAzMTk0LDBdLDk2OlswLC42OTQ0NCwwLDBdLDk3OlswLC40NDQ0NCwwLDBdLDk4OlswLC42OTQ0NCwwLDBdLDk5OlswLC40NDQ0NCwwLDBdLDEwMDpbMCwuNjk0NDQsMCwwXSwxMDE6WzAsLjQ0NDQ0LDAsMF0sMTAyOlswLC42OTQ0NCwuMTA5MDMsMF0sMTAzOlsuMTk0NDQsLjQ0NDQ0LC4wMTU5NywwXSwxMDQ6WzAsLjY5NDQ0LDAsMF0sMTA1OlswLC42OTQ0NCwwLDBdLDEwNjpbLjE5NDQ0LC42OTQ0NCwwLDBdLDEwNzpbMCwuNjk0NDQsMCwwXSwxMDg6WzAsLjY5NDQ0LDAsMF0sMTA5OlswLC40NDQ0NCwwLDBdLDExMDpbMCwuNDQ0NDQsMCwwXSwxMTE6WzAsLjQ0NDQ0LDAsMF0sMTEyOlsuMTk0NDQsLjQ0NDQ0LDAsMF0sMTEzOlsuMTk0NDQsLjQ0NDQ0LDAsMF0sMTE0OlswLC40NDQ0NCwwLDBdLDExNTpbMCwuNDQ0NDQsMCwwXSwxMTY6WzAsLjYzNDkyLDAsMF0sMTE3OlswLC40NDQ0NCwwLDBdLDExODpbMCwuNDQ0NDQsLjAxNTk3LDBdLDExOTpbMCwuNDQ0NDQsLjAxNTk3LDBdLDEyMDpbMCwuNDQ0NDQsMCwwXSwxMjE6Wy4xOTQ0NCwuNDQ0NDQsLjAxNTk3LDBdLDEyMjpbMCwuNDQ0NDQsMCwwXSwxMjM6Wy4yNSwuNzUsMCwwXSwxMjQ6Wy4yNSwuNzUsMCwwXSwxMjU6Wy4yNSwuNzUsMCwwXSwxMjY6Wy4zNSwuMzQ0NDQsMCwwXSwxNjg6WzAsLjY5NDQ0LDAsMF0sMTcyOlswLC40NDQ0NCwwLDBdLDE3NTpbMCwuNTk2MTEsMCwwXSwxNzY6WzAsLjY5NDQ0LDAsMF0sMTc3OlsuMTMzMzMsLjYzMzMzLDAsMF0sMTgwOlswLC42OTQ0NCwwLDBdLDIxNTpbLjEzMzMzLC42MzMzMywwLDBdLDI0NzpbLjEzMzMzLC42MzMzMywwLDBdLDMwNTpbMCwuNDQ0NDQsMCwwXSw1Njc6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSw3MTA6WzAsLjY5NDQ0LDAsMF0sNzExOlswLC42MzE5NCwwLDBdLDcxMzpbMCwuNTk2MTEsMCwwXSw3MTQ6WzAsLjY5NDQ0LDAsMF0sNzE1OlswLC42OTQ0NCwwLDBdLDcyODpbMCwuNjk0NDQsMCwwXSw3Mjk6WzAsLjY5NDQ0LDAsMF0sNzMwOlswLC42OTQ0NCwwLDBdLDczMjpbMCwuNjk0NDQsMCwwXSw3Njg6WzAsLjY5NDQ0LDAsMF0sNzY5OlswLC42OTQ0NCwwLDBdLDc3MDpbMCwuNjk0NDQsMCwwXSw3NzE6WzAsLjY5NDQ0LDAsMF0sNzcyOlswLC41OTYxMSwwLDBdLDc3NDpbMCwuNjk0NDQsMCwwXSw3NzU6WzAsLjY5NDQ0LDAsMF0sNzc2OlswLC42OTQ0NCwwLDBdLDc3ODpbMCwuNjk0NDQsMCwwXSw3Nzk6WzAsLjY5NDQ0LDAsMF0sNzgwOlswLC42MzE5NCwwLDBdLDgyNDpbLjE5NDQ0LC42OTQ0NCwwLDBdLDkxNTpbMCwuNjg2MTEsMCwwXSw5MTY6WzAsLjY4NjExLDAsMF0sOTIwOlswLC42ODYxMSwwLDBdLDkyMzpbMCwuNjg2MTEsMCwwXSw5MjY6WzAsLjY4NjExLDAsMF0sOTI4OlswLC42ODYxMSwwLDBdLDkzMTpbMCwuNjg2MTEsMCwwXSw5MzM6WzAsLjY4NjExLDAsMF0sOTM0OlswLC42ODYxMSwwLDBdLDkzNjpbMCwuNjg2MTEsMCwwXSw5Mzc6WzAsLjY4NjExLDAsMF0sODIxMTpbMCwuNDQ0NDQsLjAzMTk0LDBdLDgyMTI6WzAsLjQ0NDQ0LC4wMzE5NCwwXSw4MjE2OlswLC42OTQ0NCwwLDBdLDgyMTc6WzAsLjY5NDQ0LDAsMF0sODIyMDpbMCwuNjk0NDQsMCwwXSw4MjIxOlswLC42OTQ0NCwwLDBdLDgyMjQ6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4MjI1OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODI0MjpbMCwuNTU1NTYsMCwwXSw4NDA3OlswLC43MjQ0NCwuMTU0ODYsMF0sODQ2MzpbMCwuNjk0NDQsMCwwXSw4NDY1OlswLC42OTQ0NCwwLDBdLDg0Njc6WzAsLjY5NDQ0LDAsMF0sODQ3MjpbLjE5NDQ0LC40NDQ0NCwwLDBdLDg0NzY6WzAsLjY5NDQ0LDAsMF0sODUwMTpbMCwuNjk0NDQsMCwwXSw4NTkyOlstLjEwODg5LC4zOTExMSwwLDBdLDg1OTM6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NTk0OlstLjEwODg5LC4zOTExMSwwLDBdLDg1OTU6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NTk2OlstLjEwODg5LC4zOTExMSwwLDBdLDg1OTc6Wy4yNSwuNzUsMCwwXSw4NTk4OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODU5OTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2MDA6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NjAxOlsuMTk0NDQsLjY5NDQ0LDAsMF0sODYzNjpbLS4xMDg4OSwuMzkxMTEsMCwwXSw4NjM3OlstLjEwODg5LC4zOTExMSwwLDBdLDg2NDA6Wy0uMTA4ODksLjM5MTExLDAsMF0sODY0MTpbLS4xMDg4OSwuMzkxMTEsMCwwXSw4NjU2OlstLjEwODg5LC4zOTExMSwwLDBdLDg2NTc6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NjU4OlstLjEwODg5LC4zOTExMSwwLDBdLDg2NTk6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NjYwOlstLjEwODg5LC4zOTExMSwwLDBdLDg2NjE6Wy4yNSwuNzUsMCwwXSw4NzA0OlswLC42OTQ0NCwwLDBdLDg3MDY6WzAsLjY5NDQ0LC4wNjM4OSwwXSw4NzA3OlswLC42OTQ0NCwwLDBdLDg3MDk6Wy4wNTU1NiwuNzUsMCwwXSw4NzExOlswLC42ODYxMSwwLDBdLDg3MTI6Wy4wODU1NiwuNTg1NTYsMCwwXSw4NzE1OlsuMDg1NTYsLjU4NTU2LDAsMF0sODcyMjpbLjEzMzMzLC42MzMzMywwLDBdLDg3MjM6Wy4xMzMzMywuNjMzMzMsMCwwXSw4NzI1OlsuMjUsLjc1LDAsMF0sODcyNjpbLjI1LC43NSwwLDBdLDg3Mjc6Wy0uMDI3NzgsLjQ3MjIyLDAsMF0sODcyODpbLS4wMjYzOSwuNDczNjEsMCwwXSw4NzI5OlstLjAyNjM5LC40NzM2MSwwLDBdLDg3MzA6Wy4xOCwuODIsMCwwXSw4NzMzOlswLC40NDQ0NCwwLDBdLDg3MzQ6WzAsLjQ0NDQ0LDAsMF0sODczNjpbMCwuNjkyMjQsMCwwXSw4NzM5OlsuMjUsLjc1LDAsMF0sODc0MTpbLjI1LC43NSwwLDBdLDg3NDM6WzAsLjU1NTU2LDAsMF0sODc0NDpbMCwuNTU1NTYsMCwwXSw4NzQ1OlswLC41NTU1NiwwLDBdLDg3NDY6WzAsLjU1NTU2LDAsMF0sODc0NzpbLjE5NDQ0LC42OTQ0NCwuMTI3NzgsMF0sODc2NDpbLS4xMDg4OSwuMzkxMTEsMCwwXSw4NzY4OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODc3MTpbLjAwMjIyLC41MDIyMiwwLDBdLDg3NzY6Wy4wMjQ0NCwuNTI0NDQsMCwwXSw4NzgxOlsuMDAyMjIsLjUwMjIyLDAsMF0sODgwMTpbLjAwMjIyLC41MDIyMiwwLDBdLDg4MDQ6Wy4xOTY2NywuNjk2NjcsMCwwXSw4ODA1OlsuMTk2NjcsLjY5NjY3LDAsMF0sODgxMDpbLjA4NTU2LC41ODU1NiwwLDBdLDg4MTE6Wy4wODU1NiwuNTg1NTYsMCwwXSw4ODI2OlsuMDg1NTYsLjU4NTU2LDAsMF0sODgyNzpbLjA4NTU2LC41ODU1NiwwLDBdLDg4MzQ6Wy4wODU1NiwuNTg1NTYsMCwwXSw4ODM1OlsuMDg1NTYsLjU4NTU2LDAsMF0sODgzODpbLjE5NjY3LC42OTY2NywwLDBdLDg4Mzk6Wy4xOTY2NywuNjk2NjcsMCwwXSw4ODQ2OlswLC41NTU1NiwwLDBdLDg4NDk6Wy4xOTY2NywuNjk2NjcsMCwwXSw4ODUwOlsuMTk2NjcsLjY5NjY3LDAsMF0sODg1MTpbMCwuNTU1NTYsMCwwXSw4ODUyOlswLC41NTU1NiwwLDBdLDg4NTM6Wy4xMzMzMywuNjMzMzMsMCwwXSw4ODU0OlsuMTMzMzMsLjYzMzMzLDAsMF0sODg1NTpbLjEzMzMzLC42MzMzMywwLDBdLDg4NTY6Wy4xMzMzMywuNjMzMzMsMCwwXSw4ODU3OlsuMTMzMzMsLjYzMzMzLDAsMF0sODg2NjpbMCwuNjk0NDQsMCwwXSw4ODY3OlswLC42OTQ0NCwwLDBdLDg4Njg6WzAsLjY5NDQ0LDAsMF0sODg2OTpbMCwuNjk0NDQsMCwwXSw4OTAwOlstLjAyNjM5LC40NzM2MSwwLDBdLDg5MDE6Wy0uMDI2MzksLjQ3MzYxLDAsMF0sODkwMjpbLS4wMjc3OCwuNDcyMjIsMCwwXSw4OTY4OlsuMjUsLjc1LDAsMF0sODk2OTpbLjI1LC43NSwwLDBdLDg5NzA6Wy4yNSwuNzUsMCwwXSw4OTcxOlsuMjUsLjc1LDAsMF0sODk5NDpbLS4xMzg4OSwuMzYxMTEsMCwwXSw4OTk1OlstLjEzODg5LC4zNjExMSwwLDBdLDk2NTE6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5NjU3OlstLjAyNzc4LC40NzIyMiwwLDBdLDk2NjE6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5NjY3OlstLjAyNzc4LC40NzIyMiwwLDBdLDk3MTE6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5ODI0OlsuMTI5NjMsLjY5NDQ0LDAsMF0sOTgyNTpbLjEyOTYzLC42OTQ0NCwwLDBdLDk4MjY6Wy4xMjk2MywuNjk0NDQsMCwwXSw5ODI3OlsuMTI5NjMsLjY5NDQ0LDAsMF0sOTgzNzpbMCwuNzUsMCwwXSw5ODM4OlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTgzOTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDEwMjE2OlsuMjUsLjc1LDAsMF0sMTAyMTc6Wy4yNSwuNzUsMCwwXSwxMDgxNTpbMCwuNjg2MTEsMCwwXSwxMDkyNzpbLjE5NjY3LC42OTY2NywwLDBdLDEwOTI4OlsuMTk2NjcsLjY5NjY3LDAsMF19LFwiTWFpbi1JdGFsaWNcIjp7MzM6WzAsLjY5NDQ0LC4xMjQxNywwXSwzNDpbMCwuNjk0NDQsLjA2OTYxLDBdLDM1OlsuMTk0NDQsLjY5NDQ0LC4wNjYxNiwwXSwzNzpbLjA1NTU2LC43NSwuMTM2MzksMF0sMzg6WzAsLjY5NDQ0LC4wOTY5NCwwXSwzOTpbMCwuNjk0NDQsLjEyNDE3LDBdLDQwOlsuMjUsLjc1LC4xNjE5NCwwXSw0MTpbLjI1LC43NSwuMDM2OTQsMF0sNDI6WzAsLjc1LC4xNDkxNywwXSw0MzpbLjA1NjY3LC41NjE2NywuMDM2OTQsMF0sNDQ6Wy4xOTQ0NCwuMTA1NTYsMCwwXSw0NTpbMCwuNDMwNTYsLjAyODI2LDBdLDQ2OlswLC4xMDU1NiwwLDBdLDQ3OlsuMjUsLjc1LC4xNjE5NCwwXSw0ODpbMCwuNjQ0NDQsLjEzNTU2LDBdLDQ5OlswLC42NDQ0NCwuMTM1NTYsMF0sNTA6WzAsLjY0NDQ0LC4xMzU1NiwwXSw1MTpbMCwuNjQ0NDQsLjEzNTU2LDBdLDUyOlsuMTk0NDQsLjY0NDQ0LC4xMzU1NiwwXSw1MzpbMCwuNjQ0NDQsLjEzNTU2LDBdLDU0OlswLC42NDQ0NCwuMTM1NTYsMF0sNTU6Wy4xOTQ0NCwuNjQ0NDQsLjEzNTU2LDBdLDU2OlswLC42NDQ0NCwuMTM1NTYsMF0sNTc6WzAsLjY0NDQ0LC4xMzU1NiwwXSw1ODpbMCwuNDMwNTYsLjA1ODIsMF0sNTk6Wy4xOTQ0NCwuNDMwNTYsLjA1ODIsMF0sNjE6Wy0uMTMzMTMsLjM2Njg3LC4wNjYxNiwwXSw2MzpbMCwuNjk0NDQsLjEyMjUsMF0sNjQ6WzAsLjY5NDQ0LC4wOTU5NywwXSw2NTpbMCwuNjgzMzMsMCwwXSw2NjpbMCwuNjgzMzMsLjEwMjU3LDBdLDY3OlswLC42ODMzMywuMTQ1MjgsMF0sNjg6WzAsLjY4MzMzLC4wOTQwMywwXSw2OTpbMCwuNjgzMzMsLjEyMDI4LDBdLDcwOlswLC42ODMzMywuMTMzMDUsMF0sNzE6WzAsLjY4MzMzLC4wODcyMiwwXSw3MjpbMCwuNjgzMzMsLjE2Mzg5LDBdLDczOlswLC42ODMzMywuMTU4MDYsMF0sNzQ6WzAsLjY4MzMzLC4xNDAyOCwwXSw3NTpbMCwuNjgzMzMsLjE0NTI4LDBdLDc2OlswLC42ODMzMywwLDBdLDc3OlswLC42ODMzMywuMTYzODksMF0sNzg6WzAsLjY4MzMzLC4xNjM4OSwwXSw3OTpbMCwuNjgzMzMsLjA5NDAzLDBdLDgwOlswLC42ODMzMywuMTAyNTcsMF0sODE6Wy4xOTQ0NCwuNjgzMzMsLjA5NDAzLDBdLDgyOlswLC42ODMzMywuMDM4NjgsMF0sODM6WzAsLjY4MzMzLC4xMTk3MiwwXSw4NDpbMCwuNjgzMzMsLjEzMzA1LDBdLDg1OlswLC42ODMzMywuMTYzODksMF0sODY6WzAsLjY4MzMzLC4xODM2MSwwXSw4NzpbMCwuNjgzMzMsLjE4MzYxLDBdLDg4OlswLC42ODMzMywuMTU4MDYsMF0sODk6WzAsLjY4MzMzLC4xOTM4MywwXSw5MDpbMCwuNjgzMzMsLjE0NTI4LDBdLDkxOlsuMjUsLjc1LC4xODc1LDBdLDkzOlsuMjUsLjc1LC4xMDUyOCwwXSw5NDpbMCwuNjk0NDQsLjA2NjQ2LDBdLDk1OlsuMzEsLjEyMDU2LC4wOTIwOCwwXSw5NzpbMCwuNDMwNTYsLjA3NjcxLDBdLDk4OlswLC42OTQ0NCwuMDYzMTIsMF0sOTk6WzAsLjQzMDU2LC4wNTY1MywwXSwxMDA6WzAsLjY5NDQ0LC4xMDMzMywwXSwxMDE6WzAsLjQzMDU2LC4wNzUxNCwwXSwxMDI6Wy4xOTQ0NCwuNjk0NDQsLjIxMTk0LDBdLDEwMzpbLjE5NDQ0LC40MzA1NiwuMDg4NDcsMF0sMTA0OlswLC42OTQ0NCwuMDc2NzEsMF0sMTA1OlswLC42NTUzNiwuMTAxOSwwXSwxMDY6Wy4xOTQ0NCwuNjU1MzYsLjE0NDY3LDBdLDEwNzpbMCwuNjk0NDQsLjEwNzY0LDBdLDEwODpbMCwuNjk0NDQsLjEwMzMzLDBdLDEwOTpbMCwuNDMwNTYsLjA3NjcxLDBdLDExMDpbMCwuNDMwNTYsLjA3NjcxLDBdLDExMTpbMCwuNDMwNTYsLjA2MzEyLDBdLDExMjpbLjE5NDQ0LC40MzA1NiwuMDYzMTIsMF0sMTEzOlsuMTk0NDQsLjQzMDU2LC4wODg0NywwXSwxMTQ6WzAsLjQzMDU2LC4xMDc2NCwwXSwxMTU6WzAsLjQzMDU2LC4wODIwOCwwXSwxMTY6WzAsLjYxNTA4LC4wOTQ4NiwwXSwxMTc6WzAsLjQzMDU2LC4wNzY3MSwwXSwxMTg6WzAsLjQzMDU2LC4xMDc2NCwwXSwxMTk6WzAsLjQzMDU2LC4xMDc2NCwwXSwxMjA6WzAsLjQzMDU2LC4xMjA0MiwwXSwxMjE6Wy4xOTQ0NCwuNDMwNTYsLjA4ODQ3LDBdLDEyMjpbMCwuNDMwNTYsLjEyMjkyLDBdLDEyNjpbLjM1LC4zMTc4NiwuMTE1ODUsMF0sMTYzOlswLC42OTQ0NCwwLDBdLDMwNTpbMCwuNDMwNTYsMCwuMDI3NzhdLDU2NzpbLjE5NDQ0LC40MzA1NiwwLC4wODMzNF0sNzY4OlswLC42OTQ0NCwwLDBdLDc2OTpbMCwuNjk0NDQsLjA5Njk0LDBdLDc3MDpbMCwuNjk0NDQsLjA2NjQ2LDBdLDc3MTpbMCwuNjY3ODYsLjExNTg1LDBdLDc3MjpbMCwuNTYxNjcsLjEwMzMzLDBdLDc3NDpbMCwuNjk0NDQsLjEwODA2LDBdLDc3NTpbMCwuNjY3ODYsLjExNzUyLDBdLDc3NjpbMCwuNjY3ODYsLjEwNDc0LDBdLDc3ODpbMCwuNjk0NDQsMCwwXSw3Nzk6WzAsLjY5NDQ0LC4xMjI1LDBdLDc4MDpbMCwuNjI4NDcsLjA4Mjk1LDBdLDkxNTpbMCwuNjgzMzMsLjEzMzA1LDBdLDkxNjpbMCwuNjgzMzMsMCwwXSw5MjA6WzAsLjY4MzMzLC4wOTQwMywwXSw5MjM6WzAsLjY4MzMzLDAsMF0sOTI2OlswLC42ODMzMywuMTUyOTQsMF0sOTI4OlswLC42ODMzMywuMTYzODksMF0sOTMxOlswLC42ODMzMywuMTIwMjgsMF0sOTMzOlswLC42ODMzMywuMTExMTEsMF0sOTM0OlswLC42ODMzMywuMDU5ODYsMF0sOTM2OlswLC42ODMzMywuMTExMTEsMF0sOTM3OlswLC42ODMzMywuMTAyNTcsMF0sODIxMTpbMCwuNDMwNTYsLjA5MjA4LDBdLDgyMTI6WzAsLjQzMDU2LC4wOTIwOCwwXSw4MjE2OlswLC42OTQ0NCwuMTI0MTcsMF0sODIxNzpbMCwuNjk0NDQsLjEyNDE3LDBdLDgyMjA6WzAsLjY5NDQ0LC4xNjg1LDBdLDgyMjE6WzAsLjY5NDQ0LC4wNjk2MSwwXSw4NDYzOlswLC42ODg4OSwwLDBdfSxcIk1haW4tUmVndWxhclwiOnszMjpbMCwwLDAsMF0sMzM6WzAsLjY5NDQ0LDAsMF0sMzQ6WzAsLjY5NDQ0LDAsMF0sMzU6Wy4xOTQ0NCwuNjk0NDQsMCwwXSwzNjpbLjA1NTU2LC43NSwwLDBdLDM3OlsuMDU1NTYsLjc1LDAsMF0sMzg6WzAsLjY5NDQ0LDAsMF0sMzk6WzAsLjY5NDQ0LDAsMF0sNDA6Wy4yNSwuNzUsMCwwXSw0MTpbLjI1LC43NSwwLDBdLDQyOlswLC43NSwwLDBdLDQzOlsuMDgzMzMsLjU4MzMzLDAsMF0sNDQ6Wy4xOTQ0NCwuMTA1NTYsMCwwXSw0NTpbMCwuNDMwNTYsMCwwXSw0NjpbMCwuMTA1NTYsMCwwXSw0NzpbLjI1LC43NSwwLDBdLDQ4OlswLC42NDQ0NCwwLDBdLDQ5OlswLC42NDQ0NCwwLDBdLDUwOlswLC42NDQ0NCwwLDBdLDUxOlswLC42NDQ0NCwwLDBdLDUyOlswLC42NDQ0NCwwLDBdLDUzOlswLC42NDQ0NCwwLDBdLDU0OlswLC42NDQ0NCwwLDBdLDU1OlswLC42NDQ0NCwwLDBdLDU2OlswLC42NDQ0NCwwLDBdLDU3OlswLC42NDQ0NCwwLDBdLDU4OlswLC40MzA1NiwwLDBdLDU5OlsuMTk0NDQsLjQzMDU2LDAsMF0sNjA6Wy4wMzkxLC41MzkxLDAsMF0sNjE6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sNjI6Wy4wMzkxLC41MzkxLDAsMF0sNjM6WzAsLjY5NDQ0LDAsMF0sNjQ6WzAsLjY5NDQ0LDAsMF0sNjU6WzAsLjY4MzMzLDAsMF0sNjY6WzAsLjY4MzMzLDAsMF0sNjc6WzAsLjY4MzMzLDAsMF0sNjg6WzAsLjY4MzMzLDAsMF0sNjk6WzAsLjY4MzMzLDAsMF0sNzA6WzAsLjY4MzMzLDAsMF0sNzE6WzAsLjY4MzMzLDAsMF0sNzI6WzAsLjY4MzMzLDAsMF0sNzM6WzAsLjY4MzMzLDAsMF0sNzQ6WzAsLjY4MzMzLDAsMF0sNzU6WzAsLjY4MzMzLDAsMF0sNzY6WzAsLjY4MzMzLDAsMF0sNzc6WzAsLjY4MzMzLDAsMF0sNzg6WzAsLjY4MzMzLDAsMF0sNzk6WzAsLjY4MzMzLDAsMF0sODA6WzAsLjY4MzMzLDAsMF0sODE6Wy4xOTQ0NCwuNjgzMzMsMCwwXSw4MjpbMCwuNjgzMzMsMCwwXSw4MzpbMCwuNjgzMzMsMCwwXSw4NDpbMCwuNjgzMzMsMCwwXSw4NTpbMCwuNjgzMzMsMCwwXSw4NjpbMCwuNjgzMzMsLjAxMzg5LDBdLDg3OlswLC42ODMzMywuMDEzODksMF0sODg6WzAsLjY4MzMzLDAsMF0sODk6WzAsLjY4MzMzLC4wMjUsMF0sOTA6WzAsLjY4MzMzLDAsMF0sOTE6Wy4yNSwuNzUsMCwwXSw5MjpbLjI1LC43NSwwLDBdLDkzOlsuMjUsLjc1LDAsMF0sOTQ6WzAsLjY5NDQ0LDAsMF0sOTU6Wy4zMSwuMTIwNTYsLjAyNzc4LDBdLDk2OlswLC42OTQ0NCwwLDBdLDk3OlswLC40MzA1NiwwLDBdLDk4OlswLC42OTQ0NCwwLDBdLDk5OlswLC40MzA1NiwwLDBdLDEwMDpbMCwuNjk0NDQsMCwwXSwxMDE6WzAsLjQzMDU2LDAsMF0sMTAyOlswLC42OTQ0NCwuMDc3NzgsMF0sMTAzOlsuMTk0NDQsLjQzMDU2LC4wMTM4OSwwXSwxMDQ6WzAsLjY5NDQ0LDAsMF0sMTA1OlswLC42Njc4NiwwLDBdLDEwNjpbLjE5NDQ0LC42Njc4NiwwLDBdLDEwNzpbMCwuNjk0NDQsMCwwXSwxMDg6WzAsLjY5NDQ0LDAsMF0sMTA5OlswLC40MzA1NiwwLDBdLDExMDpbMCwuNDMwNTYsMCwwXSwxMTE6WzAsLjQzMDU2LDAsMF0sMTEyOlsuMTk0NDQsLjQzMDU2LDAsMF0sMTEzOlsuMTk0NDQsLjQzMDU2LDAsMF0sMTE0OlswLC40MzA1NiwwLDBdLDExNTpbMCwuNDMwNTYsMCwwXSwxMTY6WzAsLjYxNTA4LDAsMF0sMTE3OlswLC40MzA1NiwwLDBdLDExODpbMCwuNDMwNTYsLjAxMzg5LDBdLDExOTpbMCwuNDMwNTYsLjAxMzg5LDBdLDEyMDpbMCwuNDMwNTYsMCwwXSwxMjE6Wy4xOTQ0NCwuNDMwNTYsLjAxMzg5LDBdLDEyMjpbMCwuNDMwNTYsMCwwXSwxMjM6Wy4yNSwuNzUsMCwwXSwxMjQ6Wy4yNSwuNzUsMCwwXSwxMjU6Wy4yNSwuNzUsMCwwXSwxMjY6Wy4zNSwuMzE3ODYsMCwwXSwxNjA6WzAsMCwwLDBdLDE2ODpbMCwuNjY3ODYsMCwwXSwxNzI6WzAsLjQzMDU2LDAsMF0sMTc1OlswLC41Njc3OCwwLDBdLDE3NjpbMCwuNjk0NDQsMCwwXSwxNzc6Wy4wODMzMywuNTgzMzMsMCwwXSwxODA6WzAsLjY5NDQ0LDAsMF0sMjE1OlsuMDgzMzMsLjU4MzMzLDAsMF0sMjQ3OlsuMDgzMzMsLjU4MzMzLDAsMF0sMzA1OlswLC40MzA1NiwwLDBdLDU2NzpbLjE5NDQ0LC40MzA1NiwwLDBdLDcxMDpbMCwuNjk0NDQsMCwwXSw3MTE6WzAsLjYyODQ3LDAsMF0sNzEzOlswLC41Njc3OCwwLDBdLDcxNDpbMCwuNjk0NDQsMCwwXSw3MTU6WzAsLjY5NDQ0LDAsMF0sNzI4OlswLC42OTQ0NCwwLDBdLDcyOTpbMCwuNjY3ODYsMCwwXSw3MzA6WzAsLjY5NDQ0LDAsMF0sNzMyOlswLC42Njc4NiwwLDBdLDc2ODpbMCwuNjk0NDQsMCwwXSw3Njk6WzAsLjY5NDQ0LDAsMF0sNzcwOlswLC42OTQ0NCwwLDBdLDc3MTpbMCwuNjY3ODYsMCwwXSw3NzI6WzAsLjU2Nzc4LDAsMF0sNzc0OlswLC42OTQ0NCwwLDBdLDc3NTpbMCwuNjY3ODYsMCwwXSw3NzY6WzAsLjY2Nzg2LDAsMF0sNzc4OlswLC42OTQ0NCwwLDBdLDc3OTpbMCwuNjk0NDQsMCwwXSw3ODA6WzAsLjYyODQ3LDAsMF0sODI0OlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTE1OlswLC42ODMzMywwLDBdLDkxNjpbMCwuNjgzMzMsMCwwXSw5MjA6WzAsLjY4MzMzLDAsMF0sOTIzOlswLC42ODMzMywwLDBdLDkyNjpbMCwuNjgzMzMsMCwwXSw5Mjg6WzAsLjY4MzMzLDAsMF0sOTMxOlswLC42ODMzMywwLDBdLDkzMzpbMCwuNjgzMzMsMCwwXSw5MzQ6WzAsLjY4MzMzLDAsMF0sOTM2OlswLC42ODMzMywwLDBdLDkzNzpbMCwuNjgzMzMsMCwwXSw4MjExOlswLC40MzA1NiwuMDI3NzgsMF0sODIxMjpbMCwuNDMwNTYsLjAyNzc4LDBdLDgyMTY6WzAsLjY5NDQ0LDAsMF0sODIxNzpbMCwuNjk0NDQsMCwwXSw4MjIwOlswLC42OTQ0NCwwLDBdLDgyMjE6WzAsLjY5NDQ0LDAsMF0sODIyNDpbLjE5NDQ0LC42OTQ0NCwwLDBdLDgyMjU6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4MjMwOlswLC4xMiwwLDBdLDgyNDI6WzAsLjU1NTU2LDAsMF0sODQwNzpbMCwuNzE0NDQsLjE1MzgyLDBdLDg0NjM6WzAsLjY4ODg5LDAsMF0sODQ2NTpbMCwuNjk0NDQsMCwwXSw4NDY3OlswLC42OTQ0NCwwLC4xMTExMV0sODQ3MjpbLjE5NDQ0LC40MzA1NiwwLC4xMTExMV0sODQ3NjpbMCwuNjk0NDQsMCwwXSw4NTAxOlswLC42OTQ0NCwwLDBdLDg1OTI6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODU5MzpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg1OTQ6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODU5NTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg1OTY6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODU5NzpbLjI1LC43NSwwLDBdLDg1OTg6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NTk5OlsuMTk0NDQsLjY5NDQ0LDAsMF0sODYwMDpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2MDE6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw4NjE0OlsuMDExLC41MTEsMCwwXSw4NjE3OlsuMDExLC41MTEsMCwwXSw4NjE4OlsuMDExLC41MTEsMCwwXSw4NjM2OlstLjEzMzEzLC4zNjY4NywwLDBdLDg2Mzc6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODY0MDpbLS4xMzMxMywuMzY2ODcsMCwwXSw4NjQxOlstLjEzMzEzLC4zNjY4NywwLDBdLDg2NTI6Wy4wMTEsLjY3MSwwLDBdLDg2NTY6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODY1NzpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2NTg6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODY1OTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg2NjA6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODY2MTpbLjI1LC43NSwwLDBdLDg3MDQ6WzAsLjY5NDQ0LDAsMF0sODcwNjpbMCwuNjk0NDQsLjA1NTU2LC4wODMzNF0sODcwNzpbMCwuNjk0NDQsMCwwXSw4NzA5OlsuMDU1NTYsLjc1LDAsMF0sODcxMTpbMCwuNjgzMzMsMCwwXSw4NzEyOlsuMDM5MSwuNTM5MSwwLDBdLDg3MTU6Wy4wMzkxLC41MzkxLDAsMF0sODcyMjpbLjA4MzMzLC41ODMzMywwLDBdLDg3MjM6Wy4wODMzMywuNTgzMzMsMCwwXSw4NzI1OlsuMjUsLjc1LDAsMF0sODcyNjpbLjI1LC43NSwwLDBdLDg3Mjc6Wy0uMDM0NzIsLjQ2NTI4LDAsMF0sODcyODpbLS4wNTU1NSwuNDQ0NDUsMCwwXSw4NzI5OlstLjA1NTU1LC40NDQ0NSwwLDBdLDg3MzA6Wy4yLC44LDAsMF0sODczMzpbMCwuNDMwNTYsMCwwXSw4NzM0OlswLC40MzA1NiwwLDBdLDg3MzY6WzAsLjY5MjI0LDAsMF0sODczOTpbLjI1LC43NSwwLDBdLDg3NDE6Wy4yNSwuNzUsMCwwXSw4NzQzOlswLC41NTU1NiwwLDBdLDg3NDQ6WzAsLjU1NTU2LDAsMF0sODc0NTpbMCwuNTU1NTYsMCwwXSw4NzQ2OlswLC41NTU1NiwwLDBdLDg3NDc6Wy4xOTQ0NCwuNjk0NDQsLjExMTExLDBdLDg3NjQ6Wy0uMTMzMTMsLjM2Njg3LDAsMF0sODc2ODpbLjE5NDQ0LC42OTQ0NCwwLDBdLDg3NzE6Wy0uMDM2MjUsLjQ2Mzc1LDAsMF0sODc3MzpbLS4wMjIsLjU4OSwwLDBdLDg3NzY6Wy0uMDE2ODgsLjQ4MzEyLDAsMF0sODc4MTpbLS4wMzYyNSwuNDYzNzUsMCwwXSw4Nzg0OlstLjEzMywuNjcsMCwwXSw4ODAwOlsuMjE1LC43MTYsMCwwXSw4ODAxOlstLjAzNjI1LC40NjM3NSwwLDBdLDg4MDQ6Wy4xMzU5NywuNjM1OTcsMCwwXSw4ODA1OlsuMTM1OTcsLjYzNTk3LDAsMF0sODgxMDpbLjAzOTEsLjUzOTEsMCwwXSw4ODExOlsuMDM5MSwuNTM5MSwwLDBdLDg4MjY6Wy4wMzkxLC41MzkxLDAsMF0sODgyNzpbLjAzOTEsLjUzOTEsMCwwXSw4ODM0OlsuMDM5MSwuNTM5MSwwLDBdLDg4MzU6Wy4wMzkxLC41MzkxLDAsMF0sODgzODpbLjEzNTk3LC42MzU5NywwLDBdLDg4Mzk6Wy4xMzU5NywuNjM1OTcsMCwwXSw4ODQ2OlswLC41NTU1NiwwLDBdLDg4NDk6Wy4xMzU5NywuNjM1OTcsMCwwXSw4ODUwOlsuMTM1OTcsLjYzNTk3LDAsMF0sODg1MTpbMCwuNTU1NTYsMCwwXSw4ODUyOlswLC41NTU1NiwwLDBdLDg4NTM6Wy4wODMzMywuNTgzMzMsMCwwXSw4ODU0OlsuMDgzMzMsLjU4MzMzLDAsMF0sODg1NTpbLjA4MzMzLC41ODMzMywwLDBdLDg4NTY6Wy4wODMzMywuNTgzMzMsMCwwXSw4ODU3OlsuMDgzMzMsLjU4MzMzLDAsMF0sODg2NjpbMCwuNjk0NDQsMCwwXSw4ODY3OlswLC42OTQ0NCwwLDBdLDg4Njg6WzAsLjY5NDQ0LDAsMF0sODg2OTpbMCwuNjk0NDQsMCwwXSw4ODcyOlsuMjQ5LC43NSwwLDBdLDg5MDA6Wy0uMDU1NTUsLjQ0NDQ1LDAsMF0sODkwMTpbLS4wNTU1NSwuNDQ0NDUsMCwwXSw4OTAyOlstLjAzNDcyLC40NjUyOCwwLDBdLDg5MDQ6Wy4wMDUsLjUwNSwwLDBdLDg5NDI6Wy4wMywuOSwwLDBdLDg5NDM6Wy0uMTksLjMxLDAsMF0sODk0NTpbLS4xLC44MiwwLDBdLDg5Njg6Wy4yNSwuNzUsMCwwXSw4OTY5OlsuMjUsLjc1LDAsMF0sODk3MDpbLjI1LC43NSwwLDBdLDg5NzE6Wy4yNSwuNzUsMCwwXSw4OTk0OlstLjE0MjM2LC4zNTc2NCwwLDBdLDg5OTU6Wy0uMTQyMzYsLjM1NzY0LDAsMF0sOTEzNjpbLjI0NCwuNzQ0LDAsMF0sOTEzNzpbLjI0NCwuNzQ0LDAsMF0sOTY1MTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk2NTc6Wy0uMDM0NzIsLjQ2NTI4LDAsMF0sOTY2MTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk2Njc6Wy0uMDM0NzIsLjQ2NTI4LDAsMF0sOTcxMTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDk4MjQ6Wy4xMjk2MywuNjk0NDQsMCwwXSw5ODI1OlsuMTI5NjMsLjY5NDQ0LDAsMF0sOTgyNjpbLjEyOTYzLC42OTQ0NCwwLDBdLDk4Mjc6Wy4xMjk2MywuNjk0NDQsMCwwXSw5ODM3OlswLC43NSwwLDBdLDk4Mzg6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw5ODM5OlsuMTk0NDQsLjY5NDQ0LDAsMF0sMTAyMTY6Wy4yNSwuNzUsMCwwXSwxMDIxNzpbLjI1LC43NSwwLDBdLDEwMjIyOlsuMjQ0LC43NDQsMCwwXSwxMDIyMzpbLjI0NCwuNzQ0LDAsMF0sMTAyMjk6Wy4wMTEsLjUxMSwwLDBdLDEwMjMwOlsuMDExLC41MTEsMCwwXSwxMDIzMTpbLjAxMSwuNTExLDAsMF0sMTAyMzI6Wy4wMjQsLjUyNSwwLDBdLDEwMjMzOlsuMDI0LC41MjUsMCwwXSwxMDIzNDpbLjAyNCwuNTI1LDAsMF0sMTAyMzY6Wy4wMTEsLjUxMSwwLDBdLDEwODE1OlswLC42ODMzMywwLDBdLDEwOTI3OlsuMTM1OTcsLjYzNTk3LDAsMF0sMTA5Mjg6Wy4xMzU5NywuNjM1OTcsMCwwXX0sXCJNYXRoLUJvbGRJdGFsaWNcIjp7NDc6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw2NTpbMCwuNjg2MTEsMCwwXSw2NjpbMCwuNjg2MTEsLjA0ODM1LDBdLDY3OlswLC42ODYxMSwuMDY5NzksMF0sNjg6WzAsLjY4NjExLC4wMzE5NCwwXSw2OTpbMCwuNjg2MTEsLjA1NDUxLDBdLDcwOlswLC42ODYxMSwuMTU5NzIsMF0sNzE6WzAsLjY4NjExLDAsMF0sNzI6WzAsLjY4NjExLC4wODIyOSwwXSw3MzpbMCwuNjg2MTEsLjA3Nzc4LDBdLDc0OlswLC42ODYxMSwuMTAwNjksMF0sNzU6WzAsLjY4NjExLC4wNjk3OSwwXSw3NjpbMCwuNjg2MTEsMCwwXSw3NzpbMCwuNjg2MTEsLjExNDI0LDBdLDc4OlswLC42ODYxMSwuMTE0MjQsMF0sNzk6WzAsLjY4NjExLC4wMzE5NCwwXSw4MDpbMCwuNjg2MTEsLjE1OTcyLDBdLDgxOlsuMTk0NDQsLjY4NjExLDAsMF0sODI6WzAsLjY4NjExLC4wMDQyMSwwXSw4MzpbMCwuNjg2MTEsLjA1MzgyLDBdLDg0OlswLC42ODYxMSwuMTU5NzIsMF0sODU6WzAsLjY4NjExLC4xMTQyNCwwXSw4NjpbMCwuNjg2MTEsLjI1NTU1LDBdLDg3OlswLC42ODYxMSwuMTU5NzIsMF0sODg6WzAsLjY4NjExLC4wNzc3OCwwXSw4OTpbMCwuNjg2MTEsLjI1NTU1LDBdLDkwOlswLC42ODYxMSwuMDY5NzksMF0sOTc6WzAsLjQ0NDQ0LDAsMF0sOTg6WzAsLjY5NDQ0LDAsMF0sOTk6WzAsLjQ0NDQ0LDAsMF0sMTAwOlswLC42OTQ0NCwwLDBdLDEwMTpbMCwuNDQ0NDQsMCwwXSwxMDI6Wy4xOTQ0NCwuNjk0NDQsLjExMDQyLDBdLDEwMzpbLjE5NDQ0LC40NDQ0NCwuMDM3MDQsMF0sMTA0OlswLC42OTQ0NCwwLDBdLDEwNTpbMCwuNjkzMjYsMCwwXSwxMDY6Wy4xOTQ0NCwuNjkzMjYsLjA2MjIsMF0sMTA3OlswLC42OTQ0NCwuMDE4NTIsMF0sMTA4OlswLC42OTQ0NCwuMDA4OCwwXSwxMDk6WzAsLjQ0NDQ0LDAsMF0sMTEwOlswLC40NDQ0NCwwLDBdLDExMTpbMCwuNDQ0NDQsMCwwXSwxMTI6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSwxMTM6Wy4xOTQ0NCwuNDQ0NDQsLjAzNzA0LDBdLDExNDpbMCwuNDQ0NDQsLjAzMTk0LDBdLDExNTpbMCwuNDQ0NDQsMCwwXSwxMTY6WzAsLjYzNDkyLDAsMF0sMTE3OlswLC40NDQ0NCwwLDBdLDExODpbMCwuNDQ0NDQsLjAzNzA0LDBdLDExOTpbMCwuNDQ0NDQsLjAyNzc4LDBdLDEyMDpbMCwuNDQ0NDQsMCwwXSwxMjE6Wy4xOTQ0NCwuNDQ0NDQsLjAzNzA0LDBdLDEyMjpbMCwuNDQ0NDQsLjA0MjEzLDBdLDkxNTpbMCwuNjg2MTEsLjE1OTcyLDBdLDkxNjpbMCwuNjg2MTEsMCwwXSw5MjA6WzAsLjY4NjExLC4wMzE5NCwwXSw5MjM6WzAsLjY4NjExLDAsMF0sOTI2OlswLC42ODYxMSwuMDc0NTgsMF0sOTI4OlswLC42ODYxMSwuMDgyMjksMF0sOTMxOlswLC42ODYxMSwuMDU0NTEsMF0sOTMzOlswLC42ODYxMSwuMTU5NzIsMF0sXG45MzQ6WzAsLjY4NjExLDAsMF0sOTM2OlswLC42ODYxMSwuMTE2NTMsMF0sOTM3OlswLC42ODYxMSwuMDQ4MzUsMF0sOTQ1OlswLC40NDQ0NCwwLDBdLDk0NjpbLjE5NDQ0LC42OTQ0NCwuMDM0MDMsMF0sOTQ3OlsuMTk0NDQsLjQ0NDQ0LC4wNjM4OSwwXSw5NDg6WzAsLjY5NDQ0LC4wMzgxOSwwXSw5NDk6WzAsLjQ0NDQ0LDAsMF0sOTUwOlsuMTk0NDQsLjY5NDQ0LC4wNjIxNSwwXSw5NTE6Wy4xOTQ0NCwuNDQ0NDQsLjAzNzA0LDBdLDk1MjpbMCwuNjk0NDQsLjAzMTk0LDBdLDk1MzpbMCwuNDQ0NDQsMCwwXSw5NTQ6WzAsLjQ0NDQ0LDAsMF0sOTU1OlswLC42OTQ0NCwwLDBdLDk1NjpbLjE5NDQ0LC40NDQ0NCwwLDBdLDk1NzpbMCwuNDQ0NDQsLjA2ODk4LDBdLDk1ODpbLjE5NDQ0LC42OTQ0NCwuMDMwMjEsMF0sOTU5OlswLC40NDQ0NCwwLDBdLDk2MDpbMCwuNDQ0NDQsLjAzNzA0LDBdLDk2MTpbLjE5NDQ0LC40NDQ0NCwwLDBdLDk2MjpbLjA5NzIyLC40NDQ0NCwuMDc5MTcsMF0sOTYzOlswLC40NDQ0NCwuMDM3MDQsMF0sOTY0OlswLC40NDQ0NCwuMTM0NzIsMF0sOTY1OlswLC40NDQ0NCwuMDM3MDQsMF0sOTY2OlsuMTk0NDQsLjQ0NDQ0LDAsMF0sOTY3OlsuMTk0NDQsLjQ0NDQ0LDAsMF0sOTY4OlsuMTk0NDQsLjY5NDQ0LC4wMzcwNCwwXSw5Njk6WzAsLjQ0NDQ0LC4wMzcwNCwwXSw5Nzc6WzAsLjY5NDQ0LDAsMF0sOTgxOlsuMTk0NDQsLjY5NDQ0LDAsMF0sOTgyOlswLC40NDQ0NCwuMDMxOTQsMF0sMTAwOTpbLjE5NDQ0LC40NDQ0NCwwLDBdLDEwMTM6WzAsLjQ0NDQ0LDAsMF19LFwiTWF0aC1JdGFsaWNcIjp7NDc6Wy4xOTQ0NCwuNjk0NDQsMCwwXSw2NTpbMCwuNjgzMzMsMCwuMTM4ODldLDY2OlswLC42ODMzMywuMDUwMTcsLjA4MzM0XSw2NzpbMCwuNjgzMzMsLjA3MTUzLC4wODMzNF0sNjg6WzAsLjY4MzMzLC4wMjc3OCwuMDU1NTZdLDY5OlswLC42ODMzMywuMDU3NjQsLjA4MzM0XSw3MDpbMCwuNjgzMzMsLjEzODg5LC4wODMzNF0sNzE6WzAsLjY4MzMzLDAsLjA4MzM0XSw3MjpbMCwuNjgzMzMsLjA4MTI1LC4wNTU1Nl0sNzM6WzAsLjY4MzMzLC4wNzg0NywuMTExMTFdLDc0OlswLC42ODMzMywuMDk2MTgsLjE2NjY3XSw3NTpbMCwuNjgzMzMsLjA3MTUzLC4wNTU1Nl0sNzY6WzAsLjY4MzMzLDAsLjAyNzc4XSw3NzpbMCwuNjgzMzMsLjEwOTAzLC4wODMzNF0sNzg6WzAsLjY4MzMzLC4xMDkwMywuMDgzMzRdLDc5OlswLC42ODMzMywuMDI3NzgsLjA4MzM0XSw4MDpbMCwuNjgzMzMsLjEzODg5LC4wODMzNF0sODE6Wy4xOTQ0NCwuNjgzMzMsMCwuMDgzMzRdLDgyOlswLC42ODMzMywuMDA3NzMsLjA4MzM0XSw4MzpbMCwuNjgzMzMsLjA1NzY0LC4wODMzNF0sODQ6WzAsLjY4MzMzLC4xMzg4OSwuMDgzMzRdLDg1OlswLC42ODMzMywuMTA5MDMsLjAyNzc4XSw4NjpbMCwuNjgzMzMsLjIyMjIyLDBdLDg3OlswLC42ODMzMywuMTM4ODksMF0sODg6WzAsLjY4MzMzLC4wNzg0NywuMDgzMzRdLDg5OlswLC42ODMzMywuMjIyMjIsMF0sOTA6WzAsLjY4MzMzLC4wNzE1MywuMDgzMzRdLDk3OlswLC40MzA1NiwwLDBdLDk4OlswLC42OTQ0NCwwLDBdLDk5OlswLC40MzA1NiwwLC4wNTU1Nl0sMTAwOlswLC42OTQ0NCwwLC4xNjY2N10sMTAxOlswLC40MzA1NiwwLC4wNTU1Nl0sMTAyOlsuMTk0NDQsLjY5NDQ0LC4xMDc2NCwuMTY2NjddLDEwMzpbLjE5NDQ0LC40MzA1NiwuMDM1ODgsLjAyNzc4XSwxMDQ6WzAsLjY5NDQ0LDAsMF0sMTA1OlswLC42NTk1MiwwLDBdLDEwNjpbLjE5NDQ0LC42NTk1MiwuMDU3MjQsMF0sMTA3OlswLC42OTQ0NCwuMDMxNDgsMF0sMTA4OlswLC42OTQ0NCwuMDE5NjgsLjA4MzM0XSwxMDk6WzAsLjQzMDU2LDAsMF0sMTEwOlswLC40MzA1NiwwLDBdLDExMTpbMCwuNDMwNTYsMCwuMDU1NTZdLDExMjpbLjE5NDQ0LC40MzA1NiwwLC4wODMzNF0sMTEzOlsuMTk0NDQsLjQzMDU2LC4wMzU4OCwuMDgzMzRdLDExNDpbMCwuNDMwNTYsLjAyNzc4LC4wNTU1Nl0sMTE1OlswLC40MzA1NiwwLC4wNTU1Nl0sMTE2OlswLC42MTUwOCwwLC4wODMzNF0sMTE3OlswLC40MzA1NiwwLC4wMjc3OF0sMTE4OlswLC40MzA1NiwuMDM1ODgsLjAyNzc4XSwxMTk6WzAsLjQzMDU2LC4wMjY5MSwuMDgzMzRdLDEyMDpbMCwuNDMwNTYsMCwuMDI3NzhdLDEyMTpbLjE5NDQ0LC40MzA1NiwuMDM1ODgsLjA1NTU2XSwxMjI6WzAsLjQzMDU2LC4wNDM5OCwuMDU1NTZdLDkxNTpbMCwuNjgzMzMsLjEzODg5LC4wODMzNF0sOTE2OlswLC42ODMzMywwLC4xNjY2N10sOTIwOlswLC42ODMzMywuMDI3NzgsLjA4MzM0XSw5MjM6WzAsLjY4MzMzLDAsLjE2NjY3XSw5MjY6WzAsLjY4MzMzLC4wNzU2OSwuMDgzMzRdLDkyODpbMCwuNjgzMzMsLjA4MTI1LC4wNTU1Nl0sOTMxOlswLC42ODMzMywuMDU3NjQsLjA4MzM0XSw5MzM6WzAsLjY4MzMzLC4xMzg4OSwuMDU1NTZdLDkzNDpbMCwuNjgzMzMsMCwuMDgzMzRdLDkzNjpbMCwuNjgzMzMsLjExLC4wNTU1Nl0sOTM3OlswLC42ODMzMywuMDUwMTcsLjA4MzM0XSw5NDU6WzAsLjQzMDU2LC4wMDM3LC4wMjc3OF0sOTQ2OlsuMTk0NDQsLjY5NDQ0LC4wNTI3OCwuMDgzMzRdLDk0NzpbLjE5NDQ0LC40MzA1NiwuMDU1NTYsMF0sOTQ4OlswLC42OTQ0NCwuMDM3ODUsLjA1NTU2XSw5NDk6WzAsLjQzMDU2LDAsLjA4MzM0XSw5NTA6Wy4xOTQ0NCwuNjk0NDQsLjA3Mzc4LC4wODMzNF0sOTUxOlsuMTk0NDQsLjQzMDU2LC4wMzU4OCwuMDU1NTZdLDk1MjpbMCwuNjk0NDQsLjAyNzc4LC4wODMzNF0sOTUzOlswLC40MzA1NiwwLC4wNTU1Nl0sOTU0OlswLC40MzA1NiwwLDBdLDk1NTpbMCwuNjk0NDQsMCwwXSw5NTY6Wy4xOTQ0NCwuNDMwNTYsMCwuMDI3NzhdLDk1NzpbMCwuNDMwNTYsLjA2MzY2LC4wMjc3OF0sOTU4OlsuMTk0NDQsLjY5NDQ0LC4wNDYwMSwuMTExMTFdLDk1OTpbMCwuNDMwNTYsMCwuMDU1NTZdLDk2MDpbMCwuNDMwNTYsLjAzNTg4LDBdLDk2MTpbLjE5NDQ0LC40MzA1NiwwLC4wODMzNF0sOTYyOlsuMDk3MjIsLjQzMDU2LC4wNzk4NiwuMDgzMzRdLDk2MzpbMCwuNDMwNTYsLjAzNTg4LDBdLDk2NDpbMCwuNDMwNTYsLjExMzIsLjAyNzc4XSw5NjU6WzAsLjQzMDU2LC4wMzU4OCwuMDI3NzhdLDk2NjpbLjE5NDQ0LC40MzA1NiwwLC4wODMzNF0sOTY3OlsuMTk0NDQsLjQzMDU2LDAsLjA1NTU2XSw5Njg6Wy4xOTQ0NCwuNjk0NDQsLjAzNTg4LC4xMTExMV0sOTY5OlswLC40MzA1NiwuMDM1ODgsMF0sOTc3OlswLC42OTQ0NCwwLC4wODMzNF0sOTgxOlsuMTk0NDQsLjY5NDQ0LDAsLjA4MzM0XSw5ODI6WzAsLjQzMDU2LC4wMjc3OCwwXSwxMDA5OlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSwxMDEzOlswLC40MzA1NiwwLC4wNTU1Nl19LFwiTWF0aC1SZWd1bGFyXCI6ezY1OlswLC42ODMzMywwLC4xMzg4OV0sNjY6WzAsLjY4MzMzLC4wNTAxNywuMDgzMzRdLDY3OlswLC42ODMzMywuMDcxNTMsLjA4MzM0XSw2ODpbMCwuNjgzMzMsLjAyNzc4LC4wNTU1Nl0sNjk6WzAsLjY4MzMzLC4wNTc2NCwuMDgzMzRdLDcwOlswLC42ODMzMywuMTM4ODksLjA4MzM0XSw3MTpbMCwuNjgzMzMsMCwuMDgzMzRdLDcyOlswLC42ODMzMywuMDgxMjUsLjA1NTU2XSw3MzpbMCwuNjgzMzMsLjA3ODQ3LC4xMTExMV0sNzQ6WzAsLjY4MzMzLC4wOTYxOCwuMTY2NjddLDc1OlswLC42ODMzMywuMDcxNTMsLjA1NTU2XSw3NjpbMCwuNjgzMzMsMCwuMDI3NzhdLDc3OlswLC42ODMzMywuMTA5MDMsLjA4MzM0XSw3ODpbMCwuNjgzMzMsLjEwOTAzLC4wODMzNF0sNzk6WzAsLjY4MzMzLC4wMjc3OCwuMDgzMzRdLDgwOlswLC42ODMzMywuMTM4ODksLjA4MzM0XSw4MTpbLjE5NDQ0LC42ODMzMywwLC4wODMzNF0sODI6WzAsLjY4MzMzLC4wMDc3MywuMDgzMzRdLDgzOlswLC42ODMzMywuMDU3NjQsLjA4MzM0XSw4NDpbMCwuNjgzMzMsLjEzODg5LC4wODMzNF0sODU6WzAsLjY4MzMzLC4xMDkwMywuMDI3NzhdLDg2OlswLC42ODMzMywuMjIyMjIsMF0sODc6WzAsLjY4MzMzLC4xMzg4OSwwXSw4ODpbMCwuNjgzMzMsLjA3ODQ3LC4wODMzNF0sODk6WzAsLjY4MzMzLC4yMjIyMiwwXSw5MDpbMCwuNjgzMzMsLjA3MTUzLC4wODMzNF0sOTc6WzAsLjQzMDU2LDAsMF0sOTg6WzAsLjY5NDQ0LDAsMF0sOTk6WzAsLjQzMDU2LDAsLjA1NTU2XSwxMDA6WzAsLjY5NDQ0LDAsLjE2NjY3XSwxMDE6WzAsLjQzMDU2LDAsLjA1NTU2XSwxMDI6Wy4xOTQ0NCwuNjk0NDQsLjEwNzY0LC4xNjY2N10sMTAzOlsuMTk0NDQsLjQzMDU2LC4wMzU4OCwuMDI3NzhdLDEwNDpbMCwuNjk0NDQsMCwwXSwxMDU6WzAsLjY1OTUyLDAsMF0sMTA2OlsuMTk0NDQsLjY1OTUyLC4wNTcyNCwwXSwxMDc6WzAsLjY5NDQ0LC4wMzE0OCwwXSwxMDg6WzAsLjY5NDQ0LC4wMTk2OCwuMDgzMzRdLDEwOTpbMCwuNDMwNTYsMCwwXSwxMTA6WzAsLjQzMDU2LDAsMF0sMTExOlswLC40MzA1NiwwLC4wNTU1Nl0sMTEyOlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSwxMTM6Wy4xOTQ0NCwuNDMwNTYsLjAzNTg4LC4wODMzNF0sMTE0OlswLC40MzA1NiwuMDI3NzgsLjA1NTU2XSwxMTU6WzAsLjQzMDU2LDAsLjA1NTU2XSwxMTY6WzAsLjYxNTA4LDAsLjA4MzM0XSwxMTc6WzAsLjQzMDU2LDAsLjAyNzc4XSwxMTg6WzAsLjQzMDU2LC4wMzU4OCwuMDI3NzhdLDExOTpbMCwuNDMwNTYsLjAyNjkxLC4wODMzNF0sMTIwOlswLC40MzA1NiwwLC4wMjc3OF0sMTIxOlsuMTk0NDQsLjQzMDU2LC4wMzU4OCwuMDU1NTZdLDEyMjpbMCwuNDMwNTYsLjA0Mzk4LC4wNTU1Nl0sOTE1OlswLC42ODMzMywuMTM4ODksLjA4MzM0XSw5MTY6WzAsLjY4MzMzLDAsLjE2NjY3XSw5MjA6WzAsLjY4MzMzLC4wMjc3OCwuMDgzMzRdLDkyMzpbMCwuNjgzMzMsMCwuMTY2NjddLDkyNjpbMCwuNjgzMzMsLjA3NTY5LC4wODMzNF0sOTI4OlswLC42ODMzMywuMDgxMjUsLjA1NTU2XSw5MzE6WzAsLjY4MzMzLC4wNTc2NCwuMDgzMzRdLDkzMzpbMCwuNjgzMzMsLjEzODg5LC4wNTU1Nl0sOTM0OlswLC42ODMzMywwLC4wODMzNF0sOTM2OlswLC42ODMzMywuMTEsLjA1NTU2XSw5Mzc6WzAsLjY4MzMzLC4wNTAxNywuMDgzMzRdLDk0NTpbMCwuNDMwNTYsLjAwMzcsLjAyNzc4XSw5NDY6Wy4xOTQ0NCwuNjk0NDQsLjA1Mjc4LC4wODMzNF0sOTQ3OlsuMTk0NDQsLjQzMDU2LC4wNTU1NiwwXSw5NDg6WzAsLjY5NDQ0LC4wMzc4NSwuMDU1NTZdLDk0OTpbMCwuNDMwNTYsMCwuMDgzMzRdLDk1MDpbLjE5NDQ0LC42OTQ0NCwuMDczNzgsLjA4MzM0XSw5NTE6Wy4xOTQ0NCwuNDMwNTYsLjAzNTg4LC4wNTU1Nl0sOTUyOlswLC42OTQ0NCwuMDI3NzgsLjA4MzM0XSw5NTM6WzAsLjQzMDU2LDAsLjA1NTU2XSw5NTQ6WzAsLjQzMDU2LDAsMF0sOTU1OlswLC42OTQ0NCwwLDBdLDk1NjpbLjE5NDQ0LC40MzA1NiwwLC4wMjc3OF0sOTU3OlswLC40MzA1NiwuMDYzNjYsLjAyNzc4XSw5NTg6Wy4xOTQ0NCwuNjk0NDQsLjA0NjAxLC4xMTExMV0sOTU5OlswLC40MzA1NiwwLC4wNTU1Nl0sOTYwOlswLC40MzA1NiwuMDM1ODgsMF0sOTYxOlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSw5NjI6Wy4wOTcyMiwuNDMwNTYsLjA3OTg2LC4wODMzNF0sOTYzOlswLC40MzA1NiwuMDM1ODgsMF0sOTY0OlswLC40MzA1NiwuMTEzMiwuMDI3NzhdLDk2NTpbMCwuNDMwNTYsLjAzNTg4LC4wMjc3OF0sOTY2OlsuMTk0NDQsLjQzMDU2LDAsLjA4MzM0XSw5Njc6Wy4xOTQ0NCwuNDMwNTYsMCwuMDU1NTZdLDk2ODpbLjE5NDQ0LC42OTQ0NCwuMDM1ODgsLjExMTExXSw5Njk6WzAsLjQzMDU2LC4wMzU4OCwwXSw5Nzc6WzAsLjY5NDQ0LDAsLjA4MzM0XSw5ODE6Wy4xOTQ0NCwuNjk0NDQsMCwuMDgzMzRdLDk4MjpbMCwuNDMwNTYsLjAyNzc4LDBdLDEwMDk6Wy4xOTQ0NCwuNDMwNTYsMCwuMDgzMzRdLDEwMTM6WzAsLjQzMDU2LDAsLjA1NTU2XX0sXCJTYW5zU2VyaWYtUmVndWxhclwiOnszMzpbMCwuNjk0NDQsMCwwXSwzNDpbMCwuNjk0NDQsMCwwXSwzNTpbLjE5NDQ0LC42OTQ0NCwwLDBdLDM2OlsuMDU1NTYsLjc1LDAsMF0sMzc6Wy4wNTU1NiwuNzUsMCwwXSwzODpbMCwuNjk0NDQsMCwwXSwzOTpbMCwuNjk0NDQsMCwwXSw0MDpbLjI1LC43NSwwLDBdLDQxOlsuMjUsLjc1LDAsMF0sNDI6WzAsLjc1LDAsMF0sNDM6Wy4wODMzMywuNTgzMzMsMCwwXSw0NDpbLjEyNSwuMDgzMzMsMCwwXSw0NTpbMCwuNDQ0NDQsMCwwXSw0NjpbMCwuMDgzMzMsMCwwXSw0NzpbLjI1LC43NSwwLDBdLDQ4OlswLC42NTU1NiwwLDBdLDQ5OlswLC42NTU1NiwwLDBdLDUwOlswLC42NTU1NiwwLDBdLDUxOlswLC42NTU1NiwwLDBdLDUyOlswLC42NTU1NiwwLDBdLDUzOlswLC42NTU1NiwwLDBdLDU0OlswLC42NTU1NiwwLDBdLDU1OlswLC42NTU1NiwwLDBdLDU2OlswLC42NTU1NiwwLDBdLDU3OlswLC42NTU1NiwwLDBdLDU4OlswLC40NDQ0NCwwLDBdLDU5OlsuMTI1LC40NDQ0NCwwLDBdLDYxOlstLjEzLC4zNywwLDBdLDYzOlswLC42OTQ0NCwwLDBdLDY0OlswLC42OTQ0NCwwLDBdLDY1OlswLC42OTQ0NCwwLDBdLDY2OlswLC42OTQ0NCwwLDBdLDY3OlswLC42OTQ0NCwwLDBdLDY4OlswLC42OTQ0NCwwLDBdLDY5OlswLC42OTQ0NCwwLDBdLDcwOlswLC42OTQ0NCwwLDBdLDcxOlswLC42OTQ0NCwwLDBdLDcyOlswLC42OTQ0NCwwLDBdLDczOlswLC42OTQ0NCwwLDBdLDc0OlswLC42OTQ0NCwwLDBdLDc1OlswLC42OTQ0NCwwLDBdLDc2OlswLC42OTQ0NCwwLDBdLDc3OlswLC42OTQ0NCwwLDBdLDc4OlswLC42OTQ0NCwwLDBdLDc5OlswLC42OTQ0NCwwLDBdLDgwOlswLC42OTQ0NCwwLDBdLDgxOlsuMTI1LC42OTQ0NCwwLDBdLDgyOlswLC42OTQ0NCwwLDBdLDgzOlswLC42OTQ0NCwwLDBdLDg0OlswLC42OTQ0NCwwLDBdLDg1OlswLC42OTQ0NCwwLDBdLDg2OlswLC42OTQ0NCwuMDEzODksMF0sODc6WzAsLjY5NDQ0LC4wMTM4OSwwXSw4ODpbMCwuNjk0NDQsMCwwXSw4OTpbMCwuNjk0NDQsLjAyNSwwXSw5MDpbMCwuNjk0NDQsMCwwXSw5MTpbLjI1LC43NSwwLDBdLDkzOlsuMjUsLjc1LDAsMF0sOTQ6WzAsLjY5NDQ0LDAsMF0sOTU6Wy4zNSwuMDk0NDQsLjAyNzc4LDBdLDk3OlswLC40NDQ0NCwwLDBdLDk4OlswLC42OTQ0NCwwLDBdLDk5OlswLC40NDQ0NCwwLDBdLDEwMDpbMCwuNjk0NDQsMCwwXSwxMDE6WzAsLjQ0NDQ0LDAsMF0sMTAyOlswLC42OTQ0NCwuMDY5NDQsMF0sMTAzOlsuMTk0NDQsLjQ0NDQ0LC4wMTM4OSwwXSwxMDQ6WzAsLjY5NDQ0LDAsMF0sMTA1OlswLC42NzkzNywwLDBdLDEwNjpbLjE5NDQ0LC42NzkzNywwLDBdLDEwNzpbMCwuNjk0NDQsMCwwXSwxMDg6WzAsLjY5NDQ0LDAsMF0sMTA5OlswLC40NDQ0NCwwLDBdLDExMDpbMCwuNDQ0NDQsMCwwXSwxMTE6WzAsLjQ0NDQ0LDAsMF0sMTEyOlsuMTk0NDQsLjQ0NDQ0LDAsMF0sMTEzOlsuMTk0NDQsLjQ0NDQ0LDAsMF0sMTE0OlswLC40NDQ0NCwuMDEzODksMF0sMTE1OlswLC40NDQ0NCwwLDBdLDExNjpbMCwuNTcxNDMsMCwwXSwxMTc6WzAsLjQ0NDQ0LDAsMF0sMTE4OlswLC40NDQ0NCwuMDEzODksMF0sMTE5OlswLC40NDQ0NCwuMDEzODksMF0sMTIwOlswLC40NDQ0NCwwLDBdLDEyMTpbLjE5NDQ0LC40NDQ0NCwuMDEzODksMF0sMTIyOlswLC40NDQ0NCwwLDBdLDEyNjpbLjM1LC4zMjY1OSwwLDBdLDMwNTpbMCwuNDQ0NDQsMCwwXSw1Njc6Wy4xOTQ0NCwuNDQ0NDQsMCwwXSw3Njg6WzAsLjY5NDQ0LDAsMF0sNzY5OlswLC42OTQ0NCwwLDBdLDc3MDpbMCwuNjk0NDQsMCwwXSw3NzE6WzAsLjY3NjU5LDAsMF0sNzcyOlswLC42MDg4OSwwLDBdLDc3NDpbMCwuNjk0NDQsMCwwXSw3NzU6WzAsLjY3OTM3LDAsMF0sNzc2OlswLC42NzkzNywwLDBdLDc3ODpbMCwuNjk0NDQsMCwwXSw3Nzk6WzAsLjY5NDQ0LDAsMF0sNzgwOlswLC42MzE5NCwwLDBdLDkxNTpbMCwuNjk0NDQsMCwwXSw5MTY6WzAsLjY5NDQ0LDAsMF0sOTIwOlswLC42OTQ0NCwwLDBdLDkyMzpbMCwuNjk0NDQsMCwwXSw5MjY6WzAsLjY5NDQ0LDAsMF0sOTI4OlswLC42OTQ0NCwwLDBdLDkzMTpbMCwuNjk0NDQsMCwwXSw5MzM6WzAsLjY5NDQ0LDAsMF0sOTM0OlswLC42OTQ0NCwwLDBdLDkzNjpbMCwuNjk0NDQsMCwwXSw5Mzc6WzAsLjY5NDQ0LDAsMF0sODIxMTpbMCwuNDQ0NDQsLjAyNzc4LDBdLDgyMTI6WzAsLjQ0NDQ0LC4wMjc3OCwwXSw4MjE2OlswLC42OTQ0NCwwLDBdLDgyMTc6WzAsLjY5NDQ0LDAsMF0sODIyMDpbMCwuNjk0NDQsMCwwXSw4MjIxOlswLC42OTQ0NCwwLDBdfSxcIlNjcmlwdC1SZWd1bGFyXCI6ezY1OlswLC43LC4yMjkyNSwwXSw2NjpbMCwuNywuMDQwODcsMF0sNjc6WzAsLjcsLjE2ODksMF0sNjg6WzAsLjcsLjA5MzcxLDBdLDY5OlswLC43LC4xODU4MywwXSw3MDpbMCwuNywuMTM2MzQsMF0sNzE6WzAsLjcsLjE3MzIyLDBdLDcyOlswLC43LC4yOTY5NCwwXSw3MzpbMCwuNywuMTkxODksMF0sNzQ6Wy4yNzc3OCwuNywuMTkxODksMF0sNzU6WzAsLjcsLjMxMjU5LDBdLDc2OlswLC43LC4xOTE4OSwwXSw3NzpbMCwuNywuMTU5ODEsMF0sNzg6WzAsLjcsLjM1MjUsMF0sNzk6WzAsLjcsLjA4MDc4LDBdLDgwOlswLC43LC4wODA3OCwwXSw4MTpbMCwuNywuMDMzMDUsMF0sODI6WzAsLjcsLjA2MjU5LDBdLDgzOlswLC43LC4xOTE4OSwwXSw4NDpbMCwuNywuMjkwODcsMF0sODU6WzAsLjcsLjI1ODE1LDBdLDg2OlswLC43LC4yNzUyMywwXSw4NzpbMCwuNywuMjc1MjMsMF0sODg6WzAsLjcsLjI2MDA2LDBdLDg5OlswLC43LC4yOTM5LDBdLDkwOlswLC43LC4yNDAzNywwXX0sXCJTaXplMS1SZWd1bGFyXCI6ezQwOlsuMzUwMDEsLjg1LDAsMF0sNDE6Wy4zNTAwMSwuODUsMCwwXSw0NzpbLjM1MDAxLC44NSwwLDBdLDkxOlsuMzUwMDEsLjg1LDAsMF0sOTI6Wy4zNTAwMSwuODUsMCwwXSw5MzpbLjM1MDAxLC44NSwwLDBdLDEyMzpbLjM1MDAxLC44NSwwLDBdLDEyNTpbLjM1MDAxLC44NSwwLDBdLDcxMDpbMCwuNzIyMjIsMCwwXSw3MzI6WzAsLjcyMjIyLDAsMF0sNzcwOlswLC43MjIyMiwwLDBdLDc3MTpbMCwuNzIyMjIsMCwwXSw4MjE0OlstOTllLTUsLjYwMSwwLDBdLDg1OTM6WzFlLTUsLjYsMCwwXSw4NTk1OlsxZS01LC42LDAsMF0sODY1NzpbMWUtNSwuNiwwLDBdLDg2NTk6WzFlLTUsLjYsMCwwXSw4NzE5OlsuMjUwMDEsLjc1LDAsMF0sODcyMDpbLjI1MDAxLC43NSwwLDBdLDg3MjE6Wy4yNTAwMSwuNzUsMCwwXSw4NzMwOlsuMzUwMDEsLjg1LDAsMF0sODczOTpbLS4wMDU5OSwuNjA2LDAsMF0sODc0MTpbLS4wMDU5OSwuNjA2LDAsMF0sODc0NzpbLjMwNjEyLC44MDUsLjE5NDQ1LDBdLDg3NDg6Wy4zMDYsLjgwNSwuMTk0NDUsMF0sODc0OTpbLjMwNiwuODA1LC4xOTQ0NSwwXSw4NzUwOlsuMzA2MTIsLjgwNSwuMTk0NDUsMF0sODg5NjpbLjI1MDAxLC43NSwwLDBdLDg4OTc6Wy4yNTAwMSwuNzUsMCwwXSw4ODk4OlsuMjUwMDEsLjc1LDAsMF0sODg5OTpbLjI1MDAxLC43NSwwLDBdLDg5Njg6Wy4zNTAwMSwuODUsMCwwXSw4OTY5OlsuMzUwMDEsLjg1LDAsMF0sODk3MDpbLjM1MDAxLC44NSwwLDBdLDg5NzE6Wy4zNTAwMSwuODUsMCwwXSw5MTY4OlstOTllLTUsLjYwMSwwLDBdLDEwMjE2OlsuMzUwMDEsLjg1LDAsMF0sMTAyMTc6Wy4zNTAwMSwuODUsMCwwXSwxMDc1MjpbLjI1MDAxLC43NSwwLDBdLDEwNzUzOlsuMjUwMDEsLjc1LDAsMF0sMTA3NTQ6Wy4yNTAwMSwuNzUsMCwwXSwxMDc1NjpbLjI1MDAxLC43NSwwLDBdLDEwNzU4OlsuMjUwMDEsLjc1LDAsMF19LFwiU2l6ZTItUmVndWxhclwiOns0MDpbLjY1MDAyLDEuMTUsMCwwXSw0MTpbLjY1MDAyLDEuMTUsMCwwXSw0NzpbLjY1MDAyLDEuMTUsMCwwXSw5MTpbLjY1MDAyLDEuMTUsMCwwXSw5MjpbLjY1MDAyLDEuMTUsMCwwXSw5MzpbLjY1MDAyLDEuMTUsMCwwXSwxMjM6Wy42NTAwMiwxLjE1LDAsMF0sMTI1OlsuNjUwMDIsMS4xNSwwLDBdLDcxMDpbMCwuNzUsMCwwXSw3MzI6WzAsLjc1LDAsMF0sNzcwOlswLC43NSwwLDBdLDc3MTpbMCwuNzUsMCwwXSw4NzE5OlsuNTUwMDEsMS4wNSwwLDBdLDg3MjA6Wy41NTAwMSwxLjA1LDAsMF0sODcyMTpbLjU1MDAxLDEuMDUsMCwwXSw4NzMwOlsuNjUwMDIsMS4xNSwwLDBdLDg3NDc6Wy44NjIyNSwxLjM2LC40NDQ0NSwwXSw4NzQ4OlsuODYyLDEuMzYsLjQ0NDQ1LDBdLDg3NDk6Wy44NjIsMS4zNiwuNDQ0NDUsMF0sODc1MDpbLjg2MjI1LDEuMzYsLjQ0NDQ1LDBdLDg4OTY6Wy41NTAwMSwxLjA1LDAsMF0sODg5NzpbLjU1MDAxLDEuMDUsMCwwXSw4ODk4OlsuNTUwMDEsMS4wNSwwLDBdLDg4OTk6Wy41NTAwMSwxLjA1LDAsMF0sODk2ODpbLjY1MDAyLDEuMTUsMCwwXSw4OTY5OlsuNjUwMDIsMS4xNSwwLDBdLDg5NzA6Wy42NTAwMiwxLjE1LDAsMF0sODk3MTpbLjY1MDAyLDEuMTUsMCwwXSwxMDIxNjpbLjY1MDAyLDEuMTUsMCwwXSwxMDIxNzpbLjY1MDAyLDEuMTUsMCwwXSwxMDc1MjpbLjU1MDAxLDEuMDUsMCwwXSwxMDc1MzpbLjU1MDAxLDEuMDUsMCwwXSwxMDc1NDpbLjU1MDAxLDEuMDUsMCwwXSwxMDc1NjpbLjU1MDAxLDEuMDUsMCwwXSwxMDc1ODpbLjU1MDAxLDEuMDUsMCwwXX0sXCJTaXplMy1SZWd1bGFyXCI6ezQwOlsuOTUwMDMsMS40NSwwLDBdLDQxOlsuOTUwMDMsMS40NSwwLDBdLDQ3OlsuOTUwMDMsMS40NSwwLDBdLDkxOlsuOTUwMDMsMS40NSwwLDBdLDkyOlsuOTUwMDMsMS40NSwwLDBdLDkzOlsuOTUwMDMsMS40NSwwLDBdLDEyMzpbLjk1MDAzLDEuNDUsMCwwXSwxMjU6Wy45NTAwMywxLjQ1LDAsMF0sNzEwOlswLC43NSwwLDBdLDczMjpbMCwuNzUsMCwwXSw3NzA6WzAsLjc1LDAsMF0sNzcxOlswLC43NSwwLDBdLDg3MzA6Wy45NTAwMywxLjQ1LDAsMF0sODk2ODpbLjk1MDAzLDEuNDUsMCwwXSw4OTY5OlsuOTUwMDMsMS40NSwwLDBdLDg5NzA6Wy45NTAwMywxLjQ1LDAsMF0sODk3MTpbLjk1MDAzLDEuNDUsMCwwXSwxMDIxNjpbLjk1MDAzLDEuNDUsMCwwXSwxMDIxNzpbLjk1MDAzLDEuNDUsMCwwXX0sXCJTaXplNC1SZWd1bGFyXCI6ezQwOlsxLjI1MDAzLDEuNzUsMCwwXSw0MTpbMS4yNTAwMywxLjc1LDAsMF0sNDc6WzEuMjUwMDMsMS43NSwwLDBdLDkxOlsxLjI1MDAzLDEuNzUsMCwwXSw5MjpbMS4yNTAwMywxLjc1LDAsMF0sOTM6WzEuMjUwMDMsMS43NSwwLDBdLDEyMzpbMS4yNTAwMywxLjc1LDAsMF0sMTI1OlsxLjI1MDAzLDEuNzUsMCwwXSw3MTA6WzAsLjgyNSwwLDBdLDczMjpbMCwuODI1LDAsMF0sNzcwOlswLC44MjUsMCwwXSw3NzE6WzAsLjgyNSwwLDBdLDg3MzA6WzEuMjUwMDMsMS43NSwwLDBdLDg5Njg6WzEuMjUwMDMsMS43NSwwLDBdLDg5Njk6WzEuMjUwMDMsMS43NSwwLDBdLDg5NzA6WzEuMjUwMDMsMS43NSwwLDBdLDg5NzE6WzEuMjUwMDMsMS43NSwwLDBdLDkxMTU6Wy42NDUwMiwxLjE1NSwwLDBdLDkxMTY6WzFlLTUsLjYsMCwwXSw5MTE3OlsuNjQ1MDIsMS4xNTUsMCwwXSw5MTE4OlsuNjQ1MDIsMS4xNTUsMCwwXSw5MTE5OlsxZS01LC42LDAsMF0sOTEyMDpbLjY0NTAyLDEuMTU1LDAsMF0sOTEyMTpbLjY0NTAyLDEuMTU1LDAsMF0sOTEyMjpbLTk5ZS01LC42MDEsMCwwXSw5MTIzOlsuNjQ1MDIsMS4xNTUsMCwwXSw5MTI0OlsuNjQ1MDIsMS4xNTUsMCwwXSw5MTI1OlstOTllLTUsLjYwMSwwLDBdLDkxMjY6Wy42NDUwMiwxLjE1NSwwLDBdLDkxMjc6WzFlLTUsLjksMCwwXSw5MTI4OlsuNjUwMDIsMS4xNSwwLDBdLDkxMjk6Wy45MDAwMSwwLDAsMF0sOTEzMDpbMCwuMywwLDBdLDkxMzE6WzFlLTUsLjksMCwwXSw5MTMyOlsuNjUwMDIsMS4xNSwwLDBdLDkxMzM6Wy45MDAwMSwwLDAsMF0sOTE0MzpbLjg4NTAyLC45MTUsMCwwXSwxMDIxNjpbMS4yNTAwMywxLjc1LDAsMF0sMTAyMTc6WzEuMjUwMDMsMS43NSwwLDBdLDU3MzQ0OlstLjAwNDk5LC42MDUsMCwwXSw1NzM0NTpbLS4wMDQ5OSwuNjA1LDAsMF0sNTc2ODA6WzAsLjEyLDAsMF0sNTc2ODE6WzAsLjEyLDAsMF0sNTc2ODI6WzAsLjEyLDAsMF0sNTc2ODM6WzAsLjEyLDAsMF19LFwiVHlwZXdyaXRlci1SZWd1bGFyXCI6ezMzOlswLC42MTExMSwwLDBdLDM0OlswLC42MTExMSwwLDBdLDM1OlswLC42MTExMSwwLDBdLDM2OlsuMDgzMzMsLjY5NDQ0LDAsMF0sMzc6Wy4wODMzMywuNjk0NDQsMCwwXSwzODpbMCwuNjExMTEsMCwwXSwzOTpbMCwuNjExMTEsMCwwXSw0MDpbLjA4MzMzLC42OTQ0NCwwLDBdLDQxOlsuMDgzMzMsLjY5NDQ0LDAsMF0sNDI6WzAsLjUyMDgzLDAsMF0sNDM6Wy0uMDgwNTYsLjUzMDU1LDAsMF0sNDQ6Wy4xMzg4OSwuMTI1LDAsMF0sNDU6Wy0uMDgwNTYsLjUzMDU1LDAsMF0sNDY6WzAsLjEyNSwwLDBdLDQ3OlsuMDgzMzMsLjY5NDQ0LDAsMF0sNDg6WzAsLjYxMTExLDAsMF0sNDk6WzAsLjYxMTExLDAsMF0sNTA6WzAsLjYxMTExLDAsMF0sNTE6WzAsLjYxMTExLDAsMF0sNTI6WzAsLjYxMTExLDAsMF0sNTM6WzAsLjYxMTExLDAsMF0sNTQ6WzAsLjYxMTExLDAsMF0sNTU6WzAsLjYxMTExLDAsMF0sNTY6WzAsLjYxMTExLDAsMF0sNTc6WzAsLjYxMTExLDAsMF0sNTg6WzAsLjQzMDU2LDAsMF0sNTk6Wy4xMzg4OSwuNDMwNTYsMCwwXSw2MDpbLS4wNTU1NiwuNTU1NTYsMCwwXSw2MTpbLS4xOTU0OSwuNDE1NjIsMCwwXSw2MjpbLS4wNTU1NiwuNTU1NTYsMCwwXSw2MzpbMCwuNjExMTEsMCwwXSw2NDpbMCwuNjExMTEsMCwwXSw2NTpbMCwuNjExMTEsMCwwXSw2NjpbMCwuNjExMTEsMCwwXSw2NzpbMCwuNjExMTEsMCwwXSw2ODpbMCwuNjExMTEsMCwwXSw2OTpbMCwuNjExMTEsMCwwXSw3MDpbMCwuNjExMTEsMCwwXSw3MTpbMCwuNjExMTEsMCwwXSw3MjpbMCwuNjExMTEsMCwwXSw3MzpbMCwuNjExMTEsMCwwXSw3NDpbMCwuNjExMTEsMCwwXSw3NTpbMCwuNjExMTEsMCwwXSw3NjpbMCwuNjExMTEsMCwwXSw3NzpbMCwuNjExMTEsMCwwXSw3ODpbMCwuNjExMTEsMCwwXSw3OTpbMCwuNjExMTEsMCwwXSw4MDpbMCwuNjExMTEsMCwwXSw4MTpbLjEzODg5LC42MTExMSwwLDBdLDgyOlswLC42MTExMSwwLDBdLDgzOlswLC42MTExMSwwLDBdLDg0OlswLC42MTExMSwwLDBdLDg1OlswLC42MTExMSwwLDBdLDg2OlswLC42MTExMSwwLDBdLDg3OlswLC42MTExMSwwLDBdLDg4OlswLC42MTExMSwwLDBdLDg5OlswLC42MTExMSwwLDBdLDkwOlswLC42MTExMSwwLDBdLDkxOlsuMDgzMzMsLjY5NDQ0LDAsMF0sOTI6Wy4wODMzMywuNjk0NDQsMCwwXSw5MzpbLjA4MzMzLC42OTQ0NCwwLDBdLDk0OlswLC42MTExMSwwLDBdLDk1OlsuMDk1MTQsMCwwLDBdLDk2OlswLC42MTExMSwwLDBdLDk3OlswLC40MzA1NiwwLDBdLDk4OlswLC42MTExMSwwLDBdLDk5OlswLC40MzA1NiwwLDBdLDEwMDpbMCwuNjExMTEsMCwwXSwxMDE6WzAsLjQzMDU2LDAsMF0sMTAyOlswLC42MTExMSwwLDBdLDEwMzpbLjIyMjIyLC40MzA1NiwwLDBdLDEwNDpbMCwuNjExMTEsMCwwXSwxMDU6WzAsLjYxMTExLDAsMF0sMTA2OlsuMjIyMjIsLjYxMTExLDAsMF0sMTA3OlswLC42MTExMSwwLDBdLDEwODpbMCwuNjExMTEsMCwwXSwxMDk6WzAsLjQzMDU2LDAsMF0sMTEwOlswLC40MzA1NiwwLDBdLDExMTpbMCwuNDMwNTYsMCwwXSwxMTI6Wy4yMjIyMiwuNDMwNTYsMCwwXSwxMTM6Wy4yMjIyMiwuNDMwNTYsMCwwXSwxMTQ6WzAsLjQzMDU2LDAsMF0sMTE1OlswLC40MzA1NiwwLDBdLDExNjpbMCwuNTUzNTgsMCwwXSwxMTc6WzAsLjQzMDU2LDAsMF0sMTE4OlswLC40MzA1NiwwLDBdLDExOTpbMCwuNDMwNTYsMCwwXSwxMjA6WzAsLjQzMDU2LDAsMF0sMTIxOlsuMjIyMjIsLjQzMDU2LDAsMF0sMTIyOlswLC40MzA1NiwwLDBdLDEyMzpbLjA4MzMzLC42OTQ0NCwwLDBdLDEyNDpbLjA4MzMzLC42OTQ0NCwwLDBdLDEyNTpbLjA4MzMzLC42OTQ0NCwwLDBdLDEyNjpbMCwuNjExMTEsMCwwXSwxMjc6WzAsLjYxMTExLDAsMF0sMzA1OlswLC40MzA1NiwwLDBdLDU2NzpbLjIyMjIyLC40MzA1NiwwLDBdLDc2ODpbMCwuNjExMTEsMCwwXSw3Njk6WzAsLjYxMTExLDAsMF0sNzcwOlswLC42MTExMSwwLDBdLDc3MTpbMCwuNjExMTEsMCwwXSw3NzI6WzAsLjU2NTU1LDAsMF0sNzc0OlswLC42MTExMSwwLDBdLDc3NjpbMCwuNjExMTEsMCwwXSw3Nzg6WzAsLjYxMTExLDAsMF0sNzgwOlswLC41NjU5NywwLDBdLDkxNTpbMCwuNjExMTEsMCwwXSw5MTY6WzAsLjYxMTExLDAsMF0sOTIwOlswLC42MTExMSwwLDBdLDkyMzpbMCwuNjExMTEsMCwwXSw5MjY6WzAsLjYxMTExLDAsMF0sOTI4OlswLC42MTExMSwwLDBdLDkzMTpbMCwuNjExMTEsMCwwXSw5MzM6WzAsLjYxMTExLDAsMF0sOTM0OlswLC42MTExMSwwLDBdLDkzNjpbMCwuNjExMTEsMCwwXSw5Mzc6WzAsLjYxMTExLDAsMF0sMjAxODpbMCwuNjExMTEsMCwwXSwyMDE5OlswLC42MTExMSwwLDBdLDgyNDI6WzAsLjYxMTExLDAsMF19fX0se31dLDIzOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGE9ZShcIi4vdXRpbHNcIik7dmFyIGk9ZShcIi4vUGFyc2VFcnJvclwiKTt2YXIgbj1lKFwiLi9wYXJzZURhdGFcIik7dmFyIG89bi5QYXJzZU5vZGU7ZnVuY3Rpb24gcyhlLHIsYSl7aWYodHlwZW9mIGU9PT1cInN0cmluZ1wiKXtlPVtlXX1pZih0eXBlb2Ygcj09PVwibnVtYmVyXCIpe3I9e251bUFyZ3M6cn19dmFyIGk9e251bUFyZ3M6ci5udW1BcmdzLGFyZ1R5cGVzOnIuYXJnVHlwZXMsZ3JlZWRpbmVzczpyLmdyZWVkaW5lc3M9PT11bmRlZmluZWQ/MTpyLmdyZWVkaW5lc3MsYWxsb3dlZEluVGV4dDohIXIuYWxsb3dlZEluVGV4dCxudW1PcHRpb25hbEFyZ3M6ci5udW1PcHRpb25hbEFyZ3N8fDAsaW5maXg6ISFyLmluZml4LGhhbmRsZXI6YX07Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDsrK24pe3QuZXhwb3J0c1tlW25dXT1pfX12YXIgbD1mdW5jdGlvbiBlKHQpe2lmKHQudHlwZT09PVwib3JkZ3JvdXBcIil7cmV0dXJuIHQudmFsdWV9ZWxzZXtyZXR1cm5bdF19fTtzKFwiXFxcXHNxcnRcIix7bnVtQXJnczoxLG51bU9wdGlvbmFsQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07dmFyIGE9dFsxXTtyZXR1cm57dHlwZTpcInNxcnRcIixib2R5OmEsaW5kZXg6cn19KTt2YXIgdT17XCJcXFxcdGV4dFwiOnVuZGVmaW5lZCxcIlxcXFx0ZXh0cm1cIjpcIm1hdGhybVwiLFwiXFxcXHRleHRzZlwiOlwibWF0aHNmXCIsXCJcXFxcdGV4dHR0XCI6XCJtYXRodHRcIixcIlxcXFx0ZXh0bm9ybWFsXCI6XCJtYXRocm1cIixcIlxcXFx0ZXh0YmZcIjpcIm1hdGhiZlwiLFwiXFxcXHRleHRpdFwiOlwidGV4dGl0XCJ9O3MoW1wiXFxcXHRleHRcIixcIlxcXFx0ZXh0cm1cIixcIlxcXFx0ZXh0c2ZcIixcIlxcXFx0ZXh0dHRcIixcIlxcXFx0ZXh0bm9ybWFsXCIsXCJcXFxcdGV4dGJmXCIsXCJcXFxcdGV4dGl0XCJdLHtudW1BcmdzOjEsYXJnVHlwZXM6W1widGV4dFwiXSxncmVlZGluZXNzOjIsYWxsb3dlZEluVGV4dDp0cnVlfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJ0ZXh0XCIsYm9keTpsKHIpLHN0eWxlOnVbZS5mdW5jTmFtZV19fSk7cyhcIlxcXFx4bWxDbGFzc1wiLHtudW1BcmdzOjIsYWxsb3dlZEluVGV4dDp0cnVlLGdyZWVkaW5lc3M6MyxhcmdUeXBlczpbXCJzdHJpbmdcIixcIm9yaWdpbmFsXCJdfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07dmFyIGE9dFsxXTt2YXIgaT12b2lkIDA7aWYoYS50eXBlPT09XCJvcmRncm91cFwiKXtpPWEudmFsdWV9ZWxzZXtpPVthXX1yZXR1cm57dHlwZTpcInhtbENsYXNzXCIsY2w6cix2YWx1ZTppfX0pO3MoXCJcXFxcdGV4dGNvbG9yXCIse251bUFyZ3M6MixhbGxvd2VkSW5UZXh0OnRydWUsZ3JlZWRpbmVzczozLGFyZ1R5cGVzOltcImNvbG9yXCIsXCJvcmlnaW5hbFwiXX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3ZhciBhPXRbMV07cmV0dXJue3R5cGU6XCJjb2xvclwiLGNvbG9yOnIudmFsdWUsdmFsdWU6bChhKX19KTtzKFwiXFxcXGNvbG9yXCIse251bUFyZ3M6MSxhbGxvd2VkSW5UZXh0OnRydWUsZ3JlZWRpbmVzczozLGFyZ1R5cGVzOltcImNvbG9yXCJdfSxudWxsKTtzKFwiXFxcXG92ZXJsaW5lXCIse251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwib3ZlcmxpbmVcIixib2R5OnJ9fSk7cyhcIlxcXFx1bmRlcmxpbmVcIix7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJ1bmRlcmxpbmVcIixib2R5OnJ9fSk7cyhcIlxcXFxydWxlXCIse251bUFyZ3M6MixudW1PcHRpb25hbEFyZ3M6MSxhcmdUeXBlczpbXCJzaXplXCIsXCJzaXplXCIsXCJzaXplXCJdfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07dmFyIGE9dFsxXTt2YXIgaT10WzJdO3JldHVybnt0eXBlOlwicnVsZVwiLHNoaWZ0OnImJnIudmFsdWUsd2lkdGg6YS52YWx1ZSxoZWlnaHQ6aS52YWx1ZX19KTtzKFwiXFxcXGN1cnNvclwiLHtudW1BcmdzOjEsbnVtT3B0aW9uYWxBcmdzOjEsYXJnVHlwZXM6W1wic2l6ZVwiLFwic2l6ZVwiXX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3ZhciBhPXRbMV07cmV0dXJue3R5cGU6XCJjdXJzb3JcIixzaGlmdDpyJiZyLnZhbHVlLGhlaWdodDphLnZhbHVlfX0pO3MoW1wiXFxcXGtlcm5cIixcIlxcXFxta2VyblwiXSx7bnVtQXJnczoxLGFyZ1R5cGVzOltcInNpemVcIl19LGZ1bmN0aW9uKGUsdCl7cmV0dXJue3R5cGU6XCJrZXJuXCIsZGltZW5zaW9uOnRbMF0udmFsdWV9fSk7cyhcIlxcXFxLYVRlWFwiLHtudW1BcmdzOjB9LGZ1bmN0aW9uKGUpe3JldHVybnt0eXBlOlwia2F0ZXhcIn19KTtzKFwiXFxcXHBoYW50b21cIix7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJwaGFudG9tXCIsdmFsdWU6bChyKX19KTtzKFtcIlxcXFxtYXRob3JkXCIsXCJcXFxcbWF0aGJpblwiLFwiXFxcXG1hdGhyZWxcIixcIlxcXFxtYXRob3BlblwiLFwiXFxcXG1hdGhjbG9zZVwiLFwiXFxcXG1hdGhwdW5jdFwiLFwiXFxcXG1hdGhpbm5lclwiXSx7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJtY2xhc3NcIixtY2xhc3M6XCJtXCIrZS5mdW5jTmFtZS5zdWJzdHIoNSksdmFsdWU6bChyKX19KTtzKFwiXFxcXHN0YWNrcmVsXCIse251bUFyZ3M6Mn0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3ZhciBhPXRbMV07dmFyIGk9bmV3IG8oXCJvcFwiLHt0eXBlOlwib3BcIixsaW1pdHM6dHJ1ZSxhbHdheXNIYW5kbGVTdXBTdWI6dHJ1ZSxzeW1ib2w6ZmFsc2UsdmFsdWU6bChhKX0sYS5tb2RlKTt2YXIgbj1uZXcgbyhcInN1cHN1YlwiLHtiYXNlOmksc3VwOnIsc3ViOm51bGx9LHIubW9kZSk7cmV0dXJue3R5cGU6XCJtY2xhc3NcIixtY2xhc3M6XCJtcmVsXCIsdmFsdWU6W25dfX0pO3MoXCJcXFxcYm1vZFwiLHtudW1BcmdzOjB9LGZ1bmN0aW9uKGUsdCl7cmV0dXJue3R5cGU6XCJtb2RcIixtb2RUeXBlOlwiYm1vZFwiLHZhbHVlOm51bGx9fSk7cyhbXCJcXFxccG9kXCIsXCJcXFxccG1vZFwiLFwiXFxcXG1vZFwiXSx7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07cmV0dXJue3R5cGU6XCJtb2RcIixtb2RUeXBlOmUuZnVuY05hbWUuc3Vic3RyKDEpLHZhbHVlOmwocil9fSk7dmFyIGg9e1wiXFxcXGJpZ2xcIjp7bWNsYXNzOlwibW9wZW5cIixzaXplOjF9LFwiXFxcXEJpZ2xcIjp7bWNsYXNzOlwibW9wZW5cIixzaXplOjJ9LFwiXFxcXGJpZ2dsXCI6e21jbGFzczpcIm1vcGVuXCIsc2l6ZTozfSxcIlxcXFxCaWdnbFwiOnttY2xhc3M6XCJtb3BlblwiLHNpemU6NH0sXCJcXFxcYmlnclwiOnttY2xhc3M6XCJtY2xvc2VcIixzaXplOjF9LFwiXFxcXEJpZ3JcIjp7bWNsYXNzOlwibWNsb3NlXCIsc2l6ZToyfSxcIlxcXFxiaWdnclwiOnttY2xhc3M6XCJtY2xvc2VcIixzaXplOjN9LFwiXFxcXEJpZ2dyXCI6e21jbGFzczpcIm1jbG9zZVwiLHNpemU6NH0sXCJcXFxcYmlnbVwiOnttY2xhc3M6XCJtcmVsXCIsc2l6ZToxfSxcIlxcXFxCaWdtXCI6e21jbGFzczpcIm1yZWxcIixzaXplOjJ9LFwiXFxcXGJpZ2dtXCI6e21jbGFzczpcIm1yZWxcIixzaXplOjN9LFwiXFxcXEJpZ2dtXCI6e21jbGFzczpcIm1yZWxcIixzaXplOjR9LFwiXFxcXGJpZ1wiOnttY2xhc3M6XCJtb3JkXCIsc2l6ZToxfSxcIlxcXFxCaWdcIjp7bWNsYXNzOlwibW9yZFwiLHNpemU6Mn0sXCJcXFxcYmlnZ1wiOnttY2xhc3M6XCJtb3JkXCIsc2l6ZTozfSxcIlxcXFxCaWdnXCI6e21jbGFzczpcIm1vcmRcIixzaXplOjR9fTt2YXIgcD1bXCIoXCIsXCIpXCIsXCJbXCIsXCJcXFxcbGJyYWNrXCIsXCJdXCIsXCJcXFxccmJyYWNrXCIsXCJcXFxce1wiLFwiXFxcXGxicmFjZVwiLFwiXFxcXH1cIixcIlxcXFxyYnJhY2VcIixcIlxcXFxsZmxvb3JcIixcIlxcXFxyZmxvb3JcIixcIlxcXFxsY2VpbFwiLFwiXFxcXHJjZWlsXCIsXCI8XCIsXCI+XCIsXCJcXFxcbGFuZ2xlXCIsXCJcXFxccmFuZ2xlXCIsXCJcXFxcbHRcIixcIlxcXFxndFwiLFwiXFxcXGx2ZXJ0XCIsXCJcXFxccnZlcnRcIixcIlxcXFxsVmVydFwiLFwiXFxcXHJWZXJ0XCIsXCJcXFxcbGdyb3VwXCIsXCJcXFxccmdyb3VwXCIsXCJcXFxcbG1vdXN0YWNoZVwiLFwiXFxcXHJtb3VzdGFjaGVcIixcIi9cIixcIlxcXFxiYWNrc2xhc2hcIixcInxcIixcIlxcXFx2ZXJ0XCIsXCJcXFxcfFwiLFwiXFxcXFZlcnRcIixcIlxcXFx1cGFycm93XCIsXCJcXFxcVXBhcnJvd1wiLFwiXFxcXGRvd25hcnJvd1wiLFwiXFxcXERvd25hcnJvd1wiLFwiXFxcXHVwZG93bmFycm93XCIsXCJcXFxcVXBkb3duYXJyb3dcIixcIi5cIl07dmFyIGM9e1wiXFxcXEJiYlwiOlwiXFxcXG1hdGhiYlwiLFwiXFxcXGJvbGRcIjpcIlxcXFxtYXRoYmZcIixcIlxcXFxmcmFrXCI6XCJcXFxcbWF0aGZyYWtcIn07cyhbXCJcXFxcYmx1ZVwiLFwiXFxcXG9yYW5nZVwiLFwiXFxcXHBpbmtcIixcIlxcXFxyZWRcIixcIlxcXFxncmVlblwiLFwiXFxcXGdyYXlcIixcIlxcXFxwdXJwbGVcIixcIlxcXFxibHVlQVwiLFwiXFxcXGJsdWVCXCIsXCJcXFxcYmx1ZUNcIixcIlxcXFxibHVlRFwiLFwiXFxcXGJsdWVFXCIsXCJcXFxcdGVhbEFcIixcIlxcXFx0ZWFsQlwiLFwiXFxcXHRlYWxDXCIsXCJcXFxcdGVhbERcIixcIlxcXFx0ZWFsRVwiLFwiXFxcXGdyZWVuQVwiLFwiXFxcXGdyZWVuQlwiLFwiXFxcXGdyZWVuQ1wiLFwiXFxcXGdyZWVuRFwiLFwiXFxcXGdyZWVuRVwiLFwiXFxcXGdvbGRBXCIsXCJcXFxcZ29sZEJcIixcIlxcXFxnb2xkQ1wiLFwiXFxcXGdvbGREXCIsXCJcXFxcZ29sZEVcIixcIlxcXFxyZWRBXCIsXCJcXFxccmVkQlwiLFwiXFxcXHJlZENcIixcIlxcXFxyZWREXCIsXCJcXFxccmVkRVwiLFwiXFxcXG1hcm9vbkFcIixcIlxcXFxtYXJvb25CXCIsXCJcXFxcbWFyb29uQ1wiLFwiXFxcXG1hcm9vbkRcIixcIlxcXFxtYXJvb25FXCIsXCJcXFxccHVycGxlQVwiLFwiXFxcXHB1cnBsZUJcIixcIlxcXFxwdXJwbGVDXCIsXCJcXFxccHVycGxlRFwiLFwiXFxcXHB1cnBsZUVcIixcIlxcXFxtaW50QVwiLFwiXFxcXG1pbnRCXCIsXCJcXFxcbWludENcIixcIlxcXFxncmF5QVwiLFwiXFxcXGdyYXlCXCIsXCJcXFxcZ3JheUNcIixcIlxcXFxncmF5RFwiLFwiXFxcXGdyYXlFXCIsXCJcXFxcZ3JheUZcIixcIlxcXFxncmF5R1wiLFwiXFxcXGdyYXlIXCIsXCJcXFxcZ3JheUlcIixcIlxcXFxrYUJsdWVcIixcIlxcXFxrYUdyZWVuXCJdLHtudW1BcmdzOjEsYWxsb3dlZEluVGV4dDp0cnVlLGdyZWVkaW5lc3M6M30sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwiY29sb3JcIixjb2xvcjpcImthdGV4LVwiK2UuZnVuY05hbWUuc2xpY2UoMSksdmFsdWU6bChyKX19KTtzKFtcIlxcXFxhcmNzaW5cIixcIlxcXFxhcmNjb3NcIixcIlxcXFxhcmN0YW5cIixcIlxcXFxhcmN0Z1wiLFwiXFxcXGFyY2N0Z1wiLFwiXFxcXGFyZ1wiLFwiXFxcXGNoXCIsXCJcXFxcY29zXCIsXCJcXFxcY29zZWNcIixcIlxcXFxjb3NoXCIsXCJcXFxcY290XCIsXCJcXFxcY290Z1wiLFwiXFxcXGNvdGhcIixcIlxcXFxjc2NcIixcIlxcXFxjdGdcIixcIlxcXFxjdGhcIixcIlxcXFxkZWdcIixcIlxcXFxkaW1cIixcIlxcXFxleHBcIixcIlxcXFxob21cIixcIlxcXFxrZXJcIixcIlxcXFxsZ1wiLFwiXFxcXGxuXCIsXCJcXFxcbG9nXCIsXCJcXFxcc2VjXCIsXCJcXFxcc2luXCIsXCJcXFxcc2luaFwiLFwiXFxcXHNoXCIsXCJcXFxcdGFuXCIsXCJcXFxcdGFuaFwiLFwiXFxcXHRnXCIsXCJcXFxcdGhcIl0se251bUFyZ3M6MH0sZnVuY3Rpb24oZSl7cmV0dXJue3R5cGU6XCJvcFwiLGxpbWl0czpmYWxzZSxzeW1ib2w6ZmFsc2UsYm9keTplLmZ1bmNOYW1lfX0pO3MoW1wiXFxcXGRldFwiLFwiXFxcXGdjZFwiLFwiXFxcXGluZlwiLFwiXFxcXGxpbVwiLFwiXFxcXGxpbWluZlwiLFwiXFxcXGxpbXN1cFwiLFwiXFxcXG1heFwiLFwiXFxcXG1pblwiLFwiXFxcXFByXCIsXCJcXFxcc3VwXCJdLHtudW1BcmdzOjB9LGZ1bmN0aW9uKGUpe3JldHVybnt0eXBlOlwib3BcIixsaW1pdHM6dHJ1ZSxzeW1ib2w6ZmFsc2UsYm9keTplLmZ1bmNOYW1lfX0pO3MoW1wiXFxcXGludFwiLFwiXFxcXGlpbnRcIixcIlxcXFxpaWludFwiLFwiXFxcXG9pbnRcIl0se251bUFyZ3M6MH0sZnVuY3Rpb24oZSl7cmV0dXJue3R5cGU6XCJvcFwiLGxpbWl0czpmYWxzZSxzeW1ib2w6dHJ1ZSxib2R5OmUuZnVuY05hbWV9fSk7cyhbXCJcXFxcY29wcm9kXCIsXCJcXFxcYmlndmVlXCIsXCJcXFxcYmlnd2VkZ2VcIixcIlxcXFxiaWd1cGx1c1wiLFwiXFxcXGJpZ2NhcFwiLFwiXFxcXGJpZ2N1cFwiLFwiXFxcXGludG9wXCIsXCJcXFxccHJvZFwiLFwiXFxcXHN1bVwiLFwiXFxcXGJpZ290aW1lc1wiLFwiXFxcXGJpZ29wbHVzXCIsXCJcXFxcYmlnb2RvdFwiLFwiXFxcXGJpZ3NxY3VwXCIsXCJcXFxcc21hbGxpbnRcIl0se251bUFyZ3M6MH0sZnVuY3Rpb24oZSl7cmV0dXJue3R5cGU6XCJvcFwiLGxpbWl0czp0cnVlLHN5bWJvbDp0cnVlLGJvZHk6ZS5mdW5jTmFtZX19KTtzKFwiXFxcXG1hdGhvcFwiLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyZXR1cm57dHlwZTpcIm9wXCIsbGltaXRzOmZhbHNlLHN5bWJvbDpmYWxzZSx2YWx1ZTpsKHIpfX0pO3MoW1wiXFxcXGRmcmFjXCIsXCJcXFxcZnJhY1wiLFwiXFxcXHRmcmFjXCIsXCJcXFxcZGJpbm9tXCIsXCJcXFxcYmlub21cIixcIlxcXFx0Ymlub21cIixcIlxcXFxcXFxcYXRvcGZyYWNcIl0se251bUFyZ3M6MixncmVlZGluZXNzOjJ9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTt2YXIgYT10WzFdO3ZhciBpPXZvaWQgMDt2YXIgbj1udWxsO3ZhciBvPW51bGw7dmFyIHM9XCJhdXRvXCI7c3dpdGNoKGUuZnVuY05hbWUpe2Nhc2VcIlxcXFxkZnJhY1wiOmNhc2VcIlxcXFxmcmFjXCI6Y2FzZVwiXFxcXHRmcmFjXCI6aT10cnVlO2JyZWFrO2Nhc2VcIlxcXFxcXFxcYXRvcGZyYWNcIjppPWZhbHNlO2JyZWFrO2Nhc2VcIlxcXFxkYmlub21cIjpjYXNlXCJcXFxcYmlub21cIjpjYXNlXCJcXFxcdGJpbm9tXCI6aT1mYWxzZTtuPVwiKFwiO289XCIpXCI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJVbnJlY29nbml6ZWQgZ2VuZnJhYyBjb21tYW5kXCIpfXN3aXRjaChlLmZ1bmNOYW1lKXtjYXNlXCJcXFxcZGZyYWNcIjpjYXNlXCJcXFxcZGJpbm9tXCI6cz1cImRpc3BsYXlcIjticmVhaztjYXNlXCJcXFxcdGZyYWNcIjpjYXNlXCJcXFxcdGJpbm9tXCI6cz1cInRleHRcIjticmVha31yZXR1cm57dHlwZTpcImdlbmZyYWNcIixudW1lcjpyLGRlbm9tOmEsaGFzQmFyTGluZTppLGxlZnREZWxpbTpuLHJpZ2h0RGVsaW06byxzaXplOnN9fSk7cyhbXCJcXFxcbGxhcFwiLFwiXFxcXHJsYXBcIl0se251bUFyZ3M6MSxhbGxvd2VkSW5UZXh0OnRydWV9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyZXR1cm57dHlwZTplLmZ1bmNOYW1lLnNsaWNlKDEpLGJvZHk6cn19KTt2YXIgdj1mdW5jdGlvbiBlKHQscil7aWYoYS5jb250YWlucyhwLHQudmFsdWUpKXtyZXR1cm4gdH1lbHNle3Rocm93IG5ldyBpKFwiSW52YWxpZCBkZWxpbWl0ZXI6ICdcIit0LnZhbHVlK1wiJyBhZnRlciAnXCIrci5mdW5jTmFtZStcIidcIix0KX19O3MoW1wiXFxcXGJpZ2xcIixcIlxcXFxCaWdsXCIsXCJcXFxcYmlnZ2xcIixcIlxcXFxCaWdnbFwiLFwiXFxcXGJpZ3JcIixcIlxcXFxCaWdyXCIsXCJcXFxcYmlnZ3JcIixcIlxcXFxCaWdnclwiLFwiXFxcXGJpZ21cIixcIlxcXFxCaWdtXCIsXCJcXFxcYmlnZ21cIixcIlxcXFxCaWdnbVwiLFwiXFxcXGJpZ1wiLFwiXFxcXEJpZ1wiLFwiXFxcXGJpZ2dcIixcIlxcXFxCaWdnXCJdLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dih0WzBdLGUpO3JldHVybnt0eXBlOlwiZGVsaW1zaXppbmdcIixzaXplOmhbZS5mdW5jTmFtZV0uc2l6ZSxtY2xhc3M6aFtlLmZ1bmNOYW1lXS5tY2xhc3MsdmFsdWU6ci52YWx1ZX19KTtzKFtcIlxcXFxsZWZ0XCIsXCJcXFxccmlnaHRcIl0se251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj12KHRbMF0sZSk7cmV0dXJue3R5cGU6XCJsZWZ0cmlnaHRcIix2YWx1ZTpyLnZhbHVlfX0pO3MoXCJcXFxcbWlkZGxlXCIse251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj12KHRbMF0sZSk7aWYoIWUucGFyc2VyLmxlZnRyaWdodERlcHRoKXt0aHJvdyBuZXcgaShcIlxcXFxtaWRkbGUgd2l0aG91dCBwcmVjZWRpbmcgXFxcXGxlZnRcIixyKX1yZXR1cm57dHlwZTpcIm1pZGRsZVwiLHZhbHVlOnIudmFsdWV9fSk7cyhbXCJcXFxcdGlueVwiLFwiXFxcXHNjcmlwdHNpemVcIixcIlxcXFxmb290bm90ZXNpemVcIixcIlxcXFxzbWFsbFwiLFwiXFxcXG5vcm1hbHNpemVcIixcIlxcXFxsYXJnZVwiLFwiXFxcXExhcmdlXCIsXCJcXFxcTEFSR0VcIixcIlxcXFxodWdlXCIsXCJcXFxcSHVnZVwiXSwwLG51bGwpO3MoW1wiXFxcXGRpc3BsYXlzdHlsZVwiLFwiXFxcXHRleHRzdHlsZVwiLFwiXFxcXHNjcmlwdHN0eWxlXCIsXCJcXFxcc2NyaXB0c2NyaXB0c3R5bGVcIl0sMCxudWxsKTtzKFtcIlxcXFxybVwiLFwiXFxcXHNmXCIsXCJcXFxcdHRcIixcIlxcXFxiZlwiLFwiXFxcXGl0XCJdLDAsbnVsbCk7cyhbXCJcXFxcbWF0aHJtXCIsXCJcXFxcbWF0aGl0XCIsXCJcXFxcbWF0aGJmXCIsXCJcXFxcbWF0aGJiXCIsXCJcXFxcbWF0aGNhbFwiLFwiXFxcXG1hdGhmcmFrXCIsXCJcXFxcbWF0aHNjclwiLFwiXFxcXG1hdGhzZlwiLFwiXFxcXG1hdGh0dFwiLFwiXFxcXEJiYlwiLFwiXFxcXGJvbGRcIixcIlxcXFxmcmFrXCJdLHtudW1BcmdzOjEsZ3JlZWRpbmVzczoyfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07dmFyIGE9ZS5mdW5jTmFtZTtpZihhIGluIGMpe2E9Y1thXX1yZXR1cm57dHlwZTpcImZvbnRcIixmb250OmEuc2xpY2UoMSksYm9keTpyfX0pO3MoW1wiXFxcXGFjdXRlXCIsXCJcXFxcZ3JhdmVcIixcIlxcXFxkZG90XCIsXCJcXFxcdGlsZGVcIixcIlxcXFxiYXJcIixcIlxcXFxicmV2ZVwiLFwiXFxcXGNoZWNrXCIsXCJcXFxcaGF0XCIsXCJcXFxcdmVjXCIsXCJcXFxcZG90XCIsXCJcXFxcd2lkZWhhdFwiLFwiXFxcXHdpZGV0aWxkZVwiLFwiXFxcXG92ZXJyaWdodGFycm93XCIsXCJcXFxcb3ZlcmxlZnRhcnJvd1wiLFwiXFxcXE92ZXJyaWdodGFycm93XCIsXCJcXFxcb3ZlcmxlZnRyaWdodGFycm93XCIsXCJcXFxcb3Zlcmdyb3VwXCIsXCJcXFxcb3ZlcmxpbmVzZWdtZW50XCIsXCJcXFxcb3ZlcmxlZnRoYXJwb29uXCIsXCJcXFxcb3ZlcnJpZ2h0aGFycG9vblwiXSx7bnVtQXJnczoxfSxmdW5jdGlvbihlLHQpe3ZhciByPXRbMF07dmFyIGk9IWEuY29udGFpbnMoW1wiXFxcXGFjdXRlXCIsXCJcXFxcZ3JhdmVcIixcIlxcXFxkZG90XCIsXCJcXFxcdGlsZGVcIixcIlxcXFxiYXJcIixcIlxcXFxicmV2ZVwiLFwiXFxcXGNoZWNrXCIsXCJcXFxcaGF0XCIsXCJcXFxcdmVjXCIsXCJcXFxcZG90XCJdLGUuZnVuY05hbWUpO3ZhciBuPSFpfHxhLmNvbnRhaW5zKFtcIlxcXFx3aWRlaGF0XCIsXCJcXFxcd2lkZXRpbGRlXCJdLGUuZnVuY05hbWUpO3JldHVybnt0eXBlOlwiYWNjZW50XCIsbGFiZWw6ZS5mdW5jTmFtZSxpc1N0cmV0Y2h5OmksaXNTaGlmdHk6bix2YWx1ZTpsKHIpLGJhc2U6cn19KTtzKFtcIlxcXFxvdmVyYnJhY2VcIixcIlxcXFx1bmRlcmJyYWNlXCJdLHtudW1BcmdzOjF9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyZXR1cm57dHlwZTpcImhvcml6QnJhY2VcIixsYWJlbDplLmZ1bmNOYW1lLGlzT3ZlcjovXlxcXFxvdmVyLy50ZXN0KGUuZnVuY05hbWUpLGJhc2U6cn19KTtzKFtcIlxcXFx1bmRlcmxlZnRhcnJvd1wiLFwiXFxcXHVuZGVycmlnaHRhcnJvd1wiLFwiXFxcXHVuZGVybGVmdHJpZ2h0YXJyb3dcIixcIlxcXFx1bmRlcmdyb3VwXCIsXCJcXFxcdW5kZXJsaW5lc2VnbWVudFwiLFwiXFxcXHVuZGVydGlsZGVcIl0se251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwiYWNjZW50VW5kZXJcIixsYWJlbDplLmZ1bmNOYW1lLHZhbHVlOmwociksYm9keTpyfX0pO3MoW1wiXFxcXHhsZWZ0YXJyb3dcIixcIlxcXFx4cmlnaHRhcnJvd1wiLFwiXFxcXHhMZWZ0YXJyb3dcIixcIlxcXFx4UmlnaHRhcnJvd1wiLFwiXFxcXHhsZWZ0cmlnaHRhcnJvd1wiLFwiXFxcXHhMZWZ0cmlnaHRhcnJvd1wiLFwiXFxcXHhob29rbGVmdGFycm93XCIsXCJcXFxceGhvb2tyaWdodGFycm93XCIsXCJcXFxceG1hcHN0b1wiLFwiXFxcXHhyaWdodGhhcnBvb25kb3duXCIsXCJcXFxceHJpZ2h0aGFycG9vbnVwXCIsXCJcXFxceGxlZnRoYXJwb29uZG93blwiLFwiXFxcXHhsZWZ0aGFycG9vbnVwXCIsXCJcXFxceHJpZ2h0bGVmdGhhcnBvb25zXCIsXCJcXFxceGxlZnRyaWdodGhhcnBvb25zXCIsXCJcXFxceExvbmdlcXVhbFwiLFwiXFxcXHh0d29oZWFkcmlnaHRhcnJvd1wiLFwiXFxcXHh0d29oZWFkbGVmdGFycm93XCIsXCJcXFxceExvbmdlcXVhbFwiLFwiXFxcXHh0b2Zyb21cIl0se251bUFyZ3M6MSxudW1PcHRpb25hbEFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3ZhciBhPXRbMV07cmV0dXJue3R5cGU6XCJ4QXJyb3dcIixsYWJlbDplLmZ1bmNOYW1lLGJvZHk6YSxiZWxvdzpyfX0pO3MoW1wiXFxcXGNhbmNlbFwiLFwiXFxcXGJjYW5jZWxcIixcIlxcXFx4Y2FuY2VsXCIsXCJcXFxcc291dFwiLFwiXFxcXGZib3hcIl0se251bUFyZ3M6MX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO3JldHVybnt0eXBlOlwiZW5jbG9zZVwiLGxhYmVsOmUuZnVuY05hbWUsYm9keTpyfX0pO3MoW1wiXFxcXG92ZXJcIixcIlxcXFxjaG9vc2VcIixcIlxcXFxhdG9wXCJdLHtudW1BcmdzOjAsaW5maXg6dHJ1ZX0sZnVuY3Rpb24oZSl7dmFyIHQ9dm9pZCAwO3N3aXRjaChlLmZ1bmNOYW1lKXtjYXNlXCJcXFxcb3ZlclwiOnQ9XCJcXFxcZnJhY1wiO2JyZWFrO2Nhc2VcIlxcXFxjaG9vc2VcIjp0PVwiXFxcXGJpbm9tXCI7YnJlYWs7Y2FzZVwiXFxcXGF0b3BcIjp0PVwiXFxcXFxcXFxhdG9wZnJhY1wiO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiVW5yZWNvZ25pemVkIGluZml4IGdlbmZyYWMgY29tbWFuZFwiKX1yZXR1cm57dHlwZTpcImluZml4XCIscmVwbGFjZVdpdGg6dCx0b2tlbjplLnRva2VufX0pO3MoW1wiXFxcXFxcXFxcIixcIlxcXFxjclwiXSx7bnVtQXJnczowLG51bU9wdGlvbmFsQXJnczoxLGFyZ1R5cGVzOltcInNpemVcIl19LGZ1bmN0aW9uKGUsdCl7dmFyIHI9dFswXTtyZXR1cm57dHlwZTpcImNyXCIsc2l6ZTpyfX0pO3MoW1wiXFxcXGJlZ2luXCIsXCJcXFxcZW5kXCJdLHtudW1BcmdzOjEsYXJnVHlwZXM6W1widGV4dFwiXX0sZnVuY3Rpb24oZSx0KXt2YXIgcj10WzBdO2lmKHIudHlwZSE9PVwib3JkZ3JvdXBcIil7dGhyb3cgbmV3IGkoXCJJbnZhbGlkIGVudmlyb25tZW50IG5hbWVcIixyKX12YXIgYT1cIlwiO2Zvcih2YXIgbj0wO248ci52YWx1ZS5sZW5ndGg7KytuKXthKz1yLnZhbHVlW25dLnZhbHVlfXJldHVybnt0eXBlOlwiZW52aXJvbm1lbnRcIixuYW1lOmEsbmFtZUdyb3VwOnJ9fSl9LHtcIi4vUGFyc2VFcnJvclwiOjEwLFwiLi9wYXJzZURhdGFcIjoyNixcIi4vdXRpbHNcIjozMX1dLDI0OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYShlLHIpe3QuZXhwb3J0c1tlXT1yfWEoXCJcXFxcYmdyb3VwXCIsXCJ7XCIpO2EoXCJcXFxcZWdyb3VwXCIsXCJ9XCIpO2EoXCJcXFxcYmVnaW5ncm91cFwiLFwie1wiKTthKFwiXFxcXGVuZGdyb3VwXCIsXCJ9XCIpO2EoXCJcXFxcb3ZlcnNldFwiLFwiXFxcXG1hdGhvcHsjMn1cXFxcbGltaXRzXnsjMX1cIik7YShcIlxcXFx1bmRlcnNldFwiLFwiXFxcXG1hdGhvcHsjMn1cXFxcbGltaXRzX3sjMX1cIik7YShcIlxcXFxib3hlZFwiLFwiXFxcXGZib3h7XFxcXGRpc3BsYXlzdHlsZXsjMX19XCIpO2EoXCJcXFxcaWZmXCIsXCJcXFxcO1xcXFxMb25nbGVmdHJpZ2h0YXJyb3dcXFxcO1wiKTthKFwiXFxcXGltcGxpZXNcIixcIlxcXFw7XFxcXExvbmdyaWdodGFycm93XFxcXDtcIik7YShcIlxcXFxpbXBsaWVkYnlcIixcIlxcXFw7XFxcXExvbmdsZWZ0YXJyb3dcXFxcO1wiKTthKFwiXFxcXG9yZGluYXJ5Y29sb25cIixcIjpcIik7YShcIlxcXFx2Y2VudGNvbG9uXCIsXCJcXFxcbWF0aHJlbHtcXFxcbWF0aG9wXFxcXG9yZGluYXJ5Y29sb259XCIpO2EoXCJcXFxcZGJsY29sb25cIixcIlxcXFx2Y2VudGNvbG9uXFxcXG1hdGhyZWx7XFxcXG1rZXJuLS45bXV9XFxcXHZjZW50Y29sb25cIik7YShcIlxcXFxjb2xvbmVxcVwiLFwiXFxcXHZjZW50Y29sb25cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9PVwiKTthKFwiXFxcXENvbG9uZXFxXCIsXCJcXFxcZGJsY29sb25cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9PVwiKTthKFwiXFxcXGNvbG9uZXFcIixcIlxcXFx2Y2VudGNvbG9uXFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fVxcXFxtYXRocmVsey19XCIpO2EoXCJcXFxcQ29sb25lcVwiLFwiXFxcXGRibGNvbG9uXFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fVxcXFxtYXRocmVsey19XCIpO2EoXCJcXFxcZXFxY29sb25cIixcIj1cXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXHZjZW50Y29sb25cIik7YShcIlxcXFxFcXFjb2xvblwiLFwiPVxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcZGJsY29sb25cIik7YShcIlxcXFxlcWNvbG9uXCIsXCJcXFxcbWF0aHJlbHstfVxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcdmNlbnRjb2xvblwiKTthKFwiXFxcXEVxY29sb25cIixcIlxcXFxtYXRocmVsey19XFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fVxcXFxkYmxjb2xvblwiKTthKFwiXFxcXGNvbG9uYXBwcm94XCIsXCJcXFxcdmNlbnRjb2xvblxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcYXBwcm94XCIpO2EoXCJcXFxcQ29sb25hcHByb3hcIixcIlxcXFxkYmxjb2xvblxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcYXBwcm94XCIpO2EoXCJcXFxcY29sb25zaW1cIixcIlxcXFx2Y2VudGNvbG9uXFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fVxcXFxzaW1cIik7YShcIlxcXFxDb2xvbnNpbVwiLFwiXFxcXGRibGNvbG9uXFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fVxcXFxzaW1cIik7YShcIlxcXFxyYXRpb1wiLFwiXFxcXHZjZW50Y29sb25cIik7YShcIlxcXFxjb2xvbmNvbG9uXCIsXCJcXFxcZGJsY29sb25cIik7YShcIlxcXFxjb2xvbmVxdWFsc1wiLFwiXFxcXGNvbG9uZXFxXCIpO2EoXCJcXFxcY29sb25jb2xvbmVxdWFsc1wiLFwiXFxcXENvbG9uZXFxXCIpO2EoXCJcXFxcZXF1YWxzY29sb25cIixcIlxcXFxlcXFjb2xvblwiKTthKFwiXFxcXGVxdWFsc2NvbG9uY29sb25cIixcIlxcXFxFcXFjb2xvblwiKTthKFwiXFxcXGNvbG9ubWludXNcIixcIlxcXFxjb2xvbmVxXCIpO2EoXCJcXFxcY29sb25jb2xvbm1pbnVzXCIsXCJcXFxcQ29sb25lcVwiKTthKFwiXFxcXG1pbnVzY29sb25cIixcIlxcXFxlcWNvbG9uXCIpO2EoXCJcXFxcbWludXNjb2xvbmNvbG9uXCIsXCJcXFxcRXFjb2xvblwiKTthKFwiXFxcXGNvbG9uY29sb25hcHByb3hcIixcIlxcXFxDb2xvbmFwcHJveFwiKTthKFwiXFxcXGNvbG9uY29sb25zaW1cIixcIlxcXFxDb2xvbnNpbVwiKTthKFwiXFxcXHNpbWNvbG9uXCIsXCJcXFxcc2ltXFxcXG1hdGhyZWx7XFxcXG1rZXJuLTEuMm11fVxcXFx2Y2VudGNvbG9uXCIpO2EoXCJcXFxcc2ltY29sb25jb2xvblwiLFwiXFxcXHNpbVxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcZGJsY29sb25cIik7YShcIlxcXFxhcHByb3hjb2xvblwiLFwiXFxcXGFwcHJveFxcXFxtYXRocmVse1xcXFxta2Vybi0xLjJtdX1cXFxcdmNlbnRjb2xvblwiKTthKFwiXFxcXGFwcHJveGNvbG9uY29sb25cIixcIlxcXFxhcHByb3hcXFxcbWF0aHJlbHtcXFxcbWtlcm4tMS4ybXV9XFxcXGRibGNvbG9uXCIpfSx7fV0sMjU6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi91dGlsc1wiKTtmdW5jdGlvbiBpKGUsdCl7dGhpcy50eXBlPWU7dGhpcy5hdHRyaWJ1dGVzPXt9O3RoaXMuY2hpbGRyZW49dHx8W119aS5wcm90b3R5cGUuc2V0QXR0cmlidXRlPWZ1bmN0aW9uKGUsdCl7dGhpcy5hdHRyaWJ1dGVzW2VdPXR9O2kucHJvdG90eXBlLnRvTm9kZT1mdW5jdGlvbigpe3ZhciBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIix0aGlzLnR5cGUpO2Zvcih2YXIgdCBpbiB0aGlzLmF0dHJpYnV0ZXMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLmF0dHJpYnV0ZXMsdCkpe2Uuc2V0QXR0cmlidXRlKHQsdGhpcy5hdHRyaWJ1dGVzW3RdKX19Zm9yKHZhciByPTA7cjx0aGlzLmNoaWxkcmVuLmxlbmd0aDtyKyspe2UuYXBwZW5kQ2hpbGQodGhpcy5jaGlsZHJlbltyXS50b05vZGUoKSl9cmV0dXJuIGV9O2kucHJvdG90eXBlLnRvTWFya3VwPWZ1bmN0aW9uKCl7dmFyIGU9XCI8XCIrdGhpcy50eXBlO2Zvcih2YXIgdCBpbiB0aGlzLmF0dHJpYnV0ZXMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLmF0dHJpYnV0ZXMsdCkpe2UrPVwiIFwiK3QrJz1cIic7ZSs9YS5lc2NhcGUodGhpcy5hdHRyaWJ1dGVzW3RdKTtlKz0nXCInfX1lKz1cIj5cIjtmb3IodmFyIHI9MDtyPHRoaXMuY2hpbGRyZW4ubGVuZ3RoO3IrKyl7ZSs9dGhpcy5jaGlsZHJlbltyXS50b01hcmt1cCgpfWUrPVwiPC9cIit0aGlzLnR5cGUrXCI+XCI7cmV0dXJuIGV9O2Z1bmN0aW9uIG4oZSl7dGhpcy50ZXh0PWV9bi5wcm90b3R5cGUudG9Ob2RlPWZ1bmN0aW9uKCl7cmV0dXJuIGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHRoaXMudGV4dCl9O24ucHJvdG90eXBlLnRvTWFya3VwPWZ1bmN0aW9uKCl7cmV0dXJuIGEuZXNjYXBlKHRoaXMudGV4dCl9O3QuZXhwb3J0cz17TWF0aE5vZGU6aSxUZXh0Tm9kZTpufX0se1wiLi91dGlsc1wiOjMxfV0sMjY6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhKGUsdCxyLGEsaSl7dGhpcy50eXBlPWU7dGhpcy52YWx1ZT10O3RoaXMubW9kZT1yO2lmKGEmJighaXx8aS5sZXhlcj09PWEubGV4ZXIpKXt0aGlzLmxleGVyPWEubGV4ZXI7dGhpcy5zdGFydD1hLnN0YXJ0O3RoaXMuZW5kPShpfHxhKS5lbmR9fXQuZXhwb3J0cz17UGFyc2VOb2RlOmF9fSx7fV0sMjc6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgYT1lKFwiLi9QYXJzZXJcIik7dmFyIGk9ZnVuY3Rpb24gZSh0LHIpe2lmKCEodHlwZW9mIHQ9PT1cInN0cmluZ1wifHx0IGluc3RhbmNlb2YgU3RyaW5nKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkthVGVYIGNhbiBvbmx5IHBhcnNlIHN0cmluZyB0eXBlZCBleHByZXNzaW9uXCIpfXZhciBpPW5ldyBhKHQscik7cmV0dXJuIGkucGFyc2UoKX07dC5leHBvcnRzPWl9LHtcIi4vUGFyc2VyXCI6MTF9XSwyODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPWUoXCIuL2J1aWxkQ29tbW9uXCIpO3ZhciBpPWUoXCIuL21hdGhNTFRyZWVcIik7dmFyIG49ZShcIi4vdXRpbHNcIik7dmFyIG89e3dpZGVoYXQ6XCJeXCIsd2lkZXRpbGRlOlwiflwiLHVuZGVydGlsZGU6XCJ+XCIsb3ZlcmxlZnRhcnJvdzpcIlxcdTIxOTBcIix1bmRlcmxlZnRhcnJvdzpcIlxcdTIxOTBcIix4bGVmdGFycm93OlwiXFx1MjE5MFwiLG92ZXJyaWdodGFycm93OlwiXFx1MjE5MlwiLHVuZGVycmlnaHRhcnJvdzpcIlxcdTIxOTJcIix4cmlnaHRhcnJvdzpcIlxcdTIxOTJcIix1bmRlcmJyYWNlOlwiXFx1MjNiNVwiLG92ZXJicmFjZTpcIlxcdTIzZGVcIixvdmVybGVmdHJpZ2h0YXJyb3c6XCJcXHUyMTk0XCIsdW5kZXJsZWZ0cmlnaHRhcnJvdzpcIlxcdTIxOTRcIix4bGVmdHJpZ2h0YXJyb3c6XCJcXHUyMTk0XCIsT3ZlcnJpZ2h0YXJyb3c6XCJcXHUyMWQyXCIseFJpZ2h0YXJyb3c6XCJcXHUyMWQyXCIsb3ZlcmxlZnRoYXJwb29uOlwiXFx1MjFiY1wiLHhsZWZ0aGFycG9vbnVwOlwiXFx1MjFiY1wiLG92ZXJyaWdodGhhcnBvb246XCJcXHUyMWMwXCIseHJpZ2h0aGFycG9vbnVwOlwiXFx1MjFjMFwiLHhMZWZ0YXJyb3c6XCJcXHUyMWQwXCIseExlZnRyaWdodGFycm93OlwiXFx1MjFkNFwiLHhob29rbGVmdGFycm93OlwiXFx1MjFhOVwiLHhob29rcmlnaHRhcnJvdzpcIlxcdTIxYWFcIix4bWFwc3RvOlwiXFx1MjFhNlwiLHhyaWdodGhhcnBvb25kb3duOlwiXFx1MjFjMVwiLHhsZWZ0aGFycG9vbmRvd246XCJcXHUyMWJkXCIseHJpZ2h0bGVmdGhhcnBvb25zOlwiXFx1MjFjY1wiLHhsZWZ0cmlnaHRoYXJwb29uczpcIlxcdTIxY2JcIix4dHdvaGVhZGxlZnRhcnJvdzpcIlxcdTIxOWVcIix4dHdvaGVhZHJpZ2h0YXJyb3c6XCJcXHUyMWEwXCIseExvbmdlcXVhbDpcIj1cIix4dG9mcm9tOlwiXFx1MjFjNFwifTt2YXIgcz1mdW5jdGlvbiBlKHQpe3ZhciByPW5ldyBpLk1hdGhOb2RlKFwibW9cIixbbmV3IGkuVGV4dE5vZGUob1t0LnN1YnN0cigxKV0pXSk7ci5zZXRBdHRyaWJ1dGUoXCJzdHJldGNoeVwiLFwidHJ1ZVwiKTtyZXR1cm4gcn07dmFyIGw9e292ZXJsZWZ0YXJyb3c6Wy41MjIsMCxcImxlZnRhcnJvd1wiXSx1bmRlcmxlZnRhcnJvdzpbLjUyMiwwLFwibGVmdGFycm93XCJdLHhsZWZ0YXJyb3c6Wy4yNjEsLjI2MSxcImxlZnRhcnJvd1wiXSxvdmVycmlnaHRhcnJvdzpbLjUyMiwwLFwicmlnaHRhcnJvd1wiXSx1bmRlcnJpZ2h0YXJyb3c6Wy41MjIsMCxcInJpZ2h0YXJyb3dcIl0seHJpZ2h0YXJyb3c6Wy4yNjEsLjI2MSxcInJpZ2h0YXJyb3dcIl0sb3ZlcmJyYWNlOlsuNTQ4LDAsXCJvdmVyYnJhY2VcIl0sdW5kZXJicmFjZTpbLjU0OCwwLFwidW5kZXJicmFjZVwiXSxvdmVybGVmdHJpZ2h0YXJyb3c6Wy41MjIsMCxcImxlZnRyaWdodGFycm93XCJdLHVuZGVybGVmdHJpZ2h0YXJyb3c6Wy41MjIsMCxcImxlZnRyaWdodGFycm93XCJdLHhsZWZ0cmlnaHRhcnJvdzpbLjI2MSwuMjYxLFwibGVmdHJpZ2h0YXJyb3dcIl0sT3ZlcnJpZ2h0YXJyb3c6Wy41NiwwLFwiZG91YmxlcmlnaHRhcnJvd1wiXSx4TGVmdGFycm93OlsuMjgsLjI4LFwiZG91YmxlbGVmdGFycm93XCJdLHhSaWdodGFycm93OlsuMjgsLjI4LFwiZG91YmxlcmlnaHRhcnJvd1wiXSx4TGVmdHJpZ2h0YXJyb3c6Wy4yOCwuMjgsXCJkb3VibGVsZWZ0cmlnaHRhcnJvd1wiXSxvdmVybGVmdGhhcnBvb246Wy41MjIsMCxcImxlZnRoYXJwb29uXCJdLG92ZXJyaWdodGhhcnBvb246Wy41MjIsMCxcInJpZ2h0aGFycG9vblwiXSx4bGVmdGhhcnBvb251cDpbLjI2MSwuMjYxLFwibGVmdGhhcnBvb25cIl0seHJpZ2h0aGFycG9vbnVwOlsuMjYxLC4yNjEsXCJyaWdodGhhcnBvb25cIl0seGhvb2tsZWZ0YXJyb3c6Wy4yNjEsLjI2MSxcImhvb2tsZWZ0YXJyb3dcIl0seGhvb2tyaWdodGFycm93OlsuMjYxLC4yNjEsXCJob29rcmlnaHRhcnJvd1wiXSxvdmVybGluZXNlZ21lbnQ6Wy40MTQsMCxcImxpbmVzZWdtZW50XCJdLHVuZGVybGluZXNlZ21lbnQ6Wy40MTQsMCxcImxpbmVzZWdtZW50XCJdLHhtYXBzdG86Wy4yNjEsLjI2MSxcIm1hcHN0b1wiXSx4cmlnaHRoYXJwb29uZG93bjpbLjI2MSwuMjYxLFwicmlnaHRoYXJwb29uZG93blwiXSx4bGVmdGhhcnBvb25kb3duOlsuMjYxLC4yNjEsXCJsZWZ0aGFycG9vbmRvd25cIl0seHJpZ2h0bGVmdGhhcnBvb25zOlsuMzU4LC4zNTgsXCJyaWdodGxlZnRoYXJwb29uc1wiXSx4bGVmdHJpZ2h0aGFycG9vbnM6Wy4zNTgsLjM1OCxcImxlZnRyaWdodGhhcnBvb25zXCJdLG92ZXJncm91cDpbLjM0MiwwLFwib3Zlcmdyb3VwXCJdLHVuZGVyZ3JvdXA6Wy4zNDIsMCxcInVuZGVyZ3JvdXBcIl0seHR3b2hlYWRsZWZ0YXJyb3c6Wy4xNjcsLjE2NyxcInR3b2hlYWRsZWZ0YXJyb3dcIl0seHR3b2hlYWRyaWdodGFycm93OlsuMTY3LC4xNjcsXCJ0d29oZWFkcmlnaHRhcnJvd1wiXSx4TG9uZ2VxdWFsOlsuMTY3LC4xNjcsXCJsb25nZXF1YWxcIl0seHRvZnJvbTpbLjI2NCwuMjY0LFwidG9mcm9tXCJdfTt2YXIgdT1mdW5jdGlvbiBlKHQscil7dmFyIGk9dC52YWx1ZS5sYWJlbC5zdWJzdHIoMSk7dmFyIG89MDt2YXIgcz0wO3ZhciB1PVtcInN0cmV0Y2h5XCJdO3ZhciBoPVwiXCI7aWYobi5jb250YWlucyhbXCJ3aWRlaGF0XCIsXCJ3aWRldGlsZGVcIixcInVuZGVydGlsZGVcIl0saSkpe3ZhciBwPXQudmFsdWUudmFsdWUubGVuZ3RoO2lmKHA+NSl7bz0uMzEyO2g9KGk9PT1cIndpZGVoYXRcIj9cIndpZGVoYXRcIjpcInRpbGRlXCIpK1wiNFwifWVsc2V7dmFyIGM9WzEsMSwyLDIsMywzXVtwXTtpZihpPT09XCJ3aWRlaGF0XCIpe289WzAsLjI0LC4zLC4zLC4zNiwuMzZdW3BdO2g9XCJ3aWRlaGF0XCIrY31lbHNle289WzAsLjI2LC4zLC4zLC4zNCwuMzRdW3BdO2g9XCJ0aWxkZVwiK2N9fX1lbHNle3ZhciB2PWxbaV07bz12WzBdO3M9dlsxXTtoPXZbMl07aWYoaS5zdWJzdHIoMCwxKT09PVwieFwiKXt1LnB1c2goXCJ4LWFycm93XCIpfX12YXIgZj12b2lkIDA7aWYoci5jb2xvcil7dS5wdXNoKGgpO3UucHVzaChcIm1hc2tcIik7dS5wdXNoKGgrXCItbWFza1wiKTtmPWEubWFrZVNwYW4odSxbXSxyKTtmLnN0eWxlLmJhY2tncm91bmRDb2xvcj1yLmNvbG9yfWVsc2V7dS5wdXNoKGgpO2Y9YS5tYWtlU3Bhbih1LFtdLHIpfWYuaGVpZ2h0PW87Zi5kZXB0aD1zO2YubWF4Rm9udFNpemU9MTtyZXR1cm4gZn07dmFyIGg9ZnVuY3Rpb24gZSh0LHIsaSxuLG8pe3ZhciBzPWEubWFrZVNwYW4oW1wic3RyZXRjaHlcIixpXSxbXSxvKTtpZihvLmNvbG9yKXtpZihpPT09XCJmYm94XCIpe3Muc3R5bGUuYm9yZGVyQ29sb3I9by5jb2xvcn1lbHNle3MuY2xhc3Nlc1syXT1pK1wiLW1hc2tcIjtzLnN0eWxlLmJhY2tncm91bmRDb2xvcj1vLmNvbG9yfX1zLmhlaWdodD10LmhlaWdodCt0LmRlcHRoKzIqbjtzLnN0eWxlLmhlaWdodD1zLmhlaWdodCtcImVtXCI7aWYoL2NhbmNlbC8udGVzdChpKSYmcil7cy5tYXhGb250U2l6ZT0xLjJ9ZWxzZXtzLm1heEZvbnRTaXplPTF9cmV0dXJuIHN9O3QuZXhwb3J0cz17ZW5jbG9zZVNwYW46aCxtYXRoTUxub2RlOnMsc3ZnU3Bhbjp1fX0se1wiLi9idWlsZENvbW1vblwiOjE0LFwiLi9tYXRoTUxUcmVlXCI6MjUsXCIuL3V0aWxzXCI6MzF9XSwyOTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3QuZXhwb3J0cz17bWF0aDp7fSx0ZXh0Ont9fTtmdW5jdGlvbiBhKGUscixhLGksbil7dC5leHBvcnRzW2VdW25dPXtmb250OnIsZ3JvdXA6YSxyZXBsYWNlOml9fXZhciBpPVwibWF0aFwiO3ZhciBuPVwidGV4dFwiO3ZhciBvPVwibWFpblwiO3ZhciBzPVwiYW1zXCI7dmFyIGw9XCJhY2NlbnRcIjt2YXIgdT1cImJpblwiO3ZhciBoPVwiY2xvc2VcIjt2YXIgcD1cImlubmVyXCI7dmFyIGM9XCJtYXRob3JkXCI7dmFyIHY9XCJvcFwiO3ZhciBmPVwib3BlblwiO3ZhciBtPVwicHVuY3RcIjt2YXIgZD1cInJlbFwiO3ZhciBnPVwic3BhY2luZ1wiO3ZhciB5PVwidGV4dG9yZFwiO2EoaSxvLGQsXCJcXHUyMjYxXCIsXCJcXFxcZXF1aXZcIik7YShpLG8sZCxcIlxcdTIyN2FcIixcIlxcXFxwcmVjXCIpO2EoaSxvLGQsXCJcXHUyMjdiXCIsXCJcXFxcc3VjY1wiKTthKGksbyxkLFwiXFx1MjIzY1wiLFwiXFxcXHNpbVwiKTthKGksbyxkLFwiXFx1MjJhNVwiLFwiXFxcXHBlcnBcIik7YShpLG8sZCxcIlxcdTJhYWZcIixcIlxcXFxwcmVjZXFcIik7YShpLG8sZCxcIlxcdTJhYjBcIixcIlxcXFxzdWNjZXFcIik7YShpLG8sZCxcIlxcdTIyNDNcIixcIlxcXFxzaW1lcVwiKTthKGksbyxkLFwiXFx1MjIyM1wiLFwiXFxcXG1pZFwiKTthKGksbyxkLFwiXFx1MjI2YVwiLFwiXFxcXGxsXCIpO2EoaSxvLGQsXCJcXHUyMjZiXCIsXCJcXFxcZ2dcIik7YShpLG8sZCxcIlxcdTIyNGRcIixcIlxcXFxhc3ltcFwiKTthKGksbyxkLFwiXFx1MjIyNVwiLFwiXFxcXHBhcmFsbGVsXCIpO2EoaSxvLGQsXCJcXHUyMmM4XCIsXCJcXFxcYm93dGllXCIpO2EoaSxvLGQsXCJcXHUyMzIzXCIsXCJcXFxcc21pbGVcIik7YShpLG8sZCxcIlxcdTIyOTFcIixcIlxcXFxzcXN1YnNldGVxXCIpO2EoaSxvLGQsXCJcXHUyMjkyXCIsXCJcXFxcc3FzdXBzZXRlcVwiKTthKGksbyxkLFwiXFx1MjI1MFwiLFwiXFxcXGRvdGVxXCIpO2EoaSxvLGQsXCJcXHUyMzIyXCIsXCJcXFxcZnJvd25cIik7YShpLG8sZCxcIlxcdTIyMGJcIixcIlxcXFxuaVwiKTthKGksbyxkLFwiXFx1MjIxZFwiLFwiXFxcXHByb3B0b1wiKTthKGksbyxkLFwiXFx1MjJhMlwiLFwiXFxcXHZkYXNoXCIpO2EoaSxvLGQsXCJcXHUyMmEzXCIsXCJcXFxcZGFzaHZcIik7YShpLG8sZCxcIlxcdTIyMGJcIixcIlxcXFxvd25zXCIpO1xuYShpLG8sbSxcIi5cIixcIlxcXFxsZG90cFwiKTthKGksbyxtLFwiXFx1MjJjNVwiLFwiXFxcXGNkb3RwXCIpO2EoaSxvLHksXCIjXCIsXCJcXFxcI1wiKTthKG4sbyx5LFwiI1wiLFwiXFxcXCNcIik7YShpLG8seSxcIiZcIixcIlxcXFwmXCIpO2EobixvLHksXCImXCIsXCJcXFxcJlwiKTthKGksbyx5LFwiXFx1MjEzNVwiLFwiXFxcXGFsZXBoXCIpO2EoaSxvLHksXCJcXHUyMjAwXCIsXCJcXFxcZm9yYWxsXCIpO2EoaSxvLHksXCJcXHUyMTBmXCIsXCJcXFxcaGJhclwiKTthKGksbyx5LFwiXFx1MjIwM1wiLFwiXFxcXGV4aXN0c1wiKTthKGksbyx5LFwiXFx1MjIwN1wiLFwiXFxcXG5hYmxhXCIpO2EoaSxvLHksXCJcXHUyNjZkXCIsXCJcXFxcZmxhdFwiKTthKGksbyx5LFwiXFx1MjExM1wiLFwiXFxcXGVsbFwiKTthKGksbyx5LFwiXFx1MjY2ZVwiLFwiXFxcXG5hdHVyYWxcIik7YShpLG8seSxcIlxcdTI2NjNcIixcIlxcXFxjbHVic3VpdFwiKTthKGksbyx5LFwiXFx1MjExOFwiLFwiXFxcXHdwXCIpO2EoaSxvLHksXCJcXHUyNjZmXCIsXCJcXFxcc2hhcnBcIik7YShpLG8seSxcIlxcdTI2NjJcIixcIlxcXFxkaWFtb25kc3VpdFwiKTthKGksbyx5LFwiXFx1MjExY1wiLFwiXFxcXFJlXCIpO2EoaSxvLHksXCJcXHUyNjYxXCIsXCJcXFxcaGVhcnRzdWl0XCIpO2EoaSxvLHksXCJcXHUyMTExXCIsXCJcXFxcSW1cIik7YShpLG8seSxcIlxcdTI2NjBcIixcIlxcXFxzcGFkZXN1aXRcIik7YShpLG8seSxcIlxcdTIwMjBcIixcIlxcXFxkYWdcIik7YShuLG8seSxcIlxcdTIwMjBcIixcIlxcXFxkYWdcIik7YShuLG8seSxcIlxcdTIwMjBcIixcIlxcXFx0ZXh0ZGFnZ2VyXCIpO2EoaSxvLHksXCJcXHUyMDIxXCIsXCJcXFxcZGRhZ1wiKTthKG4sbyx5LFwiXFx1MjAyMVwiLFwiXFxcXGRkYWdcIik7YShuLG8seSxcIlxcdTIwMjBcIixcIlxcXFx0ZXh0ZGFnZ2VyZGJsXCIpO2EoaSxvLGgsXCJcXHUyM2IxXCIsXCJcXFxccm1vdXN0YWNoZVwiKTthKGksbyxmLFwiXFx1MjNiMFwiLFwiXFxcXGxtb3VzdGFjaGVcIik7YShpLG8saCxcIlxcdTI3ZWZcIixcIlxcXFxyZ3JvdXBcIik7YShpLG8sZixcIlxcdTI3ZWVcIixcIlxcXFxsZ3JvdXBcIik7YShpLG8sdSxcIlxcdTIyMTNcIixcIlxcXFxtcFwiKTthKGksbyx1LFwiXFx1MjI5NlwiLFwiXFxcXG9taW51c1wiKTthKGksbyx1LFwiXFx1MjI4ZVwiLFwiXFxcXHVwbHVzXCIpO2EoaSxvLHUsXCJcXHUyMjkzXCIsXCJcXFxcc3FjYXBcIik7YShpLG8sdSxcIlxcdTIyMTdcIixcIlxcXFxhc3RcIik7YShpLG8sdSxcIlxcdTIyOTRcIixcIlxcXFxzcWN1cFwiKTthKGksbyx1LFwiXFx1MjVlZlwiLFwiXFxcXGJpZ2NpcmNcIik7YShpLG8sdSxcIlxcdTIyMTlcIixcIlxcXFxidWxsZXRcIik7YShpLG8sdSxcIlxcdTIwMjFcIixcIlxcXFxkZGFnZ2VyXCIpO2EoaSxvLHUsXCJcXHUyMjQwXCIsXCJcXFxcd3JcIik7YShpLG8sdSxcIlxcdTJhM2ZcIixcIlxcXFxhbWFsZ1wiKTthKGksbyxkLFwiXFx1MjdmNVwiLFwiXFxcXGxvbmdsZWZ0YXJyb3dcIik7YShpLG8sZCxcIlxcdTIxZDBcIixcIlxcXFxMZWZ0YXJyb3dcIik7YShpLG8sZCxcIlxcdTI3ZjhcIixcIlxcXFxMb25nbGVmdGFycm93XCIpO2EoaSxvLGQsXCJcXHUyN2Y2XCIsXCJcXFxcbG9uZ3JpZ2h0YXJyb3dcIik7YShpLG8sZCxcIlxcdTIxZDJcIixcIlxcXFxSaWdodGFycm93XCIpO2EoaSxvLGQsXCJcXHUyN2Y5XCIsXCJcXFxcTG9uZ3JpZ2h0YXJyb3dcIik7YShpLG8sZCxcIlxcdTIxOTRcIixcIlxcXFxsZWZ0cmlnaHRhcnJvd1wiKTthKGksbyxkLFwiXFx1MjdmN1wiLFwiXFxcXGxvbmdsZWZ0cmlnaHRhcnJvd1wiKTthKGksbyxkLFwiXFx1MjFkNFwiLFwiXFxcXExlZnRyaWdodGFycm93XCIpO2EoaSxvLGQsXCJcXHUyN2ZhXCIsXCJcXFxcTG9uZ2xlZnRyaWdodGFycm93XCIpO2EoaSxvLGQsXCJcXHUyMWE2XCIsXCJcXFxcbWFwc3RvXCIpO2EoaSxvLGQsXCJcXHUyN2ZjXCIsXCJcXFxcbG9uZ21hcHN0b1wiKTthKGksbyxkLFwiXFx1MjE5N1wiLFwiXFxcXG5lYXJyb3dcIik7YShpLG8sZCxcIlxcdTIxYTlcIixcIlxcXFxob29rbGVmdGFycm93XCIpO2EoaSxvLGQsXCJcXHUyMWFhXCIsXCJcXFxcaG9va3JpZ2h0YXJyb3dcIik7YShpLG8sZCxcIlxcdTIxOThcIixcIlxcXFxzZWFycm93XCIpO2EoaSxvLGQsXCJcXHUyMWJjXCIsXCJcXFxcbGVmdGhhcnBvb251cFwiKTthKGksbyxkLFwiXFx1MjFjMFwiLFwiXFxcXHJpZ2h0aGFycG9vbnVwXCIpO2EoaSxvLGQsXCJcXHUyMTk5XCIsXCJcXFxcc3dhcnJvd1wiKTthKGksbyxkLFwiXFx1MjFiZFwiLFwiXFxcXGxlZnRoYXJwb29uZG93blwiKTthKGksbyxkLFwiXFx1MjFjMVwiLFwiXFxcXHJpZ2h0aGFycG9vbmRvd25cIik7YShpLG8sZCxcIlxcdTIxOTZcIixcIlxcXFxud2Fycm93XCIpO2EoaSxvLGQsXCJcXHUyMWNjXCIsXCJcXFxccmlnaHRsZWZ0aGFycG9vbnNcIik7YShpLHMsZCxcIlxcdTIyNmVcIixcIlxcXFxubGVzc1wiKTthKGkscyxkLFwiXFx1ZTAxMFwiLFwiXFxcXG5sZXFzbGFudFwiKTthKGkscyxkLFwiXFx1ZTAxMVwiLFwiXFxcXG5sZXFxXCIpO2EoaSxzLGQsXCJcXHUyYTg3XCIsXCJcXFxcbG5lcVwiKTthKGkscyxkLFwiXFx1MjI2OFwiLFwiXFxcXGxuZXFxXCIpO2EoaSxzLGQsXCJcXHVlMDBjXCIsXCJcXFxcbHZlcnRuZXFxXCIpO2EoaSxzLGQsXCJcXHUyMmU2XCIsXCJcXFxcbG5zaW1cIik7YShpLHMsZCxcIlxcdTJhODlcIixcIlxcXFxsbmFwcHJveFwiKTthKGkscyxkLFwiXFx1MjI4MFwiLFwiXFxcXG5wcmVjXCIpO2EoaSxzLGQsXCJcXHUyMmUwXCIsXCJcXFxcbnByZWNlcVwiKTthKGkscyxkLFwiXFx1MjJlOFwiLFwiXFxcXHByZWNuc2ltXCIpO2EoaSxzLGQsXCJcXHUyYWI5XCIsXCJcXFxccHJlY25hcHByb3hcIik7YShpLHMsZCxcIlxcdTIyNDFcIixcIlxcXFxuc2ltXCIpO2EoaSxzLGQsXCJcXHVlMDA2XCIsXCJcXFxcbnNob3J0bWlkXCIpO2EoaSxzLGQsXCJcXHUyMjI0XCIsXCJcXFxcbm1pZFwiKTthKGkscyxkLFwiXFx1MjJhY1wiLFwiXFxcXG52ZGFzaFwiKTthKGkscyxkLFwiXFx1MjJhZFwiLFwiXFxcXG52RGFzaFwiKTthKGkscyxkLFwiXFx1MjJlYVwiLFwiXFxcXG50cmlhbmdsZWxlZnRcIik7YShpLHMsZCxcIlxcdTIyZWNcIixcIlxcXFxudHJpYW5nbGVsZWZ0ZXFcIik7YShpLHMsZCxcIlxcdTIyOGFcIixcIlxcXFxzdWJzZXRuZXFcIik7YShpLHMsZCxcIlxcdWUwMWFcIixcIlxcXFx2YXJzdWJzZXRuZXFcIik7YShpLHMsZCxcIlxcdTJhY2JcIixcIlxcXFxzdWJzZXRuZXFxXCIpO2EoaSxzLGQsXCJcXHVlMDE3XCIsXCJcXFxcdmFyc3Vic2V0bmVxcVwiKTthKGkscyxkLFwiXFx1MjI2ZlwiLFwiXFxcXG5ndHJcIik7YShpLHMsZCxcIlxcdWUwMGZcIixcIlxcXFxuZ2Vxc2xhbnRcIik7YShpLHMsZCxcIlxcdWUwMGVcIixcIlxcXFxuZ2VxcVwiKTthKGkscyxkLFwiXFx1MmE4OFwiLFwiXFxcXGduZXFcIik7YShpLHMsZCxcIlxcdTIyNjlcIixcIlxcXFxnbmVxcVwiKTthKGkscyxkLFwiXFx1ZTAwZFwiLFwiXFxcXGd2ZXJ0bmVxcVwiKTthKGkscyxkLFwiXFx1MjJlN1wiLFwiXFxcXGduc2ltXCIpO2EoaSxzLGQsXCJcXHUyYThhXCIsXCJcXFxcZ25hcHByb3hcIik7YShpLHMsZCxcIlxcdTIyODFcIixcIlxcXFxuc3VjY1wiKTthKGkscyxkLFwiXFx1MjJlMVwiLFwiXFxcXG5zdWNjZXFcIik7YShpLHMsZCxcIlxcdTIyZTlcIixcIlxcXFxzdWNjbnNpbVwiKTthKGkscyxkLFwiXFx1MmFiYVwiLFwiXFxcXHN1Y2NuYXBwcm94XCIpO2EoaSxzLGQsXCJcXHUyMjQ2XCIsXCJcXFxcbmNvbmdcIik7YShpLHMsZCxcIlxcdWUwMDdcIixcIlxcXFxuc2hvcnRwYXJhbGxlbFwiKTthKGkscyxkLFwiXFx1MjIyNlwiLFwiXFxcXG5wYXJhbGxlbFwiKTthKGkscyxkLFwiXFx1MjJhZlwiLFwiXFxcXG5WRGFzaFwiKTthKGkscyxkLFwiXFx1MjJlYlwiLFwiXFxcXG50cmlhbmdsZXJpZ2h0XCIpO2EoaSxzLGQsXCJcXHUyMmVkXCIsXCJcXFxcbnRyaWFuZ2xlcmlnaHRlcVwiKTthKGkscyxkLFwiXFx1ZTAxOFwiLFwiXFxcXG5zdXBzZXRlcXFcIik7YShpLHMsZCxcIlxcdTIyOGJcIixcIlxcXFxzdXBzZXRuZXFcIik7YShpLHMsZCxcIlxcdWUwMWJcIixcIlxcXFx2YXJzdXBzZXRuZXFcIik7YShpLHMsZCxcIlxcdTJhY2NcIixcIlxcXFxzdXBzZXRuZXFxXCIpO2EoaSxzLGQsXCJcXHVlMDE5XCIsXCJcXFxcdmFyc3Vwc2V0bmVxcVwiKTthKGkscyxkLFwiXFx1MjJhZVwiLFwiXFxcXG5WZGFzaFwiKTthKGkscyxkLFwiXFx1MmFiNVwiLFwiXFxcXHByZWNuZXFxXCIpO2EoaSxzLGQsXCJcXHUyYWI2XCIsXCJcXFxcc3VjY25lcXFcIik7YShpLHMsZCxcIlxcdWUwMTZcIixcIlxcXFxuc3Vic2V0ZXFxXCIpO2EoaSxzLHUsXCJcXHUyMmI0XCIsXCJcXFxcdW5saGRcIik7YShpLHMsdSxcIlxcdTIyYjVcIixcIlxcXFx1bnJoZFwiKTthKGkscyxkLFwiXFx1MjE5YVwiLFwiXFxcXG5sZWZ0YXJyb3dcIik7YShpLHMsZCxcIlxcdTIxOWJcIixcIlxcXFxucmlnaHRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjFjZFwiLFwiXFxcXG5MZWZ0YXJyb3dcIik7YShpLHMsZCxcIlxcdTIxY2ZcIixcIlxcXFxuUmlnaHRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjFhZVwiLFwiXFxcXG5sZWZ0cmlnaHRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjFjZVwiLFwiXFxcXG5MZWZ0cmlnaHRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjViM1wiLFwiXFxcXHZhcnRyaWFuZ2xlXCIpO2EoaSxzLHksXCJcXHUyMTBmXCIsXCJcXFxcaHNsYXNoXCIpO2EoaSxzLHksXCJcXHUyNWJkXCIsXCJcXFxcdHJpYW5nbGVkb3duXCIpO2EoaSxzLHksXCJcXHUyNWNhXCIsXCJcXFxcbG96ZW5nZVwiKTthKGkscyx5LFwiXFx1MjRjOFwiLFwiXFxcXGNpcmNsZWRTXCIpO2EoaSxzLHksXCJcXHhhZVwiLFwiXFxcXGNpcmNsZWRSXCIpO2EobixzLHksXCJcXHhhZVwiLFwiXFxcXGNpcmNsZWRSXCIpO2EoaSxzLHksXCJcXHUyMjIxXCIsXCJcXFxcbWVhc3VyZWRhbmdsZVwiKTthKGkscyx5LFwiXFx1MjIwNFwiLFwiXFxcXG5leGlzdHNcIik7YShpLHMseSxcIlxcdTIxMjdcIixcIlxcXFxtaG9cIik7YShpLHMseSxcIlxcdTIxMzJcIixcIlxcXFxGaW52XCIpO2EoaSxzLHksXCJcXHUyMTQxXCIsXCJcXFxcR2FtZVwiKTthKGkscyx5LFwia1wiLFwiXFxcXEJiYmtcIik7YShpLHMseSxcIlxcdTIwMzVcIixcIlxcXFxiYWNrcHJpbWVcIik7YShpLHMseSxcIlxcdTI1YjJcIixcIlxcXFxibGFja3RyaWFuZ2xlXCIpO2EoaSxzLHksXCJcXHUyNWJjXCIsXCJcXFxcYmxhY2t0cmlhbmdsZWRvd25cIik7YShpLHMseSxcIlxcdTI1YTBcIixcIlxcXFxibGFja3NxdWFyZVwiKTthKGkscyx5LFwiXFx1MjllYlwiLFwiXFxcXGJsYWNrbG96ZW5nZVwiKTthKGkscyx5LFwiXFx1MjYwNVwiLFwiXFxcXGJpZ3N0YXJcIik7YShpLHMseSxcIlxcdTIyMjJcIixcIlxcXFxzcGhlcmljYWxhbmdsZVwiKTthKGkscyx5LFwiXFx1MjIwMVwiLFwiXFxcXGNvbXBsZW1lbnRcIik7YShpLHMseSxcIlxceGYwXCIsXCJcXFxcZXRoXCIpO2EoaSxzLHksXCJcXHUyNTcxXCIsXCJcXFxcZGlhZ3VwXCIpO2EoaSxzLHksXCJcXHUyNTcyXCIsXCJcXFxcZGlhZ2Rvd25cIik7YShpLHMseSxcIlxcdTI1YTFcIixcIlxcXFxzcXVhcmVcIik7YShpLHMseSxcIlxcdTI1YTFcIixcIlxcXFxCb3hcIik7YShpLHMseSxcIlxcdTI1Y2FcIixcIlxcXFxEaWFtb25kXCIpO2EoaSxzLHksXCJcXHhhNVwiLFwiXFxcXHllblwiKTthKGkscyx5LFwiXFx1MjcxM1wiLFwiXFxcXGNoZWNrbWFya1wiKTthKG4scyx5LFwiXFx1MjcxM1wiLFwiXFxcXGNoZWNrbWFya1wiKTthKGkscyx5LFwiXFx1MjEzNlwiLFwiXFxcXGJldGhcIik7YShpLHMseSxcIlxcdTIxMzhcIixcIlxcXFxkYWxldGhcIik7YShpLHMseSxcIlxcdTIxMzdcIixcIlxcXFxnaW1lbFwiKTthKGkscyx5LFwiXFx1MDNkZFwiLFwiXFxcXGRpZ2FtbWFcIik7YShpLHMseSxcIlxcdTAzZjBcIixcIlxcXFx2YXJrYXBwYVwiKTthKGkscyxmLFwiXFx1MjUwY1wiLFwiXFxcXHVsY29ybmVyXCIpO2EoaSxzLGgsXCJcXHUyNTEwXCIsXCJcXFxcdXJjb3JuZXJcIik7YShpLHMsZixcIlxcdTI1MTRcIixcIlxcXFxsbGNvcm5lclwiKTthKGkscyxoLFwiXFx1MjUxOFwiLFwiXFxcXGxyY29ybmVyXCIpO2EoaSxzLGQsXCJcXHUyMjY2XCIsXCJcXFxcbGVxcVwiKTthKGkscyxkLFwiXFx1MmE3ZFwiLFwiXFxcXGxlcXNsYW50XCIpO2EoaSxzLGQsXCJcXHUyYTk1XCIsXCJcXFxcZXFzbGFudGxlc3NcIik7YShpLHMsZCxcIlxcdTIyNzJcIixcIlxcXFxsZXNzc2ltXCIpO2EoaSxzLGQsXCJcXHUyYTg1XCIsXCJcXFxcbGVzc2FwcHJveFwiKTthKGkscyxkLFwiXFx1MjI0YVwiLFwiXFxcXGFwcHJveGVxXCIpO2EoaSxzLHUsXCJcXHUyMmQ2XCIsXCJcXFxcbGVzc2RvdFwiKTthKGkscyxkLFwiXFx1MjJkOFwiLFwiXFxcXGxsbFwiKTthKGkscyxkLFwiXFx1MjI3NlwiLFwiXFxcXGxlc3NndHJcIik7YShpLHMsZCxcIlxcdTIyZGFcIixcIlxcXFxsZXNzZXFndHJcIik7YShpLHMsZCxcIlxcdTJhOGJcIixcIlxcXFxsZXNzZXFxZ3RyXCIpO2EoaSxzLGQsXCJcXHUyMjUxXCIsXCJcXFxcZG90ZXFkb3RcIik7YShpLHMsZCxcIlxcdTIyNTNcIixcIlxcXFxyaXNpbmdkb3RzZXFcIik7YShpLHMsZCxcIlxcdTIyNTJcIixcIlxcXFxmYWxsaW5nZG90c2VxXCIpO2EoaSxzLGQsXCJcXHUyMjNkXCIsXCJcXFxcYmFja3NpbVwiKTthKGkscyxkLFwiXFx1MjJjZFwiLFwiXFxcXGJhY2tzaW1lcVwiKTthKGkscyxkLFwiXFx1MmFjNVwiLFwiXFxcXHN1YnNldGVxcVwiKTthKGkscyxkLFwiXFx1MjJkMFwiLFwiXFxcXFN1YnNldFwiKTthKGkscyxkLFwiXFx1MjI4ZlwiLFwiXFxcXHNxc3Vic2V0XCIpO2EoaSxzLGQsXCJcXHUyMjdjXCIsXCJcXFxccHJlY2N1cmx5ZXFcIik7YShpLHMsZCxcIlxcdTIyZGVcIixcIlxcXFxjdXJseWVxcHJlY1wiKTthKGkscyxkLFwiXFx1MjI3ZVwiLFwiXFxcXHByZWNzaW1cIik7YShpLHMsZCxcIlxcdTJhYjdcIixcIlxcXFxwcmVjYXBwcm94XCIpO2EoaSxzLGQsXCJcXHUyMmIyXCIsXCJcXFxcdmFydHJpYW5nbGVsZWZ0XCIpO2EoaSxzLGQsXCJcXHUyMmI0XCIsXCJcXFxcdHJpYW5nbGVsZWZ0ZXFcIik7YShpLHMsZCxcIlxcdTIyYThcIixcIlxcXFx2RGFzaFwiKTthKGkscyxkLFwiXFx1MjJhYVwiLFwiXFxcXFZ2ZGFzaFwiKTthKGkscyxkLFwiXFx1MjMyM1wiLFwiXFxcXHNtYWxsc21pbGVcIik7YShpLHMsZCxcIlxcdTIzMjJcIixcIlxcXFxzbWFsbGZyb3duXCIpO2EoaSxzLGQsXCJcXHUyMjRmXCIsXCJcXFxcYnVtcGVxXCIpO2EoaSxzLGQsXCJcXHUyMjRlXCIsXCJcXFxcQnVtcGVxXCIpO2EoaSxzLGQsXCJcXHUyMjY3XCIsXCJcXFxcZ2VxcVwiKTthKGkscyxkLFwiXFx1MmE3ZVwiLFwiXFxcXGdlcXNsYW50XCIpO2EoaSxzLGQsXCJcXHUyYTk2XCIsXCJcXFxcZXFzbGFudGd0clwiKTthKGkscyxkLFwiXFx1MjI3M1wiLFwiXFxcXGd0cnNpbVwiKTthKGkscyxkLFwiXFx1MmE4NlwiLFwiXFxcXGd0cmFwcHJveFwiKTthKGkscyx1LFwiXFx1MjJkN1wiLFwiXFxcXGd0cmRvdFwiKTthKGkscyxkLFwiXFx1MjJkOVwiLFwiXFxcXGdnZ1wiKTthKGkscyxkLFwiXFx1MjI3N1wiLFwiXFxcXGd0cmxlc3NcIik7YShpLHMsZCxcIlxcdTIyZGJcIixcIlxcXFxndHJlcWxlc3NcIik7YShpLHMsZCxcIlxcdTJhOGNcIixcIlxcXFxndHJlcXFsZXNzXCIpO2EoaSxzLGQsXCJcXHUyMjU2XCIsXCJcXFxcZXFjaXJjXCIpO2EoaSxzLGQsXCJcXHUyMjU3XCIsXCJcXFxcY2lyY2VxXCIpO2EoaSxzLGQsXCJcXHUyMjVjXCIsXCJcXFxcdHJpYW5nbGVxXCIpO2EoaSxzLGQsXCJcXHUyMjNjXCIsXCJcXFxcdGhpY2tzaW1cIik7YShpLHMsZCxcIlxcdTIyNDhcIixcIlxcXFx0aGlja2FwcHJveFwiKTthKGkscyxkLFwiXFx1MmFjNlwiLFwiXFxcXHN1cHNldGVxcVwiKTthKGkscyxkLFwiXFx1MjJkMVwiLFwiXFxcXFN1cHNldFwiKTthKGkscyxkLFwiXFx1MjI5MFwiLFwiXFxcXHNxc3Vwc2V0XCIpO2EoaSxzLGQsXCJcXHUyMjdkXCIsXCJcXFxcc3VjY2N1cmx5ZXFcIik7YShpLHMsZCxcIlxcdTIyZGZcIixcIlxcXFxjdXJseWVxc3VjY1wiKTthKGkscyxkLFwiXFx1MjI3ZlwiLFwiXFxcXHN1Y2NzaW1cIik7YShpLHMsZCxcIlxcdTJhYjhcIixcIlxcXFxzdWNjYXBwcm94XCIpO2EoaSxzLGQsXCJcXHUyMmIzXCIsXCJcXFxcdmFydHJpYW5nbGVyaWdodFwiKTthKGkscyxkLFwiXFx1MjJiNVwiLFwiXFxcXHRyaWFuZ2xlcmlnaHRlcVwiKTthKGkscyxkLFwiXFx1MjJhOVwiLFwiXFxcXFZkYXNoXCIpO2EoaSxzLGQsXCJcXHUyMjIzXCIsXCJcXFxcc2hvcnRtaWRcIik7YShpLHMsZCxcIlxcdTIyMjVcIixcIlxcXFxzaG9ydHBhcmFsbGVsXCIpO2EoaSxzLGQsXCJcXHUyMjZjXCIsXCJcXFxcYmV0d2VlblwiKTthKGkscyxkLFwiXFx1MjJkNFwiLFwiXFxcXHBpdGNoZm9ya1wiKTthKGkscyxkLFwiXFx1MjIxZFwiLFwiXFxcXHZhcnByb3B0b1wiKTthKGkscyxkLFwiXFx1MjVjMFwiLFwiXFxcXGJsYWNrdHJpYW5nbGVsZWZ0XCIpO2EoaSxzLGQsXCJcXHUyMjM0XCIsXCJcXFxcdGhlcmVmb3JlXCIpO2EoaSxzLGQsXCJcXHUyMjBkXCIsXCJcXFxcYmFja2Vwc2lsb25cIik7YShpLHMsZCxcIlxcdTI1YjZcIixcIlxcXFxibGFja3RyaWFuZ2xlcmlnaHRcIik7YShpLHMsZCxcIlxcdTIyMzVcIixcIlxcXFxiZWNhdXNlXCIpO2EoaSxzLGQsXCJcXHUyMmQ4XCIsXCJcXFxcbGxsZXNzXCIpO2EoaSxzLGQsXCJcXHUyMmQ5XCIsXCJcXFxcZ2dndHJcIik7YShpLHMsdSxcIlxcdTIyYjJcIixcIlxcXFxsaGRcIik7YShpLHMsdSxcIlxcdTIyYjNcIixcIlxcXFxyaGRcIik7YShpLHMsZCxcIlxcdTIyNDJcIixcIlxcXFxlcXNpbVwiKTthKGksbyxkLFwiXFx1MjJjOFwiLFwiXFxcXEpvaW5cIik7YShpLHMsZCxcIlxcdTIyNTFcIixcIlxcXFxEb3RlcVwiKTthKGkscyx1LFwiXFx1MjIxNFwiLFwiXFxcXGRvdHBsdXNcIik7YShpLHMsdSxcIlxcdTIyMTZcIixcIlxcXFxzbWFsbHNldG1pbnVzXCIpO2EoaSxzLHUsXCJcXHUyMmQyXCIsXCJcXFxcQ2FwXCIpO2EoaSxzLHUsXCJcXHUyMmQzXCIsXCJcXFxcQ3VwXCIpO2EoaSxzLHUsXCJcXHUyYTVlXCIsXCJcXFxcZG91YmxlYmFyd2VkZ2VcIik7YShpLHMsdSxcIlxcdTIyOWZcIixcIlxcXFxib3htaW51c1wiKTthKGkscyx1LFwiXFx1MjI5ZVwiLFwiXFxcXGJveHBsdXNcIik7YShpLHMsdSxcIlxcdTIyYzdcIixcIlxcXFxkaXZpZGVvbnRpbWVzXCIpO2EoaSxzLHUsXCJcXHUyMmM5XCIsXCJcXFxcbHRpbWVzXCIpO2EoaSxzLHUsXCJcXHUyMmNhXCIsXCJcXFxccnRpbWVzXCIpO2EoaSxzLHUsXCJcXHUyMmNiXCIsXCJcXFxcbGVmdHRocmVldGltZXNcIik7YShpLHMsdSxcIlxcdTIyY2NcIixcIlxcXFxyaWdodHRocmVldGltZXNcIik7YShpLHMsdSxcIlxcdTIyY2ZcIixcIlxcXFxjdXJseXdlZGdlXCIpO2EoaSxzLHUsXCJcXHUyMmNlXCIsXCJcXFxcY3VybHl2ZWVcIik7YShpLHMsdSxcIlxcdTIyOWRcIixcIlxcXFxjaXJjbGVkZGFzaFwiKTthKGkscyx1LFwiXFx1MjI5YlwiLFwiXFxcXGNpcmNsZWRhc3RcIik7YShpLHMsdSxcIlxcdTIyYzVcIixcIlxcXFxjZW50ZXJkb3RcIik7YShpLHMsdSxcIlxcdTIyYmFcIixcIlxcXFxpbnRlcmNhbFwiKTthKGkscyx1LFwiXFx1MjJkMlwiLFwiXFxcXGRvdWJsZWNhcFwiKTthKGkscyx1LFwiXFx1MjJkM1wiLFwiXFxcXGRvdWJsZWN1cFwiKTthKGkscyx1LFwiXFx1MjJhMFwiLFwiXFxcXGJveHRpbWVzXCIpO2EoaSxzLGQsXCJcXHUyMWUyXCIsXCJcXFxcZGFzaHJpZ2h0YXJyb3dcIik7YShpLHMsZCxcIlxcdTIxZTBcIixcIlxcXFxkYXNobGVmdGFycm93XCIpO2EoaSxzLGQsXCJcXHUyMWM3XCIsXCJcXFxcbGVmdGxlZnRhcnJvd3NcIik7YShpLHMsZCxcIlxcdTIxYzZcIixcIlxcXFxsZWZ0cmlnaHRhcnJvd3NcIik7YShpLHMsZCxcIlxcdTIxZGFcIixcIlxcXFxMbGVmdGFycm93XCIpO2EoaSxzLGQsXCJcXHUyMTllXCIsXCJcXFxcdHdvaGVhZGxlZnRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjFhMlwiLFwiXFxcXGxlZnRhcnJvd3RhaWxcIik7YShpLHMsZCxcIlxcdTIxYWJcIixcIlxcXFxsb29wYXJyb3dsZWZ0XCIpO2EoaSxzLGQsXCJcXHUyMWNiXCIsXCJcXFxcbGVmdHJpZ2h0aGFycG9vbnNcIik7YShpLHMsZCxcIlxcdTIxYjZcIixcIlxcXFxjdXJ2ZWFycm93bGVmdFwiKTthKGkscyxkLFwiXFx1MjFiYVwiLFwiXFxcXGNpcmNsZWFycm93bGVmdFwiKTthKGkscyxkLFwiXFx1MjFiMFwiLFwiXFxcXExzaFwiKTthKGkscyxkLFwiXFx1MjFjOFwiLFwiXFxcXHVwdXBhcnJvd3NcIik7YShpLHMsZCxcIlxcdTIxYmZcIixcIlxcXFx1cGhhcnBvb25sZWZ0XCIpO2EoaSxzLGQsXCJcXHUyMWMzXCIsXCJcXFxcZG93bmhhcnBvb25sZWZ0XCIpO2EoaSxzLGQsXCJcXHUyMmI4XCIsXCJcXFxcbXVsdGltYXBcIik7YShpLHMsZCxcIlxcdTIxYWRcIixcIlxcXFxsZWZ0cmlnaHRzcXVpZ2Fycm93XCIpO2EoaSxzLGQsXCJcXHUyMWM5XCIsXCJcXFxccmlnaHRyaWdodGFycm93c1wiKTthKGkscyxkLFwiXFx1MjFjNFwiLFwiXFxcXHJpZ2h0bGVmdGFycm93c1wiKTthKGkscyxkLFwiXFx1MjFhMFwiLFwiXFxcXHR3b2hlYWRyaWdodGFycm93XCIpO2EoaSxzLGQsXCJcXHUyMWEzXCIsXCJcXFxccmlnaHRhcnJvd3RhaWxcIik7YShpLHMsZCxcIlxcdTIxYWNcIixcIlxcXFxsb29wYXJyb3dyaWdodFwiKTthKGkscyxkLFwiXFx1MjFiN1wiLFwiXFxcXGN1cnZlYXJyb3dyaWdodFwiKTthKGkscyxkLFwiXFx1MjFiYlwiLFwiXFxcXGNpcmNsZWFycm93cmlnaHRcIik7YShpLHMsZCxcIlxcdTIxYjFcIixcIlxcXFxSc2hcIik7YShpLHMsZCxcIlxcdTIxY2FcIixcIlxcXFxkb3duZG93bmFycm93c1wiKTthKGkscyxkLFwiXFx1MjFiZVwiLFwiXFxcXHVwaGFycG9vbnJpZ2h0XCIpO2EoaSxzLGQsXCJcXHUyMWMyXCIsXCJcXFxcZG93bmhhcnBvb25yaWdodFwiKTthKGkscyxkLFwiXFx1MjFkZFwiLFwiXFxcXHJpZ2h0c3F1aWdhcnJvd1wiKTthKGkscyxkLFwiXFx1MjFkZFwiLFwiXFxcXGxlYWRzdG9cIik7YShpLHMsZCxcIlxcdTIxZGJcIixcIlxcXFxScmlnaHRhcnJvd1wiKTthKGkscyxkLFwiXFx1MjFiZVwiLFwiXFxcXHJlc3RyaWN0aW9uXCIpO2EoaSxvLHksXCJcXHUyMDE4XCIsXCJgXCIpO2EoaSxvLHksXCIkXCIsXCJcXFxcJFwiKTthKG4sbyx5LFwiJFwiLFwiXFxcXCRcIik7YShuLG8seSxcIiRcIixcIlxcXFx0ZXh0ZG9sbGFyXCIpO2EoaSxvLHksXCIlXCIsXCJcXFxcJVwiKTthKG4sbyx5LFwiJVwiLFwiXFxcXCVcIik7YShpLG8seSxcIl9cIixcIlxcXFxfXCIpO2EobixvLHksXCJfXCIsXCJcXFxcX1wiKTthKG4sbyx5LFwiX1wiLFwiXFxcXHRleHR1bmRlcnNjb3JlXCIpO2EoaSxvLHksXCJcXHUyMjIwXCIsXCJcXFxcYW5nbGVcIik7YShpLG8seSxcIlxcdTIyMWVcIixcIlxcXFxpbmZ0eVwiKTthKGksbyx5LFwiXFx1MjAzMlwiLFwiXFxcXHByaW1lXCIpO2EoaSxvLHksXCJcXHUyNWIzXCIsXCJcXFxcdHJpYW5nbGVcIik7YShpLG8seSxcIlxcdTAzOTNcIixcIlxcXFxHYW1tYVwiKTthKGksbyx5LFwiXFx1MDM5NFwiLFwiXFxcXERlbHRhXCIpO2EoaSxvLHksXCJcXHUwMzk4XCIsXCJcXFxcVGhldGFcIik7YShpLG8seSxcIlxcdTAzOWJcIixcIlxcXFxMYW1iZGFcIik7YShpLG8seSxcIlxcdTAzOWVcIixcIlxcXFxYaVwiKTthKGksbyx5LFwiXFx1MDNhMFwiLFwiXFxcXFBpXCIpO2EoaSxvLHksXCJcXHUwM2EzXCIsXCJcXFxcU2lnbWFcIik7YShpLG8seSxcIlxcdTAzYTVcIixcIlxcXFxVcHNpbG9uXCIpO2EoaSxvLHksXCJcXHUwM2E2XCIsXCJcXFxcUGhpXCIpO2EoaSxvLHksXCJcXHUwM2E4XCIsXCJcXFxcUHNpXCIpO2EoaSxvLHksXCJcXHUwM2E5XCIsXCJcXFxcT21lZ2FcIik7YShpLG8seSxcIlxceGFjXCIsXCJcXFxcbmVnXCIpO2EoaSxvLHksXCJcXHhhY1wiLFwiXFxcXGxub3RcIik7YShpLG8seSxcIlxcdTIyYTRcIixcIlxcXFx0b3BcIik7YShpLG8seSxcIlxcdTIyYTVcIixcIlxcXFxib3RcIik7YShpLG8seSxcIlxcdTIyMDVcIixcIlxcXFxlbXB0eXNldFwiKTthKGkscyx5LFwiXFx1MjIwNVwiLFwiXFxcXHZhcm5vdGhpbmdcIik7YShpLG8sYyxcIlxcdTAzYjFcIixcIlxcXFxhbHBoYVwiKTthKGksbyxjLFwiXFx1MDNiMlwiLFwiXFxcXGJldGFcIik7YShpLG8sYyxcIlxcdTAzYjNcIixcIlxcXFxnYW1tYVwiKTthKGksbyxjLFwiXFx1MDNiNFwiLFwiXFxcXGRlbHRhXCIpO2EoaSxvLGMsXCJcXHUwM2Y1XCIsXCJcXFxcZXBzaWxvblwiKTthKGksbyxjLFwiXFx1MDNiNlwiLFwiXFxcXHpldGFcIik7YShpLG8sYyxcIlxcdTAzYjdcIixcIlxcXFxldGFcIik7YShpLG8sYyxcIlxcdTAzYjhcIixcIlxcXFx0aGV0YVwiKTthKGksbyxjLFwiXFx1MDNiOVwiLFwiXFxcXGlvdGFcIik7YShpLG8sYyxcIlxcdTAzYmFcIixcIlxcXFxrYXBwYVwiKTthKGksbyxjLFwiXFx1MDNiYlwiLFwiXFxcXGxhbWJkYVwiKTthKGksbyxjLFwiXFx1MDNiY1wiLFwiXFxcXG11XCIpO2EoaSxvLGMsXCJcXHUwM2JkXCIsXCJcXFxcbnVcIik7YShpLG8sYyxcIlxcdTAzYmVcIixcIlxcXFx4aVwiKTthKGksbyxjLFwib1wiLFwiXFxcXG9taWNyb25cIik7YShpLG8sYyxcIlxcdTAzYzBcIixcIlxcXFxwaVwiKTthKGksbyxjLFwiXFx1MDNjMVwiLFwiXFxcXHJob1wiKTthKGksbyxjLFwiXFx1MDNjM1wiLFwiXFxcXHNpZ21hXCIpO2EoaSxvLGMsXCJcXHUwM2M0XCIsXCJcXFxcdGF1XCIpO2EoaSxvLGMsXCJcXHUwM2M1XCIsXCJcXFxcdXBzaWxvblwiKTthKGksbyxjLFwiXFx1MDNkNVwiLFwiXFxcXHBoaVwiKTthKGksbyxjLFwiXFx1MDNjN1wiLFwiXFxcXGNoaVwiKTthKGksbyxjLFwiXFx1MDNjOFwiLFwiXFxcXHBzaVwiKTthKGksbyxjLFwiXFx1MDNjOVwiLFwiXFxcXG9tZWdhXCIpO2EoaSxvLGMsXCJcXHUwM2I1XCIsXCJcXFxcdmFyZXBzaWxvblwiKTthKGksbyxjLFwiXFx1MDNkMVwiLFwiXFxcXHZhcnRoZXRhXCIpO2EoaSxvLGMsXCJcXHUwM2Q2XCIsXCJcXFxcdmFycGlcIik7YShpLG8sYyxcIlxcdTAzZjFcIixcIlxcXFx2YXJyaG9cIik7YShpLG8sYyxcIlxcdTAzYzJcIixcIlxcXFx2YXJzaWdtYVwiKTthKGksbyxjLFwiXFx1MDNjNlwiLFwiXFxcXHZhcnBoaVwiKTthKGksbyx1LFwiXFx1MjIxN1wiLFwiKlwiKTthKGksbyx1LFwiK1wiLFwiK1wiKTthKGksbyx1LFwiXFx1MjIxMlwiLFwiLVwiKTthKGksbyx1LFwiXFx1MjJjNVwiLFwiXFxcXGNkb3RcIik7YShpLG8sdSxcIlxcdTIyMThcIixcIlxcXFxjaXJjXCIpO2EoaSxvLHUsXCJcXHhmN1wiLFwiXFxcXGRpdlwiKTthKGksbyx1LFwiXFx4YjFcIixcIlxcXFxwbVwiKTthKGksbyx1LFwiXFx4ZDdcIixcIlxcXFx0aW1lc1wiKTthKGksbyx1LFwiXFx1MjIyOVwiLFwiXFxcXGNhcFwiKTthKGksbyx1LFwiXFx1MjIyYVwiLFwiXFxcXGN1cFwiKTthKGksbyx1LFwiXFx1MjIxNlwiLFwiXFxcXHNldG1pbnVzXCIpO2EoaSxvLHUsXCJcXHUyMjI3XCIsXCJcXFxcbGFuZFwiKTthKGksbyx1LFwiXFx1MjIyOFwiLFwiXFxcXGxvclwiKTthKGksbyx1LFwiXFx1MjIyN1wiLFwiXFxcXHdlZGdlXCIpO2EoaSxvLHUsXCJcXHUyMjI4XCIsXCJcXFxcdmVlXCIpO2EoaSxvLHksXCJcXHUyMjFhXCIsXCJcXFxcc3VyZFwiKTthKGksbyxmLFwiKFwiLFwiKFwiKTthKGksbyxmLFwiW1wiLFwiW1wiKTthKGksbyxmLFwiXFx1MjdlOFwiLFwiXFxcXGxhbmdsZVwiKTthKGksbyxmLFwiXFx1MjIyM1wiLFwiXFxcXGx2ZXJ0XCIpO2EoaSxvLGYsXCJcXHUyMjI1XCIsXCJcXFxcbFZlcnRcIik7YShpLG8saCxcIilcIixcIilcIik7YShpLG8saCxcIl1cIixcIl1cIik7YShpLG8saCxcIj9cIixcIj9cIik7YShpLG8saCxcIiFcIixcIiFcIik7YShpLG8saCxcIlxcdTI3ZTlcIixcIlxcXFxyYW5nbGVcIik7YShpLG8saCxcIlxcdTIyMjNcIixcIlxcXFxydmVydFwiKTthKGksbyxoLFwiXFx1MjIyNVwiLFwiXFxcXHJWZXJ0XCIpO2EoaSxvLGQsXCI9XCIsXCI9XCIpO2EoaSxvLGQsXCI8XCIsXCI8XCIpO2EoaSxvLGQsXCI+XCIsXCI+XCIpO2EoaSxvLGQsXCI6XCIsXCI6XCIpO2EoaSxvLGQsXCJcXHUyMjQ4XCIsXCJcXFxcYXBwcm94XCIpO2EoaSxvLGQsXCJcXHUyMjQ1XCIsXCJcXFxcY29uZ1wiKTthKGksbyxkLFwiXFx1MjI2NVwiLFwiXFxcXGdlXCIpO2EoaSxvLGQsXCJcXHUyMjY1XCIsXCJcXFxcZ2VxXCIpO2EoaSxvLGQsXCJcXHUyMTkwXCIsXCJcXFxcZ2V0c1wiKTthKGksbyxkLFwiPlwiLFwiXFxcXGd0XCIpO2EoaSxvLGQsXCJcXHUyMjA4XCIsXCJcXFxcaW5cIik7YShpLG8sZCxcIlxcdTIyMDlcIixcIlxcXFxub3RpblwiKTthKGksbyxkLFwiXFx1MjI4MlwiLFwiXFxcXHN1YnNldFwiKTthKGksbyxkLFwiXFx1MjI4M1wiLFwiXFxcXHN1cHNldFwiKTthKGksbyxkLFwiXFx1MjI4NlwiLFwiXFxcXHN1YnNldGVxXCIpO2EoaSxvLGQsXCJcXHUyMjg3XCIsXCJcXFxcc3Vwc2V0ZXFcIik7YShpLHMsZCxcIlxcdTIyODhcIixcIlxcXFxuc3Vic2V0ZXFcIik7YShpLHMsZCxcIlxcdTIyODlcIixcIlxcXFxuc3Vwc2V0ZXFcIik7YShpLG8sZCxcIlxcdTIyYThcIixcIlxcXFxtb2RlbHNcIik7YShpLG8sZCxcIlxcdTIxOTBcIixcIlxcXFxsZWZ0YXJyb3dcIik7YShpLG8sZCxcIlxcdTIyNjRcIixcIlxcXFxsZVwiKTthKGksbyxkLFwiXFx1MjI2NFwiLFwiXFxcXGxlcVwiKTthKGksbyxkLFwiPFwiLFwiXFxcXGx0XCIpO2EoaSxvLGQsXCJcXHUyMjYwXCIsXCJcXFxcbmVcIik7YShpLG8sZCxcIlxcdTIyNjBcIixcIlxcXFxuZXFcIik7YShpLG8sZCxcIlxcdTIxOTJcIixcIlxcXFxyaWdodGFycm93XCIpO2EoaSxvLGQsXCJcXHUyMTkyXCIsXCJcXFxcdG9cIik7YShpLHMsZCxcIlxcdTIyNzFcIixcIlxcXFxuZ2VxXCIpO2EoaSxzLGQsXCJcXHUyMjcwXCIsXCJcXFxcbmxlcVwiKTthKGksbyxnLG51bGwsXCJcXFxcIVwiKTthKGksbyxnLFwiXFx4YTBcIixcIlxcXFwgXCIpO2EoaSxvLGcsXCJcXHhhMFwiLFwiflwiKTthKGksbyxnLG51bGwsXCJcXFxcLFwiKTthKGksbyxnLG51bGwsXCJcXFxcOlwiKTthKGksbyxnLG51bGwsXCJcXFxcO1wiKTthKGksbyxnLG51bGwsXCJcXFxcZW5zcGFjZVwiKTthKGksbyxnLG51bGwsXCJcXFxccXF1YWRcIik7YShpLG8sZyxudWxsLFwiXFxcXHF1YWRcIik7YShpLG8sZyxcIlxceGEwXCIsXCJcXFxcc3BhY2VcIik7YShpLG8sbSxcIixcIixcIixcIik7YShpLG8sbSxcIjtcIixcIjtcIik7YShpLG8sbSxcIjpcIixcIlxcXFxjb2xvblwiKTthKGkscyx1LFwiXFx1MjJiY1wiLFwiXFxcXGJhcndlZGdlXCIpO2EoaSxzLHUsXCJcXHUyMmJiXCIsXCJcXFxcdmVlYmFyXCIpO2EoaSxvLHUsXCJcXHUyMjk5XCIsXCJcXFxcb2RvdFwiKTthKGksbyx1LFwiXFx1MjI5NVwiLFwiXFxcXG9wbHVzXCIpO2EoaSxvLHUsXCJcXHUyMjk3XCIsXCJcXFxcb3RpbWVzXCIpO2EoaSxvLHksXCJcXHUyMjAyXCIsXCJcXFxccGFydGlhbFwiKTthKGksbyx1LFwiXFx1MjI5OFwiLFwiXFxcXG9zbGFzaFwiKTthKGkscyx1LFwiXFx1MjI5YVwiLFwiXFxcXGNpcmNsZWRjaXJjXCIpO2EoaSxzLHUsXCJcXHUyMmExXCIsXCJcXFxcYm94ZG90XCIpO2EoaSxvLHUsXCJcXHUyNWIzXCIsXCJcXFxcYmlndHJpYW5nbGV1cFwiKTthKGksbyx1LFwiXFx1MjViZFwiLFwiXFxcXGJpZ3RyaWFuZ2xlZG93blwiKTthKGksbyx1LFwiXFx1MjAyMFwiLFwiXFxcXGRhZ2dlclwiKTthKGksbyx1LFwiXFx1MjJjNFwiLFwiXFxcXGRpYW1vbmRcIik7YShpLG8sdSxcIlxcdTIyYzZcIixcIlxcXFxzdGFyXCIpO2EoaSxvLHUsXCJcXHUyNWMzXCIsXCJcXFxcdHJpYW5nbGVsZWZ0XCIpO2EoaSxvLHUsXCJcXHUyNWI5XCIsXCJcXFxcdHJpYW5nbGVyaWdodFwiKTthKGksbyxmLFwie1wiLFwiXFxcXHtcIik7YShuLG8seSxcIntcIixcIlxcXFx7XCIpO2EobixvLHksXCJ7XCIsXCJcXFxcdGV4dGJyYWNlbGVmdFwiKTthKGksbyxoLFwifVwiLFwiXFxcXH1cIik7YShuLG8seSxcIn1cIixcIlxcXFx9XCIpO2EobixvLHksXCJ9XCIsXCJcXFxcdGV4dGJyYWNlcmlnaHRcIik7YShpLG8sZixcIntcIixcIlxcXFxsYnJhY2VcIik7YShpLG8saCxcIn1cIixcIlxcXFxyYnJhY2VcIik7YShpLG8sZixcIltcIixcIlxcXFxsYnJhY2tcIik7YShpLG8saCxcIl1cIixcIlxcXFxyYnJhY2tcIik7YShuLG8seSxcIjxcIixcIlxcXFx0ZXh0bGVzc1wiKTthKG4sbyx5LFwiPlwiLFwiXFxcXHRleHRncmVhdGVyXCIpO2EoaSxvLGYsXCJcXHUyMzBhXCIsXCJcXFxcbGZsb29yXCIpO2EoaSxvLGgsXCJcXHUyMzBiXCIsXCJcXFxccmZsb29yXCIpO2EoaSxvLGYsXCJcXHUyMzA4XCIsXCJcXFxcbGNlaWxcIik7YShpLG8saCxcIlxcdTIzMDlcIixcIlxcXFxyY2VpbFwiKTthKGksbyx5LFwiXFxcXFwiLFwiXFxcXGJhY2tzbGFzaFwiKTthKGksbyx5LFwiXFx1MjIyM1wiLFwifFwiKTthKGksbyx5LFwiXFx1MjIyM1wiLFwiXFxcXHZlcnRcIik7YShuLG8seSxcInxcIixcIlxcXFx0ZXh0YmFyXCIpO2EoaSxvLHksXCJcXHUyMjI1XCIsXCJcXFxcfFwiKTthKGksbyx5LFwiXFx1MjIyNVwiLFwiXFxcXFZlcnRcIik7YShuLG8seSxcIlxcdTIyMjVcIixcIlxcXFx0ZXh0YmFyZGJsXCIpO2EoaSxvLGQsXCJcXHUyMTkxXCIsXCJcXFxcdXBhcnJvd1wiKTthKGksbyxkLFwiXFx1MjFkMVwiLFwiXFxcXFVwYXJyb3dcIik7YShpLG8sZCxcIlxcdTIxOTNcIixcIlxcXFxkb3duYXJyb3dcIik7YShpLG8sZCxcIlxcdTIxZDNcIixcIlxcXFxEb3duYXJyb3dcIik7YShpLG8sZCxcIlxcdTIxOTVcIixcIlxcXFx1cGRvd25hcnJvd1wiKTthKGksbyxkLFwiXFx1MjFkNVwiLFwiXFxcXFVwZG93bmFycm93XCIpO2EoaSxvLHYsXCJcXHUyMjEwXCIsXCJcXFxcY29wcm9kXCIpO2EoaSxvLHYsXCJcXHUyMmMxXCIsXCJcXFxcYmlndmVlXCIpO2EoaSxvLHYsXCJcXHUyMmMwXCIsXCJcXFxcYmlnd2VkZ2VcIik7YShpLG8sdixcIlxcdTJhMDRcIixcIlxcXFxiaWd1cGx1c1wiKTthKGksbyx2LFwiXFx1MjJjMlwiLFwiXFxcXGJpZ2NhcFwiKTthKGksbyx2LFwiXFx1MjJjM1wiLFwiXFxcXGJpZ2N1cFwiKTthKGksbyx2LFwiXFx1MjIyYlwiLFwiXFxcXGludFwiKTthKGksbyx2LFwiXFx1MjIyYlwiLFwiXFxcXGludG9wXCIpO2EoaSxvLHYsXCJcXHUyMjJjXCIsXCJcXFxcaWludFwiKTthKGksbyx2LFwiXFx1MjIyZFwiLFwiXFxcXGlpaW50XCIpO2EoaSxvLHYsXCJcXHUyMjBmXCIsXCJcXFxccHJvZFwiKTthKGksbyx2LFwiXFx1MjIxMVwiLFwiXFxcXHN1bVwiKTthKGksbyx2LFwiXFx1MmEwMlwiLFwiXFxcXGJpZ290aW1lc1wiKTthKGksbyx2LFwiXFx1MmEwMVwiLFwiXFxcXGJpZ29wbHVzXCIpO2EoaSxvLHYsXCJcXHUyYTAwXCIsXCJcXFxcYmlnb2RvdFwiKTthKGksbyx2LFwiXFx1MjIyZVwiLFwiXFxcXG9pbnRcIik7YShpLG8sdixcIlxcdTJhMDZcIixcIlxcXFxiaWdzcWN1cFwiKTthKGksbyx2LFwiXFx1MjIyYlwiLFwiXFxcXHNtYWxsaW50XCIpO2EobixvLHAsXCJcXHUyMDI2XCIsXCJcXFxcdGV4dGVsbGlwc2lzXCIpO2EoaSxvLHAsXCJcXHUyMDI2XCIsXCJcXFxcbWF0aGVsbGlwc2lzXCIpO2EobixvLHAsXCJcXHUyMDI2XCIsXCJcXFxcbGRvdHNcIik7YShpLG8scCxcIlxcdTIwMjZcIixcIlxcXFxsZG90c1wiKTthKGksbyxwLFwiXFx1MjJlZlwiLFwiXFxcXGNkb3RzXCIpO2EoaSxvLHAsXCJcXHUyMmYxXCIsXCJcXFxcZGRvdHNcIik7YShpLG8seSxcIlxcdTIyZWVcIixcIlxcXFx2ZG90c1wiKTthKGksbyxsLFwiXFx4YjRcIixcIlxcXFxhY3V0ZVwiKTthKGksbyxsLFwiYFwiLFwiXFxcXGdyYXZlXCIpO2EoaSxvLGwsXCJcXHhhOFwiLFwiXFxcXGRkb3RcIik7YShpLG8sbCxcIn5cIixcIlxcXFx0aWxkZVwiKTthKGksbyxsLFwiXFx4YWZcIixcIlxcXFxiYXJcIik7YShpLG8sbCxcIlxcdTAyZDhcIixcIlxcXFxicmV2ZVwiKTthKGksbyxsLFwiXFx1MDJjN1wiLFwiXFxcXGNoZWNrXCIpO2EoaSxvLGwsXCJeXCIsXCJcXFxcaGF0XCIpO2EoaSxvLGwsXCJcXHUyMGQ3XCIsXCJcXFxcdmVjXCIpO2EoaSxvLGwsXCJcXHUwMmQ5XCIsXCJcXFxcZG90XCIpO2EoaSxvLGMsXCJcXHUwMTMxXCIsXCJcXFxcaW1hdGhcIik7YShpLG8sYyxcIlxcdTAyMzdcIixcIlxcXFxqbWF0aFwiKTthKG4sbyx5LFwiXFx1MjAxM1wiLFwiLS1cIik7YShuLG8seSxcIlxcdTIwMTNcIixcIlxcXFx0ZXh0ZW5kYXNoXCIpO2EobixvLHksXCJcXHUyMDE0XCIsXCItLS1cIik7YShuLG8seSxcIlxcdTIwMTRcIixcIlxcXFx0ZXh0ZW1kYXNoXCIpO2EobixvLHksXCJcXHUyMDE4XCIsXCJgXCIpO2EobixvLHksXCJcXHUyMDE4XCIsXCJcXFxcdGV4dHF1b3RlbGVmdFwiKTthKG4sbyx5LFwiXFx1MjAxOVwiLFwiJ1wiKTthKG4sbyx5LFwiXFx1MjAxOVwiLFwiXFxcXHRleHRxdW90ZXJpZ2h0XCIpO2EobixvLHksXCJcXHUyMDFjXCIsXCJgYFwiKTthKG4sbyx5LFwiXFx1MjAxY1wiLFwiXFxcXHRleHRxdW90ZWRibGxlZnRcIik7YShuLG8seSxcIlxcdTIwMWRcIixcIicnXCIpO2EobixvLHksXCJcXHUyMDFkXCIsXCJcXFxcdGV4dHF1b3RlZGJscmlnaHRcIik7YShpLG8seSxcIlxceGIwXCIsXCJcXFxcZGVncmVlXCIpO2EobixvLHksXCJcXHhiMFwiLFwiXFxcXGRlZ3JlZVwiKTthKGksbyxjLFwiXFx4YTNcIixcIlxcXFxwb3VuZHNcIik7YShpLG8sYyxcIlxceGEzXCIsXCJcXFxcbWF0aHN0ZXJsaW5nXCIpO2EobixvLGMsXCJcXHhhM1wiLFwiXFxcXHBvdW5kc1wiKTthKG4sbyxjLFwiXFx4YTNcIixcIlxcXFx0ZXh0c3RlcmxpbmdcIik7YShpLHMseSxcIlxcdTI3MjBcIixcIlxcXFxtYWx0ZXNlXCIpO2EobixzLHksXCJcXHUyNzIwXCIsXCJcXFxcbWFsdGVzZVwiKTthKG4sbyxnLFwiXFx4YTBcIixcIlxcXFwgXCIpO2EobixvLGcsXCJcXHhhMFwiLFwiIFwiKTthKG4sbyxnLFwiXFx4YTBcIixcIn5cIik7dmFyIHg9JzAxMjM0NTY3ODkvQC5cIic7Zm9yKHZhciBiPTA7Yjx4Lmxlbmd0aDtiKyspe3ZhciB3PXguY2hhckF0KGIpO2EoaSxvLHksdyx3KX12YXIgaz0nMDEyMzQ1Njc4OSFAKigpLT0rW108PnxcIjs6Py8uLCc7Zm9yKHZhciB6PTA7ejxrLmxlbmd0aDt6Kyspe3ZhciBNPWsuY2hhckF0KHopO2EobixvLHksTSxNKX12YXIgUz1cImFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpcIjtmb3IodmFyIEE9MDtBPFMubGVuZ3RoO0ErKyl7dmFyIE49Uy5jaGFyQXQoQSk7YShpLG8sYyxOLE4pO2EobixvLHksTixOKX1mb3IodmFyIFQ9MTkyO1Q8PTIxNDtUKyspe3ZhciBxPVN0cmluZy5mcm9tQ2hhckNvZGUoVCk7YShuLG8seSxxLHEpfWZvcih2YXIgQz0yMTY7Qzw9MjQ2O0MrKyl7dmFyIEU9U3RyaW5nLmZyb21DaGFyQ29kZShDKTthKG4sbyx5LEUsRSl9Zm9yKHZhciBPPTI0ODtPPD0yNTU7TysrKXt2YXIgUj1TdHJpbmcuZnJvbUNoYXJDb2RlKE8pO2EobixvLHksUixSKX1mb3IodmFyIEw9MTA0MDtMPD0xMTAzO0wrKyl7dmFyIEQ9U3RyaW5nLmZyb21DaGFyQ29kZShMKTthKG4sbyx5LEQsRCl9YShuLG8seSxcIlxcdTIwMTNcIixcIlxcdTIwMTNcIik7YShuLG8seSxcIlxcdTIwMTRcIixcIlxcdTIwMTRcIik7YShuLG8seSxcIlxcdTIwMThcIixcIlxcdTIwMThcIik7YShuLG8seSxcIlxcdTIwMTlcIixcIlxcdTIwMTlcIik7YShuLG8seSxcIlxcdTIwMWNcIixcIlxcdTIwMWNcIik7YShuLG8seSxcIlxcdTIwMWRcIixcIlxcdTIwMWRcIil9LHt9XSwzMDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPS9bXFx1QUMwMC1cXHVEN0FGXS87dmFyIGk9L1tcXHUzMDQwLVxcdTMwOUZdfFtcXHUzMEEwLVxcdTMwRkZdfFtcXHU0RTAwLVxcdTlGQUZdfFtcXHVBQzAwLVxcdUQ3QUZdLzt0LmV4cG9ydHM9e2Nqa1JlZ2V4OmksaGFuZ3VsUmVnZXg6YX19LHt9XSwzMTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBhPUFycmF5LnByb3RvdHlwZS5pbmRleE9mO3ZhciBpPWZ1bmN0aW9uIGUodCxyKXtpZih0PT1udWxsKXtyZXR1cm4tMX1pZihhJiZ0LmluZGV4T2Y9PT1hKXtyZXR1cm4gdC5pbmRleE9mKHIpfXZhciBpPXQubGVuZ3RoO2Zvcih2YXIgbj0wO248aTtuKyspe2lmKHRbbl09PT1yKXtyZXR1cm4gbn19cmV0dXJuLTF9O3ZhciBuPWZ1bmN0aW9uIGUodCxyKXtyZXR1cm4gaSh0LHIpIT09LTF9O3ZhciBvPWZ1bmN0aW9uIGUodCxyKXtyZXR1cm4gdD09PXVuZGVmaW5lZD9yOnR9O3ZhciBzPS8oW0EtWl0pL2c7dmFyIGw9ZnVuY3Rpb24gZSh0KXtyZXR1cm4gdC5yZXBsYWNlKHMsXCItJDFcIikudG9Mb3dlckNhc2UoKX07dmFyIHU9e1wiJlwiOlwiJmFtcDtcIixcIj5cIjpcIiZndDtcIixcIjxcIjpcIiZsdDtcIiwnXCInOlwiJnF1b3Q7XCIsXCInXCI6XCImI3gyNztcIn07dmFyIGg9L1smPjxcIiddL2c7ZnVuY3Rpb24gcChlKXtyZXR1cm4gdVtlXX1mdW5jdGlvbiBjKGUpe3JldHVybihcIlwiK2UpLnJlcGxhY2UoaCxwKX12YXIgdj12b2lkIDA7aWYodHlwZW9mIGRvY3VtZW50IT09XCJ1bmRlZmluZWRcIil7dmFyIGY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7aWYoXCJ0ZXh0Q29udGVudFwiaW4gZil7dj1mdW5jdGlvbiBlKHQscil7dC50ZXh0Q29udGVudD1yfX1lbHNle3Y9ZnVuY3Rpb24gZSh0LHIpe3QuaW5uZXJUZXh0PXJ9fX1mdW5jdGlvbiBtKGUpe3YoZSxcIlwiKX10LmV4cG9ydHM9e2NvbnRhaW5zOm4sZGVmbHQ6byxlc2NhcGU6YyxoeXBoZW5hdGU6bCxpbmRleE9mOmksc2V0VGV4dENvbnRlbnQ6dixjbGVhck5vZGU6bX19LHt9XX0se30sWzFdKSgxKX0pO1xuIiwiTW91c2V0cmFwID0gcmVxdWlyZSgnbW91c2V0cmFwJyk7XG5rYXRleCA9IHJlcXVpcmUoJy4uL2xpYi9rYXRleC9rYXRleC1tb2RpZmllZC5taW4uanMnKTtcbkd1cHB5VXRpbHMgPSByZXF1aXJlKCcuL2d1cHB5X3V0aWxzLmpzJyk7XG5HdXBweURvYyA9IHJlcXVpcmUoJy4vZ3VwcHlfZG9jLmpzJyk7XG5HdXBweVN5bWJvbHMgPSByZXF1aXJlKCcuL2d1cHB5X3N5bWJvbHMuanMnKTtcblxuU3RyaW5nLnByb3RvdHlwZS5zcGxpY2UgPSBmdW5jdGlvbihpZHgsIHMpeyByZXR1cm4gKHRoaXMuc2xpY2UoMCxpZHgpICsgcyArIHRoaXMuc2xpY2UoaWR4KSk7IH07XG5TdHJpbmcucHJvdG90eXBlLnNwbGljZW4gPSBmdW5jdGlvbihpZHgsIHMsIG4peyByZXR1cm4gKHRoaXMuc2xpY2UoMCxpZHgpICsgcyArIHRoaXMuc2xpY2UoaWR4K24pKTt9O1xuU3RyaW5nLnByb3RvdHlwZS5zZWFyY2hfYXQgPSBmdW5jdGlvbihpZHgsIHMpeyByZXR1cm4gKHRoaXMuc3Vic3RyaW5nKGlkeC1zLmxlbmd0aCxpZHgpID09IHMpOyB9O1xuXG52YXIgR3VwcHlCYWNrZW5kID0gZnVuY3Rpb24oY29uZmlnKXtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdmFyIGNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcbiAgICB2YXIgZXZlbnRzID0gY29uZmlnWydldmVudHMnXSB8fCB7fTtcbiAgICB2YXIgb3B0aW9ucyA9IGNvbmZpZ1snb3B0aW9ucyddIHx8IHt9O1xuICAgIHRoaXMucGFyZW50ID0gY29uZmlnWydwYXJlbnQnXTtcbiAgICBcbiAgICB0aGlzLmJsYWNrbGlzdCA9IFtdO1xuICAgIHRoaXMuYXV0b3JlcGxhY2UgPSB0cnVlO1xuICAgIHRoaXMucmVhZHkgPSBmYWxzZTtcbiAgICB0aGlzLmV2ZW50cyA9IHt9O1xuICAgIFxuICAgIHZhciBldnRzID0gW1wicmVhZHlcIiwgXCJjaGFuZ2VcIiwgXCJsZWZ0X2VuZFwiLCBcInJpZ2h0X2VuZFwiLCBcImRvbmVcIiwgXCJjb21wbGV0aW9uXCIsIFwiZGVidWdcIiwgXCJlcnJvclwiLCBcImZvY3VzXCJdO1xuICAgIFxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZXZ0cy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIHZhciBlID0gZXZ0c1tpXTtcbiAgICAgICAgaWYoZSBpbiBldmVudHMpIHRoaXMuZXZlbnRzW2VdID0gZSBpbiBldmVudHMgPyBldmVudHNbZV0gOiBudWxsO1xuICAgIH1cblxuICAgIHZhciBvcHRzID0gW1wiYmxhbmtfY2FyZXRcIiwgXCJlbXB0eV9jb250ZW50XCIsIFwiYmxhY2tsaXN0XCIsIFwiYXV0b3JlcGxhY2VcIl07XG4gICAgXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvcHRzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgdmFyIHAgPSBvcHRzW2ldO1xuICAgICAgICBpZihwIGluIG9wdGlvbnMpIHRoaXNbcF0gPSBvcHRpb25zW3BdO1xuICAgIH1cblxuICAgIHRoaXMuc3ltYm9scyA9IHt9OyAvL0BcbiAgICB0aGlzLmRvYyA9IG5ldyBHdXBweURvYyhvcHRpb25zW1wieG1sX2NvbnRlbnRcIl0pO1xuICAgIFxuICAgIHRoaXMuY2xpcGJvYXJkID0gbnVsbDtcbiAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLmRvYy5yb290KCkuZmlyc3RDaGlsZDtcbiAgICAvL2lmICghdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQpXG4gICAgLy8gICAgdGhpcy5jdXJyZW50LmFwcGVuZENoaWxkKHRoaXMuZG9jLmJhc2UuY3JlYXRlVGV4dE5vZGUoXCJcIikpO1xuICAgIHRoaXMuY2FyZXQgPSAwO1xuICAgIHRoaXMuc3BhY2VfY2FyZXQgPSAwOyAvL0BcbiAgICB0aGlzLnNlbF9zdGFydCA9IG51bGw7XG4gICAgdGhpcy5zZWxfZW5kID0gbnVsbDtcbiAgICB0aGlzLnVuZG9fZGF0YSA9IFtdO1xuICAgIHRoaXMudW5kb19ub3cgPSAtMTtcbiAgICB0aGlzLnNlbF9zdGF0dXMgPSBHdXBweUJhY2tlbmQuU0VMX05PTkU7XG4gICAgdGhpcy5jaGVja3BvaW50KCk7XG4gICAgaWYgKEd1cHB5QmFja2VuZC5yZWFkeSAmJiAhdGhpcy5yZWFkeSl7XG4gICAgXHR0aGlzLnJlYWR5ID0gdHJ1ZTtcblx0dGhpcy5zeW1ib2xzID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShHdXBweVN5bWJvbHMuc3ltYm9scykpO1xuICAgIFx0dGhpcy5maXJlX2V2ZW50KFwicmVhZHlcIik7XG4gICAgfVxufVxuXG5HdXBweUJhY2tlbmQuU0VMX05PTkUgPSAwO1xuR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfU1RBUlQgPSAxO1xuR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EID0gMjtcblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5nZXRfY29udGVudCA9IGZ1bmN0aW9uKHQscil7XG4gICAgcmV0dXJuIHRoaXMuZG9jLmdldF9jb250ZW50KHQscik7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc2V0X2NvbnRlbnQgPSBmdW5jdGlvbih4bWxfZGF0YSl7XG4gICAgdGhpcy5kb2MgPSBuZXcgR3VwcHlEb2MoeG1sX2RhdGEpO1xuICAgIHRoaXMuY2xpcGJvYXJkID0gbnVsbDtcbiAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLmRvYy5yb290KCkubGFzdENoaWxkO1xuICAgIHRoaXMuY2FyZXQgPSBHdXBweVV0aWxzLmdldF9sZW5ndGgodGhpcy5jdXJyZW50KTtcbiAgICB0aGlzLmNhcmV0ID0gMDtcbiAgICB0aGlzLnNlbF9zdGFydCA9IG51bGw7XG4gICAgdGhpcy5zZWxfZW5kID0gbnVsbDtcbiAgICB0aGlzLnVuZG9fZGF0YSA9IFtdO1xuICAgIHRoaXMudW5kb19ub3cgPSAtMTtcbiAgICB0aGlzLnNlbF9zdGF0dXMgPSBHdXBweUJhY2tlbmQuU0VMX05PTkU7XG4gICAgdGhpcy5jaGVja3BvaW50KCk7XG4gICAgdGhpcy5wYXJlbnQucmVuZGVyKHRydWUpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmZpcmVfZXZlbnQgPSBmdW5jdGlvbihldmVudCwgYXJncyl7XG4gICAgYXJncyA9IGFyZ3MgfHwge307XG4gICAgYXJncy50YXJnZXQgPSB0aGlzLnBhcmVudCB8fCB0aGlzO1xuICAgIGlmKHRoaXMuZXZlbnRzW2V2ZW50XSkgdGhpcy5ldmVudHNbZXZlbnRdKGFyZ3MpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnJlbW92ZV9zeW1ib2wgPSBmdW5jdGlvbihuYW1lKXtcbiAgICBpZih0aGlzLnN5bWJvbHNbbmFtZV0pIGRlbGV0ZSB0aGlzLnN5bWJvbHNbbmFtZV07XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuYWRkX3N5bWJvbHMgPSBmdW5jdGlvbihuYW1lLCBzeW0pe1xuICAgIHZhciBuZXdfc3ltcyA9IEd1cHB5U3ltYm9scy5hZGRfc3ltYm9scyhuYW1lLCBzeW0pO1xuICAgIGZvcih2YXIgcyBpbiBuZXdfc3ltcyl7XG5cdHRoaXMuc3ltYm9sc1tzXSA9IG5ld19zeW1zW3NdO1xuICAgIH1cbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5hZGRfc3ltYm9sX2Z1bmMgPSBmdW5jdGlvbihuYW1lLCBncm91cCl7XG4gICAgdmFyIG5ld19zeW1zID0gR3VwcHlTeW1ib2xzLmFkZF9zeW1ib2xzKFwiX2Z1bmNcIiwgW3tcImdyb3VwXCI6Z3JvdXAsXCJzeW1ib2xzXCI6W25hbWVdfV0pO1xuICAgIGZvcih2YXIgcyBpbiBuZXdfc3ltcylcblx0dGhpcy5zeW1ib2xzW3NdID0gbmV3X3N5bXNbc107XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuYWRkX3N5bWJvbF9yYXcgPSBmdW5jdGlvbihuYW1lLCBsYXRleCwgdGV4dCwgZ3JvdXApe1xuICAgIHZhciBzID0ge31cbiAgICBzW25hbWVdID0ge1wibGF0ZXhcIjpsYXRleCxcInRleHRcIjp0ZXh0fVxuICAgIHZhciBuZXdfc3ltcyA9IEd1cHB5U3ltYm9scy5hZGRfc3ltYm9scyhcIl9yYXdcIiwgW3tcImdyb3VwXCI6Z3JvdXAsXCJzeW1ib2xzXCI6c31dKTtcbiAgICBmb3IodmFyIHMgaW4gbmV3X3N5bXMpXG5cdHRoaXMuc3ltYm9sc1tzXSA9IG5ld19zeW1zW3NdO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnNlbGVjdF90byA9IGZ1bmN0aW9uKGxvYywgc2VsX2N1cnNvciwgc2VsX2NhcmV0LCBtb3VzZSl7XG4gICAgaWYobG9jLmN1cnJlbnQgPT0gc2VsX2N1cnNvciAmJiBsb2MuY2FyZXQgPT0gc2VsX2NhcmV0KXtcblx0dGhpcy5jdXJyZW50ID0gbG9jLmN1cnJlbnQ7XG5cdHRoaXMuY2FyZXQgPSBsb2MuY2FyZXQ7XG5cdHRoaXMuc2VsX3N0YXR1cyA9IEd1cHB5QmFja2VuZC5TRUxfTk9ORTtcbiAgICB9XG4gICAgZWxzZSBpZihsb2MucG9zID09IFwibGVmdFwiKXtcblx0dGhpcy5zZWxfZW5kID0ge1wibm9kZVwiOnNlbF9jdXJzb3IsXCJjYXJldFwiOnNlbF9jYXJldH07XG5cdHRoaXMuY3VycmVudCA9IGxvYy5jdXJyZW50O1xuXHR0aGlzLmNhcmV0ID0gbG9jLmNhcmV0O1xuXHR0aGlzLnNldF9zZWxfYm91bmRhcnkoR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfU1RBUlQsIG1vdXNlKTtcbiAgICB9XG4gICAgZWxzZSBpZihsb2MucG9zID09IFwicmlnaHRcIil7XG5cdHRoaXMuc2VsX3N0YXJ0ID0ge1wibm9kZVwiOnNlbF9jdXJzb3IsXCJjYXJldFwiOnNlbF9jYXJldH07XG5cdHRoaXMuY3VycmVudCA9IGxvYy5jdXJyZW50O1xuXHR0aGlzLmNhcmV0ID0gbG9jLmNhcmV0O1xuXHR0aGlzLnNldF9zZWxfYm91bmRhcnkoR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5ELCBtb3VzZSk7XG4gICAgfVxufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnNldF9zZWxfc3RhcnQgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuc2VsX3N0YXJ0ID0ge1wibm9kZVwiOnRoaXMuY3VycmVudCwgXCJjYXJldFwiOnRoaXMuY2FyZXR9O1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnNldF9zZWxfZW5kID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLnNlbF9lbmQgPSB7XCJub2RlXCI6dGhpcy5jdXJyZW50LCBcImNhcmV0XCI6dGhpcy5jYXJldH07XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuYWRkX3BhdGhzID0gZnVuY3Rpb24obixwYXRoKXtcbiAgICBpZihuLm5vZGVOYW1lID09IFwiZVwiKXtcblx0bi5zZXRBdHRyaWJ1dGUoXCJwYXRoXCIscGF0aCk7XG4gICAgfVxuICAgIGVsc2V7XG5cdHZhciBlcyA9IDEsIGZzID0gMSwgY3MgPSAxLCBscyA9IDE7XG5cdGZvcih2YXIgYyA9IG4uZmlyc3RDaGlsZDsgYyAhPSBudWxsOyBjID0gYy5uZXh0U2libGluZyl7XG5cdCAgICBpZihjLm5vZGVOYW1lID09IFwiY1wiKXsgdGhpcy5hZGRfcGF0aHMoYywgcGF0aCtcIl9jXCIrY3MpOyBjcysrOyB9XG5cdCAgICBlbHNlIGlmKGMubm9kZU5hbWUgPT0gXCJmXCIpeyB0aGlzLmFkZF9wYXRocyhjLCBwYXRoK1wiX2ZcIitmcyk7IGZzKys7IH1cblx0ICAgIGVsc2UgaWYoYy5ub2RlTmFtZSA9PSBcImxcIil7IHRoaXMuYWRkX3BhdGhzKGMsIHBhdGgrXCJfbFwiK2xzKTsgbHMrKzsgfVxuXHQgICAgZWxzZSBpZihjLm5vZGVOYW1lID09IFwiZVwiKXsgdGhpcy5hZGRfcGF0aHMoYywgcGF0aCtcIl9lXCIrZXMpOyBlcysrOyB9XG5cdH1cbiAgICB9XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuYWRkX2NsYXNzZXNfY3Vyc29ycyA9IGZ1bmN0aW9uKG4scGF0aCl7XG4gICAgaWYobi5ub2RlTmFtZSA9PSBcImVcIil7XG5cdHZhciB0ZXh0ID0gbi5maXJzdENoaWxkLm5vZGVWYWx1ZTtcblx0YW5zID0gXCJcIjtcblx0dmFyIHNlbF9jdXJzb3I7XG5cdHZhciB0ZXh0X25vZGUgPSBHdXBweVV0aWxzLmlzX3RleHQobik7XG5cdGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9TVEFSVCkgc2VsX2N1cnNvciA9IHRoaXMuc2VsX2VuZDtcblx0aWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX0VORCkgc2VsX2N1cnNvciA9IHRoaXMuc2VsX3N0YXJ0O1xuXHRpZih0aGlzLnNlbF9zdGF0dXMgIT0gR3VwcHlCYWNrZW5kLlNFTF9OT05FKXtcblx0ICAgIHZhciBzZWxfY2FyZXRfdGV4dCA9IEd1cHB5VXRpbHMuaXNfc21hbGwoc2VsX2N1cnNvci5ub2RlKSA/IEd1cHB5VXRpbHMuU01BTExfU0VMX0NBUkVUIDogR3VwcHlVdGlscy5TRUxfQ0FSRVQ7XG5cdCAgICBpZighdGV4dF9ub2RlICYmIHRleHQubGVuZ3RoID09IDAgJiYgbi5wYXJlbnROb2RlLmNoaWxkRWxlbWVudENvdW50ID4gMSl7XG5cdFx0c2VsX2NhcmV0X3RleHQgPSBcIlxcXFxibHVle1xcXFx4bWxDbGFzc3tndXBweV9lbHQgZ3VwcHlfYmxhbmsgZ3VwcHlfbG9jX1wiK24uZ2V0QXR0cmlidXRlKFwicGF0aFwiKStcIl8wfXtcIitzZWxfY2FyZXRfdGV4dCtcIn19XCI7XG5cdCAgICB9XG5cdCAgICBlbHNle1xuXHRcdHNlbF9jYXJldF90ZXh0ID0gXCJcXFxcYmx1ZXtcIitzZWxfY2FyZXRfdGV4dCtcIn1cIjtcblx0ICAgIH1cblx0ICAgIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9FTkQpIHNlbF9jYXJldF90ZXh0ID0gdGV4dF9ub2RlID8gXCJbXCIgOiBzZWxfY2FyZXRfdGV4dCArIFwiXFxcXFwiK0d1cHB5VXRpbHMuU0VMX0NPTE9SK1wie1wiO1xuXHQgICAgaWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUKSBzZWxfY2FyZXRfdGV4dCA9IHRleHRfbm9kZSA/IFwiXVwiIDogXCJ9XCIgKyBzZWxfY2FyZXRfdGV4dDtcblx0fVxuXHR2YXIgY2FyZXRfdGV4dCA9IFwiXCI7XG5cdHZhciB0ZW1wX2NhcmV0X3RleHQgPSBcIlwiO1xuXHRpZih0ZXh0Lmxlbmd0aCA9PSAwKXtcblx0ICAgIGlmKHRleHRfbm9kZSkgY2FyZXRfdGV4dCA9IFwiXFxcXF9cIjtcblx0ICAgIGVsc2UgaWYobi5wYXJlbnROb2RlLmNoaWxkRWxlbWVudENvdW50ID09IDEpe1xuXHRcdGlmKHRoaXMuY3VycmVudCA9PSBuKXtcblx0XHQgICAgdmFyIGJsYW5rX2NhcmV0ID0gdGhpcy5ibGFua19jYXJldCB8fCAoR3VwcHlVdGlscy5pc19zbWFsbCh0aGlzLmN1cnJlbnQpID8gR3VwcHlVdGlscy5TTUFMTF9DQVJFVCA6IEd1cHB5VXRpbHMuQ0FSRVQpO1xuXHRcdCAgICBhbnMgPSBcIlxcXFxyZWR7XFxcXHhtbENsYXNze21haW5fY3Vyc29yIGd1cHB5X2VsdCBndXBweV9ibGFuayBndXBweV9sb2NfXCIrbi5nZXRBdHRyaWJ1dGUoXCJwYXRoXCIpK1wiXzBcIitcIn17XCIrYmxhbmtfY2FyZXQrXCJ9fVwiO1xuXHRcdH1cblx0XHRlbHNlIGlmKHRoaXMudGVtcF9jdXJzb3Iubm9kZSA9PSBuKVxuXHRcdCAgICBhbnMgPSBcIlxcXFxncmF5e1xcXFx4bWxDbGFzc3tndXBweV9lbHQgZ3VwcHlfYmxhbmsgZ3VwcHlfbG9jX1wiK24uZ2V0QXR0cmlidXRlKFwicGF0aFwiKStcIl8wXCIrXCJ9e1s/XX19XCI7XG5cdFx0ZWxzZVxuXHRcdCAgICBhbnMgPSBcIlxcXFxibHVle1xcXFx4bWxDbGFzc3tndXBweV9lbHQgZ3VwcHlfYmxhbmsgZ3VwcHlfbG9jX1wiK24uZ2V0QXR0cmlidXRlKFwicGF0aFwiKStcIl8wXCIrXCJ9e1s/XX19XCI7XG5cdCAgICB9XG5cdCAgICBlbHNlIGlmKHRoaXMudGVtcF9jdXJzb3Iubm9kZSAhPSBuICYmIHRoaXMuY3VycmVudCAhPSBuICYmICghKHNlbF9jdXJzb3IpIHx8IHNlbF9jdXJzb3Iubm9kZSAhPSBuKSl7XG5cdFx0Ly8gVGhlc2UgYXJlIHRoZSBlbXB0eSBlIGVsZW1lbnRzIGF0IGVpdGhlciBlbmQgb2Zcblx0XHQvLyBhIGMgb3IgbSBub2RlLCBzdWNoIGFzIHRoZSBzcGFjZSBiZWZvcmUgYW5kXG5cdFx0Ly8gYWZ0ZXIgYm90aCB0aGUgc2luIGFuZCB4XjIgaW4gc2luKHheMilcblx0XHQvL1xuXHRcdC8vIEhlcmUsIHdlIGFkZCBpbiBhIHNtYWxsIGVsZW1lbnQgc28gdGhhdCB3ZSBjYW5cblx0XHQvLyB1c2UgdGhlIG1vdXNlIHRvIHNlbGVjdCB0aGVzZSBhcmVhc1xuXHRcdGFucyA9IFwiXFxcXHBoYW50b217XFxcXHhtbENsYXNze2d1cHB5X2VsdCBndXBweV9ibGFuayBndXBweV9sb2NfXCIrbi5nZXRBdHRyaWJ1dGUoXCJwYXRoXCIpK1wiXzBcIitcIn17XFxcXGN1cnNvclswLjFleF17MWV4fX19XCI7XG5cdCAgICB9XG5cdH1cblx0Zm9yKHZhciBpID0gMDsgaSA8IHRleHQubGVuZ3RoKzE7IGkrKyl7XG5cdCAgICBpZihuID09IHRoaXMuY3VycmVudCAmJiBpID09IHRoaXMuY2FyZXQgJiYgKHRleHQubGVuZ3RoID4gMCB8fCBuLnBhcmVudE5vZGUuY2hpbGRFbGVtZW50Q291bnQgPiAxKSl7XG5cdFx0aWYodGV4dF9ub2RlKXtcblx0XHQgICAgaWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUKVxuXHRcdFx0Y2FyZXRfdGV4dCA9IFwiW1wiO1xuXHRcdCAgICBlbHNlIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9FTkQpXG5cdFx0XHRjYXJldF90ZXh0ID0gXCJdXCI7XG5cdFx0ICAgIGVsc2Vcblx0XHRcdGNhcmV0X3RleHQgPSBcIlxcXFxfXCI7XG5cdFx0fVxuXHRcdGVsc2V7XG5cdFx0ICAgIGNhcmV0X3RleHQgPSBHdXBweVV0aWxzLmlzX3NtYWxsKHRoaXMuY3VycmVudCkgPyBHdXBweVV0aWxzLlNNQUxMX0NBUkVUIDogR3VwcHlVdGlscy5DQVJFVDtcblx0XHQgICAgaWYodGV4dC5sZW5ndGggPT0gMClcblx0XHRcdGNhcmV0X3RleHQgPSBcIlxcXFxyZWR7XFxcXHhtbENsYXNze21haW5fY3Vyc29yIGd1cHB5X2VsdCBndXBweV9ibGFuayBndXBweV9sb2NfXCIrbi5nZXRBdHRyaWJ1dGUoXCJwYXRoXCIpK1wiXzB9e1wiK2NhcmV0X3RleHQrXCJ9fVwiO1xuXHRcdCAgICBlbHNle1xuXHRcdFx0Y2FyZXRfdGV4dCA9IFwiXFxcXHJlZHtcXFxceG1sQ2xhc3N7bWFpbl9jdXJzb3J9e1wiK2NhcmV0X3RleHQrXCJ9fVwiXG5cdFx0ICAgIH1cblx0XHQgICAgaWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUKVxuXHRcdFx0Y2FyZXRfdGV4dCA9IGNhcmV0X3RleHQgKyBcIlxcXFxcIitHdXBweVV0aWxzLlNFTF9DT0xPUitcIntcIjtcblx0XHQgICAgZWxzZSBpZih0aGlzLnNlbF9zdGF0dXMgPT0gR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EKVxuXHRcdFx0Y2FyZXRfdGV4dCA9IFwifVwiICsgY2FyZXRfdGV4dDtcblx0XHR9XG5cdFx0YW5zICs9IGNhcmV0X3RleHQ7XG5cdCAgICB9XG5cdCAgICBlbHNlIGlmKG4gPT0gdGhpcy5jdXJyZW50ICYmIGkgPT0gdGhpcy5jYXJldCAmJiB0ZXh0X25vZGUpe1xuXHRcdGFucyArPSBjYXJldF90ZXh0O1xuXHQgICAgfVxuXHQgICAgZWxzZSBpZih0aGlzLnNlbF9zdGF0dXMgIT0gR3VwcHlCYWNrZW5kLlNFTF9OT05FICYmIHNlbF9jdXJzb3Iubm9kZSA9PSBuICYmIGkgPT0gc2VsX2N1cnNvci5jYXJldCl7XG5cdFx0YW5zICs9IHNlbF9jYXJldF90ZXh0O1xuXHQgICAgfVxuXHQgICAgZWxzZSBpZih0aGlzLnRlbXBfY3Vyc29yLm5vZGUgPT0gbiAmJiBpID09IHRoaXMudGVtcF9jdXJzb3IuY2FyZXQgJiYgKHRleHQubGVuZ3RoID4gMCB8fCBuLnBhcmVudE5vZGUuY2hpbGRFbGVtZW50Q291bnQgPiAxKSl7XG5cdFx0aWYodGV4dF9ub2RlKSBcblx0XHQgICAgdGVtcF9jYXJldF90ZXh0ID0gXCIuXCI7XG5cdFx0ZWxzZXtcblx0XHQgICAgdGVtcF9jYXJldF90ZXh0ID0gR3VwcHlVdGlscy5pc19zbWFsbCh0aGlzLmN1cnJlbnQpID8gR3VwcHlVdGlscy5URU1QX1NNQUxMX0NBUkVUIDogR3VwcHlVdGlscy5URU1QX0NBUkVUO1xuXHRcdCAgICBpZih0ZXh0Lmxlbmd0aCA9PSAwKXtcblx0XHRcdHRlbXBfY2FyZXRfdGV4dCA9IFwiXFxcXGdyYXl7XFxcXHhtbENsYXNze2d1cHB5X2VsdCBndXBweV9ibGFuayBndXBweV9sb2NfXCIrbi5nZXRBdHRyaWJ1dGUoXCJwYXRoXCIpK1wiXzB9e1wiK3RlbXBfY2FyZXRfdGV4dCtcIn19XCI7XG5cdFx0ICAgIH1cblx0XHQgICAgZWxzZVxuXHRcdFx0dGVtcF9jYXJldF90ZXh0ID0gXCJcXFxcZ3JheXtcIit0ZW1wX2NhcmV0X3RleHQrXCJ9XCI7XG5cdFx0fVxuXHRcdGFucyArPSB0ZW1wX2NhcmV0X3RleHQ7XG5cdCAgICB9XG5cdCAgICBpZihpIDwgdGV4dC5sZW5ndGgpIGFucyArPSBcIlxcXFx4bWxDbGFzc3tndXBweV9lbHQgZ3VwcHlfbG9jX1wiK24uZ2V0QXR0cmlidXRlKFwicGF0aFwiKStcIl9cIitpK1wifXtcIit0ZXh0W2ldK1wifVwiO1xuXHR9XG5cdGlmKHRleHRfbm9kZSAmJiBuID09IHRoaXMuY3VycmVudCl7XG5cdCAgICBhbnMgPSBcIlxcXFx4bWxDbGFzc3tndXBweV90ZXh0X2N1cnJlbnR9e3tcIithbnMrXCJ9fVwiO1xuXHR9XG5cdG4uc2V0QXR0cmlidXRlKFwicmVuZGVyXCIsIGFucyk7XG5cdG4ucmVtb3ZlQXR0cmlidXRlKFwicGF0aFwiKTtcbiAgICB9XG4gICAgZWxzZXtcblx0Zm9yKHZhciBjID0gbi5maXJzdENoaWxkOyBjICE9IG51bGw7IGMgPSBjLm5leHRTaWJsaW5nKXtcblx0ICAgIGlmKGMubm9kZU5hbWUgPT0gXCJjXCIgfHwgYy5ub2RlTmFtZSA9PSBcImxcIiB8fCBjLm5vZGVOYW1lID09IFwiZlwiIHx8IGMubm9kZU5hbWUgPT0gXCJlXCIpeyB0aGlzLmFkZF9jbGFzc2VzX2N1cnNvcnMoYyk7IH1cblx0fVxuICAgIH1cbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5yZW1vdmVfY3Vyc29yc19jbGFzc2VzID0gZnVuY3Rpb24obil7XG4gICAgaWYobi5ub2RlTmFtZSA9PSBcImVcIil7XG5cdG4ucmVtb3ZlQXR0cmlidXRlKFwicGF0aFwiKTtcblx0bi5yZW1vdmVBdHRyaWJ1dGUoXCJyZW5kZXJcIik7XG5cdG4ucmVtb3ZlQXR0cmlidXRlKFwiY3VycmVudFwiKTtcblx0bi5yZW1vdmVBdHRyaWJ1dGUoXCJ0ZW1wXCIpO1xuICAgIH1cbiAgICBlbHNle1xuXHRmb3IodmFyIGMgPSBuLmZpcnN0Q2hpbGQ7IGMgIT0gbnVsbDsgYyA9IGMubmV4dFNpYmxpbmcpe1xuXHQgICAgaWYoYy5ub2RlVHlwZSA9PSAxKXsgdGhpcy5yZW1vdmVfY3Vyc29yc19jbGFzc2VzKGMpOyB9XG5cdH1cbiAgICB9XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuZG93bl9mcm9tX2YgPSBmdW5jdGlvbigpe1xuICAgIHZhciBubiA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkO1xuICAgIHdoaWxlKG5uICE9IG51bGwgJiYgbm4ubm9kZU5hbWUgIT0gJ2MnICYmIG5uLm5vZGVOYW1lICE9ICdsJykgbm4gPSBubi5uZXh0U2libGluZztcbiAgICBpZihubiAhPSBudWxsKXtcblx0d2hpbGUobm4ubm9kZU5hbWUgPT0gJ2wnKSBubiA9IG5uLmZpcnN0Q2hpbGQ7XG5cdHRoaXMuY3VycmVudCA9IG5uLmZpcnN0Q2hpbGQ7XG4gICAgfVxufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmRvd25fZnJvbV9mX3RvX2JsYW5rID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgbm4gPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZDtcbiAgICB3aGlsZShubiAhPSBudWxsICYmICEobm4ubm9kZU5hbWUgPT0gJ2MnICYmIG5uLmNoaWxkcmVuLmxlbmd0aCA9PSAxICYmIG5uLmZpcnN0Q2hpbGQuZmlyc3RDaGlsZC5ub2RlVmFsdWUgPT0gXCJcIikpe1xuXHRubiA9IG5uLm5leHRTaWJsaW5nO1xuICAgIH1cbiAgICBpZihubiAhPSBudWxsKXtcblx0Ly9TYW5pdHkgY2hlY2s6XG5cdFxuXHR3aGlsZShubi5ub2RlTmFtZSA9PSAnbCcpIG5uID0gbm4uZmlyc3RDaGlsZDtcblx0aWYobm4ubm9kZU5hbWUgIT0gJ2MnIHx8IG5uLmZpcnN0Q2hpbGQubm9kZU5hbWUgIT0gJ2UnKXtcblx0ICAgIHRoaXMucHJvYmxlbSgnZGZmdGInKTtcblx0ICAgIHJldHVybjtcblx0fVxuXHR0aGlzLmN1cnJlbnQgPSBubi5maXJzdENoaWxkO1xuICAgIH1cbiAgICBlbHNlIHRoaXMuZG93bl9mcm9tX2YoKTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5kZWxldGVfZnJvbV9mID0gZnVuY3Rpb24odG9faW5zZXJ0KXtcbiAgICB2YXIgbiA9IHRoaXMuY3VycmVudDtcbiAgICB2YXIgcCA9IG4ucGFyZW50Tm9kZTtcbiAgICB2YXIgcHJldiA9IG4ucHJldmlvdXNTaWJsaW5nO1xuICAgIHZhciBuZXh0ID0gbi5uZXh0U2libGluZztcbiAgICB2YXIgbWlkZGxlID0gdG9faW5zZXJ0IHx8IFwiXCI7XG4gICAgdmFyIG5ld19ub2RlID0gdGhpcy5tYWtlX2UocHJldi5maXJzdENoaWxkLnRleHRDb250ZW50ICsgbWlkZGxlICsgbmV4dC5maXJzdENoaWxkLnRleHRDb250ZW50KTtcbiAgICB0aGlzLmN1cnJlbnQgPSBuZXdfbm9kZTtcbiAgICB0aGlzLmNhcmV0ID0gcHJldi5maXJzdENoaWxkLnRleHRDb250ZW50Lmxlbmd0aDtcbiAgICBwLmluc2VydEJlZm9yZShuZXdfbm9kZSwgcHJldik7XG4gICAgcC5yZW1vdmVDaGlsZChwcmV2KTtcbiAgICBwLnJlbW92ZUNoaWxkKG4pO1xuICAgIHAucmVtb3ZlQ2hpbGQobmV4dCk7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc3ltYm9sX3RvX25vZGUgPSBmdW5jdGlvbihzeW1fbmFtZSwgY29udGVudCl7XG4gICAgLy8gc3ltX25hbWUgaXMgYSBrZXkgaW4gdGhlIHN5bWJvbHMgZGljdGlvbmFyeVxuICAgIC8vXG4gICAgLy8gY29udGVudCBpcyBhIGxpc3Qgb2Ygbm9kZXMgdG8gaW5zZXJ0XG4gICAgdmFyIGJhc2UgPSB0aGlzLmRvYy5iYXNlO1xuICAgIHZhciBzID0gdGhpcy5zeW1ib2xzW3N5bV9uYW1lXTtcbiAgICB2YXIgZiA9IGJhc2UuY3JlYXRlRWxlbWVudChcImZcIik7XG4gICAgaWYoXCJ0eXBlXCIgaW4gcykgZi5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsc1tcInR5cGVcIl0pXG4gICAgaWYoXCJncm91cFwiIGluIHMpIGYuc2V0QXR0cmlidXRlKFwiZ3JvdXBcIixzW1wiZ3JvdXBcIl0pXG4gICAgaWYoc1snY2hhciddKSBmLnNldEF0dHJpYnV0ZShcImNcIixcInllc1wiKTtcbiAgICBcbiAgICB2YXIgZmlyc3RfcmVmID0gLTE7XG4gICAgdmFyIHJlZnNfY291bnQgPSAwO1xuICAgIHZhciBsaXN0cyA9IHt9XG4gICAgdmFyIGZpcnN0O1xuXG4gICAgLy8gTWFrZSB0aGUgYiBub2RlcyBmb3IgcmVuZGVyaW5nIGVhY2ggb3V0cHV0ICAgIFxuICAgIGZvcih2YXIgdCBpbiBzW1wib3V0cHV0XCJdKXtcblx0dmFyIGIgPSBiYXNlLmNyZWF0ZUVsZW1lbnQoXCJiXCIpO1xuXHRiLnNldEF0dHJpYnV0ZShcInBcIix0KTtcblxuXHR2YXIgb3V0ID0gc1tcIm91dHB1dFwiXVt0XTtcblx0aWYodHlwZW9mIG91dCA9PSAnc3RyaW5nJyl7XG5cdCAgICBvdXQgPSBvdXQuc3BsaXQoLyhcXHtcXCRbMC05XSsoPzpcXHtbXn1dK1xcfSkqXFx9KS9nKTtcblx0ICAgIGZvcih2YXIgaSA9IDA7IGkgPCBvdXQubGVuZ3RoOyBpKyspe1xuXHRcdG0gPSBvdXRbaV0ubWF0Y2goL15cXHtcXCQoWzAtOV0rKSgoPzpcXHtbXn1dK1xcfSkqKVxcfSQvKTtcblx0XHRpZihtKXtcblx0XHQgICAgLy9jb25zb2xlLmxvZyhcIk9cIixvdXQpO1xuXHRcdCAgICBvdXRbaV0gPSB7J3JlZic6cGFyc2VJbnQobVsxXSl9O1xuXHRcdCAgICBpZihtWzJdLmxlbmd0aCA+IDApe1xuXHRcdFx0bW0gPSBtWzJdLm1hdGNoKC9cXHtbXn1dKlxcfS9nKTtcblx0XHRcdG91dFtpXVsnZCddID0gbW0ubGVuZ3RoO1xuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IG1tLmxlbmd0aDsgaisrKXtcblx0XHRcdCAgICBvdXRbaV1bJ3NlcCcral0gPSBtbVtqXS5zdWJzdHJpbmcoMSxtbVtqXS5sZW5ndGgtMSk7XG5cdFx0XHR9XG5cdFx0ICAgIH1cblx0XHR9XG5cdCAgICB9XG5cdH1cblx0Zm9yKHZhciBpID0gMDsgaSA8IG91dC5sZW5ndGg7IGkrKyl7XG5cdCAgICBpZih0eXBlb2Ygb3V0W2ldID09ICdzdHJpbmcnIHx8IG91dFtpXSBpbnN0YW5jZW9mIFN0cmluZyl7XG5cdFx0dmFyIG50ID0gYmFzZS5jcmVhdGVUZXh0Tm9kZShvdXRbaV0pO1xuXHRcdGIuYXBwZW5kQ2hpbGQobnQpO1xuXHQgICAgfVxuXHQgICAgZWxzZXtcblx0XHR2YXIgbnQgPSBiYXNlLmNyZWF0ZUVsZW1lbnQoXCJyXCIpO1xuXHRcdGZvcih2YXIgYXR0ciBpbiBvdXRbaV0pe1xuXHRcdCAgICBudC5zZXRBdHRyaWJ1dGUoYXR0cixvdXRbaV1bYXR0cl0pO1xuXHRcdH1cblx0XHRpZih0ID09ICdsYXRleCcpIHtcblx0XHQgICAgaWYoZmlyc3RfcmVmID09IC0xKSBmaXJzdF9yZWYgPSBvdXRbaV1bJ3JlZiddO1xuXHRcdCAgICBpZignZCcgaW4gb3V0W2ldKSBsaXN0c1tyZWZzX2NvdW50XSA9IG91dFtpXVsnZCddXG5cdFx0ICAgIHJlZnNfY291bnQrKztcblx0XHR9XG5cdFx0Yi5hcHBlbmRDaGlsZChudCk7XG5cdCAgICB9XG5cdH1cblx0Zi5hcHBlbmRDaGlsZChiKTtcbiAgICB9XG4gICAgLy8gTm93IG1ha2UgdGhlIGMgbm9kZXMgZm9yIHN0b3JpbmcgdGhlIGNvbnRlbnRcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgcmVmc19jb3VudDsgaSsrKXtcblx0dmFyIG5jID0gYmFzZS5jcmVhdGVFbGVtZW50KFwiY1wiKTtcblx0aWYoaSBpbiBjb250ZW50KXtcblx0ICAgIHZhciBub2RlX2xpc3QgPSBjb250ZW50W2ldO1xuXHQgICAgZm9yKHZhciBzZSA9IDA7IHNlIDwgbm9kZV9saXN0Lmxlbmd0aDsgc2UrKyl7XG5cdFx0bmMuYXBwZW5kQ2hpbGQobm9kZV9saXN0W3NlXS5jbG9uZU5vZGUodHJ1ZSkpO1xuXHQgICAgfVxuXHR9XG5cdGVsc2UgbmMuYXBwZW5kQ2hpbGQodGhpcy5tYWtlX2UoXCJcIikpO1xuXHRpZihpKzEgPT0gZmlyc3RfcmVmKSBmaXJzdCA9IG5jLmxhc3RDaGlsZDtcblx0aWYoc1snYXR0cnMnXSlcblx0ICAgIGZvcih2YXIgYSBpbiAoc1snYXR0cnMnXVtpXSB8fCB7fSkpXG5cdFx0bmMuc2V0QXR0cmlidXRlKGEsc1snYXR0cnMnXVtpXVthXSk7XG5cdCAgICAvLyBmb3IodmFyIGEgaW4gc1snYXR0cnMnXSlcblx0ICAgIC8vIFx0aWYoc1snYXR0cnMnXVthXVtpXSAhPSAwKSBuYy5zZXRBdHRyaWJ1dGUoYSxzWydhdHRycyddW2FdW2ldKTtcblx0aWYoaSBpbiBsaXN0cyl7XG5cdCAgICB2YXIgcGFyID0gZjtcblx0ICAgIGZvcih2YXIgaiA9IDA7IGogPCBsaXN0c1tpXTsgaisrKXtcblx0XHR2YXIgbmwgPSBiYXNlLmNyZWF0ZUVsZW1lbnQoXCJsXCIpO1xuXHRcdG5sLnNldEF0dHJpYnV0ZShcInNcIixcIjFcIik7XG5cdFx0cGFyLmFwcGVuZENoaWxkKG5sKTtcblx0XHRwYXIgPSBubDtcblx0XHRpZihqID09IGxpc3RzW2ldLTEpIG5sLmFwcGVuZENoaWxkKG5jKTtcblx0ICAgIH1cblx0fVxuXHRlbHNlIGYuYXBwZW5kQ2hpbGQobmMpO1xuICAgIH1cbiAgICByZXR1cm4ge1wiZlwiOmYsIFwiZmlyc3RcIjpmaXJzdH07XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuaW5zZXJ0X3N5bWJvbCA9IGZ1bmN0aW9uKHN5bV9uYW1lKXtcbiAgICB2YXIgcyA9IHRoaXMuc3ltYm9sc1tzeW1fbmFtZV07XG4gICAgaWYodGhpcy5pc19ibGFja2xpc3RlZChzWyd0eXBlJ10pKXtcblx0cmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICB2YXIgbm9kZV9saXN0ID0ge307XG4gICAgdmFyIGNvbnRlbnQgPSB7fTtcbiAgICB2YXIgbGVmdF9waWVjZSxyaWdodF9waWVjZTtcbiAgICB2YXIgY3VyID0gc1snY3VycmVudCddID09IG51bGwgPyAwIDogcGFyc2VJbnQoc1snY3VycmVudCddKTtcbiAgICB2YXIgdG9fcmVtb3ZlID0gW107XG4gICAgdmFyIHRvX3JlcGxhY2UgPSBudWxsO1xuICAgIHZhciByZXBsYWNlX2YgPSBmYWxzZTtcbiAgICBcbiAgICBcbiAgICBpZihjdXIgPiAwKXtcblx0Y3VyLS07XG5cdGlmKHRoaXMuc2VsX3N0YXR1cyAhPSBHdXBweUJhY2tlbmQuU0VMX05PTkUpe1xuXHQgICAgdmFyIHNlbCA9IHRoaXMuc2VsX2dldCgpO1xuXHQgICAgc2VsX3BhcmVudCA9IHNlbC5pbnZvbHZlZFswXS5wYXJlbnROb2RlO1xuXHQgICAgdG9fcmVtb3ZlID0gc2VsLmludm9sdmVkO1xuXHQgICAgbGVmdF9waWVjZSA9IHRoaXMubWFrZV9lKHNlbC5yZW1uYW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNsaWNlKDAsdGhpcy5zZWxfc3RhcnQuY2FyZXQpKTtcblx0ICAgIHJpZ2h0X3BpZWNlID0gdGhpcy5tYWtlX2Uoc2VsLnJlbW5hbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc2xpY2UodGhpcy5zZWxfc3RhcnQuY2FyZXQpKTtcblx0ICAgIGNvbnRlbnRbY3VyXSA9IHNlbC5ub2RlX2xpc3Q7XG5cdH1cblx0ZWxzZSBpZihzWydjdXJyZW50X3R5cGUnXSA9PSAndG9rZW4nKXtcblx0ICAgIC8vIElmIHdlJ3JlIGF0IHRoZSBiZWdpbm5pbmcsIHRoZW4gdGhlIHRva2VuIGlzIHRoZSBwcmV2aW91cyBmIG5vZGVcblx0ICAgIGlmKHRoaXMuY2FyZXQgPT0gMCAmJiB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nICE9IG51bGwpe1xuXHRcdGNvbnRlbnRbY3VyXSA9IFt0aGlzLm1ha2VfZShcIlwiKSwgdGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZywgdGhpcy5tYWtlX2UoXCJcIildO1xuXHRcdHRvX3JlcGxhY2UgPSB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nO1xuXHRcdHJlcGxhY2VfZiA9IHRydWU7XG5cdCAgICB9XG5cdCAgICBlbHNle1xuXHRcdC8vIGxvb2sgZm9yIFswLTkuXSt8W2EtekEtWl0gaW1tZWRpYXRlbHkgcHJlY2VlZGluZyB0aGUgY2FyZXQgYW5kIHVzZSB0aGF0IGFzIHRva2VuXG5cdFx0dmFyIHByZXYgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKDAsdGhpcy5jYXJldCk7XG5cdFx0dmFyIHRva2VuID0gcHJldi5tYXRjaCgvWzAtOS5dKyR8W2EtekEtWl0kLyk7XG5cdFx0aWYodG9rZW4gIT0gbnVsbCAmJiB0b2tlbi5sZW5ndGggPiAwKXtcblx0XHQgICAgdG9rZW4gPSB0b2tlblswXTtcblx0XHQgICAgbGVmdF9waWVjZSA9IHRoaXMubWFrZV9lKHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zbGljZSgwLHRoaXMuY2FyZXQtdG9rZW4ubGVuZ3RoKSk7XG5cdFx0ICAgIHJpZ2h0X3BpZWNlID0gdGhpcy5tYWtlX2UodGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNsaWNlKHRoaXMuY2FyZXQpKTtcblx0XHQgICAgY29udGVudFtjdXJdID0gW3RoaXMubWFrZV9lKHRva2VuKV07XG5cdFx0fVxuXHQgICAgfVxuXHR9XG4gICAgfVxuICAgIGlmKCFyZXBsYWNlX2YgJiYgKGxlZnRfcGllY2UgPT0gbnVsbCB8fCByaWdodF9waWVjZSA9PSBudWxsKSl7XG5cdGxlZnRfcGllY2UgPSB0aGlzLm1ha2VfZSh0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc2xpY2UoMCx0aGlzLmNhcmV0KSk7XG5cdHJpZ2h0X3BpZWNlID0gdGhpcy5tYWtlX2UodGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNsaWNlKHRoaXMuY2FyZXQpKTtcblx0dG9fcmVtb3ZlID0gW3RoaXMuY3VycmVudF07XG4gICAgfVxuXG4gICAgLy8gQnkgbm93OlxuICAgIC8vIFxuICAgIC8vIGNvbnRlbnQgY29udGFpbnMgd2hhdGV2ZXIgd2Ugd2FudCB0byBwcmUtcG9wdWxhdGUgdGhlICdjdXJyZW50JyBmaWVsZCB3aXRoIChpZiBhbnkpXG4gICAgLy9cbiAgICAvLyByaWdodF9waWVjZSBjb250YWlucyB3aGF0ZXZlciBjb250ZW50IHdhcyBpbiBhbiBpbnZvbHZlZCBub2RlXG4gICAgLy8gdG8gdGhlIHJpZ2h0IG9mIHRoZSBjdXJzb3IgYnV0IGlzIG5vdCBwYXJ0IG9mIHRoZSBpbnNlcnRpb24uXG4gICAgLy8gQW5hbG9nb3VzbHkgZm9yIGxlZnRfcGllY2VcbiAgICAvL1xuICAgIC8vIFRodXMgYWxsIHdlIHNob3VsZCBoYXZlIHRvIGRvIG5vdyBpcyBzeW1ib2xfdG9fbm9kZShzeW1fdHlwZSxcbiAgICAvLyBjb250ZW50KSBhbmQgdGhlbiBhZGQgdGhlIGxlZnRfcGllY2UsIHJlc3VsdGluZyBub2RlLCBhbmRcbiAgICAvLyByaWdodF9waWVjZSBpbiB0aGF0IG9yZGVyLlxuICAgIFxuICAgIHZhciBuZXdfY3VycmVudCA9IG51bGw7XG4gICAgdmFyIGN1cnJlbnRfcGFyZW50ID0gdGhpcy5jdXJyZW50LnBhcmVudE5vZGU7XG4gICAgXG4gICAgdmFyIHN5bSA9IHRoaXMuc3ltYm9sX3RvX25vZGUoc3ltX25hbWUsY29udGVudCk7XG4gICAgdmFyIGYgPSBzeW0uZjtcbiAgICB2YXIgbmV3X2N1cnJlbnQgPSBzeW0uZmlyc3Q7XG5cbiAgICB2YXIgbmV4dCA9IHRoaXMuY3VycmVudC5uZXh0U2libGluZztcblxuICAgIGlmKHJlcGxhY2VfZil7XG5cdGN1cnJlbnRfcGFyZW50LnJlcGxhY2VDaGlsZChmLHRvX3JlcGxhY2UpO1xuICAgIH1cbiAgICBlbHNle1xuXHRpZih0b19yZW1vdmUubGVuZ3RoID09IDApIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuY3VycmVudCk7XG5cdFxuXHRmb3IodmFyIGkgPSAwOyBpIDwgdG9fcmVtb3ZlLmxlbmd0aDsgaSsrKXtcblx0ICAgIGlmKG5leHQgPT0gdG9fcmVtb3ZlW2ldKSBuZXh0ID0gbmV4dC5uZXh0U2libGluZztcblx0ICAgIGN1cnJlbnRfcGFyZW50LnJlbW92ZUNoaWxkKHRvX3JlbW92ZVtpXSk7XG5cdH1cblx0Y3VycmVudF9wYXJlbnQuaW5zZXJ0QmVmb3JlKGxlZnRfcGllY2UsIG5leHQpO1xuXHRjdXJyZW50X3BhcmVudC5pbnNlcnRCZWZvcmUoZiwgbmV4dCk7XG5cdGN1cnJlbnRfcGFyZW50Lmluc2VydEJlZm9yZShyaWdodF9waWVjZSwgbmV4dCk7XG4gICAgfVxuICAgIFxuICAgIHRoaXMuY2FyZXQgPSAwO1xuICAgIHRoaXMuY3VycmVudCA9IGY7XG4gICAgaWYoc1snY2hhciddKXtcblx0dGhpcy5jdXJyZW50ID0gdGhpcy5jdXJyZW50Lm5leHRTaWJsaW5nO1xuICAgIH1cbiAgICBlbHNlIHRoaXMuZG93bl9mcm9tX2ZfdG9fYmxhbmsoKTtcblxuICAgIHRoaXMuc2VsX2NsZWFyKCk7XG4gICAgdGhpcy5jaGVja3BvaW50KCk7XG4gICAgcmV0dXJuIHRydWU7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc2VsX2dldCA9IGZ1bmN0aW9uKCl7XG4gICAgaWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5QmFja2VuZC5TRUxfTk9ORSl7XG5cdHJldHVybiBudWxsO1xuICAgIH1cbiAgICB2YXIgaW52b2x2ZWQgPSBbXTtcbiAgICB2YXIgbm9kZV9saXN0ID0gW107XG4gICAgdmFyIHJlbW5hbnQgPSBudWxsO1xuXG4gICAgaWYodGhpcy5zZWxfc3RhcnQubm9kZSA9PSB0aGlzLnNlbF9lbmQubm9kZSl7XG5cdHJldHVybiB7XCJub2RlX2xpc3RcIjpbdGhpcy5tYWtlX2UodGhpcy5zZWxfc3RhcnQubm9kZS5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcodGhpcy5zZWxfc3RhcnQuY2FyZXQsIHRoaXMuc2VsX2VuZC5jYXJldCkpXSxcblx0XHRcInJlbW5hbnRcIjp0aGlzLm1ha2VfZSh0aGlzLnNlbF9zdGFydC5ub2RlLmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZygwLCB0aGlzLnNlbF9zdGFydC5jYXJldCkgKyB0aGlzLnNlbF9lbmQubm9kZS5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcodGhpcy5zZWxfZW5kLmNhcmV0KSksXG5cdFx0XCJpbnZvbHZlZFwiOlt0aGlzLnNlbF9zdGFydC5ub2RlXX07XG4gICAgfVxuICAgIFxuICAgIG5vZGVfbGlzdC5wdXNoKHRoaXMubWFrZV9lKHRoaXMuc2VsX3N0YXJ0Lm5vZGUuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKHRoaXMuc2VsX3N0YXJ0LmNhcmV0KSkpO1xuICAgIGludm9sdmVkLnB1c2godGhpcy5zZWxfc3RhcnQubm9kZSk7XG4gICAgaW52b2x2ZWQucHVzaCh0aGlzLnNlbF9lbmQubm9kZSk7XG4gICAgcmVtbmFudCA9IHRoaXMubWFrZV9lKHRoaXMuc2VsX3N0YXJ0Lm5vZGUuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKDAsIHRoaXMuc2VsX3N0YXJ0LmNhcmV0KSArIHRoaXMuc2VsX2VuZC5ub2RlLmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZyh0aGlzLnNlbF9lbmQuY2FyZXQpKTtcbiAgICB2YXIgbiA9IHRoaXMuc2VsX3N0YXJ0Lm5vZGUubmV4dFNpYmxpbmc7XG4gICAgd2hpbGUobiAhPSBudWxsICYmIG4gIT0gdGhpcy5zZWxfZW5kLm5vZGUpe1xuXHRpbnZvbHZlZC5wdXNoKG4pO1xuXHRub2RlX2xpc3QucHVzaChuKTtcblx0biA9IG4ubmV4dFNpYmxpbmc7XG4gICAgfVxuICAgIG5vZGVfbGlzdC5wdXNoKHRoaXMubWFrZV9lKHRoaXMuc2VsX2VuZC5ub2RlLmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZygwLCB0aGlzLnNlbF9lbmQuY2FyZXQpKSk7XG4gICAgcmV0dXJuIHtcIm5vZGVfbGlzdFwiOm5vZGVfbGlzdCxcblx0ICAgIFwicmVtbmFudFwiOnJlbW5hbnQsXG5cdCAgICBcImludm9sdmVkXCI6aW52b2x2ZWQsXG5cdCAgICBcImN1cnNvclwiOjB9O1xufVxuXG4vLyBHdXBweUJhY2tlbmQucHJvdG90eXBlLnByaW50X3NlbGVjdGlvbiA9IGZ1bmN0aW9uKCl7XG4vLyAgICAgdmFyIHNlbCA9IHRoaXMuc2VsX2dldCgpO1xuLy8gICAgIGlmKHNlbCA9PSBudWxsKSByZXR1cm4gXCJbbm9uZV1cIjtcbi8vICAgICB2YXIgYW5zID0gXCJcIjtcbi8vICAgICBhbnMgKz0gXCJub2RlX2xpc3Q6IFxcblwiO1xuLy8gICAgIGZvcih2YXIgaSA9IDA7IGkgPCBzZWwubm9kZV9saXN0Lmxlbmd0aDsgaSsrKXtcbi8vIFx0dmFyIG4gPSBzZWwubm9kZV9saXN0W2ldO1xuLy8gXHRhbnMgKz0gKG5ldyBYTUxTZXJpYWxpemVyKCkpLnNlcmlhbGl6ZVRvU3RyaW5nKG4pICsgXCJcXG5cIjtcbi8vICAgICB9XG4vLyAgICAgYW5zICs9IFwiXFxuaW52b2x2ZWQ6IFxcblwiO1xuLy8gICAgIGZvcih2YXIgaSA9IDA7IGkgPCBzZWwuaW52b2x2ZWQubGVuZ3RoOyBpKyspe1xuLy8gXHR2YXIgbiA9IHNlbC5pbnZvbHZlZFtpXTtcbi8vIFx0YW5zICs9IChuZXcgWE1MU2VyaWFsaXplcigpKS5zZXJpYWxpemVUb1N0cmluZyhuKSArIFwiXFxuXCI7XG4vLyAgICAgfVxuLy8gfVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLm1ha2VfZSA9IGZ1bmN0aW9uKHRleHQpe1xuICAgIHZhciBiYXNlID0gdGhpcy5kb2MuYmFzZTtcbiAgICB2YXIgbmV3X25vZGUgPSBiYXNlLmNyZWF0ZUVsZW1lbnQoXCJlXCIpO1xuICAgIG5ld19ub2RlLmFwcGVuZENoaWxkKGJhc2UuY3JlYXRlVGV4dE5vZGUodGV4dCkpO1xuICAgIHJldHVybiBuZXdfbm9kZTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5pbnNlcnRfc3RyaW5nID0gZnVuY3Rpb24ocyl7XG4gICAgaWYodGhpcy5zZWxfc3RhdHVzICE9IEd1cHB5QmFja2VuZC5TRUxfTk9ORSl7XG5cdHRoaXMuc2VsX2RlbGV0ZSgpO1xuXHR0aGlzLnNlbF9jbGVhcigpO1xuICAgIH1cbiAgICB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3BsaWNlKHRoaXMuY2FyZXQscylcbiAgICB0aGlzLmNhcmV0ICs9IHMubGVuZ3RoO1xuICAgIHRoaXMuY2hlY2twb2ludCgpO1xuICAgIGlmKHRoaXMuYXV0b3JlcGxhY2UpIHRoaXMuY2hlY2tfZm9yX3N5bWJvbCgpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnNlbF9jb3B5ID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgc2VsID0gdGhpcy5zZWxfZ2V0KCk7XG4gICAgaWYoIXNlbCkgcmV0dXJuO1xuICAgIHRoaXMuY2xpcGJvYXJkID0gW107XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHNlbC5ub2RlX2xpc3QubGVuZ3RoOyBpKyspe1xuXHR0aGlzLmNsaXBib2FyZC5wdXNoKHNlbC5ub2RlX2xpc3RbaV0uY2xvbmVOb2RlKHRydWUpKTtcbiAgICB9XG4gICAgdGhpcy5zZWxfY2xlYXIoKTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5zZWxfY3V0ID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgbm9kZV9saXN0ID0gdGhpcy5zZWxfZGVsZXRlKCk7XG4gICAgaWYoIW5vZGVfbGlzdCkgcmV0dXJuO1xuICAgIHRoaXMuY2xpcGJvYXJkID0gW107XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IG5vZGVfbGlzdC5sZW5ndGg7IGkrKyl7XG5cdHRoaXMuY2xpcGJvYXJkLnB1c2gobm9kZV9saXN0W2ldLmNsb25lTm9kZSh0cnVlKSk7XG4gICAgfVxuICAgIHRoaXMuc2VsX2NsZWFyKCk7XG4gICAgdGhpcy5jaGVja3BvaW50KCk7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuaW5zZXJ0X25vZGVzID0gZnVuY3Rpb24obm9kZV9saXN0LCBtb3ZlX2N1cnNvcil7XG4gICAgdmFyIHJlYWxfY2xpcGJvYXJkID0gW107XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IG5vZGVfbGlzdC5sZW5ndGg7IGkrKyl7XG5cdHJlYWxfY2xpcGJvYXJkLnB1c2gobm9kZV9saXN0W2ldLmNsb25lTm9kZSh0cnVlKSk7XG4gICAgfVxuXG4gICAgaWYocmVhbF9jbGlwYm9hcmQubGVuZ3RoID09IDEpe1xuXHR0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3Vic3RyaW5nKDAsdGhpcy5jYXJldCkgKyByZWFsX2NsaXBib2FyZFswXS5maXJzdENoaWxkLm5vZGVWYWx1ZSArIHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcodGhpcy5jYXJldCk7XG5cdGlmKG1vdmVfY3Vyc29yKSB0aGlzLmNhcmV0ICs9IHJlYWxfY2xpcGJvYXJkWzBdLmZpcnN0Q2hpbGQubm9kZVZhbHVlLmxlbmd0aDtcbiAgICB9XG4gICAgZWxzZXtcblx0dmFyIG5uID0gdGhpcy5tYWtlX2UocmVhbF9jbGlwYm9hcmRbcmVhbF9jbGlwYm9hcmQubGVuZ3RoLTFdLmZpcnN0Q2hpbGQubm9kZVZhbHVlICsgdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnN1YnN0cmluZyh0aGlzLmNhcmV0KSk7XG5cdHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZSA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zdWJzdHJpbmcoMCx0aGlzLmNhcmV0KSArIHJlYWxfY2xpcGJvYXJkWzBdLmZpcnN0Q2hpbGQubm9kZVZhbHVlO1xuXHRpZih0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmcgPT0gbnVsbClcblx0ICAgIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmFwcGVuZENoaWxkKG5uKVxuXHRlbHNlXG5cdCAgICB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobm4sIHRoaXMuY3VycmVudC5uZXh0U2libGluZylcblx0Zm9yKHZhciBpID0gMTsgaSA8IHJlYWxfY2xpcGJvYXJkLmxlbmd0aCAtIDE7IGkrKylcblx0ICAgIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShyZWFsX2NsaXBib2FyZFtpXSwgbm4pO1xuXHRpZihtb3ZlX2N1cnNvcil7XG5cdCAgICB0aGlzLmN1cnJlbnQgPSBubjtcblx0ICAgIHRoaXMuY2FyZXQgPSByZWFsX2NsaXBib2FyZFtyZWFsX2NsaXBib2FyZC5sZW5ndGgtMV0uZmlyc3RDaGlsZC5ub2RlVmFsdWUubGVuZ3RoXG5cdH1cbiAgICB9XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc2VsX3Bhc3RlID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLnNlbF9kZWxldGUoKTtcbiAgICB0aGlzLnNlbF9jbGVhcigpO1xuICAgIGlmKCEodGhpcy5jbGlwYm9hcmQpIHx8IHRoaXMuY2xpcGJvYXJkLmxlbmd0aCA9PSAwKSByZXR1cm47XG4gICAgdGhpcy5pbnNlcnRfbm9kZXModGhpcy5jbGlwYm9hcmQsIHRydWUpO1xuICAgIHRoaXMuY2hlY2twb2ludCgpO1xuICAgIHJldHVybjtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5zZWxfY2xlYXIgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuc2VsX3N0YXJ0ID0gbnVsbDsgICAgXG4gICAgdGhpcy5zZWxfZW5kID0gbnVsbDtcbiAgICB0aGlzLnNlbF9zdGF0dXMgPSBHdXBweUJhY2tlbmQuU0VMX05PTkU7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc2VsX2RlbGV0ZSA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHNlbCA9IHRoaXMuc2VsX2dldCgpO1xuICAgIGlmKCFzZWwpIHJldHVybiBudWxsO1xuICAgIHNlbF9wYXJlbnQgPSBzZWwuaW52b2x2ZWRbMF0ucGFyZW50Tm9kZTtcbiAgICBzZWxfcHJldiA9IHNlbC5pbnZvbHZlZFswXS5wcmV2aW91c1NpYmxpbmc7XG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHNlbC5pbnZvbHZlZC5sZW5ndGg7IGkrKyl7XG5cdHZhciBuID0gc2VsLmludm9sdmVkW2ldO1xuXHRzZWxfcGFyZW50LnJlbW92ZUNoaWxkKG4pO1xuICAgIH1cbiAgICBpZihzZWxfcHJldiA9PSBudWxsKXtcblx0aWYoc2VsX3BhcmVudC5maXJzdENoaWxkID09IG51bGwpXG5cdCAgICBzZWxfcGFyZW50LmFwcGVuZENoaWxkKHNlbC5yZW1uYW50KTtcblx0ZWxzZVxuXHQgICAgc2VsX3BhcmVudC5pbnNlcnRCZWZvcmUoc2VsLnJlbW5hbnQsIHNlbF9wYXJlbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIGVsc2UgaWYoc2VsX3ByZXYubm9kZU5hbWUgPT0gJ2YnKXtcblx0aWYoc2VsX3ByZXYubmV4dFNpYmxpbmcgPT0gbnVsbClcblx0ICAgIHNlbF9wYXJlbnQuYXBwZW5kQ2hpbGQoc2VsLnJlbW5hbnQpO1xuXHRlbHNlXG5cdCAgICBzZWxfcGFyZW50Lmluc2VydEJlZm9yZShzZWwucmVtbmFudCwgc2VsX3ByZXYubmV4dFNpYmxpbmcpO1xuICAgIH1cbiAgICB0aGlzLmN1cnJlbnQgPSBzZWwucmVtbmFudFxuICAgIHRoaXMuY2FyZXQgPSB0aGlzLnNlbF9zdGFydC5jYXJldDtcbiAgICByZXR1cm4gc2VsLm5vZGVfbGlzdDtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5zZWxfYWxsID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLmhvbWUoKTtcbiAgICB0aGlzLnNldF9zZWxfc3RhcnQoKTtcbiAgICB0aGlzLmVuZCgpO1xuICAgIHRoaXMuc2V0X3NlbF9lbmQoKTtcbiAgICBpZih0aGlzLnNlbF9zdGFydC5ub2RlICE9IHRoaXMuc2VsX2VuZC5ub2RlIHx8IHRoaXMuc2VsX3N0YXJ0LmNhcmV0ICE9IHRoaXMuc2VsX2VuZC5jYXJldClcblx0dGhpcy5zZWxfc3RhdHVzID0gR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnNlbF9yaWdodCA9IGZ1bmN0aW9uKCl7XG4gICAgaWYodGhpcy5zZWxfc3RhdHVzID09IEd1cHB5QmFja2VuZC5TRUxfTk9ORSl7XG5cdHRoaXMuc2V0X3NlbF9zdGFydCgpO1xuXHR0aGlzLnNlbF9zdGF0dXMgPSBHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9FTkQ7XG4gICAgfVxuICAgIGlmKHRoaXMuY2FyZXQgPj0gR3VwcHlVdGlscy5nZXRfbGVuZ3RoKHRoaXMuY3VycmVudCkpe1xuXHR2YXIgbm4gPSB0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmc7XG5cdGlmKG5uICE9IG51bGwpe1xuXHQgICAgdGhpcy5jdXJyZW50ID0gbm4ubmV4dFNpYmxpbmc7XG5cdCAgICB0aGlzLmNhcmV0ID0gMDtcblx0ICAgIHRoaXMuc2V0X3NlbF9ib3VuZGFyeShHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9FTkQpO1xuXHR9XG5cdGVsc2V7XG5cdCAgICB0aGlzLnNldF9zZWxfYm91bmRhcnkoR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EKTtcblx0fVxuICAgIH1cbiAgICBlbHNle1xuXHR0aGlzLmNhcmV0ICs9IDE7XG5cdHRoaXMuc2V0X3NlbF9ib3VuZGFyeShHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9FTkQpO1xuICAgIH1cbiAgICBpZih0aGlzLnNlbF9zdGFydC5ub2RlID09IHRoaXMuc2VsX2VuZC5ub2RlICYmIHRoaXMuc2VsX3N0YXJ0LmNhcmV0ID09IHRoaXMuc2VsX2VuZC5jYXJldCl7XG5cdHRoaXMuc2VsX3N0YXR1cyA9IEd1cHB5QmFja2VuZC5TRUxfTk9ORTtcbiAgICB9XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc2V0X3NlbF9ib3VuZGFyeSA9IGZ1bmN0aW9uKHNzdGF0dXMsIG1vdXNlKXtcbiAgICBpZih0aGlzLnNlbF9zdGF0dXMgPT0gR3VwcHlCYWNrZW5kLlNFTF9OT05FIHx8IG1vdXNlKSB0aGlzLnNlbF9zdGF0dXMgPSBzc3RhdHVzO1xuICAgIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9TVEFSVClcblx0dGhpcy5zZXRfc2VsX3N0YXJ0KCk7XG4gICAgZWxzZSBpZih0aGlzLnNlbF9zdGF0dXMgPT0gR3VwcHlCYWNrZW5kLlNFTF9DVVJTT1JfQVRfRU5EKVxuXHR0aGlzLnNldF9zZWxfZW5kKCk7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuc2VsX2xlZnQgPSBmdW5jdGlvbigpe1xuICAgIGlmKHRoaXMuc2VsX3N0YXR1cyA9PSBHdXBweUJhY2tlbmQuU0VMX05PTkUpe1xuXHR0aGlzLnNldF9zZWxfZW5kKCk7XG5cdHRoaXMuc2VsX3N0YXR1cyA9IEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUO1xuICAgIH1cbiAgICBpZih0aGlzLmNhcmV0IDw9IDApe1xuXHR2YXIgbm4gPSB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nO1xuXHRpZihubiAhPSBudWxsKXtcblx0ICAgIHRoaXMuY3VycmVudCA9IG5uLnByZXZpb3VzU2libGluZztcblx0ICAgIHRoaXMuY2FyZXQgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUubGVuZ3RoO1xuXHQgICAgdGhpcy5zZXRfc2VsX2JvdW5kYXJ5KEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUKTtcblx0fVxuXHRlbHNle1xuXHQgICAgdGhpcy5zZXRfc2VsX2JvdW5kYXJ5KEd1cHB5QmFja2VuZC5TRUxfQ1VSU09SX0FUX1NUQVJUKTtcblx0fVxuICAgIH1cbiAgICBlbHNle1xuXHR0aGlzLmNhcmV0IC09IDE7XG5cdHRoaXMuc2V0X3NlbF9ib3VuZGFyeShHdXBweUJhY2tlbmQuU0VMX0NVUlNPUl9BVF9TVEFSVCk7XG4gICAgfVxuICAgIGlmKHRoaXMuc2VsX3N0YXJ0Lm5vZGUgPT0gdGhpcy5zZWxfZW5kLm5vZGUgJiYgdGhpcy5zZWxfc3RhcnQuY2FyZXQgPT0gdGhpcy5zZWxfZW5kLmNhcmV0KXtcblx0dGhpcy5zZWxfc3RhdHVzID0gR3VwcHlCYWNrZW5kLlNFTF9OT05FO1xuICAgIH1cbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5saXN0X2V4dGVuZF9jb3B5X3JpZ2h0ID0gZnVuY3Rpb24oKXt0aGlzLmxpc3RfZXh0ZW5kKFwicmlnaHRcIiwgdHJ1ZSk7fVxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5saXN0X2V4dGVuZF9jb3B5X2xlZnQgPSBmdW5jdGlvbigpe3RoaXMubGlzdF9leHRlbmQoXCJsZWZ0XCIsIHRydWUpO31cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUubGlzdF9leHRlbmRfcmlnaHQgPSBmdW5jdGlvbigpe3RoaXMubGlzdF9leHRlbmQoXCJyaWdodFwiLCBmYWxzZSk7fVxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5saXN0X2V4dGVuZF9sZWZ0ID0gZnVuY3Rpb24oKXt0aGlzLmxpc3RfZXh0ZW5kKFwibGVmdFwiLCBmYWxzZSk7fVxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5saXN0X2V4dGVuZF91cCA9IGZ1bmN0aW9uKCl7dGhpcy5saXN0X2V4dGVuZChcInVwXCIsIGZhbHNlKTt9XG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmxpc3RfZXh0ZW5kX2Rvd24gPSBmdW5jdGlvbigpe3RoaXMubGlzdF9leHRlbmQoXCJkb3duXCIsIGZhbHNlKTt9XG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmxpc3RfZXh0ZW5kX2NvcHlfdXAgPSBmdW5jdGlvbigpe3RoaXMubGlzdF9leHRlbmQoXCJ1cFwiLCB0cnVlKTt9XG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmxpc3RfZXh0ZW5kX2NvcHlfZG93biA9IGZ1bmN0aW9uKCl7dGhpcy5saXN0X2V4dGVuZChcImRvd25cIiwgdHJ1ZSk7fVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmxpc3RfdmVydGljYWxfbW92ZSA9IGZ1bmN0aW9uKGRvd24pe1xuICAgIHZhciBuID0gdGhpcy5jdXJyZW50O1xuICAgIHdoaWxlKG4ucGFyZW50Tm9kZSAmJiBuLnBhcmVudE5vZGUucGFyZW50Tm9kZSAmJiAhKG4ubm9kZU5hbWUgPT0gJ2MnICYmIG4ucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnbCcgJiYgbi5wYXJlbnROb2RlLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2wnKSl7XG5cdG4gPSBuLnBhcmVudE5vZGU7XG4gICAgfVxuICAgIGlmKCFuLnBhcmVudE5vZGUpIHJldHVybjtcbiAgICB2YXIgcG9zID0gMTtcbiAgICB2YXIgY2MgPSBuO1xuICAgIHdoaWxlKGNjLnByZXZpb3VzU2libGluZyAhPSBudWxsKXtcblx0cG9zKys7XG5cdGNjID0gY2MucHJldmlvdXNTaWJsaW5nO1xuICAgIH1cbiAgICB2YXIgbmV3X2wgPSBkb3duID8gbi5wYXJlbnROb2RlLm5leHRTaWJsaW5nIDogbi5wYXJlbnROb2RlLnByZXZpb3VzU2libGluZ1xuICAgIGlmKCFuZXdfbCkgcmV0dXJuO1xuICAgIHZhciBpZHggPSAxO1xuICAgIHZhciBubiA9IG5ld19sLmZpcnN0Q2hpbGQ7XG4gICAgd2hpbGUoaWR4IDwgcG9zKXtcblx0aWR4Kys7XG5cdG5uID0gbm4ubmV4dFNpYmxpbmc7XG4gICAgfVxuICAgIHRoaXMuY3VycmVudCA9IG5uLmZpcnN0Q2hpbGQ7XG4gICAgdGhpcy5jYXJldCA9IGRvd24gPyAwIDogdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQudGV4dENvbnRlbnQubGVuZ3RoO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmxpc3RfZXh0ZW5kID0gZnVuY3Rpb24oZGlyZWN0aW9uLCBjb3B5KXtcbiAgICB2YXIgYmFzZSA9IHRoaXMuZG9jLmJhc2U7XG4gICAgdmFyIHZlcnRpY2FsID0gZGlyZWN0aW9uID09IFwidXBcIiB8fCBkaXJlY3Rpb24gPT0gXCJkb3duXCI7XG4gICAgdmFyIGJlZm9yZSA9IGRpcmVjdGlvbiA9PSBcInVwXCIgfHwgZGlyZWN0aW9uID09IFwibGVmdFwiO1xuICAgIHZhciB0aGlzX25hbWUgPSB2ZXJ0aWNhbCA/IFwibFwiIDogXCJjXCI7XG4gICAgdmFyIG4gPSB0aGlzLmN1cnJlbnQ7XG4gICAgd2hpbGUobi5wYXJlbnROb2RlICYmICEobi5ub2RlTmFtZSA9PSB0aGlzX25hbWUgJiYgbi5wYXJlbnROb2RlLm5vZGVOYW1lID09ICdsJykpe1xuXHRuID0gbi5wYXJlbnROb2RlO1xuICAgIH1cbiAgICBpZighbi5wYXJlbnROb2RlKSByZXR1cm47XG4gICAgdmFyIHRvX2luc2VydDtcbiAgICBcbiAgICAvLyBjaGVjayBpZiAyRCBhbmQgaG9yaXpvbnRhbCBhbmQgZXh0ZW5kIGFsbCB0aGUgb3RoZXIgcm93cyBpZiBzbyBcbiAgICBpZighdmVydGljYWwgJiYgbi5wYXJlbnROb2RlLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gXCJsXCIpe1xuXHR0b19pbnNlcnQgPSBiYXNlLmNyZWF0ZUVsZW1lbnQoXCJjXCIpO1xuXHR0b19pbnNlcnQuYXBwZW5kQ2hpbGQodGhpcy5tYWtlX2UoXCJcIikpO1xuXHR2YXIgcG9zID0gMTtcblx0dmFyIGNjID0gbjtcblx0d2hpbGUoY2MucHJldmlvdXNTaWJsaW5nICE9IG51bGwpe1xuXHQgICAgcG9zKys7XG5cdCAgICBjYyA9IGNjLnByZXZpb3VzU2libGluZztcblx0fVxuXHR2YXIgdG9fbW9kaWZ5ID0gW107XG5cdHZhciBpdGVyYXRvciA9IHRoaXMuZG9jLnhwYXRoX2xpc3QoXCIuL2wvY1twb3NpdGlvbigpPVwiK3BvcytcIl1cIiwgbi5wYXJlbnROb2RlLnBhcmVudE5vZGUpO1xuXHR0cnl7IGZvcih2YXIgbm4gPSBpdGVyYXRvci5pdGVyYXRlTmV4dCgpOyBubiAhPSBudWxsOyBubiA9IGl0ZXJhdG9yLml0ZXJhdGVOZXh0KCkpeyB0b19tb2RpZnkucHVzaChubik7IH19XG5cdGNhdGNoKGUpIHsgdGhpcy5maXJlX2V2ZW50KFwiZXJyb3JcIix7XCJtZXNzYWdlXCI6J1hNTCBtb2RpZmllZCBkdXJpbmcgaXRlcmF0aW9uPyAnICsgZX0pOyB9XG5cdGZvcih2YXIgaiA9IDA7IGogPCB0b19tb2RpZnkubGVuZ3RoOyBqKyspe1xuXHQgICAgdmFyIG5uID0gdG9fbW9kaWZ5W2pdO1xuXHQgICAgaWYoY29weSkgbm4ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobm4uY2xvbmVOb2RlKHRydWUpLCBiZWZvcmUgPyBubiA6IG5uLm5leHRTaWJsaW5nKTtcblx0ICAgIGVsc2Ugbm4ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodG9faW5zZXJ0LmNsb25lTm9kZSh0cnVlKSwgYmVmb3JlID8gbm4gOiBubi5uZXh0U2libGluZyk7XG5cdCAgICBubi5wYXJlbnROb2RlLnNldEF0dHJpYnV0ZShcInNcIixwYXJzZUludChubi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcInNcIikpKzEpO1xuXHR9XG5cdHRoaXMuY3VycmVudCA9IGJlZm9yZSA/IG4ucHJldmlvdXNTaWJsaW5nLmxhc3RDaGlsZCA6IG4ubmV4dFNpYmxpbmcuZmlyc3RDaGlsZDtcblx0dGhpcy5jYXJldCA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLnRleHRDb250ZW50Lmxlbmd0aDtcblx0dGhpcy5jaGVja3BvaW50KCk7XG5cdHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgaWYoY29weSl7XG5cdHRvX2luc2VydCA9IG4uY2xvbmVOb2RlKHRydWUpO1xuICAgIH1cbiAgICBlbHNle1xuXHRpZih2ZXJ0aWNhbCl7XG5cdCAgICB0b19pbnNlcnQgPSBiYXNlLmNyZWF0ZUVsZW1lbnQoXCJsXCIpO1xuXHQgICAgdG9faW5zZXJ0LnNldEF0dHJpYnV0ZShcInNcIixuLmdldEF0dHJpYnV0ZShcInNcIikpXG5cdCAgICBmb3IodmFyIGkgPSAwOyBpIDwgcGFyc2VJbnQobi5nZXRBdHRyaWJ1dGUoXCJzXCIpKTsgaSsrKXtcblx0XHR2YXIgYyA9IGJhc2UuY3JlYXRlRWxlbWVudChcImNcIik7XG5cdFx0Yy5hcHBlbmRDaGlsZCh0aGlzLm1ha2VfZShcIlwiKSk7XG5cdFx0dG9faW5zZXJ0LmFwcGVuZENoaWxkKGMpO1xuXHQgICAgfVxuXHR9XG5cdGVsc2V7XG5cdCAgICB0b19pbnNlcnQgPSBiYXNlLmNyZWF0ZUVsZW1lbnQoXCJjXCIpO1xuXHQgICAgdG9faW5zZXJ0LmFwcGVuZENoaWxkKHRoaXMubWFrZV9lKFwiXCIpKTtcblx0fVxuICAgIH1cbiAgICBuLnBhcmVudE5vZGUuc2V0QXR0cmlidXRlKFwic1wiLHBhcnNlSW50KG4ucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoXCJzXCIpKSsxKTtcbiAgICBuLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRvX2luc2VydCwgYmVmb3JlID8gbiA6IG4ubmV4dFNpYmxpbmcpO1xuICAgIGlmKHZlcnRpY2FsKSB0aGlzLmN1cnJlbnQgPSB0b19pbnNlcnQuZmlyc3RDaGlsZC5maXJzdENoaWxkO1xuICAgIGVsc2UgdGhpcy5jdXJyZW50ID0gdG9faW5zZXJ0LmZpcnN0Q2hpbGQ7XG4gICAgdGhpcy5jYXJldCA9IDA7XG4gICAgdGhpcy5jaGVja3BvaW50KCk7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUubGlzdF9yZW1vdmVfY29sID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgbiA9IHRoaXMuY3VycmVudDtcbiAgICB3aGlsZShuLnBhcmVudE5vZGUgJiYgbi5wYXJlbnROb2RlLnBhcmVudE5vZGUgJiYgIShuLm5vZGVOYW1lID09ICdjJyAmJiBuLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2wnICYmIG4ucGFyZW50Tm9kZS5wYXJlbnROb2RlLm5vZGVOYW1lID09ICdsJykpe1xuXHRuID0gbi5wYXJlbnROb2RlO1xuICAgIH1cbiAgICBpZighbi5wYXJlbnROb2RlKSByZXR1cm47XG4gICAgXG4gICAgLy8gRG9uJ3QgcmVtb3ZlIGlmIHRoZXJlIGlzIG9ubHkgYSBzaW5nbGUgY29sdW1uOlxuICAgIGlmKG4ucHJldmlvdXNTaWJsaW5nICE9IG51bGwpe1xuXHR0aGlzLmN1cnJlbnQgPSBuLnByZXZpb3VzU2libGluZy5sYXN0Q2hpbGQ7XG5cdHRoaXMuY2FyZXQgPSBuLnByZXZpb3VzU2libGluZy5sYXN0Q2hpbGQuZmlyc3RDaGlsZC50ZXh0Q29udGVudC5sZW5ndGg7XG4gICAgfVxuICAgIGVsc2UgaWYobi5uZXh0U2libGluZyAhPSBudWxsKXtcblx0dGhpcy5jdXJyZW50ID0gbi5uZXh0U2libGluZy5maXJzdENoaWxkO1xuXHR0aGlzLmNhcmV0ID0gMDtcbiAgICB9XG4gICAgZWxzZSByZXR1cm47XG4gICAgXG4gICAgdmFyIHBvcyA9IDE7XG4gICAgdmFyIGNjID0gbjtcbiAgICBcbiAgICAvLyBGaW5kIHBvc2l0aW9uIG9mIGNvbHVtblxuICAgIHdoaWxlKGNjLnByZXZpb3VzU2libGluZyAhPSBudWxsKXtcblx0cG9zKys7XG5cdGNjID0gY2MucHJldmlvdXNTaWJsaW5nO1xuICAgIH1cbiAgICB2YXIgdG9fbW9kaWZ5ID0gW107XG4gICAgdmFyIGl0ZXJhdG9yID0gdGhpcy5kb2MueHBhdGhfbGlzdChcIi4vbC9jW3Bvc2l0aW9uKCk9XCIrcG9zK1wiXVwiLCBuLnBhcmVudE5vZGUucGFyZW50Tm9kZSlcbiAgICB0cnl7IGZvcih2YXIgbm4gPSBpdGVyYXRvci5pdGVyYXRlTmV4dCgpOyBubiAhPSBudWxsOyBubiA9IGl0ZXJhdG9yLml0ZXJhdGVOZXh0KCkpeyB0b19tb2RpZnkucHVzaChubik7IH19XG4gICAgY2F0Y2goZSkgeyB0aGlzLmZpcmVfZXZlbnQoXCJlcnJvclwiLHtcIm1lc3NhZ2VcIjonWE1MIG1vZGlmaWVkIGR1cmluZyBpdGVyYXRpb24/ICcgKyBlfSk7IH1cbiAgICBmb3IodmFyIGogPSAwOyBqIDwgdG9fbW9kaWZ5Lmxlbmd0aDsgaisrKXtcblx0dmFyIG5uID0gdG9fbW9kaWZ5W2pdO1xuXHRubi5wYXJlbnROb2RlLnNldEF0dHJpYnV0ZShcInNcIixwYXJzZUludChubi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcInNcIikpLTEpO1xuXHRubi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5uKTtcbiAgICB9XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUubGlzdF9yZW1vdmVfcm93ID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgbiA9IHRoaXMuY3VycmVudDtcbiAgICB3aGlsZShuLnBhcmVudE5vZGUgJiYgIShuLm5vZGVOYW1lID09ICdsJyAmJiBuLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2wnKSl7XG5cdG4gPSBuLnBhcmVudE5vZGU7XG4gICAgfVxuICAgIGlmKCFuLnBhcmVudE5vZGUpIHJldHVybjtcbiAgICAvLyBEb24ndCByZW1vdmUgaWYgdGhlcmUgaXMgb25seSBhIHNpbmdsZSByb3c6XG4gICAgaWYobi5wcmV2aW91c1NpYmxpbmcgIT0gbnVsbCl7XG5cdHRoaXMuY3VycmVudCA9IG4ucHJldmlvdXNTaWJsaW5nLmZpcnN0Q2hpbGQubGFzdENoaWxkO1xuXHR0aGlzLmNhcmV0ID0gbi5wcmV2aW91c1NpYmxpbmcubGFzdENoaWxkLmZpcnN0Q2hpbGQudGV4dENvbnRlbnQubGVuZ3RoO1xuICAgIH1cbiAgICBlbHNlIGlmKG4ubmV4dFNpYmxpbmcgIT0gbnVsbCl7XG5cdHRoaXMuY3VycmVudCA9IG4ubmV4dFNpYmxpbmcuZmlyc3RDaGlsZC5maXJzdENoaWxkO1xuXHR0aGlzLmNhcmV0ID0gMDtcbiAgICB9XG4gICAgZWxzZSByZXR1cm47XG5cbiAgICBuLnBhcmVudE5vZGUuc2V0QXR0cmlidXRlKFwic1wiLHBhcnNlSW50KG4ucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoXCJzXCIpKS0xKTtcbiAgICBuLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobik7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUubGlzdF9yZW1vdmUgPSBmdW5jdGlvbigpe1xuICAgIHZhciBuID0gdGhpcy5jdXJyZW50O1xuICAgIHdoaWxlKG4ucGFyZW50Tm9kZSAmJiAhKG4ubm9kZU5hbWUgPT0gJ2MnICYmIG4ucGFyZW50Tm9kZS5ub2RlTmFtZSA9PSAnbCcpKXtcblx0biA9IG4ucGFyZW50Tm9kZTtcbiAgICB9XG4gICAgaWYoIW4ucGFyZW50Tm9kZSkgcmV0dXJuO1xuICAgIGlmKG4ucGFyZW50Tm9kZS5wYXJlbnROb2RlICYmIG4ucGFyZW50Tm9kZS5wYXJlbnROb2RlLm5vZGVOYW1lID09IFwibFwiKXtcblx0dGhpcy5saXN0X3JlbW92ZV9jb2woKTtcblx0cmV0dXJuO1xuICAgIH1cbiAgICBpZihuLnByZXZpb3VzU2libGluZyAhPSBudWxsKXtcblx0dGhpcy5jdXJyZW50ID0gbi5wcmV2aW91c1NpYmxpbmcubGFzdENoaWxkO1xuXHR0aGlzLmNhcmV0ID0gbi5wcmV2aW91c1NpYmxpbmcubGFzdENoaWxkLmZpcnN0Q2hpbGQudGV4dENvbnRlbnQubGVuZ3RoO1xuICAgIH1cbiAgICBlbHNlIGlmKG4ubmV4dFNpYmxpbmcgIT0gbnVsbCl7XG5cdHRoaXMuY3VycmVudCA9IG4ubmV4dFNpYmxpbmcuZmlyc3RDaGlsZDtcblx0dGhpcy5jYXJldCA9IDA7XG4gICAgfVxuICAgIGVsc2UgcmV0dXJuO1xuICAgIG4ucGFyZW50Tm9kZS5zZXRBdHRyaWJ1dGUoXCJzXCIscGFyc2VJbnQobi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcInNcIikpLTEpO1xuICAgIG4ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChuKTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5yaWdodCA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5zZWxfY2xlYXIoKTtcbiAgICBpZih0aGlzLmNhcmV0ID49IEd1cHB5VXRpbHMuZ2V0X2xlbmd0aCh0aGlzLmN1cnJlbnQpKXtcblx0dmFyIG5uID0gdGhpcy5kb2MueHBhdGhfbm9kZShcImZvbGxvd2luZzo6ZVsxXVwiLCB0aGlzLmN1cnJlbnQpO1xuXHRpZihubiAhPSBudWxsKXtcblx0ICAgIHRoaXMuY3VycmVudCA9IG5uO1xuXHQgICAgdGhpcy5jYXJldCA9IDA7XG5cdH1cblx0ZWxzZXtcblx0ICAgIHRoaXMuZmlyZV9ldmVudChcInJpZ2h0X2VuZFwiKTtcblx0fVxuICAgIH1cbiAgICBlbHNle1xuXHR0aGlzLmNhcmV0ICs9IDE7XG4gICAgfVxufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnNwYWNlYmFyID0gZnVuY3Rpb24oKXtcbiAgICBpZihHdXBweVV0aWxzLmlzX3RleHQodGhpcy5jdXJyZW50KSkgdGhpcy5pbnNlcnRfc3RyaW5nKFwiIFwiKTtcbiAgICBlbHNlIHRoaXMuc3BhY2VfY2FyZXQgPSB0aGlzLmNhcmV0O1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmxlZnQgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuc2VsX2NsZWFyKCk7XG4gICAgaWYodGhpcy5jYXJldCA8PSAwKXtcblx0dmFyIHBuID0gdGhpcy5kb2MueHBhdGhfbm9kZShcInByZWNlZGluZzo6ZVsxXVwiLCB0aGlzLmN1cnJlbnQpO1xuXHRpZihwbiAhPSBudWxsKXtcblx0ICAgIHRoaXMuY3VycmVudCA9IHBuO1xuXHQgICAgdGhpcy5jYXJldCA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGg7XG5cdH1cblx0ZWxzZXtcblx0ICAgIHRoaXMuZmlyZV9ldmVudChcImxlZnRfZW5kXCIpO1xuXHR9XG4gICAgfVxuICAgIGVsc2V7XG5cdHRoaXMuY2FyZXQgLT0gMTtcbiAgICB9XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuZGVsZXRlX2Zyb21fYyA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHBvcyA9IDA7XG4gICAgdmFyIGMgPSB0aGlzLmN1cnJlbnQucGFyZW50Tm9kZTtcbiAgICB3aGlsZShjICYmIGMubm9kZU5hbWUgPT0gXCJjXCIpe1xuXHRwb3MrKztcblx0YyA9IGMucHJldmlvdXNTaWJsaW5nO1xuICAgIH1cbiAgICB2YXIgaWR4ID0gdGhpcy5jdXJyZW50LnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKFwiZGVsZXRlXCIpO1xuICAgIHZhciBzdXJ2aXZvcl9ub2RlID0gdGhpcy5kb2MueHBhdGhfbm9kZShcIi4vY1twb3NpdGlvbigpPVwiK2lkeCtcIl1cIiwgdGhpcy5jdXJyZW50LnBhcmVudE5vZGUucGFyZW50Tm9kZSk7XG4gICAgdmFyIHN1cnZpdm9yX25vZGVzID0gW107XG4gICAgZm9yKHZhciBuID0gc3Vydml2b3Jfbm9kZS5maXJzdENoaWxkOyBuICE9IG51bGw7IG4gPSBuLm5leHRTaWJsaW5nKXtcblx0c3Vydml2b3Jfbm9kZXMucHVzaChuKTtcbiAgICB9XG4gICAgdGhpcy5jdXJyZW50ID0gdGhpcy5jdXJyZW50LnBhcmVudE5vZGUucGFyZW50Tm9kZTtcbiAgICB0aGlzLmRlbGV0ZV9mcm9tX2YoKTtcbiAgICB0aGlzLmluc2VydF9ub2RlcyhzdXJ2aXZvcl9ub2RlcywgcG9zID4gaWR4KTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5kZWxldGVfZnJvbV9lID0gZnVuY3Rpb24oKXtcbiAgICAvLyByZXR1cm4gZmFsc2UgaWYgd2UgZGVsZXRlZCBzb21ldGhpbmcsIGFuZCB0cnVlIG90aGVyd2lzZS5cbiAgICBpZih0aGlzLmNhcmV0ID4gMCl7XG5cdHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZSA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zcGxpY2VuKHRoaXMuY2FyZXQtMSxcIlwiLDEpO1xuXHR0aGlzLmNhcmV0LS07XG4gICAgfVxuICAgIGVsc2V7XG5cdC8vIFRoZSBvcmRlciBvZiB0aGVzZSBpcyBpbXBvcnRhbnRcblx0aWYodGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZyAhPSBudWxsICYmIHRoaXMuY3VycmVudC5wcmV2aW91c1NpYmxpbmcuZ2V0QXR0cmlidXRlKFwiY1wiKSA9PSBcInllc1wiKXtcblx0ICAgIC8vIFRoZSBwcmV2aW91cyBub2RlIGlzIGFuIGYgbm9kZSBidXQgaXMgcmVhbGx5IGp1c3QgYSBjaGFyYWN0ZXIuICBEZWxldGUgaXQuXG5cdCAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nO1xuXHQgICAgdGhpcy5kZWxldGVfZnJvbV9mKCk7XG5cdH1cblx0ZWxzZSBpZih0aGlzLmN1cnJlbnQucHJldmlvdXNTaWJsaW5nICE9IG51bGwgJiYgdGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZy5ub2RlTmFtZSA9PSAnZicpe1xuXHQgICAgLy8gV2UncmUgaW4gYW4gZSBub2RlIGp1c3QgYWZ0ZXIgYW4gZiBub2RlLiAgTW92ZSBiYWNrIGludG8gdGhlIGYgbm9kZSAoZGVsZXRlIGl0Pylcblx0ICAgIHRoaXMubGVmdCgpO1xuXHQgICAgcmV0dXJuIGZhbHNlO1xuXHR9XG5cdGVsc2UgaWYodGhpcy5jdXJyZW50LnBhcmVudE5vZGUucHJldmlvdXNTaWJsaW5nICE9IG51bGwgJiYgdGhpcy5jdXJyZW50LnBhcmVudE5vZGUucHJldmlvdXNTaWJsaW5nLm5vZGVOYW1lID09ICdjJyl7XG5cdCAgICAvLyBXZSdyZSBpbiBhIGMgY2hpbGQgb2YgYW4gZiBub2RlLCBidXQgbm90IHRoZSBmaXJzdCBvbmUuICBHbyB0byB0aGUgcHJldmlvdXMgY1xuXHQgICAgaWYodGhpcy5jdXJyZW50LnBhcmVudE5vZGUuaGFzQXR0cmlidXRlKFwiZGVsZXRlXCIpKXtcblx0XHR0aGlzLmRlbGV0ZV9mcm9tX2MoKTtcblx0ICAgIH1cblx0ICAgIGVsc2V7XG5cdFx0dGhpcy5sZWZ0KCk7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHQgICAgfVxuXHR9XG5cdGVsc2UgaWYodGhpcy5jdXJyZW50LnByZXZpb3VzU2libGluZyA9PSBudWxsICYmIHRoaXMuY3VycmVudC5wYXJlbnROb2RlLm5vZGVOYW1lID09ICdjJyAmJiAodGhpcy5jdXJyZW50LnBhcmVudE5vZGUucHJldmlvdXNTaWJsaW5nID09IG51bGwgfHwgdGhpcy5jdXJyZW50LnBhcmVudE5vZGUucHJldmlvdXNTaWJsaW5nLm5vZGVOYW1lICE9ICdjJykpe1xuXHQgICAgLy8gV2UncmUgaW4gdGhlIGZpcnN0IGMgY2hpbGQgb2YgYW4gZiBub2RlIGFuZCBhdCB0aGUgYmVnaW5uaW5nLS1kZWxldGUgdGhlIGYgbm9kZVxuXHQgICAgdmFyIHBhciA9IHRoaXMuY3VycmVudC5wYXJlbnROb2RlO1xuXHQgICAgd2hpbGUocGFyLnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2wnIHx8IHBhci5wYXJlbnROb2RlLm5vZGVOYW1lID09ICdjJyl7XG5cdFx0cGFyID0gcGFyLnBhcmVudE5vZGU7XG5cdCAgICB9XG5cdCAgICBpZihwYXIuaGFzQXR0cmlidXRlKFwiZGVsZXRlXCIpKXtcblx0XHR0aGlzLmRlbGV0ZV9mcm9tX2MoKTtcblx0ICAgIH1cblx0ICAgIGVsc2V7XG5cdFx0dGhpcy5jdXJyZW50ID0gcGFyLnBhcmVudE5vZGU7XG5cdFx0dGhpcy5kZWxldGVfZnJvbV9mKCk7XG5cdCAgICB9XG5cdH1cblx0ZWxzZXtcblx0ICAgIC8vIFdlJ3JlIGF0IHRoZSBiZWdpbm5pbmcgKGhvcGVmdWxseSEpIFxuXHQgICAgcmV0dXJuIGZhbHNlO1xuXHR9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmRlbGV0ZV9mb3J3YXJkX2Zyb21fZSA9IGZ1bmN0aW9uKCl7XG4gICAgLy8gcmV0dXJuIGZhbHNlIGlmIHdlIGRlbGV0ZWQgc29tZXRoaW5nLCBhbmQgdHJ1ZSBvdGhlcndpc2UuXG4gICAgaWYodGhpcy5jYXJldCA8IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGgpe1xuXHR0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc3BsaWNlbih0aGlzLmNhcmV0LFwiXCIsMSk7XG4gICAgfVxuICAgIGVsc2V7XG5cdC8vV2UncmUgYXQgdGhlIGVuZFxuXHRpZih0aGlzLmN1cnJlbnQubmV4dFNpYmxpbmcgIT0gbnVsbCl7XG5cdCAgICAvLyBUaGUgbmV4dCBub2RlIGlzIGFuIGYgbm9kZS4gIERlbGV0ZSBpdC5cblx0ICAgIHRoaXMuY3VycmVudCA9IHRoaXMuY3VycmVudC5uZXh0U2libGluZztcblx0ICAgIHRoaXMuZGVsZXRlX2Zyb21fZigpO1xuXHR9XG5cdGVsc2UgaWYodGhpcy5jdXJyZW50LnBhcmVudE5vZGUubm9kZU5hbWUgPT0gJ2MnKXtcblx0ICAgIC8vIFdlJ3JlIGluIGEgYyBjaGlsZCBvZiBhbiBmIG5vZGUuICBEbyBub3RoaW5nXG5cdCAgICByZXR1cm4gZmFsc2U7XG5cdH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuYmFja3NwYWNlID0gZnVuY3Rpb24oKXtcbiAgICBpZih0aGlzLnNlbF9zdGF0dXMgIT0gR3VwcHlCYWNrZW5kLlNFTF9OT05FKXtcblx0dGhpcy5zZWxfZGVsZXRlKCk7XG5cdHRoaXMuc2VsX3N0YXR1cyA9IEd1cHB5QmFja2VuZC5TRUxfTk9ORTtcblx0dGhpcy5jaGVja3BvaW50KCk7XG4gICAgfVxuICAgIGVsc2UgaWYodGhpcy5kZWxldGVfZnJvbV9lKCkpe1xuXHR0aGlzLmNoZWNrcG9pbnQoKTtcbiAgICB9XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuZGVsZXRlX2tleSA9IGZ1bmN0aW9uKCl7XG4gICAgaWYodGhpcy5zZWxfc3RhdHVzICE9IEd1cHB5QmFja2VuZC5TRUxfTk9ORSl7XG5cdHRoaXMuc2VsX2RlbGV0ZSgpO1xuXHR0aGlzLnNlbF9zdGF0dXMgPSBHdXBweUJhY2tlbmQuU0VMX05PTkU7XG5cdHRoaXMuY2hlY2twb2ludCgpO1xuICAgIH1cbiAgICBlbHNlIGlmKHRoaXMuZGVsZXRlX2ZvcndhcmRfZnJvbV9lKCkpe1xuXHR0aGlzLmNoZWNrcG9pbnQoKTtcbiAgICB9XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuYmFja3NsYXNoID0gZnVuY3Rpb24oKXtcbiAgICBpZihHdXBweVV0aWxzLmlzX3RleHQodGhpcy5jdXJyZW50KSkgcmV0dXJuO1xuICAgIHRoaXMuaW5zZXJ0X3N5bWJvbChcInN5bV9uYW1lXCIpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnRhYiA9IGZ1bmN0aW9uKCl7XG4gICAgaWYoIUd1cHB5VXRpbHMuaXNfc3ltYm9sKHRoaXMuY3VycmVudCkpe1xuXHR0aGlzLmNoZWNrX2Zvcl9zeW1ib2woKTtcblx0cmV0dXJuO1xuICAgIH1cbiAgICB2YXIgc3ltX25hbWUgPSB0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC50ZXh0Q29udGVudDtcbiAgICB2YXIgY2FuZGlkYXRlcyA9IFtdO1xuICAgIGZvcih2YXIgbiBpbiB0aGlzLnN5bWJvbHMpe1xuXHRpZihuLnN0YXJ0c1dpdGgoc3ltX25hbWUpKSBjYW5kaWRhdGVzLnB1c2gobik7XG4gICAgfVxuICAgIGlmKGNhbmRpZGF0ZXMubGVuZ3RoID09IDEpe1xuXHR0aGlzLmN1cnJlbnQuZmlyc3RDaGlsZC50ZXh0Q29udGVudCA9IGNhbmRpZGF0ZXNbMF07XG5cdHRoaXMuY2FyZXQgPSBjYW5kaWRhdGVzWzBdLmxlbmd0aDtcbiAgICB9XG4gICAgZWxzZSB7XG5cdHRoaXMuZmlyZV9ldmVudChcImNvbXBsZXRpb25cIix7XCJjYW5kaWRhdGVzXCI6Y2FuZGlkYXRlc30pO1xuICAgIH1cbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5yaWdodF9wYXJlbiA9IGZ1bmN0aW9uKCl7XG4gICAgaWYodGhpcy5jdXJyZW50Lm5vZGVOYW1lID09ICdlJyAmJiB0aGlzLmNhcmV0IDwgdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLmxlbmd0aCAtIDEpIHJldHVybjtcbiAgICBlbHNlIHRoaXMucmlnaHQoKTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS51cCA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5zZWxfY2xlYXIoKTtcbiAgICBpZih0aGlzLmN1cnJlbnQucGFyZW50Tm9kZS5oYXNBdHRyaWJ1dGUoXCJ1cFwiKSl7XG5cdHZhciB0ID0gcGFyc2VJbnQodGhpcy5jdXJyZW50LnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKFwidXBcIikpO1xuXHR2YXIgZiA9IHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnBhcmVudE5vZGU7XG5cdHZhciBuID0gZi5maXJzdENoaWxkO1xuXHR3aGlsZShuICE9IG51bGwgJiYgdCA+IDApe1xuXHQgICAgaWYobi5ub2RlTmFtZSA9PSAnYycpIHQtLTtcblx0ICAgIGlmKHQgPiAwKSBuID0gbi5uZXh0U2libGluZztcblx0fVxuXHR0aGlzLmN1cnJlbnQgPSBuLmxhc3RDaGlsZDtcblx0dGhpcy5jYXJldCA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGVsc2UgdGhpcy5saXN0X3ZlcnRpY2FsX21vdmUoZmFsc2UpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmRvd24gPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuc2VsX2NsZWFyKCk7XG4gICAgaWYodGhpcy5jdXJyZW50LnBhcmVudE5vZGUuaGFzQXR0cmlidXRlKFwiZG93blwiKSl7XG5cdHZhciB0ID0gcGFyc2VJbnQodGhpcy5jdXJyZW50LnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKFwiZG93blwiKSk7XG5cdHZhciBmID0gdGhpcy5jdXJyZW50LnBhcmVudE5vZGUucGFyZW50Tm9kZTtcblx0dmFyIG4gPSBmLmZpcnN0Q2hpbGQ7XG5cdHdoaWxlKG4gIT0gbnVsbCAmJiB0ID4gMCl7XG5cdCAgICBpZihuLm5vZGVOYW1lID09ICdjJykgdC0tO1xuXHQgICAgaWYodCA+IDApIG4gPSBuLm5leHRTaWJsaW5nO1xuXHR9XG5cdHRoaXMuY3VycmVudCA9IG4ubGFzdENoaWxkO1xuXHR0aGlzLmNhcmV0ID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLmxlbmd0aDtcbiAgICB9XG4gICAgZWxzZSB0aGlzLmxpc3RfdmVydGljYWxfbW92ZSh0cnVlKTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5ob21lID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLmRvYy5yb290KCkuZmlyc3RDaGlsZDtcbiAgICB0aGlzLmNhcmV0ID0gMDtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuY3VycmVudCA9IHRoaXMuZG9jLnJvb3QoKS5sYXN0Q2hpbGQ7XG4gICAgdGhpcy5jYXJldCA9IHRoaXMuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGg7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuY2hlY2twb2ludCA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIGJhc2UgPSB0aGlzLmRvYy5iYXNlO1xuICAgIHRoaXMuY3VycmVudC5zZXRBdHRyaWJ1dGUoXCJjdXJyZW50XCIsXCJ5ZXNcIik7XG4gICAgdGhpcy5jdXJyZW50LnNldEF0dHJpYnV0ZShcImNhcmV0XCIsdGhpcy5jYXJldC50b1N0cmluZygpKTtcbiAgICB0aGlzLnVuZG9fbm93Kys7XG4gICAgdGhpcy51bmRvX2RhdGFbdGhpcy51bmRvX25vd10gPSBiYXNlLmNsb25lTm9kZSh0cnVlKTtcbiAgICB0aGlzLnVuZG9fZGF0YS5zcGxpY2UodGhpcy51bmRvX25vdysxLCB0aGlzLnVuZG9fZGF0YS5sZW5ndGgpO1xuICAgIHRoaXMuZmlyZV9ldmVudChcImNoYW5nZVwiLHtcIm9sZFwiOnRoaXMudW5kb19kYXRhW3RoaXMudW5kb19ub3ctMV0sXCJuZXdcIjp0aGlzLnVuZG9fZGF0YVt0aGlzLnVuZG9fbm93XX0pO1xuICAgIHRoaXMuY3VycmVudC5yZW1vdmVBdHRyaWJ1dGUoXCJjdXJyZW50XCIpO1xuICAgIHRoaXMuY3VycmVudC5yZW1vdmVBdHRyaWJ1dGUoXCJjYXJldFwiKTtcbiAgICBpZih0aGlzLnBhcmVudCAmJiB0aGlzLnBhcmVudC5yZWFkeSkgdGhpcy5wYXJlbnQucmVuZGVyKHRydWUpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnJlc3RvcmUgPSBmdW5jdGlvbih0KXtcbiAgICB0aGlzLmRvYy5iYXNlID0gdGhpcy51bmRvX2RhdGFbdF0uY2xvbmVOb2RlKHRydWUpO1xuICAgIHRoaXMuZmluZF9jdXJyZW50KCk7XG4gICAgdGhpcy5jdXJyZW50LnJlbW92ZUF0dHJpYnV0ZShcImN1cnJlbnRcIik7XG4gICAgdGhpcy5jdXJyZW50LnJlbW92ZUF0dHJpYnV0ZShcImNhcmV0XCIpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmZpbmRfY3VycmVudCA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5jdXJyZW50ID0gdGhpcy5kb2MueHBhdGhfbm9kZShcIi8vKltAY3VycmVudD0neWVzJ11cIik7XG4gICAgdGhpcy5jYXJldCA9IHBhcnNlSW50KHRoaXMuY3VycmVudC5nZXRBdHRyaWJ1dGUoXCJjYXJldFwiKSk7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUudW5kbyA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5zZWxfY2xlYXIoKTtcbiAgICBpZih0aGlzLnVuZG9fbm93IDw9IDApIHJldHVybjtcbiAgICB0aGlzLnVuZG9fbm93LS07XG4gICAgdGhpcy5yZXN0b3JlKHRoaXMudW5kb19ub3cpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLnJlZG8gPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuc2VsX2NsZWFyKCk7XG4gICAgaWYodGhpcy51bmRvX25vdyA+PSB0aGlzLnVuZG9fZGF0YS5sZW5ndGgtMSkgcmV0dXJuO1xuICAgIHRoaXMudW5kb19ub3crKztcbiAgICB0aGlzLnJlc3RvcmUodGhpcy51bmRvX25vdyk7XG59XG5cbkd1cHB5QmFja2VuZC5wcm90b3R5cGUuZG9uZSA9IGZ1bmN0aW9uKHMpe1xuICAgIGlmKEd1cHB5VXRpbHMuaXNfc3ltYm9sKHRoaXMuY3VycmVudCkpIHRoaXMuY29tcGxldGVfc3ltYm9sKCk7XG4gICAgZWxzZSB0aGlzLmZpcmVfZXZlbnQoXCJkb25lXCIpO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmNvbXBsZXRlX3N5bWJvbCA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHN5bV9uYW1lID0gdGhpcy5jdXJyZW50LmZpcnN0Q2hpbGQudGV4dENvbnRlbnQ7XG4gICAgaWYoISh0aGlzLnN5bWJvbHNbc3ltX25hbWVdKSkgcmV0dXJuO1xuICAgIHRoaXMuY3VycmVudCA9IHRoaXMuY3VycmVudC5wYXJlbnROb2RlLnBhcmVudE5vZGU7XG4gICAgdGhpcy5kZWxldGVfZnJvbV9mKCk7XG4gICAgdGhpcy5pbnNlcnRfc3ltYm9sKHN5bV9uYW1lKTtcbn1cblxuR3VwcHlCYWNrZW5kLnByb3RvdHlwZS5wcm9ibGVtID0gZnVuY3Rpb24obWVzc2FnZSl7XG4gICAgdGhpcy5maXJlX2V2ZW50KFwiZXJyb3JcIix7XCJtZXNzYWdlXCI6bWVzc2FnZX0pO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmlzX2JsYWNrbGlzdGVkID0gZnVuY3Rpb24oc3ltYl90eXBlKXtcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5ibGFja2xpc3QubGVuZ3RoOyBpKyspXG5cdGlmKHN5bWJfdHlwZSA9PSB0aGlzLmJsYWNrbGlzdFtpXSkgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5HdXBweUJhY2tlbmQucHJvdG90eXBlLmNoZWNrX2Zvcl9zeW1ib2wgPSBmdW5jdGlvbigpe1xuICAgIHZhciBpbnN0YW5jZSA9IHRoaXM7XG4gICAgaWYoR3VwcHlVdGlscy5pc190ZXh0KHRoaXMuY3VycmVudCkpIHJldHVybjtcbiAgICBmb3IodmFyIHMgaW4gdGhpcy5zeW1ib2xzKXtcblx0aWYoaW5zdGFuY2UuY3VycmVudC5ub2RlTmFtZSA9PSAnZScgJiYgcy5sZW5ndGggPD0gKGluc3RhbmNlLmNhcmV0IC0gaW5zdGFuY2Uuc3BhY2VfY2FyZXQpICYmICEoR3VwcHlVdGlscy5pc19ibGFuayhpbnN0YW5jZS5jdXJyZW50KSkgJiYgaW5zdGFuY2UuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZS5zZWFyY2hfYXQoaW5zdGFuY2UuY2FyZXQscykpe1xuXHQgICAgdmFyIHRlbXAgPSBpbnN0YW5jZS5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlO1xuXHQgICAgdmFyIHRlbXBfY2FyZXQgPSBpbnN0YW5jZS5jYXJldDtcblx0ICAgIGluc3RhbmNlLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUgPSBpbnN0YW5jZS5jdXJyZW50LmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNsaWNlKDAsaW5zdGFuY2UuY2FyZXQtcy5sZW5ndGgpK2luc3RhbmNlLmN1cnJlbnQuZmlyc3RDaGlsZC5ub2RlVmFsdWUuc2xpY2UoaW5zdGFuY2UuY2FyZXQpO1xuXHQgICAgaW5zdGFuY2UuY2FyZXQgLT0gcy5sZW5ndGg7XG5cdCAgICB2YXIgc3VjY2VzcyA9IGluc3RhbmNlLmluc2VydF9zeW1ib2wocyk7XG5cdCAgICBpZighc3VjY2Vzcyl7XG5cdFx0aW5zdGFuY2UuY3VycmVudC5maXJzdENoaWxkLm5vZGVWYWx1ZSA9IHRlbXA7XG5cdFx0aW5zdGFuY2UuY2FyZXQgPSB0ZW1wX2NhcmV0O1xuXHQgICAgfVxuXHQgICAgYnJlYWs7XG5cdH1cbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gR3VwcHlCYWNrZW5kO1xuIiwidmFyIEd1cHB5RG9jID0gZnVuY3Rpb24oZG9jKXtcbiAgICBkb2MgPSBkb2MgfHwgXCI8bT48ZT48L2U+PC9tPlwiO1xuICAgIHRoaXMuc2V0X2NvbnRlbnQoZG9jKTtcbn1cblxuR3VwcHlEb2MucHJvdG90eXBlLmlzX3NtYWxsID0gZnVuY3Rpb24obm4pe1xuICAgIHZhciBuID0gbm4ucGFyZW50Tm9kZTtcbiAgICB3aGlsZShuICE9IG51bGwgJiYgbi5ub2RlTmFtZSAhPSAnbScpe1xuXHRpZihuLmdldEF0dHJpYnV0ZShcInNtYWxsXCIpID09IFwieWVzXCIpIHJldHVybiB0cnVlO1xuXHRuID0gbi5wYXJlbnROb2RlXG5cdHdoaWxlKG4gIT0gbnVsbCAmJiBuLm5vZGVOYW1lICE9ICdjJykgbiA9IG4ucGFyZW50Tm9kZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5HdXBweURvYy5wcm90b3R5cGUuZW5zdXJlX3RleHRfbm9kZXMgPSBmdW5jdGlvbigpe1xuICAgIHZhciBsID0gdGhpcy5iYXNlLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiZVwiKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGwubGVuZ3RoOyBpKyspe1xuICAgICAgICBpZiAoIShsW2ldLmZpcnN0Q2hpbGQpKVxuICAgICAgICAgICAgbFtpXS5hcHBlbmRDaGlsZCh0aGlzLmJhc2UuY3JlYXRlVGV4dE5vZGUoXCJcIikpO1xuICAgIH1cbn1cblxuR3VwcHlEb2MucHJvdG90eXBlLmlzX2JsYW5rID0gZnVuY3Rpb24oKXtcbiAgICBpZiAodGhpcy5iYXNlLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiZlwiKS5sZW5ndGggPiAwKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgdmFyIGwgPSB0aGlzLmJhc2UuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJlXCIpO1xuICAgIGlmIChsLmxlbmd0aCA9PSAxICYmICghKGxbMF0uZmlyc3RDaGlsZCkgfHwgbFswXS5maXJzdENoaWxkLnRleHRDb250ZW50ID09IFwiXCIpKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICByZXR1cm4gZmFsc2U7XG59XG5cbkd1cHB5RG9jLnByb3RvdHlwZS5yb290ID0gZnVuY3Rpb24oKXtcbiAgICByZXR1cm4gdGhpcy5iYXNlLmRvY3VtZW50RWxlbWVudDtcbn1cblxuR3VwcHlEb2MucHJvdG90eXBlLmdldF9jb250ZW50ID0gZnVuY3Rpb24odCxyKSB7XG4gICAgLy9AIHByZXByb2Nlc3NcbiAgICBpZiAodCAhPSBcInhtbFwiKVxuICAgICAgICByZXR1cm4gdGhpcy5tYW51YWxfcmVuZGVyKHQsIHRoaXMucm9vdCgpLCByKTtcbiAgICBlbHNlXG4gICAgICAgIHJldHVybiAobmV3IFhNTFNlcmlhbGl6ZXIoKSkuc2VyaWFsaXplVG9TdHJpbmcodGhpcy5iYXNlKTtcbn1cblxuR3VwcHlEb2MucHJvdG90eXBlLnhwYXRoX25vZGUgPSBmdW5jdGlvbih4cGF0aCwgbm9kZSl7XG4gICAgbm9kZSA9IG5vZGUgfHwgdGhpcy5yb290KClcbiAgICByZXR1cm4gdGhpcy5iYXNlLmV2YWx1YXRlKHhwYXRoLCBub2RlLCBudWxsLCBYUGF0aFJlc3VsdC5GSVJTVF9PUkRFUkVEX05PREVfVFlQRSwgbnVsbCkuc2luZ2xlTm9kZVZhbHVlO1xufVxuXG5HdXBweURvYy5wcm90b3R5cGUueHBhdGhfbGlzdCA9IGZ1bmN0aW9uKHhwYXRoLCBub2RlKXtcbiAgICBub2RlID0gbm9kZSB8fCB0aGlzLnJvb3QoKVxuICAgIHJldHVybiB0aGlzLmJhc2UuZXZhbHVhdGUoeHBhdGgsIG5vZGUsIG51bGwsIFhQYXRoUmVzdWx0Lk9SREVSRURfTk9ERV9JVEVSQVRPUl9UWVBFLCBudWxsKTtcbn1cblxuR3VwcHlEb2MucHJvdG90eXBlLmdldF9zeW1ib2xzID0gZnVuY3Rpb24oZ3JvdXBzKXtcbiAgICB2YXIgdHlwZXMgPSB7fTtcbiAgICB2YXIgYW5zID0gW107XG4gICAgdmFyIGl0ZXJhdG9yID0gZ3JvdXBzID8gdGhpcy54cGF0aF9saXN0KFwiLy9mXCIpIDogdGhpcy54cGF0aF9saXN0KFwiLy9mW0Bncm91cD0nXCIrZ3JvdXBzW2ldK1wiJ11cIik7XG4gICAgZm9yKHZhciBubiA9IGl0ZXJhdG9yLml0ZXJhdGVOZXh0KCk7IG5uICE9IG51bGw7IG5uID0gaXRlcmF0b3IuaXRlcmF0ZU5leHQoKSlcblx0dHlwZXNbbm4uZ2V0QXR0cmlidXRlKFwidHlwZVwiKV0gPSB0cnVlO1xuICAgIGZvcih2YXIgdCBpbiB0eXBlcylcblx0YW5zLnB1c2godCk7XG4gICAgcmV0dXJuIGFucztcbn1cblxuR3VwcHlEb2MucHJvdG90eXBlLnNldF9jb250ZW50ID0gZnVuY3Rpb24oeG1sX2RhdGEpIHtcbiAgICB0aGlzLmJhc2UgPSAobmV3IHdpbmRvdy5ET01QYXJzZXIoKSkucGFyc2VGcm9tU3RyaW5nKHhtbF9kYXRhLCBcInRleHQveG1sXCIpO1xuICAgIHRoaXMuZW5zdXJlX3RleHRfbm9kZXMoKTtcbn1cblxuR3VwcHlEb2MuYnJhY2tldF94cGF0aCA9IFwiKGNvdW50KC4vKikgIT0gMSBhbmQgbm90IFxcXG5cdFx0ICAgICAgICAgICggXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudCguL2UpPTIgYW5kIFxcXG5cdFx0XHQgICAgY291bnQoLi9mKT0xIGFuZCBcXFxuXHRcdFx0ICAgIGNvdW50KC4vZVtzdHJpbmctbGVuZ3RoKHRleHQoKSk9MF0pPTIgYW5kIFxcXG5cdFx0XHQgICAgKCBcXFxuXHRcdFx0ICAgICAgKFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50KC4vZi9jKT0xIGFuZFxcXG5cdFx0XHQgICAgICAgIGNvdW50KC4vZi9jW0Bpc19icmFja2V0PSd5ZXMnXSk9MVxcXG5cdFx0XHQgICAgICApXFxcblx0XHRcdCAgICAgIG9yXFxcblx0XHRcdCAgICAgIChcXFxuXHRcdFx0ICAgICAgICBmL0BjPSd5ZXMnIGFuZCBcXFxuXHRcdFx0XHRjb3VudCguL2VbQGN1cnJlbnQ9J3llcyddKT0wIGFuZCBcXFxuXHRcdFx0XHRjb3VudCguL2VbQHRlbXA9J3llcyddKT0wIFxcXG5cdFx0XHQgICAgICApXFxcblx0XHRcdCAgICApXFxcblx0XHRcdCAgKVxcXG5cdFx0XHQpICBcXFxuXHRcdFx0b3JcXFxuXHRcdCAgICAgICAgKFxcXG5cdFx0XHQgIGNvdW50KC4vKikgPSAxIGFuZCBcXFxuXHRcdFx0ICBzdHJpbmctbGVuZ3RoKC4vZS90ZXh0KCkpICE9IDEgYW5kIFxcXG5cdFx0XHQgIG51bWJlciguL2UvdGV4dCgpKSAhPSAuL2UvdGV4dCgpIFxcXG5cdFx0XHQpIFxcXG5cdFx0XHRvciBcXFxuXHRcdCAgICAgICAgKCBcXFxuXHRcdFx0ICBjb3VudCguLyopID0gMSBhbmQgXFxcblx0XHRcdCAgLi9lL0BjdXJyZW50ID0gJ3llcycgXFxcblx0XHRcdCkgXFxcblx0XHRcdG9yIFxcXG5cdFx0ICAgICAgICAoIFxcXG5cdFx0XHQgIGNvdW50KC4vKikgPSAxIGFuZCBcXFxuXHRcdFx0ICAuL2UvQHRlbXAgPSAneWVzJyBcXFxuXHRcdFx0KVwiXG5cbkd1cHB5RG9jLnByb3RvdHlwZS5tYW51YWxfcmVuZGVyID0gZnVuY3Rpb24odCwgbiwgcikge1xuICAgIHZhciBhbnMgPSBcIlwiO1xuICAgIGlmIChuLm5vZGVOYW1lID09IFwiZVwiKSB7XG4gICAgICAgIGlmICh0ID09IFwibGF0ZXhcIiAmJiByKSB7XG4gICAgICAgICAgICBhbnMgPSBuLmdldEF0dHJpYnV0ZShcInJlbmRlclwiKTtcbiAgICAgICAgfSBlbHNlIGlmKHQgPT0gXCJ0ZXh0XCIpe1xuICAgICAgICAgICAgYW5zID0gR3VwcHlVdGlscy5nZXRfdmFsdWUobik7XG4gICAgICAgICAgICBpZiAobi5wcmV2aW91c1NpYmxpbmcgJiYgbi5uZXh0U2libGluZyAmJiBhbnMgPT0gXCJcIilcbiAgICAgICAgICAgICAgICBhbnMgPSBcIiAqIFwiO1xuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgYW5zID0gYW5zLnJlcGxhY2UoLyguKShbXmEtekEtWjAtOS5dKSguKS9nLCBcIiQxICQyICQzXCIpO1xuICAgICAgICAgICAgICAgIGFucyA9IGFucy5yZXBsYWNlKC8oW2EtekEtWl0pKD89XFwuKS9nLCBcIiQxICogXCIpO1xuICAgICAgICAgICAgICAgIGFucyA9IGFucy5yZXBsYWNlKC8oXFwuKSg/PVthLXpBLVpdKS9nLCBcIiQxICogXCIpO1xuICAgICAgICAgICAgICAgIGFucyA9IGFucy5yZXBsYWNlKC8oW2EtekEtWl0pKD89W2EtekEtWjAtOV0pL2csIFwiJDEgKiBcIik7XG4gICAgICAgICAgICAgICAgYW5zID0gYW5zLnJlcGxhY2UoLyhbYS16QS1aMC05XSkoPz1bYS16QS1aXSkvZywgXCIkMSAqIFwiKTtcbiAgICAgICAgICAgICAgICBpZiAobi5wcmV2aW91c1NpYmxpbmcgJiYgbi5wcmV2aW91c1NpYmxpbmcuZ2V0QXR0cmlidXRlKFwiZ3JvdXBcIikgIT0gXCJvcGVyYXRpb25zXCIpXG4gICAgICAgICAgICAgICAgICAgIGFucyA9IGFucy5yZXBsYWNlKC9eKFthLXpBLVowLTldKS9nLCBcIiAqICQxXCIpO1xuICAgICAgICAgICAgICAgIGlmIChuLm5leHRTaWJsaW5nICYmIG4ubmV4dFNpYmxpbmcuZ2V0QXR0cmlidXRlKFwiZ3JvdXBcIikgIT0gXCJvcGVyYXRpb25zXCIpXG4gICAgICAgICAgICAgICAgICAgIGFucyA9IGFucy5yZXBsYWNlKC8oW2EtekEtWjAtOV0pJC9nLCBcIiQxICogXCIpO1xuICAgICAgICAgICAgICAgIGFucyA9IFwiIFwiICsgYW5zICsgXCIgXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBhbnMgPSBHdXBweVV0aWxzLmdldF92YWx1ZShuKTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSBpZihuLm5vZGVOYW1lID09IFwiZlwiKSB7XG4gICAgICAgIHZhciByZWFsX3R5cGUgPSAodCA9PSBcImxhdGV4XCIgJiYgdGhpcy5pc19zbWFsbChuKSkgPyBcInNtYWxsX2xhdGV4XCIgOiB0O1xuICAgICAgICB2YXIgbm4gPSB0aGlzLnhwYXRoX25vZGUoXCIuL2JbQHA9J1wiICsgcmVhbF90eXBlICsgXCInXVwiLCBuKSB8fCB0aGlzLnhwYXRoX25vZGUoXCIuL2JbQHA9J1wiICsgdCArIFwiJ11cIiwgbik7XG4gICAgICAgIGlmIChubilcbiAgICAgICAgICAgIGFucyA9IHRoaXMubWFudWFsX3JlbmRlcih0LCBubiwgcik7XG4gICAgfSBlbHNlIGlmKG4ubm9kZU5hbWUgPT0gXCJiXCIpIHtcbiAgICAgICAgdmFyIGNzID0gW107XG4gICAgICAgIHZhciBpID0gMTtcbiAgICAgICAgdmFyIHBhciA9IG4ucGFyZW50Tm9kZTtcbiAgICAgICAgZm9yICh2YXIgbm4gPSBwYXIuZmlyc3RDaGlsZDsgbm4gIT0gbnVsbDsgbm4gPSBubi5uZXh0U2libGluZylcbiAgICAgICAgICAgIGlmIChubi5ub2RlTmFtZSA9PSBcImNcIiB8fCBubi5ub2RlTmFtZSA9PSBcImxcIilcbiAgICAgICAgICAgICAgICBjc1tpKytdID0gdGhpcy5tYW51YWxfcmVuZGVyKHQsIG5uLCByKTtcbiAgICAgICAgZm9yICh2YXIgbm4gPSBuLmZpcnN0Q2hpbGQ7IG5uICE9IG51bGw7IG5uID0gbm4ubmV4dFNpYmxpbmcpIHtcbiAgICAgICAgICAgIGlmIChubi5ub2RlVHlwZSA9PSAzKVxuICAgICAgICAgICAgICAgIGFucyArPSBubi50ZXh0Q29udGVudDtcbiAgICAgICAgICAgIGVsc2UgaWYgKG5uLm5vZGVUeXBlID09IDEpIHtcbiAgICAgICAgICAgICAgICBpZihubi5oYXNBdHRyaWJ1dGUoXCJkXCIpKXtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRpbSA9IHBhcnNlSW50KG5uLmdldEF0dHJpYnV0ZShcImRcIikpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgam9pbmVyID0gZnVuY3Rpb24oZCwgbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGQgPiAxKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgbC5sZW5ndGg7IGsrKylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbFtrXSA9IGpvaW5lcihkLTEsIGxba10pO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGwuam9pbihubi5nZXRBdHRyaWJ1dGUoJ3NlcCcgKyAoZCAtIDEpKSk7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIGFucyArPSBqb2luZXIoZGltLGNzW3BhcnNlSW50KG5uLmdldEF0dHJpYnV0ZShcInJlZlwiKSldKTtcbiAgICAgICAgICAgICAgICB9IGVsc2VcbiAgICAgICAgICAgICAgICAgICAgYW5zICs9IGNzW3BhcnNlSW50KG5uLmdldEF0dHJpYnV0ZShcInJlZlwiKSldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBlbHNlIGlmKG4ubm9kZU5hbWUgPT0gXCJsXCIpIHtcbiAgICAgICAgYW5zID0gW107XG4gICAgICAgIHZhciBpID0gMDtcbiAgICAgICAgZm9yICh2YXIgbm4gPSBuLmZpcnN0Q2hpbGQ7IG5uICE9IG51bGw7IG5uID0gbm4ubmV4dFNpYmxpbmcpe1xuICAgICAgICAgICAgYW5zW2krK10gPSB0aGlzLm1hbnVhbF9yZW5kZXIodCwgbm4sIHIpO1xuICAgICAgICB9XG4gICAgfSBlbHNlIGlmKG4ubm9kZU5hbWUgPT0gXCJjXCIgfHwgbi5ub2RlTmFtZSA9PSBcIm1cIikge1xuICAgICAgICBmb3IgKHZhciBubiA9IG4uZmlyc3RDaGlsZDsgbm4gIT0gbnVsbDsgbm4gPSBubi5uZXh0U2libGluZylcbiAgICAgICAgICAgIGFucyArPSB0aGlzLm1hbnVhbF9yZW5kZXIodCwgbm4sIHIpO1xuICAgICAgICBpZiAodCA9PSBcImxhdGV4XCIgJiZcbiAgICAgICAgICAgICAgICBuLmdldEF0dHJpYnV0ZShcImJyYWNrZXRcIikgPT0gXCJ5ZXNcIiAmJlxuICAgICAgICAgICAgICAgIHRoaXMuYmFzZS5ldmFsdWF0ZShHdXBweURvYy5icmFja2V0X3hwYXRoLCBuLCBudWxsLFxuICAgICAgICAgICAgICAgIFhQYXRoUmVzdWx0LkJPT0xFQU5fVFlQRSwgbnVsbCkuYm9vbGVhblZhbHVlKSB7IFxuICAgICAgICAgICAgYW5zID0gXCJcXFxcbGVmdChcIiArIGFucyArIFwiXFxcXHJpZ2h0KVwiO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBhbnM7XG59XG5cbkd1cHB5RG9jLnByb3RvdHlwZS5wYXRoX3RvID0gZnVuY3Rpb24obil7XG4gICAgdmFyIG5hbWUgPSBuLm5vZGVOYW1lO1xuICAgIGlmKG5hbWUgPT0gXCJtXCIpIHJldHVybiBcImd1cHB5X2xvY19tXCI7XG4gICAgdmFyIG5zID0gMDtcbiAgICBmb3IodmFyIG5uID0gbjsgbm4gIT0gbnVsbDsgbm4gPSBubi5wcmV2aW91c1NpYmxpbmcpIGlmKG5uLm5vZGVUeXBlID09IDEgJiYgbm4ubm9kZU5hbWUgPT0gbmFtZSkgbnMrKztcbiAgICByZXR1cm4gdGhpcy5wYXRoX3RvKG4ucGFyZW50Tm9kZSkrXCJfXCIrbmFtZStcIlwiK25zO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEd1cHB5RG9jO1xuIiwiR3VwcHlTeW1ib2xzID0ge1wic3ltYm9sc1wiOnt9fTtcblxuR3VwcHlTeW1ib2xzLnN5bWJfcmF3ID0gZnVuY3Rpb24oc3ltYl9uYW1lLGxhdGV4X3N5bWIsdGV4dF9zeW1iLGdyb3VwKXtcbiAgICByZXR1cm4ge1wib3V0cHV0XCI6e1wibGF0ZXhcIjpsYXRleF9zeW1iLFxuXHRcdCAgICAgIFwidGV4dFwiOnRleHRfc3ltYn0sXG5cdCAgICBcImdyb3VwXCI6Z3JvdXAsXG5cdCAgICBcImNoYXJcIjp0cnVlLFxuXHQgICAgXCJ0eXBlXCI6c3ltYl9uYW1lfTtcbn1cblxuR3VwcHlTeW1ib2xzLnN5bWJfZnVuYyA9IGZ1bmN0aW9uKGZ1bmNfbmFtZSxncm91cCl7XG4gICAgcmV0dXJuIHtcIm91dHB1dFwiOntcImxhdGV4XCI6XCJcXFxcXCIrZnVuY19uYW1lK1wiXFxcXGxlZnQoeyQxfVxcXFxyaWdodClcIixcblx0XHQgICAgICBcInRleHRcIjpcIiBcIiArIGZ1bmNfbmFtZStcIih7JDF9KVwifSxcblx0ICAgIFwidHlwZVwiOmZ1bmNfbmFtZSxcblx0ICAgIFwiZ3JvdXBcIjpncm91cCxcblx0ICAgIFwiYXR0cnNcIjpbXG5cdFx0e1wiZGVsZXRlXCI6XCIxXCJ9XG5cdCAgICBdXG5cdCAgIH07XG59XG5cbkd1cHB5U3ltYm9scy5hZGRfc3ltYm9scyA9IGZ1bmN0aW9uKG5hbWUsc3ltKXtcbiAgICB2YXIgc3ltYm9scyA9IHt9O1xuICAgIGlmKG5hbWUgPT0gXCJfcmF3XCIpXG5cdGZvcih2YXIgaSA9IDA7IGkgPCBzeW0ubGVuZ3RoOyBpKyspXG5cdCAgICBmb3IodmFyIHQgaW4gc3ltW2ldWydzeW1ib2xzJ10pXG5cdFx0c3ltYm9sc1t0XSA9IEd1cHB5U3ltYm9scy5zeW1iX3Jhdyh0LCBzeW1baV1bJ3N5bWJvbHMnXVt0XVtcImxhdGV4XCJdLCBzeW1baV1bJ3N5bWJvbHMnXVt0XVtcInRleHRcIl0sIHN5bVtpXVsnZ3JvdXAnXSk7XG4gICAgXG4gICAgZWxzZSBpZihuYW1lID09IFwiX2xpdGVyYWxcIilcblx0Zm9yKHZhciBqID0gMDsgaiA8IHN5bS5sZW5ndGg7IGorKylcblx0ICAgIGZvcih2YXIgaSA9IDA7IGkgPCBzeW1bal1bJ3N5bWJvbHMnXS5sZW5ndGg7IGkrKylcblx0XHRzeW1ib2xzW3N5bVtqXVsnc3ltYm9scyddW2ldXSA9IEd1cHB5U3ltYm9scy5zeW1iX3JhdyhzeW1bal1bJ3N5bWJvbHMnXVtpXSwgXCJcXFxcXCIrc3ltW2pdWydzeW1ib2xzJ11baV0sIFwiICRcIitzeW1bal1bJ3N5bWJvbHMnXVtpXStcIiBcIiwgc3ltW2pdWydncm91cCddKTtcbiAgICBcbiAgICBlbHNlIGlmKG5hbWUgPT0gXCJfZnVuY1wiKVxuXHRmb3IodmFyIGogPSAwOyBqIDwgc3ltLmxlbmd0aDsgaisrKVxuXHQgICAgZm9yKHZhciBpID0gMDsgaSA8IHN5bVtqXVsnc3ltYm9scyddLmxlbmd0aDsgaSsrKVxuXHRcdHN5bWJvbHNbc3ltW2pdWydzeW1ib2xzJ11baV1dID0gR3VwcHlTeW1ib2xzLnN5bWJfZnVuYyhzeW1bal1bJ3N5bWJvbHMnXVtpXSwgc3ltW2pdWydncm91cCddKTtcbiAgICBcbiAgICBlbHNlIHN5bWJvbHNbbmFtZV0gPSBzeW07XG4gICAgcmV0dXJuIHN5bWJvbHNcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBHdXBweVN5bWJvbHM7XG4iLCJ2YXIgR3VwcHlVdGlscyA9IHt9O1xuXG5HdXBweVV0aWxzLkNBUkVUID0gXCJcXFxcY3Vyc29yWy0wLjJleF17MC43ZW19XCJcbkd1cHB5VXRpbHMuVEVNUF9TTUFMTF9DQVJFVCA9IFwiXFxcXGN1cnNvclswZW1dezAuNmVtfVwiXG5HdXBweVV0aWxzLlRFTVBfQ0FSRVQgPSBcIlxcXFxjdXJzb3JbLTAuMmV4XXswLjdlbX1cIlxuR3VwcHlVdGlscy5TTUFMTF9DQVJFVCA9IFwiXFxcXGN1cnNvclstMC4wNWVtXXswLjVlbX1cIlxuR3VwcHlVdGlscy5TRUxfQ0FSRVQgPSBcIlxcXFxjdXJzb3JbLTAuMmV4XXswLjdlbX1cIlxuR3VwcHlVdGlscy5TTUFMTF9TRUxfQ0FSRVQgPSBcIlxcXFxjdXJzb3JbLTAuMDVlbV17MC41ZW19XCJcbkd1cHB5VXRpbHMuU0VMX0NPTE9SID0gXCJyZWRcIlxuXG5HdXBweVV0aWxzLmlzX2JsYW5rID0gZnVuY3Rpb24obil7XG4gICAgcmV0dXJuIG4uZmlyc3RDaGlsZCA9PSBudWxsIHx8IG4uZmlyc3RDaGlsZC5ub2RlVmFsdWUgPT0gJyc7XG59XG5cbkd1cHB5VXRpbHMuZ2V0X3ZhbHVlID0gZnVuY3Rpb24obikge1xuICAgIHJldHVybiBuLmZpcnN0Q2hpbGQgPyBuLmZpcnN0Q2hpbGQubm9kZVZhbHVlIDogXCJcIjtcbn07XG5cbkd1cHB5VXRpbHMuZ2V0X2xlbmd0aCA9IGZ1bmN0aW9uKG4pe1xuICAgIGlmIChHdXBweVV0aWxzLmlzX2JsYW5rKG4pIHx8IG4ubm9kZU5hbWUgPT0gJ2YnKVxuICAgICAgICByZXR1cm4gMDtcbiAgICByZXR1cm4gbi5maXJzdENoaWxkLm5vZGVWYWx1ZS5sZW5ndGg7XG59XG5cbkd1cHB5VXRpbHMucGF0aF90byA9IGZ1bmN0aW9uKG4pe1xuICAgIHZhciBuYW1lID0gbi5ub2RlTmFtZTtcbiAgICBpZihuYW1lID09IFwibVwiKSByZXR1cm4gXCJndXBweV9sb2NfbVwiO1xuICAgIHZhciBucyA9IDA7XG4gICAgZm9yKHZhciBubiA9IG47IG5uICE9IG51bGw7IG5uID0gbm4ucHJldmlvdXNTaWJsaW5nKSBpZihubi5ub2RlVHlwZSA9PSAxICYmIG5uLm5vZGVOYW1lID09IG5hbWUpIG5zKys7XG4gICAgcmV0dXJuIEd1cHB5VXRpbHMucGF0aF90byhuLnBhcmVudE5vZGUpK1wiX1wiK25hbWUrXCJcIitucztcbn1cblxuR3VwcHlVdGlscy5pc190ZXh0ID0gZnVuY3Rpb24obm4pe1xuICAgIHJldHVybiBubi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcIm1vZGVcIikgJiYgKG5uLnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKFwibW9kZVwiKSA9PSBcInRleHRcIiB8fCBubi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcIm1vZGVcIikgPT0gXCJzeW1ib2xcIik7XG59XG5cbkd1cHB5VXRpbHMuaXNfc3ltYm9sID0gZnVuY3Rpb24obm4pe1xuICAgIHJldHVybiBubi5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcIm1vZGVcIikgJiYgbm4ucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoXCJtb2RlXCIpID09IFwic3ltYm9sXCI7XG59XG5cbkd1cHB5VXRpbHMuaXNfc21hbGwgPSBmdW5jdGlvbihubil7XG4gICAgdmFyIG4gPSBubi5wYXJlbnROb2RlO1xuICAgIHdoaWxlKG4gIT0gbnVsbCAmJiBuLm5vZGVOYW1lICE9ICdtJyl7XG5cdGlmKG4uZ2V0QXR0cmlidXRlKFwic21hbGxcIikgPT0gXCJ5ZXNcIil7XG5cdCAgICByZXR1cm4gdHJ1ZTtcblx0fVxuXHRuID0gbi5wYXJlbnROb2RlXG5cdHdoaWxlKG4gIT0gbnVsbCAmJiBuLm5vZGVOYW1lICE9ICdjJylcblx0ICAgIG4gPSBuLnBhcmVudE5vZGU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBHdXBweVV0aWxzO1xuIiwiLypnbG9iYWwgZGVmaW5lOmZhbHNlICovXG4vKipcbiAqIENvcHlyaWdodCAyMDEyLTIwMTcgQ3JhaWcgQ2FtcGJlbGxcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqXG4gKiBNb3VzZXRyYXAgaXMgYSBzaW1wbGUga2V5Ym9hcmQgc2hvcnRjdXQgbGlicmFyeSBmb3IgSmF2YXNjcmlwdCB3aXRoXG4gKiBubyBleHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqXG4gKiBAdmVyc2lvbiAxLjYuMVxuICogQHVybCBjcmFpZy5pcy9raWxsaW5nL21pY2VcbiAqL1xuKGZ1bmN0aW9uKHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xuXG4gICAgLy8gQ2hlY2sgaWYgbW91c2V0cmFwIGlzIHVzZWQgaW5zaWRlIGJyb3dzZXIsIGlmIG5vdCwgcmV0dXJuXG4gICAgaWYgKCF3aW5kb3cpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIG1hcHBpbmcgb2Ygc3BlY2lhbCBrZXljb2RlcyB0byB0aGVpciBjb3JyZXNwb25kaW5nIGtleXNcbiAgICAgKlxuICAgICAqIGV2ZXJ5dGhpbmcgaW4gdGhpcyBkaWN0aW9uYXJ5IGNhbm5vdCB1c2Uga2V5cHJlc3MgZXZlbnRzXG4gICAgICogc28gaXQgaGFzIHRvIGJlIGhlcmUgdG8gbWFwIHRvIHRoZSBjb3JyZWN0IGtleWNvZGVzIGZvclxuICAgICAqIGtleXVwL2tleWRvd24gZXZlbnRzXG4gICAgICpcbiAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAqL1xuICAgIHZhciBfTUFQID0ge1xuICAgICAgICA4OiAnYmFja3NwYWNlJyxcbiAgICAgICAgOTogJ3RhYicsXG4gICAgICAgIDEzOiAnZW50ZXInLFxuICAgICAgICAxNjogJ3NoaWZ0JyxcbiAgICAgICAgMTc6ICdjdHJsJyxcbiAgICAgICAgMTg6ICdhbHQnLFxuICAgICAgICAyMDogJ2NhcHNsb2NrJyxcbiAgICAgICAgMjc6ICdlc2MnLFxuICAgICAgICAzMjogJ3NwYWNlJyxcbiAgICAgICAgMzM6ICdwYWdldXAnLFxuICAgICAgICAzNDogJ3BhZ2Vkb3duJyxcbiAgICAgICAgMzU6ICdlbmQnLFxuICAgICAgICAzNjogJ2hvbWUnLFxuICAgICAgICAzNzogJ2xlZnQnLFxuICAgICAgICAzODogJ3VwJyxcbiAgICAgICAgMzk6ICdyaWdodCcsXG4gICAgICAgIDQwOiAnZG93bicsXG4gICAgICAgIDQ1OiAnaW5zJyxcbiAgICAgICAgNDY6ICdkZWwnLFxuICAgICAgICA5MTogJ21ldGEnLFxuICAgICAgICA5MzogJ21ldGEnLFxuICAgICAgICAyMjQ6ICdtZXRhJ1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBtYXBwaW5nIGZvciBzcGVjaWFsIGNoYXJhY3RlcnMgc28gdGhleSBjYW4gc3VwcG9ydFxuICAgICAqXG4gICAgICogdGhpcyBkaWN0aW9uYXJ5IGlzIG9ubHkgdXNlZCBpbmNhc2UgeW91IHdhbnQgdG8gYmluZCBhXG4gICAgICoga2V5dXAgb3Iga2V5ZG93biBldmVudCB0byBvbmUgb2YgdGhlc2Uga2V5c1xuICAgICAqXG4gICAgICogQHR5cGUge09iamVjdH1cbiAgICAgKi9cbiAgICB2YXIgX0tFWUNPREVfTUFQID0ge1xuICAgICAgICAxMDY6ICcqJyxcbiAgICAgICAgMTA3OiAnKycsXG4gICAgICAgIDEwOTogJy0nLFxuICAgICAgICAxMTA6ICcuJyxcbiAgICAgICAgMTExIDogJy8nLFxuICAgICAgICAxODY6ICc7JyxcbiAgICAgICAgMTg3OiAnPScsXG4gICAgICAgIDE4ODogJywnLFxuICAgICAgICAxODk6ICctJyxcbiAgICAgICAgMTkwOiAnLicsXG4gICAgICAgIDE5MTogJy8nLFxuICAgICAgICAxOTI6ICdgJyxcbiAgICAgICAgMjE5OiAnWycsXG4gICAgICAgIDIyMDogJ1xcXFwnLFxuICAgICAgICAyMjE6ICddJyxcbiAgICAgICAgMjIyOiAnXFwnJ1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiB0aGlzIGlzIGEgbWFwcGluZyBvZiBrZXlzIHRoYXQgcmVxdWlyZSBzaGlmdCBvbiBhIFVTIGtleXBhZFxuICAgICAqIGJhY2sgdG8gdGhlIG5vbiBzaGlmdCBlcXVpdmVsZW50c1xuICAgICAqXG4gICAgICogdGhpcyBpcyBzbyB5b3UgY2FuIHVzZSBrZXl1cCBldmVudHMgd2l0aCB0aGVzZSBrZXlzXG4gICAgICpcbiAgICAgKiBub3RlIHRoYXQgdGhpcyB3aWxsIG9ubHkgd29yayByZWxpYWJseSBvbiBVUyBrZXlib2FyZHNcbiAgICAgKlxuICAgICAqIEB0eXBlIHtPYmplY3R9XG4gICAgICovXG4gICAgdmFyIF9TSElGVF9NQVAgPSB7XG4gICAgICAgICd+JzogJ2AnLFxuICAgICAgICAnISc6ICcxJyxcbiAgICAgICAgJ0AnOiAnMicsXG4gICAgICAgICcjJzogJzMnLFxuICAgICAgICAnJCc6ICc0JyxcbiAgICAgICAgJyUnOiAnNScsXG4gICAgICAgICdeJzogJzYnLFxuICAgICAgICAnJic6ICc3JyxcbiAgICAgICAgJyonOiAnOCcsXG4gICAgICAgICcoJzogJzknLFxuICAgICAgICAnKSc6ICcwJyxcbiAgICAgICAgJ18nOiAnLScsXG4gICAgICAgICcrJzogJz0nLFxuICAgICAgICAnOic6ICc7JyxcbiAgICAgICAgJ1xcXCInOiAnXFwnJyxcbiAgICAgICAgJzwnOiAnLCcsXG4gICAgICAgICc+JzogJy4nLFxuICAgICAgICAnPyc6ICcvJyxcbiAgICAgICAgJ3wnOiAnXFxcXCdcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogdGhpcyBpcyBhIGxpc3Qgb2Ygc3BlY2lhbCBzdHJpbmdzIHlvdSBjYW4gdXNlIHRvIG1hcFxuICAgICAqIHRvIG1vZGlmaWVyIGtleXMgd2hlbiB5b3Ugc3BlY2lmeSB5b3VyIGtleWJvYXJkIHNob3J0Y3V0c1xuICAgICAqXG4gICAgICogQHR5cGUge09iamVjdH1cbiAgICAgKi9cbiAgICB2YXIgX1NQRUNJQUxfQUxJQVNFUyA9IHtcbiAgICAgICAgJ29wdGlvbic6ICdhbHQnLFxuICAgICAgICAnY29tbWFuZCc6ICdtZXRhJyxcbiAgICAgICAgJ3JldHVybic6ICdlbnRlcicsXG4gICAgICAgICdlc2NhcGUnOiAnZXNjJyxcbiAgICAgICAgJ3BsdXMnOiAnKycsXG4gICAgICAgICdtb2QnOiAvTWFjfGlQb2R8aVBob25lfGlQYWQvLnRlc3QobmF2aWdhdG9yLnBsYXRmb3JtKSA/ICdtZXRhJyA6ICdjdHJsJ1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiB2YXJpYWJsZSB0byBzdG9yZSB0aGUgZmxpcHBlZCB2ZXJzaW9uIG9mIF9NQVAgZnJvbSBhYm92ZVxuICAgICAqIG5lZWRlZCB0byBjaGVjayBpZiB3ZSBzaG91bGQgdXNlIGtleXByZXNzIG9yIG5vdCB3aGVuIG5vIGFjdGlvblxuICAgICAqIGlzIHNwZWNpZmllZFxuICAgICAqXG4gICAgICogQHR5cGUge09iamVjdHx1bmRlZmluZWR9XG4gICAgICovXG4gICAgdmFyIF9SRVZFUlNFX01BUDtcblxuICAgIC8qKlxuICAgICAqIGxvb3AgdGhyb3VnaCB0aGUgZiBrZXlzLCBmMSB0byBmMTkgYW5kIGFkZCB0aGVtIHRvIHRoZSBtYXBcbiAgICAgKiBwcm9ncmFtYXRpY2FsbHlcbiAgICAgKi9cbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IDIwOyArK2kpIHtcbiAgICAgICAgX01BUFsxMTEgKyBpXSA9ICdmJyArIGk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogbG9vcCB0aHJvdWdoIHRvIG1hcCBudW1iZXJzIG9uIHRoZSBudW1lcmljIGtleXBhZFxuICAgICAqL1xuICAgIGZvciAoaSA9IDA7IGkgPD0gOTsgKytpKSB7XG5cbiAgICAgICAgLy8gVGhpcyBuZWVkcyB0byB1c2UgYSBzdHJpbmcgY2F1c2Ugb3RoZXJ3aXNlIHNpbmNlIDAgaXMgZmFsc2V5XG4gICAgICAgIC8vIG1vdXNldHJhcCB3aWxsIG5ldmVyIGZpcmUgZm9yIG51bXBhZCAwIHByZXNzZWQgYXMgcGFydCBvZiBhIGtleWRvd25cbiAgICAgICAgLy8gZXZlbnQuXG4gICAgICAgIC8vXG4gICAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2NjYW1wYmVsbC9tb3VzZXRyYXAvcHVsbC8yNThcbiAgICAgICAgX01BUFtpICsgOTZdID0gaS50b1N0cmluZygpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGNyb3NzIGJyb3dzZXIgYWRkIGV2ZW50IG1ldGhvZFxuICAgICAqXG4gICAgICogQHBhcmFtIHtFbGVtZW50fEhUTUxEb2N1bWVudH0gb2JqZWN0XG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfYWRkRXZlbnQob2JqZWN0LCB0eXBlLCBjYWxsYmFjaykge1xuICAgICAgICBpZiAob2JqZWN0LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgICAgIG9iamVjdC5hZGRFdmVudExpc3RlbmVyKHR5cGUsIGNhbGxiYWNrLCBmYWxzZSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBvYmplY3QuYXR0YWNoRXZlbnQoJ29uJyArIHR5cGUsIGNhbGxiYWNrKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiB0YWtlcyB0aGUgZXZlbnQgYW5kIHJldHVybnMgdGhlIGtleSBjaGFyYWN0ZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7RXZlbnR9IGVcbiAgICAgKiBAcmV0dXJuIHtzdHJpbmd9XG4gICAgICovXG4gICAgZnVuY3Rpb24gX2NoYXJhY3RlckZyb21FdmVudChlKSB7XG5cbiAgICAgICAgLy8gZm9yIGtleXByZXNzIGV2ZW50cyB3ZSBzaG91bGQgcmV0dXJuIHRoZSBjaGFyYWN0ZXIgYXMgaXNcbiAgICAgICAgaWYgKGUudHlwZSA9PSAna2V5cHJlc3MnKSB7XG4gICAgICAgICAgICB2YXIgY2hhcmFjdGVyID0gU3RyaW5nLmZyb21DaGFyQ29kZShlLndoaWNoKTtcblxuICAgICAgICAgICAgLy8gaWYgdGhlIHNoaWZ0IGtleSBpcyBub3QgcHJlc3NlZCB0aGVuIGl0IGlzIHNhZmUgdG8gYXNzdW1lXG4gICAgICAgICAgICAvLyB0aGF0IHdlIHdhbnQgdGhlIGNoYXJhY3RlciB0byBiZSBsb3dlcmNhc2UuICB0aGlzIG1lYW5zIGlmXG4gICAgICAgICAgICAvLyB5b3UgYWNjaWRlbnRhbGx5IGhhdmUgY2FwcyBsb2NrIG9uIHRoZW4geW91ciBrZXkgYmluZGluZ3NcbiAgICAgICAgICAgIC8vIHdpbGwgY29udGludWUgdG8gd29ya1xuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIHRoZSBvbmx5IHNpZGUgZWZmZWN0IHRoYXQgbWlnaHQgbm90IGJlIGRlc2lyZWQgaXMgaWYgeW91XG4gICAgICAgICAgICAvLyBiaW5kIHNvbWV0aGluZyBsaWtlICdBJyBjYXVzZSB5b3Ugd2FudCB0byB0cmlnZ2VyIGFuXG4gICAgICAgICAgICAvLyBldmVudCB3aGVuIGNhcGl0YWwgQSBpcyBwcmVzc2VkIGNhcHMgbG9jayB3aWxsIG5vIGxvbmdlclxuICAgICAgICAgICAgLy8gdHJpZ2dlciB0aGUgZXZlbnQuICBzaGlmdCthIHdpbGwgdGhvdWdoLlxuICAgICAgICAgICAgaWYgKCFlLnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICAgICAgY2hhcmFjdGVyID0gY2hhcmFjdGVyLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBjaGFyYWN0ZXI7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBmb3Igbm9uIGtleXByZXNzIGV2ZW50cyB0aGUgc3BlY2lhbCBtYXBzIGFyZSBuZWVkZWRcbiAgICAgICAgaWYgKF9NQVBbZS53aGljaF0pIHtcbiAgICAgICAgICAgIHJldHVybiBfTUFQW2Uud2hpY2hdO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF9LRVlDT0RFX01BUFtlLndoaWNoXSkge1xuICAgICAgICAgICAgcmV0dXJuIF9LRVlDT0RFX01BUFtlLndoaWNoXTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGlmIGl0IGlzIG5vdCBpbiB0aGUgc3BlY2lhbCBtYXBcblxuICAgICAgICAvLyB3aXRoIGtleWRvd24gYW5kIGtleXVwIGV2ZW50cyB0aGUgY2hhcmFjdGVyIHNlZW1zIHRvIGFsd2F5c1xuICAgICAgICAvLyBjb21lIGluIGFzIGFuIHVwcGVyY2FzZSBjaGFyYWN0ZXIgd2hldGhlciB5b3UgYXJlIHByZXNzaW5nIHNoaWZ0XG4gICAgICAgIC8vIG9yIG5vdC4gIHdlIHNob3VsZCBtYWtlIHN1cmUgaXQgaXMgYWx3YXlzIGxvd2VyY2FzZSBmb3IgY29tcGFyaXNvbnNcbiAgICAgICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoZS53aGljaCkudG9Mb3dlckNhc2UoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBjaGVja3MgaWYgdHdvIGFycmF5cyBhcmUgZXF1YWxcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7QXJyYXl9IG1vZGlmaWVyczFcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBtb2RpZmllcnMyXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG4gICAgZnVuY3Rpb24gX21vZGlmaWVyc01hdGNoKG1vZGlmaWVyczEsIG1vZGlmaWVyczIpIHtcbiAgICAgICAgcmV0dXJuIG1vZGlmaWVyczEuc29ydCgpLmpvaW4oJywnKSA9PT0gbW9kaWZpZXJzMi5zb3J0KCkuam9pbignLCcpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHRha2VzIGEga2V5IGV2ZW50IGFuZCBmaWd1cmVzIG91dCB3aGF0IHRoZSBtb2RpZmllcnMgYXJlXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICogQHJldHVybnMge0FycmF5fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9ldmVudE1vZGlmaWVycyhlKSB7XG4gICAgICAgIHZhciBtb2RpZmllcnMgPSBbXTtcblxuICAgICAgICBpZiAoZS5zaGlmdEtleSkge1xuICAgICAgICAgICAgbW9kaWZpZXJzLnB1c2goJ3NoaWZ0Jyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZS5hbHRLZXkpIHtcbiAgICAgICAgICAgIG1vZGlmaWVycy5wdXNoKCdhbHQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlLmN0cmxLZXkpIHtcbiAgICAgICAgICAgIG1vZGlmaWVycy5wdXNoKCdjdHJsJyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZS5tZXRhS2V5KSB7XG4gICAgICAgICAgICBtb2RpZmllcnMucHVzaCgnbWV0YScpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG1vZGlmaWVycztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBwcmV2ZW50cyBkZWZhdWx0IGZvciB0aGlzIGV2ZW50XG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9wcmV2ZW50RGVmYXVsdChlKSB7XG4gICAgICAgIGlmIChlLnByZXZlbnREZWZhdWx0KSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBlLnJldHVyblZhbHVlID0gZmFsc2U7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogc3RvcHMgcHJvcG9nYXRpb24gZm9yIHRoaXMgZXZlbnRcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7RXZlbnR9IGVcbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgZnVuY3Rpb24gX3N0b3BQcm9wYWdhdGlvbihlKSB7XG4gICAgICAgIGlmIChlLnN0b3BQcm9wYWdhdGlvbikge1xuICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGUuY2FuY2VsQnViYmxlID0gdHJ1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBkZXRlcm1pbmVzIGlmIHRoZSBrZXljb2RlIHNwZWNpZmllZCBpcyBhIG1vZGlmaWVyIGtleSBvciBub3RcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfaXNNb2RpZmllcihrZXkpIHtcbiAgICAgICAgcmV0dXJuIGtleSA9PSAnc2hpZnQnIHx8IGtleSA9PSAnY3RybCcgfHwga2V5ID09ICdhbHQnIHx8IGtleSA9PSAnbWV0YSc7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogcmV2ZXJzZXMgdGhlIG1hcCBsb29rdXAgc28gdGhhdCB3ZSBjYW4gbG9vayBmb3Igc3BlY2lmaWMga2V5c1xuICAgICAqIHRvIHNlZSB3aGF0IGNhbiBhbmQgY2FuJ3QgdXNlIGtleXByZXNzXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHtPYmplY3R9XG4gICAgICovXG4gICAgZnVuY3Rpb24gX2dldFJldmVyc2VNYXAoKSB7XG4gICAgICAgIGlmICghX1JFVkVSU0VfTUFQKSB7XG4gICAgICAgICAgICBfUkVWRVJTRV9NQVAgPSB7fTtcbiAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBfTUFQKSB7XG5cbiAgICAgICAgICAgICAgICAvLyBwdWxsIG91dCB0aGUgbnVtZXJpYyBrZXlwYWQgZnJvbSBoZXJlIGNhdXNlIGtleXByZXNzIHNob3VsZFxuICAgICAgICAgICAgICAgIC8vIGJlIGFibGUgdG8gZGV0ZWN0IHRoZSBrZXlzIGZyb20gdGhlIGNoYXJhY3RlclxuICAgICAgICAgICAgICAgIGlmIChrZXkgPiA5NSAmJiBrZXkgPCAxMTIpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKF9NQVAuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgICAgICAgICBfUkVWRVJTRV9NQVBbX01BUFtrZXldXSA9IGtleTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9SRVZFUlNFX01BUDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBwaWNrcyB0aGUgYmVzdCBhY3Rpb24gYmFzZWQgb24gdGhlIGtleSBjb21iaW5hdGlvblxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGtleSAtIGNoYXJhY3RlciBmb3Iga2V5XG4gICAgICogQHBhcmFtIHtBcnJheX0gbW9kaWZpZXJzXG4gICAgICogQHBhcmFtIHtzdHJpbmc9fSBhY3Rpb24gcGFzc2VkIGluXG4gICAgICovXG4gICAgZnVuY3Rpb24gX3BpY2tCZXN0QWN0aW9uKGtleSwgbW9kaWZpZXJzLCBhY3Rpb24pIHtcblxuICAgICAgICAvLyBpZiBubyBhY3Rpb24gd2FzIHBpY2tlZCBpbiB3ZSBzaG91bGQgdHJ5IHRvIHBpY2sgdGhlIG9uZVxuICAgICAgICAvLyB0aGF0IHdlIHRoaW5rIHdvdWxkIHdvcmsgYmVzdCBmb3IgdGhpcyBrZXlcbiAgICAgICAgaWYgKCFhY3Rpb24pIHtcbiAgICAgICAgICAgIGFjdGlvbiA9IF9nZXRSZXZlcnNlTWFwKClba2V5XSA/ICdrZXlkb3duJyA6ICdrZXlwcmVzcyc7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBtb2RpZmllciBrZXlzIGRvbid0IHdvcmsgYXMgZXhwZWN0ZWQgd2l0aCBrZXlwcmVzcyxcbiAgICAgICAgLy8gc3dpdGNoIHRvIGtleWRvd25cbiAgICAgICAgaWYgKGFjdGlvbiA9PSAna2V5cHJlc3MnICYmIG1vZGlmaWVycy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGFjdGlvbiA9ICdrZXlkb3duJztcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBhY3Rpb247XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ29udmVydHMgZnJvbSBhIHN0cmluZyBrZXkgY29tYmluYXRpb24gdG8gYW4gYXJyYXlcbiAgICAgKlxuICAgICAqIEBwYXJhbSAge3N0cmluZ30gY29tYmluYXRpb24gbGlrZSBcImNvbW1hbmQrc2hpZnQrbFwiXG4gICAgICogQHJldHVybiB7QXJyYXl9XG4gICAgICovXG4gICAgZnVuY3Rpb24gX2tleXNGcm9tU3RyaW5nKGNvbWJpbmF0aW9uKSB7XG4gICAgICAgIGlmIChjb21iaW5hdGlvbiA9PT0gJysnKSB7XG4gICAgICAgICAgICByZXR1cm4gWycrJ107XG4gICAgICAgIH1cblxuICAgICAgICBjb21iaW5hdGlvbiA9IGNvbWJpbmF0aW9uLnJlcGxhY2UoL1xcK3syfS9nLCAnK3BsdXMnKTtcbiAgICAgICAgcmV0dXJuIGNvbWJpbmF0aW9uLnNwbGl0KCcrJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0cyBpbmZvIGZvciBhIHNwZWNpZmljIGtleSBjb21iaW5hdGlvblxuICAgICAqXG4gICAgICogQHBhcmFtICB7c3RyaW5nfSBjb21iaW5hdGlvbiBrZXkgY29tYmluYXRpb24gKFwiY29tbWFuZCtzXCIgb3IgXCJhXCIgb3IgXCIqXCIpXG4gICAgICogQHBhcmFtICB7c3RyaW5nPX0gYWN0aW9uXG4gICAgICogQHJldHVybnMge09iamVjdH1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfZ2V0S2V5SW5mbyhjb21iaW5hdGlvbiwgYWN0aW9uKSB7XG4gICAgICAgIHZhciBrZXlzO1xuICAgICAgICB2YXIga2V5O1xuICAgICAgICB2YXIgaTtcbiAgICAgICAgdmFyIG1vZGlmaWVycyA9IFtdO1xuXG4gICAgICAgIC8vIHRha2UgdGhlIGtleXMgZnJvbSB0aGlzIHBhdHRlcm4gYW5kIGZpZ3VyZSBvdXQgd2hhdCB0aGUgYWN0dWFsXG4gICAgICAgIC8vIHBhdHRlcm4gaXMgYWxsIGFib3V0XG4gICAgICAgIGtleXMgPSBfa2V5c0Zyb21TdHJpbmcoY29tYmluYXRpb24pO1xuXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICAgICAgICAvLyBub3JtYWxpemUga2V5IG5hbWVzXG4gICAgICAgICAgICBpZiAoX1NQRUNJQUxfQUxJQVNFU1trZXldKSB7XG4gICAgICAgICAgICAgICAga2V5ID0gX1NQRUNJQUxfQUxJQVNFU1trZXldO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBpZiB0aGlzIGlzIG5vdCBhIGtleXByZXNzIGV2ZW50IHRoZW4gd2Ugc2hvdWxkXG4gICAgICAgICAgICAvLyBiZSBzbWFydCBhYm91dCB1c2luZyBzaGlmdCBrZXlzXG4gICAgICAgICAgICAvLyB0aGlzIHdpbGwgb25seSB3b3JrIGZvciBVUyBrZXlib2FyZHMgaG93ZXZlclxuICAgICAgICAgICAgaWYgKGFjdGlvbiAmJiBhY3Rpb24gIT0gJ2tleXByZXNzJyAmJiBfU0hJRlRfTUFQW2tleV0pIHtcbiAgICAgICAgICAgICAgICBrZXkgPSBfU0hJRlRfTUFQW2tleV07XG4gICAgICAgICAgICAgICAgbW9kaWZpZXJzLnB1c2goJ3NoaWZ0Jyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGlmIHRoaXMga2V5IGlzIGEgbW9kaWZpZXIgdGhlbiBhZGQgaXQgdG8gdGhlIGxpc3Qgb2YgbW9kaWZpZXJzXG4gICAgICAgICAgICBpZiAoX2lzTW9kaWZpZXIoa2V5KSkge1xuICAgICAgICAgICAgICAgIG1vZGlmaWVycy5wdXNoKGtleSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBkZXBlbmRpbmcgb24gd2hhdCB0aGUga2V5IGNvbWJpbmF0aW9uIGlzXG4gICAgICAgIC8vIHdlIHdpbGwgdHJ5IHRvIHBpY2sgdGhlIGJlc3QgZXZlbnQgZm9yIGl0XG4gICAgICAgIGFjdGlvbiA9IF9waWNrQmVzdEFjdGlvbihrZXksIG1vZGlmaWVycywgYWN0aW9uKTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgICBtb2RpZmllcnM6IG1vZGlmaWVycyxcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gX2JlbG9uZ3NUbyhlbGVtZW50LCBhbmNlc3Rvcikge1xuICAgICAgICBpZiAoZWxlbWVudCA9PT0gbnVsbCB8fCBlbGVtZW50ID09PSBkb2N1bWVudCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGVsZW1lbnQgPT09IGFuY2VzdG9yKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBfYmVsb25nc1RvKGVsZW1lbnQucGFyZW50Tm9kZSwgYW5jZXN0b3IpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIE1vdXNldHJhcCh0YXJnZXRFbGVtZW50KSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgICAgICB0YXJnZXRFbGVtZW50ID0gdGFyZ2V0RWxlbWVudCB8fCBkb2N1bWVudDtcblxuICAgICAgICBpZiAoIShzZWxmIGluc3RhbmNlb2YgTW91c2V0cmFwKSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBNb3VzZXRyYXAodGFyZ2V0RWxlbWVudCk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogZWxlbWVudCB0byBhdHRhY2gga2V5IGV2ZW50cyB0b1xuICAgICAgICAgKlxuICAgICAgICAgKiBAdHlwZSB7RWxlbWVudH1cbiAgICAgICAgICovXG4gICAgICAgIHNlbGYudGFyZ2V0ID0gdGFyZ2V0RWxlbWVudDtcblxuICAgICAgICAvKipcbiAgICAgICAgICogYSBsaXN0IG9mIGFsbCB0aGUgY2FsbGJhY2tzIHNldHVwIHZpYSBNb3VzZXRyYXAuYmluZCgpXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtPYmplY3R9XG4gICAgICAgICAqL1xuICAgICAgICBzZWxmLl9jYWxsYmFja3MgPSB7fTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogZGlyZWN0IG1hcCBvZiBzdHJpbmcgY29tYmluYXRpb25zIHRvIGNhbGxiYWNrcyB1c2VkIGZvciB0cmlnZ2VyKClcbiAgICAgICAgICpcbiAgICAgICAgICogQHR5cGUge09iamVjdH1cbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuX2RpcmVjdE1hcCA9IHt9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBrZWVwcyB0cmFjayBvZiB3aGF0IGxldmVsIGVhY2ggc2VxdWVuY2UgaXMgYXQgc2luY2UgbXVsdGlwbGVcbiAgICAgICAgICogc2VxdWVuY2VzIGNhbiBzdGFydCBvdXQgd2l0aCB0aGUgc2FtZSBzZXF1ZW5jZVxuICAgICAgICAgKlxuICAgICAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIF9zZXF1ZW5jZUxldmVscyA9IHt9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiB2YXJpYWJsZSB0byBzdG9yZSB0aGUgc2V0VGltZW91dCBjYWxsXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtudWxsfG51bWJlcn1cbiAgICAgICAgICovXG4gICAgICAgIHZhciBfcmVzZXRUaW1lcjtcblxuICAgICAgICAvKipcbiAgICAgICAgICogdGVtcG9yYXJ5IHN0YXRlIHdoZXJlIHdlIHdpbGwgaWdub3JlIHRoZSBuZXh0IGtleXVwXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlIHtib29sZWFufHN0cmluZ31cbiAgICAgICAgICovXG4gICAgICAgIHZhciBfaWdub3JlTmV4dEtleXVwID0gZmFsc2U7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIHRlbXBvcmFyeSBzdGF0ZSB3aGVyZSB3ZSB3aWxsIGlnbm9yZSB0aGUgbmV4dCBrZXlwcmVzc1xuICAgICAgICAgKlxuICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgICAgICovXG4gICAgICAgIHZhciBfaWdub3JlTmV4dEtleXByZXNzID0gZmFsc2U7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGFyZSB3ZSBjdXJyZW50bHkgaW5zaWRlIG9mIGEgc2VxdWVuY2U/XG4gICAgICAgICAqIHR5cGUgb2YgYWN0aW9uIChcImtleXVwXCIgb3IgXCJrZXlkb3duXCIgb3IgXCJrZXlwcmVzc1wiKSBvciBmYWxzZVxuICAgICAgICAgKlxuICAgICAgICAgKiBAdHlwZSB7Ym9vbGVhbnxzdHJpbmd9XG4gICAgICAgICAqL1xuICAgICAgICB2YXIgX25leHRFeHBlY3RlZEFjdGlvbiA9IGZhbHNlO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiByZXNldHMgYWxsIHNlcXVlbmNlIGNvdW50ZXJzIGV4Y2VwdCBmb3IgdGhlIG9uZXMgcGFzc2VkIGluXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkb05vdFJlc2V0XG4gICAgICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9yZXNldFNlcXVlbmNlcyhkb05vdFJlc2V0KSB7XG4gICAgICAgICAgICBkb05vdFJlc2V0ID0gZG9Ob3RSZXNldCB8fCB7fTtcblxuICAgICAgICAgICAgdmFyIGFjdGl2ZVNlcXVlbmNlcyA9IGZhbHNlLFxuICAgICAgICAgICAgICAgIGtleTtcblxuICAgICAgICAgICAgZm9yIChrZXkgaW4gX3NlcXVlbmNlTGV2ZWxzKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRvTm90UmVzZXRba2V5XSkge1xuICAgICAgICAgICAgICAgICAgICBhY3RpdmVTZXF1ZW5jZXMgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgX3NlcXVlbmNlTGV2ZWxzW2tleV0gPSAwO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIWFjdGl2ZVNlcXVlbmNlcykge1xuICAgICAgICAgICAgICAgIF9uZXh0RXhwZWN0ZWRBY3Rpb24gPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBmaW5kcyBhbGwgY2FsbGJhY2tzIHRoYXQgbWF0Y2ggYmFzZWQgb24gdGhlIGtleWNvZGUsIG1vZGlmaWVycyxcbiAgICAgICAgICogYW5kIGFjdGlvblxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY2hhcmFjdGVyXG4gICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IG1vZGlmaWVyc1xuICAgICAgICAgKiBAcGFyYW0ge0V2ZW50fE9iamVjdH0gZVxuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZz19IHNlcXVlbmNlTmFtZSAtIG5hbWUgb2YgdGhlIHNlcXVlbmNlIHdlIGFyZSBsb29raW5nIGZvclxuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZz19IGNvbWJpbmF0aW9uXG4gICAgICAgICAqIEBwYXJhbSB7bnVtYmVyPX0gbGV2ZWxcbiAgICAgICAgICogQHJldHVybnMge0FycmF5fVxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gX2dldE1hdGNoZXMoY2hhcmFjdGVyLCBtb2RpZmllcnMsIGUsIHNlcXVlbmNlTmFtZSwgY29tYmluYXRpb24sIGxldmVsKSB7XG4gICAgICAgICAgICB2YXIgaTtcbiAgICAgICAgICAgIHZhciBjYWxsYmFjaztcbiAgICAgICAgICAgIHZhciBtYXRjaGVzID0gW107XG4gICAgICAgICAgICB2YXIgYWN0aW9uID0gZS50eXBlO1xuXG4gICAgICAgICAgICAvLyBpZiB0aGVyZSBhcmUgbm8gZXZlbnRzIHJlbGF0ZWQgdG8gdGhpcyBrZXljb2RlXG4gICAgICAgICAgICBpZiAoIXNlbGYuX2NhbGxiYWNrc1tjaGFyYWN0ZXJdKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBpZiBhIG1vZGlmaWVyIGtleSBpcyBjb21pbmcgdXAgb24gaXRzIG93biB3ZSBzaG91bGQgYWxsb3cgaXRcbiAgICAgICAgICAgIGlmIChhY3Rpb24gPT0gJ2tleXVwJyAmJiBfaXNNb2RpZmllcihjaGFyYWN0ZXIpKSB7XG4gICAgICAgICAgICAgICAgbW9kaWZpZXJzID0gW2NoYXJhY3Rlcl07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGxvb3AgdGhyb3VnaCBhbGwgY2FsbGJhY2tzIGZvciB0aGUga2V5IHRoYXQgd2FzIHByZXNzZWRcbiAgICAgICAgICAgIC8vIGFuZCBzZWUgaWYgYW55IG9mIHRoZW0gbWF0Y2hcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBzZWxmLl9jYWxsYmFja3NbY2hhcmFjdGVyXS5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrID0gc2VsZi5fY2FsbGJhY2tzW2NoYXJhY3Rlcl1baV07XG5cbiAgICAgICAgICAgICAgICAvLyBpZiBhIHNlcXVlbmNlIG5hbWUgaXMgbm90IHNwZWNpZmllZCwgYnV0IHRoaXMgaXMgYSBzZXF1ZW5jZSBhdFxuICAgICAgICAgICAgICAgIC8vIHRoZSB3cm9uZyBsZXZlbCB0aGVuIG1vdmUgb250byB0aGUgbmV4dCBtYXRjaFxuICAgICAgICAgICAgICAgIGlmICghc2VxdWVuY2VOYW1lICYmIGNhbGxiYWNrLnNlcSAmJiBfc2VxdWVuY2VMZXZlbHNbY2FsbGJhY2suc2VxXSAhPSBjYWxsYmFjay5sZXZlbCkge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBpZiB0aGUgYWN0aW9uIHdlIGFyZSBsb29raW5nIGZvciBkb2Vzbid0IG1hdGNoIHRoZSBhY3Rpb24gd2UgZ290XG4gICAgICAgICAgICAgICAgLy8gdGhlbiB3ZSBzaG91bGQga2VlcCBnb2luZ1xuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24gIT0gY2FsbGJhY2suYWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgaXMgYSBrZXlwcmVzcyBldmVudCBhbmQgdGhlIG1ldGEga2V5IGFuZCBjb250cm9sIGtleVxuICAgICAgICAgICAgICAgIC8vIGFyZSBub3QgcHJlc3NlZCB0aGF0IG1lYW5zIHRoYXQgd2UgbmVlZCB0byBvbmx5IGxvb2sgYXQgdGhlXG4gICAgICAgICAgICAgICAgLy8gY2hhcmFjdGVyLCBvdGhlcndpc2UgY2hlY2sgdGhlIG1vZGlmaWVycyBhcyB3ZWxsXG4gICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgICAgICAvLyBjaHJvbWUgd2lsbCBub3QgZmlyZSBhIGtleXByZXNzIGlmIG1ldGEgb3IgY29udHJvbCBpcyBkb3duXG4gICAgICAgICAgICAgICAgLy8gc2FmYXJpIHdpbGwgZmlyZSBhIGtleXByZXNzIGlmIG1ldGEgb3IgbWV0YStzaGlmdCBpcyBkb3duXG4gICAgICAgICAgICAgICAgLy8gZmlyZWZveCB3aWxsIGZpcmUgYSBrZXlwcmVzcyBpZiBtZXRhIG9yIGNvbnRyb2wgaXMgZG93blxuICAgICAgICAgICAgICAgIGlmICgoYWN0aW9uID09ICdrZXlwcmVzcycgJiYgIWUubWV0YUtleSAmJiAhZS5jdHJsS2V5KSB8fCBfbW9kaWZpZXJzTWF0Y2gobW9kaWZpZXJzLCBjYWxsYmFjay5tb2RpZmllcnMpKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gd2hlbiB5b3UgYmluZCBhIGNvbWJpbmF0aW9uIG9yIHNlcXVlbmNlIGEgc2Vjb25kIHRpbWUgaXRcbiAgICAgICAgICAgICAgICAgICAgLy8gc2hvdWxkIG92ZXJ3cml0ZSB0aGUgZmlyc3Qgb25lLiAgaWYgYSBzZXF1ZW5jZU5hbWUgb3JcbiAgICAgICAgICAgICAgICAgICAgLy8gY29tYmluYXRpb24gaXMgc3BlY2lmaWVkIGluIHRoaXMgY2FsbCBpdCBkb2VzIGp1c3QgdGhhdFxuICAgICAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgICAgICAvLyBAdG9kbyBtYWtlIGRlbGV0aW5nIGl0cyBvd24gbWV0aG9kP1xuICAgICAgICAgICAgICAgICAgICB2YXIgZGVsZXRlQ29tYm8gPSAhc2VxdWVuY2VOYW1lICYmIGNhbGxiYWNrLmNvbWJvID09IGNvbWJpbmF0aW9uO1xuICAgICAgICAgICAgICAgICAgICB2YXIgZGVsZXRlU2VxdWVuY2UgPSBzZXF1ZW5jZU5hbWUgJiYgY2FsbGJhY2suc2VxID09IHNlcXVlbmNlTmFtZSAmJiBjYWxsYmFjay5sZXZlbCA9PSBsZXZlbDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRlbGV0ZUNvbWJvIHx8IGRlbGV0ZVNlcXVlbmNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLl9jYWxsYmFja3NbY2hhcmFjdGVyXS5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBtYXRjaGVzLnB1c2goY2FsbGJhY2spO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIG1hdGNoZXM7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogYWN0dWFsbHkgY2FsbHMgdGhlIGNhbGxiYWNrIGZ1bmN0aW9uXG4gICAgICAgICAqXG4gICAgICAgICAqIGlmIHlvdXIgY2FsbGJhY2sgZnVuY3Rpb24gcmV0dXJucyBmYWxzZSB0aGlzIHdpbGwgdXNlIHRoZSBqcXVlcnlcbiAgICAgICAgICogY29udmVudGlvbiAtIHByZXZlbnQgZGVmYXVsdCBhbmQgc3RvcCBwcm9wb2dhdGlvbiBvbiB0aGUgZXZlbnRcbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICAgICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBfZmlyZUNhbGxiYWNrKGNhbGxiYWNrLCBlLCBjb21ibywgc2VxdWVuY2UpIHtcblxuICAgICAgICAgICAgLy8gaWYgdGhpcyBldmVudCBzaG91bGQgbm90IGhhcHBlbiBzdG9wIGhlcmVcbiAgICAgICAgICAgIGlmIChzZWxmLnN0b3BDYWxsYmFjayhlLCBlLnRhcmdldCB8fCBlLnNyY0VsZW1lbnQsIGNvbWJvLCBzZXF1ZW5jZSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChjYWxsYmFjayhlLCBjb21ibykgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgX3ByZXZlbnREZWZhdWx0KGUpO1xuICAgICAgICAgICAgICAgIF9zdG9wUHJvcGFnYXRpb24oZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogaGFuZGxlcyBhIGNoYXJhY3RlciBrZXkgZXZlbnRcbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNoYXJhY3RlclxuICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSBtb2RpZmllcnNcbiAgICAgICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICAgICAqL1xuICAgICAgICBzZWxmLl9oYW5kbGVLZXkgPSBmdW5jdGlvbihjaGFyYWN0ZXIsIG1vZGlmaWVycywgZSkge1xuICAgICAgICAgICAgdmFyIGNhbGxiYWNrcyA9IF9nZXRNYXRjaGVzKGNoYXJhY3RlciwgbW9kaWZpZXJzLCBlKTtcbiAgICAgICAgICAgIHZhciBpO1xuICAgICAgICAgICAgdmFyIGRvTm90UmVzZXQgPSB7fTtcbiAgICAgICAgICAgIHZhciBtYXhMZXZlbCA9IDA7XG4gICAgICAgICAgICB2YXIgcHJvY2Vzc2VkU2VxdWVuY2VDYWxsYmFjayA9IGZhbHNlO1xuXG4gICAgICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIG1heExldmVsIGZvciBzZXF1ZW5jZXMgc28gd2UgY2FuIG9ubHkgZXhlY3V0ZSB0aGUgbG9uZ2VzdCBjYWxsYmFjayBzZXF1ZW5jZVxuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGNhbGxiYWNrcy5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgICAgIGlmIChjYWxsYmFja3NbaV0uc2VxKSB7XG4gICAgICAgICAgICAgICAgICAgIG1heExldmVsID0gTWF0aC5tYXgobWF4TGV2ZWwsIGNhbGxiYWNrc1tpXS5sZXZlbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBsb29wIHRocm91Z2ggbWF0Y2hpbmcgY2FsbGJhY2tzIGZvciB0aGlzIGtleSBldmVudFxuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGNhbGxiYWNrcy5sZW5ndGg7ICsraSkge1xuXG4gICAgICAgICAgICAgICAgLy8gZmlyZSBmb3IgYWxsIHNlcXVlbmNlIGNhbGxiYWNrc1xuICAgICAgICAgICAgICAgIC8vIHRoaXMgaXMgYmVjYXVzZSBpZiBmb3IgZXhhbXBsZSB5b3UgaGF2ZSBtdWx0aXBsZSBzZXF1ZW5jZXNcbiAgICAgICAgICAgICAgICAvLyBib3VuZCBzdWNoIGFzIFwiZyBpXCIgYW5kIFwiZyB0XCIgdGhleSBib3RoIG5lZWQgdG8gZmlyZSB0aGVcbiAgICAgICAgICAgICAgICAvLyBjYWxsYmFjayBmb3IgbWF0Y2hpbmcgZyBjYXVzZSBvdGhlcndpc2UgeW91IGNhbiBvbmx5IGV2ZXJcbiAgICAgICAgICAgICAgICAvLyBtYXRjaCB0aGUgZmlyc3Qgb25lXG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrc1tpXS5zZXEpIHtcblxuICAgICAgICAgICAgICAgICAgICAvLyBvbmx5IGZpcmUgY2FsbGJhY2tzIGZvciB0aGUgbWF4TGV2ZWwgdG8gcHJldmVudFxuICAgICAgICAgICAgICAgICAgICAvLyBzdWJzZXF1ZW5jZXMgZnJvbSBhbHNvIGZpcmluZ1xuICAgICAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgICAgICAvLyBmb3IgZXhhbXBsZSAnYSBvcHRpb24gYicgc2hvdWxkIG5vdCBjYXVzZSAnb3B0aW9uIGInIHRvIGZpcmVcbiAgICAgICAgICAgICAgICAgICAgLy8gZXZlbiB0aG91Z2ggJ29wdGlvbiBiJyBpcyBwYXJ0IG9mIHRoZSBvdGhlciBzZXF1ZW5jZVxuICAgICAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgICAgICAvLyBhbnkgc2VxdWVuY2VzIHRoYXQgZG8gbm90IG1hdGNoIGhlcmUgd2lsbCBiZSBkaXNjYXJkZWRcbiAgICAgICAgICAgICAgICAgICAgLy8gYmVsb3cgYnkgdGhlIF9yZXNldFNlcXVlbmNlcyBjYWxsXG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWxsYmFja3NbaV0ubGV2ZWwgIT0gbWF4TGV2ZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc2VkU2VxdWVuY2VDYWxsYmFjayA9IHRydWU7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8ga2VlcCBhIGxpc3Qgb2Ygd2hpY2ggc2VxdWVuY2VzIHdlcmUgbWF0Y2hlcyBmb3IgbGF0ZXJcbiAgICAgICAgICAgICAgICAgICAgZG9Ob3RSZXNldFtjYWxsYmFja3NbaV0uc2VxXSA9IDE7XG4gICAgICAgICAgICAgICAgICAgIF9maXJlQ2FsbGJhY2soY2FsbGJhY2tzW2ldLmNhbGxiYWNrLCBlLCBjYWxsYmFja3NbaV0uY29tYm8sIGNhbGxiYWNrc1tpXS5zZXEpO1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBpZiB0aGVyZSB3ZXJlIG5vIHNlcXVlbmNlIG1hdGNoZXMgYnV0IHdlIGFyZSBzdGlsbCBoZXJlXG4gICAgICAgICAgICAgICAgLy8gdGhhdCBtZWFucyB0aGlzIGlzIGEgcmVndWxhciBtYXRjaCBzbyB3ZSBzaG91bGQgZmlyZSB0aGF0XG4gICAgICAgICAgICAgICAgaWYgKCFwcm9jZXNzZWRTZXF1ZW5jZUNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIF9maXJlQ2FsbGJhY2soY2FsbGJhY2tzW2ldLmNhbGxiYWNrLCBlLCBjYWxsYmFja3NbaV0uY29tYm8pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gaWYgdGhlIGtleSB5b3UgcHJlc3NlZCBtYXRjaGVzIHRoZSB0eXBlIG9mIHNlcXVlbmNlIHdpdGhvdXRcbiAgICAgICAgICAgIC8vIGJlaW5nIGEgbW9kaWZpZXIgKGllIFwia2V5dXBcIiBvciBcImtleXByZXNzXCIpIHRoZW4gd2Ugc2hvdWxkXG4gICAgICAgICAgICAvLyByZXNldCBhbGwgc2VxdWVuY2VzIHRoYXQgd2VyZSBub3QgbWF0Y2hlZCBieSB0aGlzIGV2ZW50XG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gdGhpcyBpcyBzbywgZm9yIGV4YW1wbGUsIGlmIHlvdSBoYXZlIHRoZSBzZXF1ZW5jZSBcImggYSB0XCIgYW5kIHlvdVxuICAgICAgICAgICAgLy8gdHlwZSBcImggZSBhIHIgdFwiIGl0IGRvZXMgbm90IG1hdGNoLiAgaW4gdGhpcyBjYXNlIHRoZSBcImVcIiB3aWxsXG4gICAgICAgICAgICAvLyBjYXVzZSB0aGUgc2VxdWVuY2UgdG8gcmVzZXRcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyBtb2RpZmllciBrZXlzIGFyZSBpZ25vcmVkIGJlY2F1c2UgeW91IGNhbiBoYXZlIGEgc2VxdWVuY2VcbiAgICAgICAgICAgIC8vIHRoYXQgY29udGFpbnMgbW9kaWZpZXJzIHN1Y2ggYXMgXCJlbnRlciBjdHJsK3NwYWNlXCIgYW5kIGluIG1vc3RcbiAgICAgICAgICAgIC8vIGNhc2VzIHRoZSBtb2RpZmllciBrZXkgd2lsbCBiZSBwcmVzc2VkIGJlZm9yZSB0aGUgbmV4dCBrZXlcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyBhbHNvIGlmIHlvdSBoYXZlIGEgc2VxdWVuY2Ugc3VjaCBhcyBcImN0cmwrYiBhXCIgdGhlbiBwcmVzc2luZyB0aGVcbiAgICAgICAgICAgIC8vIFwiYlwiIGtleSB3aWxsIHRyaWdnZXIgYSBcImtleXByZXNzXCIgYW5kIGEgXCJrZXlkb3duXCJcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyB0aGUgXCJrZXlkb3duXCIgaXMgZXhwZWN0ZWQgd2hlbiB0aGVyZSBpcyBhIG1vZGlmaWVyLCBidXQgdGhlXG4gICAgICAgICAgICAvLyBcImtleXByZXNzXCIgZW5kcyB1cCBtYXRjaGluZyB0aGUgX25leHRFeHBlY3RlZEFjdGlvbiBzaW5jZSBpdCBvY2N1cnNcbiAgICAgICAgICAgIC8vIGFmdGVyIGFuZCB0aGF0IGNhdXNlcyB0aGUgc2VxdWVuY2UgdG8gcmVzZXRcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyB3ZSBpZ25vcmUga2V5cHJlc3NlcyBpbiBhIHNlcXVlbmNlIHRoYXQgZGlyZWN0bHkgZm9sbG93IGEga2V5ZG93blxuICAgICAgICAgICAgLy8gZm9yIHRoZSBzYW1lIGNoYXJhY3RlclxuICAgICAgICAgICAgdmFyIGlnbm9yZVRoaXNLZXlwcmVzcyA9IGUudHlwZSA9PSAna2V5cHJlc3MnICYmIF9pZ25vcmVOZXh0S2V5cHJlc3M7XG4gICAgICAgICAgICBpZiAoZS50eXBlID09IF9uZXh0RXhwZWN0ZWRBY3Rpb24gJiYgIV9pc01vZGlmaWVyKGNoYXJhY3RlcikgJiYgIWlnbm9yZVRoaXNLZXlwcmVzcykge1xuICAgICAgICAgICAgICAgIF9yZXNldFNlcXVlbmNlcyhkb05vdFJlc2V0KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgX2lnbm9yZU5leHRLZXlwcmVzcyA9IHByb2Nlc3NlZFNlcXVlbmNlQ2FsbGJhY2sgJiYgZS50eXBlID09ICdrZXlkb3duJztcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogaGFuZGxlcyBhIGtleWRvd24gZXZlbnRcbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBfaGFuZGxlS2V5RXZlbnQoZSkge1xuXG4gICAgICAgICAgICAvLyBub3JtYWxpemUgZS53aGljaCBmb3Iga2V5IGV2ZW50c1xuICAgICAgICAgICAgLy8gQHNlZSBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQyODU2MjcvamF2YXNjcmlwdC1rZXljb2RlLXZzLWNoYXJjb2RlLXV0dGVyLWNvbmZ1c2lvblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBlLndoaWNoICE9PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgIGUud2hpY2ggPSBlLmtleUNvZGU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBjaGFyYWN0ZXIgPSBfY2hhcmFjdGVyRnJvbUV2ZW50KGUpO1xuXG4gICAgICAgICAgICAvLyBubyBjaGFyYWN0ZXIgZm91bmQgdGhlbiBzdG9wXG4gICAgICAgICAgICBpZiAoIWNoYXJhY3Rlcikge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gbmVlZCB0byB1c2UgPT09IGZvciB0aGUgY2hhcmFjdGVyIGNoZWNrIGJlY2F1c2UgdGhlIGNoYXJhY3RlciBjYW4gYmUgMFxuICAgICAgICAgICAgaWYgKGUudHlwZSA9PSAna2V5dXAnICYmIF9pZ25vcmVOZXh0S2V5dXAgPT09IGNoYXJhY3Rlcikge1xuICAgICAgICAgICAgICAgIF9pZ25vcmVOZXh0S2V5dXAgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHNlbGYuaGFuZGxlS2V5KGNoYXJhY3RlciwgX2V2ZW50TW9kaWZpZXJzKGUpLCBlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBjYWxsZWQgdG8gc2V0IGEgMSBzZWNvbmQgdGltZW91dCBvbiB0aGUgc3BlY2lmaWVkIHNlcXVlbmNlXG4gICAgICAgICAqXG4gICAgICAgICAqIHRoaXMgaXMgc28gYWZ0ZXIgZWFjaCBrZXkgcHJlc3MgaW4gdGhlIHNlcXVlbmNlIHlvdSBoYXZlIDEgc2Vjb25kXG4gICAgICAgICAqIHRvIHByZXNzIHRoZSBuZXh0IGtleSBiZWZvcmUgeW91IGhhdmUgdG8gc3RhcnQgb3ZlclxuICAgICAgICAgKlxuICAgICAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBfcmVzZXRTZXF1ZW5jZVRpbWVyKCkge1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KF9yZXNldFRpbWVyKTtcbiAgICAgICAgICAgIF9yZXNldFRpbWVyID0gc2V0VGltZW91dChfcmVzZXRTZXF1ZW5jZXMsIDEwMDApO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGJpbmRzIGEga2V5IHNlcXVlbmNlIHRvIGFuIGV2ZW50XG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb21ibyAtIGNvbWJvIHNwZWNpZmllZCBpbiBiaW5kIGNhbGxcbiAgICAgICAgICogQHBhcmFtIHtBcnJheX0ga2V5c1xuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZz19IGFjdGlvblxuICAgICAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBfYmluZFNlcXVlbmNlKGNvbWJvLCBrZXlzLCBjYWxsYmFjaywgYWN0aW9uKSB7XG5cbiAgICAgICAgICAgIC8vIHN0YXJ0IG9mZiBieSBhZGRpbmcgYSBzZXF1ZW5jZSBsZXZlbCByZWNvcmQgZm9yIHRoaXMgY29tYmluYXRpb25cbiAgICAgICAgICAgIC8vIGFuZCBzZXR0aW5nIHRoZSBsZXZlbCB0byAwXG4gICAgICAgICAgICBfc2VxdWVuY2VMZXZlbHNbY29tYm9dID0gMDtcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBjYWxsYmFjayB0byBpbmNyZWFzZSB0aGUgc2VxdWVuY2UgbGV2ZWwgZm9yIHRoaXMgc2VxdWVuY2UgYW5kIHJlc2V0XG4gICAgICAgICAgICAgKiBhbGwgb3RoZXIgc2VxdWVuY2VzIHRoYXQgd2VyZSBhY3RpdmVcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbmV4dEFjdGlvblxuICAgICAgICAgICAgICogQHJldHVybnMge0Z1bmN0aW9ufVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBmdW5jdGlvbiBfaW5jcmVhc2VTZXF1ZW5jZShuZXh0QWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICBfbmV4dEV4cGVjdGVkQWN0aW9uID0gbmV4dEFjdGlvbjtcbiAgICAgICAgICAgICAgICAgICAgKytfc2VxdWVuY2VMZXZlbHNbY29tYm9dO1xuICAgICAgICAgICAgICAgICAgICBfcmVzZXRTZXF1ZW5jZVRpbWVyKCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiB3cmFwcyB0aGUgc3BlY2lmaWVkIGNhbGxiYWNrIGluc2lkZSBvZiBhbm90aGVyIGZ1bmN0aW9uIGluIG9yZGVyXG4gICAgICAgICAgICAgKiB0byByZXNldCBhbGwgc2VxdWVuY2UgY291bnRlcnMgYXMgc29vbiBhcyB0aGlzIHNlcXVlbmNlIGlzIGRvbmVcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICAgICAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGZ1bmN0aW9uIF9jYWxsYmFja0FuZFJlc2V0KGUpIHtcbiAgICAgICAgICAgICAgICBfZmlyZUNhbGxiYWNrKGNhbGxiYWNrLCBlLCBjb21ibyk7XG5cbiAgICAgICAgICAgICAgICAvLyB3ZSBzaG91bGQgaWdub3JlIHRoZSBuZXh0IGtleSB1cCBpZiB0aGUgYWN0aW9uIGlzIGtleSBkb3duXG4gICAgICAgICAgICAgICAgLy8gb3Iga2V5cHJlc3MuICB0aGlzIGlzIHNvIGlmIHlvdSBmaW5pc2ggYSBzZXF1ZW5jZSBhbmRcbiAgICAgICAgICAgICAgICAvLyByZWxlYXNlIHRoZSBrZXkgdGhlIGZpbmFsIGtleSB3aWxsIG5vdCB0cmlnZ2VyIGEga2V5dXBcbiAgICAgICAgICAgICAgICBpZiAoYWN0aW9uICE9PSAna2V5dXAnKSB7XG4gICAgICAgICAgICAgICAgICAgIF9pZ25vcmVOZXh0S2V5dXAgPSBfY2hhcmFjdGVyRnJvbUV2ZW50KGUpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIHdlaXJkIHJhY2UgY29uZGl0aW9uIGlmIGEgc2VxdWVuY2UgZW5kcyB3aXRoIHRoZSBrZXlcbiAgICAgICAgICAgICAgICAvLyBhbm90aGVyIHNlcXVlbmNlIGJlZ2lucyB3aXRoXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChfcmVzZXRTZXF1ZW5jZXMsIDEwKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gbG9vcCB0aHJvdWdoIGtleXMgb25lIGF0IGEgdGltZSBhbmQgYmluZCB0aGUgYXBwcm9wcmlhdGUgY2FsbGJhY2tcbiAgICAgICAgICAgIC8vIGZ1bmN0aW9uLiAgZm9yIGFueSBrZXkgbGVhZGluZyB1cCB0byB0aGUgZmluYWwgb25lIGl0IHNob3VsZFxuICAgICAgICAgICAgLy8gaW5jcmVhc2UgdGhlIHNlcXVlbmNlLiBhZnRlciB0aGUgZmluYWwsIGl0IHNob3VsZCByZXNldCBhbGwgc2VxdWVuY2VzXG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gaWYgYW4gYWN0aW9uIGlzIHNwZWNpZmllZCBpbiB0aGUgb3JpZ2luYWwgYmluZCBjYWxsIHRoZW4gdGhhdCB3aWxsXG4gICAgICAgICAgICAvLyBiZSB1c2VkIHRocm91Z2hvdXQuICBvdGhlcndpc2Ugd2Ugd2lsbCBwYXNzIHRoZSBhY3Rpb24gdGhhdCB0aGVcbiAgICAgICAgICAgIC8vIG5leHQga2V5IGluIHRoZSBzZXF1ZW5jZSBzaG91bGQgbWF0Y2guICB0aGlzIGFsbG93cyBhIHNlcXVlbmNlXG4gICAgICAgICAgICAvLyB0byBtaXggYW5kIG1hdGNoIGtleXByZXNzIGFuZCBrZXlkb3duIGV2ZW50cyBkZXBlbmRpbmcgb24gd2hpY2hcbiAgICAgICAgICAgIC8vIG9uZXMgYXJlIGJldHRlciBzdWl0ZWQgdG8gdGhlIGtleSBwcm92aWRlZFxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGlzRmluYWwgPSBpICsgMSA9PT0ga2V5cy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgdmFyIHdyYXBwZWRDYWxsYmFjayA9IGlzRmluYWwgPyBfY2FsbGJhY2tBbmRSZXNldCA6IF9pbmNyZWFzZVNlcXVlbmNlKGFjdGlvbiB8fCBfZ2V0S2V5SW5mbyhrZXlzW2kgKyAxXSkuYWN0aW9uKTtcbiAgICAgICAgICAgICAgICBfYmluZFNpbmdsZShrZXlzW2ldLCB3cmFwcGVkQ2FsbGJhY2ssIGFjdGlvbiwgY29tYm8sIGkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGJpbmRzIGEgc2luZ2xlIGtleWJvYXJkIGNvbWJpbmF0aW9uXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb21iaW5hdGlvblxuICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZz19IGFjdGlvblxuICAgICAgICAgKiBAcGFyYW0ge3N0cmluZz19IHNlcXVlbmNlTmFtZSAtIG5hbWUgb2Ygc2VxdWVuY2UgaWYgcGFydCBvZiBzZXF1ZW5jZVxuICAgICAgICAgKiBAcGFyYW0ge251bWJlcj19IGxldmVsIC0gd2hhdCBwYXJ0IG9mIHRoZSBzZXF1ZW5jZSB0aGUgY29tbWFuZCBpc1xuICAgICAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBfYmluZFNpbmdsZShjb21iaW5hdGlvbiwgY2FsbGJhY2ssIGFjdGlvbiwgc2VxdWVuY2VOYW1lLCBsZXZlbCkge1xuXG4gICAgICAgICAgICAvLyBzdG9yZSBhIGRpcmVjdCBtYXBwZWQgcmVmZXJlbmNlIGZvciB1c2Ugd2l0aCBNb3VzZXRyYXAudHJpZ2dlclxuICAgICAgICAgICAgc2VsZi5fZGlyZWN0TWFwW2NvbWJpbmF0aW9uICsgJzonICsgYWN0aW9uXSA9IGNhbGxiYWNrO1xuXG4gICAgICAgICAgICAvLyBtYWtlIHN1cmUgbXVsdGlwbGUgc3BhY2VzIGluIGEgcm93IGJlY29tZSBhIHNpbmdsZSBzcGFjZVxuICAgICAgICAgICAgY29tYmluYXRpb24gPSBjb21iaW5hdGlvbi5yZXBsYWNlKC9cXHMrL2csICcgJyk7XG5cbiAgICAgICAgICAgIHZhciBzZXF1ZW5jZSA9IGNvbWJpbmF0aW9uLnNwbGl0KCcgJyk7XG4gICAgICAgICAgICB2YXIgaW5mbztcblxuICAgICAgICAgICAgLy8gaWYgdGhpcyBwYXR0ZXJuIGlzIGEgc2VxdWVuY2Ugb2Yga2V5cyB0aGVuIHJ1biB0aHJvdWdoIHRoaXMgbWV0aG9kXG4gICAgICAgICAgICAvLyB0byByZXByb2Nlc3MgZWFjaCBwYXR0ZXJuIG9uZSBrZXkgYXQgYSB0aW1lXG4gICAgICAgICAgICBpZiAoc2VxdWVuY2UubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgIF9iaW5kU2VxdWVuY2UoY29tYmluYXRpb24sIHNlcXVlbmNlLCBjYWxsYmFjaywgYWN0aW9uKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGluZm8gPSBfZ2V0S2V5SW5mbyhjb21iaW5hdGlvbiwgYWN0aW9uKTtcblxuICAgICAgICAgICAgLy8gbWFrZSBzdXJlIHRvIGluaXRpYWxpemUgYXJyYXkgaWYgdGhpcyBpcyB0aGUgZmlyc3QgdGltZVxuICAgICAgICAgICAgLy8gYSBjYWxsYmFjayBpcyBhZGRlZCBmb3IgdGhpcyBrZXlcbiAgICAgICAgICAgIHNlbGYuX2NhbGxiYWNrc1tpbmZvLmtleV0gPSBzZWxmLl9jYWxsYmFja3NbaW5mby5rZXldIHx8IFtdO1xuXG4gICAgICAgICAgICAvLyByZW1vdmUgYW4gZXhpc3RpbmcgbWF0Y2ggaWYgdGhlcmUgaXMgb25lXG4gICAgICAgICAgICBfZ2V0TWF0Y2hlcyhpbmZvLmtleSwgaW5mby5tb2RpZmllcnMsIHt0eXBlOiBpbmZvLmFjdGlvbn0sIHNlcXVlbmNlTmFtZSwgY29tYmluYXRpb24sIGxldmVsKTtcblxuICAgICAgICAgICAgLy8gYWRkIHRoaXMgY2FsbCBiYWNrIHRvIHRoZSBhcnJheVxuICAgICAgICAgICAgLy8gaWYgaXQgaXMgYSBzZXF1ZW5jZSBwdXQgaXQgYXQgdGhlIGJlZ2lubmluZ1xuICAgICAgICAgICAgLy8gaWYgbm90IHB1dCBpdCBhdCB0aGUgZW5kXG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gdGhpcyBpcyBpbXBvcnRhbnQgYmVjYXVzZSB0aGUgd2F5IHRoZXNlIGFyZSBwcm9jZXNzZWQgZXhwZWN0c1xuICAgICAgICAgICAgLy8gdGhlIHNlcXVlbmNlIG9uZXMgdG8gY29tZSBmaXJzdFxuICAgICAgICAgICAgc2VsZi5fY2FsbGJhY2tzW2luZm8ua2V5XVtzZXF1ZW5jZU5hbWUgPyAndW5zaGlmdCcgOiAncHVzaCddKHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjazogY2FsbGJhY2ssXG4gICAgICAgICAgICAgICAgbW9kaWZpZXJzOiBpbmZvLm1vZGlmaWVycyxcbiAgICAgICAgICAgICAgICBhY3Rpb246IGluZm8uYWN0aW9uLFxuICAgICAgICAgICAgICAgIHNlcTogc2VxdWVuY2VOYW1lLFxuICAgICAgICAgICAgICAgIGxldmVsOiBsZXZlbCxcbiAgICAgICAgICAgICAgICBjb21ibzogY29tYmluYXRpb25cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGJpbmRzIG11bHRpcGxlIGNvbWJpbmF0aW9ucyB0byB0aGUgc2FtZSBjYWxsYmFja1xuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSBjb21iaW5hdGlvbnNcbiAgICAgICAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd8dW5kZWZpbmVkfSBhY3Rpb25cbiAgICAgICAgICogQHJldHVybnMgdm9pZFxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi5fYmluZE11bHRpcGxlID0gZnVuY3Rpb24oY29tYmluYXRpb25zLCBjYWxsYmFjaywgYWN0aW9uKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbWJpbmF0aW9ucy5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgICAgIF9iaW5kU2luZ2xlKGNvbWJpbmF0aW9uc1tpXSwgY2FsbGJhY2ssIGFjdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gc3RhcnQhXG4gICAgICAgIF9hZGRFdmVudCh0YXJnZXRFbGVtZW50LCAna2V5cHJlc3MnLCBfaGFuZGxlS2V5RXZlbnQpO1xuICAgICAgICBfYWRkRXZlbnQodGFyZ2V0RWxlbWVudCwgJ2tleWRvd24nLCBfaGFuZGxlS2V5RXZlbnQpO1xuICAgICAgICBfYWRkRXZlbnQodGFyZ2V0RWxlbWVudCwgJ2tleXVwJywgX2hhbmRsZUtleUV2ZW50KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBiaW5kcyBhbiBldmVudCB0byBtb3VzZXRyYXBcbiAgICAgKlxuICAgICAqIGNhbiBiZSBhIHNpbmdsZSBrZXksIGEgY29tYmluYXRpb24gb2Yga2V5cyBzZXBhcmF0ZWQgd2l0aCArLFxuICAgICAqIGFuIGFycmF5IG9mIGtleXMsIG9yIGEgc2VxdWVuY2Ugb2Yga2V5cyBzZXBhcmF0ZWQgYnkgc3BhY2VzXG4gICAgICpcbiAgICAgKiBiZSBzdXJlIHRvIGxpc3QgdGhlIG1vZGlmaWVyIGtleXMgZmlyc3QgdG8gbWFrZSBzdXJlIHRoYXQgdGhlXG4gICAgICogY29ycmVjdCBrZXkgZW5kcyB1cCBnZXR0aW5nIGJvdW5kICh0aGUgbGFzdCBrZXkgaW4gdGhlIHBhdHRlcm4pXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ3xBcnJheX0ga2V5c1xuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAgICogQHBhcmFtIHtzdHJpbmc9fSBhY3Rpb24gLSAna2V5cHJlc3MnLCAna2V5ZG93bicsIG9yICdrZXl1cCdcbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgTW91c2V0cmFwLnByb3RvdHlwZS5iaW5kID0gZnVuY3Rpb24oa2V5cywgY2FsbGJhY2ssIGFjdGlvbikge1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIGtleXMgPSBrZXlzIGluc3RhbmNlb2YgQXJyYXkgPyBrZXlzIDogW2tleXNdO1xuICAgICAgICBzZWxmLl9iaW5kTXVsdGlwbGUuY2FsbChzZWxmLCBrZXlzLCBjYWxsYmFjaywgYWN0aW9uKTtcbiAgICAgICAgcmV0dXJuIHNlbGY7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIHVuYmluZHMgYW4gZXZlbnQgdG8gbW91c2V0cmFwXG4gICAgICpcbiAgICAgKiB0aGUgdW5iaW5kaW5nIHNldHMgdGhlIGNhbGxiYWNrIGZ1bmN0aW9uIG9mIHRoZSBzcGVjaWZpZWQga2V5IGNvbWJvXG4gICAgICogdG8gYW4gZW1wdHkgZnVuY3Rpb24gYW5kIGRlbGV0ZXMgdGhlIGNvcnJlc3BvbmRpbmcga2V5IGluIHRoZVxuICAgICAqIF9kaXJlY3RNYXAgZGljdC5cbiAgICAgKlxuICAgICAqIFRPRE86IGFjdHVhbGx5IHJlbW92ZSB0aGlzIGZyb20gdGhlIF9jYWxsYmFja3MgZGljdGlvbmFyeSBpbnN0ZWFkXG4gICAgICogb2YgYmluZGluZyBhbiBlbXB0eSBmdW5jdGlvblxuICAgICAqXG4gICAgICogdGhlIGtleWNvbWJvK2FjdGlvbiBoYXMgdG8gYmUgZXhhY3RseSB0aGUgc2FtZSBhc1xuICAgICAqIGl0IHdhcyBkZWZpbmVkIGluIHRoZSBiaW5kIG1ldGhvZFxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd8QXJyYXl9IGtleXNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gYWN0aW9uXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIE1vdXNldHJhcC5wcm90b3R5cGUudW5iaW5kID0gZnVuY3Rpb24oa2V5cywgYWN0aW9uKSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgcmV0dXJuIHNlbGYuYmluZC5jYWxsKHNlbGYsIGtleXMsIGZ1bmN0aW9uKCkge30sIGFjdGlvbik7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIHRyaWdnZXJzIGFuIGV2ZW50IHRoYXQgaGFzIGFscmVhZHkgYmVlbiBib3VuZFxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGtleXNcbiAgICAgKiBAcGFyYW0ge3N0cmluZz19IGFjdGlvblxuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBNb3VzZXRyYXAucHJvdG90eXBlLnRyaWdnZXIgPSBmdW5jdGlvbihrZXlzLCBhY3Rpb24pIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICBpZiAoc2VsZi5fZGlyZWN0TWFwW2tleXMgKyAnOicgKyBhY3Rpb25dKSB7XG4gICAgICAgICAgICBzZWxmLl9kaXJlY3RNYXBba2V5cyArICc6JyArIGFjdGlvbl0oe30sIGtleXMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzZWxmO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiByZXNldHMgdGhlIGxpYnJhcnkgYmFjayB0byBpdHMgaW5pdGlhbCBzdGF0ZS4gIHRoaXMgaXMgdXNlZnVsXG4gICAgICogaWYgeW91IHdhbnQgdG8gY2xlYXIgb3V0IHRoZSBjdXJyZW50IGtleWJvYXJkIHNob3J0Y3V0cyBhbmQgYmluZFxuICAgICAqIG5ldyBvbmVzIC0gZm9yIGV4YW1wbGUgaWYgeW91IHN3aXRjaCB0byBhbm90aGVyIHBhZ2VcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHZvaWRcbiAgICAgKi9cbiAgICBNb3VzZXRyYXAucHJvdG90eXBlLnJlc2V0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgc2VsZi5fY2FsbGJhY2tzID0ge307XG4gICAgICAgIHNlbGYuX2RpcmVjdE1hcCA9IHt9O1xuICAgICAgICByZXR1cm4gc2VsZjtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogc2hvdWxkIHdlIHN0b3AgdGhpcyBldmVudCBiZWZvcmUgZmlyaW5nIG9mZiBjYWxsYmFja3NcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7RXZlbnR9IGVcbiAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAgICAgKiBAcmV0dXJuIHtib29sZWFufVxuICAgICAqL1xuICAgIE1vdXNldHJhcC5wcm90b3R5cGUuc3RvcENhbGxiYWNrID0gZnVuY3Rpb24oZSwgZWxlbWVudCkge1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICAgICAgLy8gaWYgdGhlIGVsZW1lbnQgaGFzIHRoZSBjbGFzcyBcIm1vdXNldHJhcFwiIHRoZW4gbm8gbmVlZCB0byBzdG9wXG4gICAgICAgIGlmICgoJyAnICsgZWxlbWVudC5jbGFzc05hbWUgKyAnICcpLmluZGV4T2YoJyBtb3VzZXRyYXAgJykgPiAtMSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF9iZWxvbmdzVG8oZWxlbWVudCwgc2VsZi50YXJnZXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBzdG9wIGZvciBpbnB1dCwgc2VsZWN0LCBhbmQgdGV4dGFyZWFcbiAgICAgICAgcmV0dXJuIGVsZW1lbnQudGFnTmFtZSA9PSAnSU5QVVQnIHx8IGVsZW1lbnQudGFnTmFtZSA9PSAnU0VMRUNUJyB8fCBlbGVtZW50LnRhZ05hbWUgPT0gJ1RFWFRBUkVBJyB8fCBlbGVtZW50LmlzQ29udGVudEVkaXRhYmxlO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBleHBvc2VzIF9oYW5kbGVLZXkgcHVibGljbHkgc28gaXQgY2FuIGJlIG92ZXJ3cml0dGVuIGJ5IGV4dGVuc2lvbnNcbiAgICAgKi9cbiAgICBNb3VzZXRyYXAucHJvdG90eXBlLmhhbmRsZUtleSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIHJldHVybiBzZWxmLl9oYW5kbGVLZXkuYXBwbHkoc2VsZiwgYXJndW1lbnRzKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogYWxsb3cgY3VzdG9tIGtleSBtYXBwaW5nc1xuICAgICAqL1xuICAgIE1vdXNldHJhcC5hZGRLZXljb2RlcyA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSB7XG4gICAgICAgICAgICBpZiAob2JqZWN0Lmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgICAgICBfTUFQW2tleV0gPSBvYmplY3Rba2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBfUkVWRVJTRV9NQVAgPSBudWxsO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBJbml0IHRoZSBnbG9iYWwgbW91c2V0cmFwIGZ1bmN0aW9uc1xuICAgICAqXG4gICAgICogVGhpcyBtZXRob2QgaXMgbmVlZGVkIHRvIGFsbG93IHRoZSBnbG9iYWwgbW91c2V0cmFwIGZ1bmN0aW9ucyB0byB3b3JrXG4gICAgICogbm93IHRoYXQgbW91c2V0cmFwIGlzIGEgY29uc3RydWN0b3IgZnVuY3Rpb24uXG4gICAgICovXG4gICAgTW91c2V0cmFwLmluaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGRvY3VtZW50TW91c2V0cmFwID0gTW91c2V0cmFwKGRvY3VtZW50KTtcbiAgICAgICAgZm9yICh2YXIgbWV0aG9kIGluIGRvY3VtZW50TW91c2V0cmFwKSB7XG4gICAgICAgICAgICBpZiAobWV0aG9kLmNoYXJBdCgwKSAhPT0gJ18nKSB7XG4gICAgICAgICAgICAgICAgTW91c2V0cmFwW21ldGhvZF0gPSAoZnVuY3Rpb24obWV0aG9kKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkb2N1bWVudE1vdXNldHJhcFttZXRob2RdLmFwcGx5KGRvY3VtZW50TW91c2V0cmFwLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0gKG1ldGhvZCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIE1vdXNldHJhcC5pbml0KCk7XG5cbiAgICAvLyBleHBvc2UgbW91c2V0cmFwIHRvIHRoZSBnbG9iYWwgb2JqZWN0XG4gICAgd2luZG93Lk1vdXNldHJhcCA9IE1vdXNldHJhcDtcblxuICAgIC8vIGV4cG9zZSBhcyBhIGNvbW1vbiBqcyBtb2R1bGVcbiAgICBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBNb3VzZXRyYXA7XG4gICAgfVxuXG4gICAgLy8gZXhwb3NlIG1vdXNldHJhcCBhcyBhbiBBTUQgbW9kdWxlXG4gICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgICAgICBkZWZpbmUoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gTW91c2V0cmFwO1xuICAgICAgICB9KTtcbiAgICB9XG59KSAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiBudWxsLCB0eXBlb2YgIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyBkb2N1bWVudCA6IG51bGwpO1xuIl19
